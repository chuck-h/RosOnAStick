ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Init,"ax",%progbits
  18              		.align	1
  19              		.global	PWM_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Init, %function
  23              	PWM_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/PWM.c **** 
  22:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** 
  25:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  27:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/PWM.c **** *
  29:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  30:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  31:.\Generated_Source\PSoC4/PWM.c **** *
  32:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 2


  33:.\Generated_Source\PSoC4/PWM.c **** *  None
  34:.\Generated_Source\PSoC4/PWM.c **** *
  35:.\Generated_Source\PSoC4/PWM.c **** * Return:
  36:.\Generated_Source\PSoC4/PWM.c **** *  None
  37:.\Generated_Source\PSoC4/PWM.c **** *
  38:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  40:.\Generated_Source\PSoC4/PWM.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  41:.\Generated_Source\PSoC4/PWM.c **** 
  42:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  44:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  45:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_ENCODING_MODES     << PWM_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_CONFIG                  << PWM_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  48:.\Generated_Source\PSoC4/PWM.c **** 
  49:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  50:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  28              		.loc 1 50 0
  29 0000 8422     		mov	r2, #132
  51:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_STOP_EVENT          << PWM_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_INVERT          << PWM_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_N_INVERT        << PWM_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_MODE                << PWM_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/PWM.c **** 
  56:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  57:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_RUN_MODE         << PWM_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/PWM.c **** 
  60:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/PWM.c ****         #else
  62:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  30              		.loc 1 62 0
  31 0002 8021     		mov	r1, #128
  50:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_STOP_EVENT          << PWM_PWM_STOP_KILL_SHIFT))    |
  32              		.loc 1 50 0
  33 0004 0D4B     		ldr	r3, .L2
  34 0006 D204     		lsl	r2, r2, #19
  35 0008 1A60     		str	r2, [r3]
  36              		.loc 1 62 0
  37 000a 1A68     		ldr	r2, [r3]
  38 000c 4902     		lsl	r1, r1, #9
  39 000e 0A43     		orr	r2, r1
  40 0010 1A60     		str	r2, [r3]
  63:.\Generated_Source\PSoC4/PWM.c ****             (((uint32)(PWM_PWM_ALIGN           << PWM_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/PWM.c ****              ((uint32)(PWM_PWM_KILL_EVENT      << PWM_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
  66:.\Generated_Source\PSoC4/PWM.c **** 
  67:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
  68:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_DEAD_TIME_CYCLE  << PWM_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
  73:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 3


  41              		.loc 1 73 0
  42 0012 1A68     		ldr	r2, [r3]
  43              	.LBB10:
  44              	.LBB11:
  74:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)PWM_PWM_PRESCALER         << PWM_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
  76:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  79:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  80:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_PRESCALER            << PWM_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNTER_MODE         << PWM_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RUN_MODE             << PWM_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COMP_CAP_MODE        << PWM_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  85:.\Generated_Source\PSoC4/PWM.c **** 
  86:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  88:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_PHIA_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_INDEX_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_STOP_SIGNAL_MODE   << PWM_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_PHIB_SIGNAL_MODE   << PWM_START_SHIFT)));
  93:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  94:.\Generated_Source\PSoC4/PWM.c **** 
  95:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  96:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  97:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_SWITCH_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_COUNT_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_RELOAD_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_STOP_SIGNAL_MODE    << PWM_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_START_SIGNAL_MODE   << PWM_START_SHIFT)));
 102:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 103:.\Generated_Source\PSoC4/PWM.c **** 
 104:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 105:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
 106:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_CAPTURE_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNT_SIGNAL_MODE    << PWM_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RELOAD_SIGNAL_MODE   << PWM_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_STOP_SIGNAL_MODE     << PWM_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_START_SIGNAL_MODE    << PWM_START_SHIFT)));
 111:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 112:.\Generated_Source\PSoC4/PWM.c **** 
 113:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 115:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 117:.\Generated_Source\PSoC4/PWM.c **** 
 118:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 121:.\Generated_Source\PSoC4/PWM.c **** 
 122:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 123:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 125:.\Generated_Source\PSoC4/PWM.c **** 
 126:.\Generated_Source\PSoC4/PWM.c ****     /* Set other values from customizer */
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 4


 127:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 128:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/PWM.c **** 
 130:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
 131:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE );
 132:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE) */
 133:.\Generated_Source\PSoC4/PWM.c **** 
 134:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
 135:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
 136:.\Generated_Source\PSoC4/PWM.c **** 
 137:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
 138:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
 139:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
 140:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
 141:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
 142:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 143:.\Generated_Source\PSoC4/PWM.c **** 
 144:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 145:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 147:.\Generated_Source\PSoC4/PWM.c **** 
 148:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 149:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 151:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 152:.\Generated_Source\PSoC4/PWM.c **** 
 153:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 154:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 156:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 157:.\Generated_Source\PSoC4/PWM.c **** 
 158:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 159:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 160:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 161:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 162:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 163:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 164:.\Generated_Source\PSoC4/PWM.c ****         #else
 165:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 166:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 167:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 168:.\Generated_Source\PSoC4/PWM.c **** 
 169:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 170:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 171:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 172:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 173:.\Generated_Source\PSoC4/PWM.c **** 
 174:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 175:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 176:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 177:.\Generated_Source\PSoC4/PWM.c **** 
 178:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 179:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 180:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 181:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 182:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 183:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 5


 184:.\Generated_Source\PSoC4/PWM.c **** 
 185:.\Generated_Source\PSoC4/PWM.c **** 
 186:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 188:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/PWM.c **** *
 190:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 191:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 192:.\Generated_Source\PSoC4/PWM.c **** *
 193:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 194:.\Generated_Source\PSoC4/PWM.c **** *  None
 195:.\Generated_Source\PSoC4/PWM.c **** *
 196:.\Generated_Source\PSoC4/PWM.c **** * Return:
 197:.\Generated_Source\PSoC4/PWM.c **** *  None
 198:.\Generated_Source\PSoC4/PWM.c **** *
 199:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 201:.\Generated_Source\PSoC4/PWM.c **** {
 202:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 203:.\Generated_Source\PSoC4/PWM.c **** 
 204:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 205:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 206:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 207:.\Generated_Source\PSoC4/PWM.c **** 
 208:.\Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 209:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 210:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 212:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 214:.\Generated_Source\PSoC4/PWM.c **** 
 215:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 216:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 217:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 218:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 219:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 220:.\Generated_Source\PSoC4/PWM.c **** }
 221:.\Generated_Source\PSoC4/PWM.c **** 
 222:.\Generated_Source\PSoC4/PWM.c **** 
 223:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 225:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/PWM.c **** *
 227:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 228:.\Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 229:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 230:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 231:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 232:.\Generated_Source\PSoC4/PWM.c **** *
 233:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 234:.\Generated_Source\PSoC4/PWM.c **** *  None
 235:.\Generated_Source\PSoC4/PWM.c **** *
 236:.\Generated_Source\PSoC4/PWM.c **** * Return:
 237:.\Generated_Source\PSoC4/PWM.c **** *  None
 238:.\Generated_Source\PSoC4/PWM.c **** *
 239:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 240:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 6


 241:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 242:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 243:.\Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 244:.\Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 245:.\Generated_Source\PSoC4/PWM.c **** *
 246:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 248:.\Generated_Source\PSoC4/PWM.c **** {
 249:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 250:.\Generated_Source\PSoC4/PWM.c ****     {
 251:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 252:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 253:.\Generated_Source\PSoC4/PWM.c ****     }
 254:.\Generated_Source\PSoC4/PWM.c **** 
 255:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 256:.\Generated_Source\PSoC4/PWM.c **** }
 257:.\Generated_Source\PSoC4/PWM.c **** 
 258:.\Generated_Source\PSoC4/PWM.c **** 
 259:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 261:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 262:.\Generated_Source\PSoC4/PWM.c **** *
 263:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 264:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 265:.\Generated_Source\PSoC4/PWM.c **** *
 266:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 267:.\Generated_Source\PSoC4/PWM.c **** *  None
 268:.\Generated_Source\PSoC4/PWM.c **** *
 269:.\Generated_Source\PSoC4/PWM.c **** * Return:
 270:.\Generated_Source\PSoC4/PWM.c **** *  None
 271:.\Generated_Source\PSoC4/PWM.c **** *
 272:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 273:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 274:.\Generated_Source\PSoC4/PWM.c **** {
 275:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 276:.\Generated_Source\PSoC4/PWM.c **** 
 277:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 278:.\Generated_Source\PSoC4/PWM.c **** 
 279:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 280:.\Generated_Source\PSoC4/PWM.c **** 
 281:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 282:.\Generated_Source\PSoC4/PWM.c **** }
 283:.\Generated_Source\PSoC4/PWM.c **** 
 284:.\Generated_Source\PSoC4/PWM.c **** 
 285:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 287:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/PWM.c **** *
 289:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 290:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 291:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 292:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 293:.\Generated_Source\PSoC4/PWM.c **** *
 294:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 295:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 296:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 297:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 7


 298:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 299:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 300:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 301:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 302:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 303:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 304:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 305:.\Generated_Source\PSoC4/PWM.c **** *
 306:.\Generated_Source\PSoC4/PWM.c **** * Return:
 307:.\Generated_Source\PSoC4/PWM.c **** *  None
 308:.\Generated_Source\PSoC4/PWM.c **** *
 309:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 311:.\Generated_Source\PSoC4/PWM.c **** {
 312:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 313:.\Generated_Source\PSoC4/PWM.c **** 
 314:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 315:.\Generated_Source\PSoC4/PWM.c **** 
 316:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 317:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 318:.\Generated_Source\PSoC4/PWM.c **** 
 319:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 320:.\Generated_Source\PSoC4/PWM.c **** }
 321:.\Generated_Source\PSoC4/PWM.c **** 
 322:.\Generated_Source\PSoC4/PWM.c **** 
 323:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 325:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 326:.\Generated_Source\PSoC4/PWM.c **** *
 327:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 328:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 329:.\Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 330:.\Generated_Source\PSoC4/PWM.c **** *
 331:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 332:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 333:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 334:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 335:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 336:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 337:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 338:.\Generated_Source\PSoC4/PWM.c **** *
 339:.\Generated_Source\PSoC4/PWM.c **** * Return:
 340:.\Generated_Source\PSoC4/PWM.c **** *  None
 341:.\Generated_Source\PSoC4/PWM.c **** *
 342:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 344:.\Generated_Source\PSoC4/PWM.c **** {
 345:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC4/PWM.c **** 
 347:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 348:.\Generated_Source\PSoC4/PWM.c **** 
 349:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 350:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 351:.\Generated_Source\PSoC4/PWM.c **** 
 352:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 353:.\Generated_Source\PSoC4/PWM.c **** }
 354:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 8


 355:.\Generated_Source\PSoC4/PWM.c **** 
 356:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 358:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 359:.\Generated_Source\PSoC4/PWM.c **** *
 360:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 361:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 362:.\Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 363:.\Generated_Source\PSoC4/PWM.c **** *
 364:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 365:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 366:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 367:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 368:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 369:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 370:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 371:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 372:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 373:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 374:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 375:.\Generated_Source\PSoC4/PWM.c **** *
 376:.\Generated_Source\PSoC4/PWM.c **** * Return:
 377:.\Generated_Source\PSoC4/PWM.c **** *  None
 378:.\Generated_Source\PSoC4/PWM.c **** *
 379:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 381:.\Generated_Source\PSoC4/PWM.c **** {
 382:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 383:.\Generated_Source\PSoC4/PWM.c **** 
 384:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 385:.\Generated_Source\PSoC4/PWM.c **** 
 386:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 387:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 388:.\Generated_Source\PSoC4/PWM.c **** 
 389:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 390:.\Generated_Source\PSoC4/PWM.c **** }
 391:.\Generated_Source\PSoC4/PWM.c **** 
 392:.\Generated_Source\PSoC4/PWM.c **** 
 393:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 394:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 395:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 396:.\Generated_Source\PSoC4/PWM.c **** *
 397:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 398:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 399:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 400:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 401:.\Generated_Source\PSoC4/PWM.c **** *
 402:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 403:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 404:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 405:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 406:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 407:.\Generated_Source\PSoC4/PWM.c **** *
 408:.\Generated_Source\PSoC4/PWM.c **** * Return:
 409:.\Generated_Source\PSoC4/PWM.c **** *  None
 410:.\Generated_Source\PSoC4/PWM.c **** *
 411:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 9


 412:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 413:.\Generated_Source\PSoC4/PWM.c **** {
 414:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 415:.\Generated_Source\PSoC4/PWM.c **** 
 416:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 417:.\Generated_Source\PSoC4/PWM.c **** 
 418:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 419:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 420:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 421:.\Generated_Source\PSoC4/PWM.c **** 
 422:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 423:.\Generated_Source\PSoC4/PWM.c **** }
 424:.\Generated_Source\PSoC4/PWM.c **** 
 425:.\Generated_Source\PSoC4/PWM.c **** 
 426:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 427:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 428:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 429:.\Generated_Source\PSoC4/PWM.c **** *
 430:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 431:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 432:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 433:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 434:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 435:.\Generated_Source\PSoC4/PWM.c **** *  the mode.
 436:.\Generated_Source\PSoC4/PWM.c **** *
 437:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 438:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 439:.\Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 440:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 441:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 442:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 443:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 444:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 445:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 446:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 447:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 448:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 449:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 450:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 451:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 452:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 453:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 454:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 455:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 456:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 457:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 458:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 459:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 460:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 461:.\Generated_Source\PSoC4/PWM.c **** *
 462:.\Generated_Source\PSoC4/PWM.c **** * Return:
 463:.\Generated_Source\PSoC4/PWM.c **** *  None
 464:.\Generated_Source\PSoC4/PWM.c **** *
 465:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 467:.\Generated_Source\PSoC4/PWM.c **** {
 468:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 10


 469:.\Generated_Source\PSoC4/PWM.c **** }
 470:.\Generated_Source\PSoC4/PWM.c **** 
 471:.\Generated_Source\PSoC4/PWM.c **** 
 472:.\Generated_Source\PSoC4/PWM.c **** 
 473:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 475:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 476:.\Generated_Source\PSoC4/PWM.c **** *
 477:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 478:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 479:.\Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 480:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 481:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 482:.\Generated_Source\PSoC4/PWM.c **** *
 483:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 484:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 485:.\Generated_Source\PSoC4/PWM.c **** *
 486:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 487:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 488:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 489:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 490:.\Generated_Source\PSoC4/PWM.c **** 
 491:.\Generated_Source\PSoC4/PWM.c **** *
 492:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 493:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 494:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 495:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 496:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 497:.\Generated_Source\PSoC4/PWM.c **** *
 498:.\Generated_Source\PSoC4/PWM.c **** * Return:
 499:.\Generated_Source\PSoC4/PWM.c **** *  None
 500:.\Generated_Source\PSoC4/PWM.c **** *
 501:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 502:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 503:.\Generated_Source\PSoC4/PWM.c **** {
 504:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 505:.\Generated_Source\PSoC4/PWM.c **** 
 506:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 507:.\Generated_Source\PSoC4/PWM.c **** 
 508:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 509:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 510:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 511:.\Generated_Source\PSoC4/PWM.c **** 
 512:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 513:.\Generated_Source\PSoC4/PWM.c **** }
 514:.\Generated_Source\PSoC4/PWM.c **** 
 515:.\Generated_Source\PSoC4/PWM.c **** 
 516:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 518:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/PWM.c **** *
 520:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 521:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 522:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 523:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 524:.\Generated_Source\PSoC4/PWM.c **** *
 525:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 11


 526:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 527:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 528:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 529:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 530:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 531:.\Generated_Source\PSoC4/PWM.c **** *
 532:.\Generated_Source\PSoC4/PWM.c **** * Return:
 533:.\Generated_Source\PSoC4/PWM.c **** *  None
 534:.\Generated_Source\PSoC4/PWM.c **** *
 535:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 536:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 537:.\Generated_Source\PSoC4/PWM.c **** {
 538:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 539:.\Generated_Source\PSoC4/PWM.c **** 
 540:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 541:.\Generated_Source\PSoC4/PWM.c **** 
 542:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 543:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 544:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 545:.\Generated_Source\PSoC4/PWM.c **** 
 546:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 547:.\Generated_Source\PSoC4/PWM.c **** }
 548:.\Generated_Source\PSoC4/PWM.c **** 
 549:.\Generated_Source\PSoC4/PWM.c **** 
 550:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 552:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 553:.\Generated_Source\PSoC4/PWM.c **** *
 554:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 555:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 556:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 557:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 558:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 559:.\Generated_Source\PSoC4/PWM.c **** 
 560:.\Generated_Source\PSoC4/PWM.c **** *
 561:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 562:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 563:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 564:.\Generated_Source\PSoC4/PWM.c **** *
 565:.\Generated_Source\PSoC4/PWM.c **** * Return:
 566:.\Generated_Source\PSoC4/PWM.c **** *  None
 567:.\Generated_Source\PSoC4/PWM.c **** *
 568:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 569:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 570:.\Generated_Source\PSoC4/PWM.c **** {
 571:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 572:.\Generated_Source\PSoC4/PWM.c **** 
 573:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 574:.\Generated_Source\PSoC4/PWM.c **** 
 575:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 576:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 577:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 578:.\Generated_Source\PSoC4/PWM.c **** 
 579:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 580:.\Generated_Source\PSoC4/PWM.c **** }
 581:.\Generated_Source\PSoC4/PWM.c **** 
 582:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 12


 583:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 584:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 585:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 586:.\Generated_Source\PSoC4/PWM.c **** *
 587:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 588:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 589:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 590:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 591:.\Generated_Source\PSoC4/PWM.c **** *
 592:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 593:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 594:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 595:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 596:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 597:.\Generated_Source\PSoC4/PWM.c **** *
 598:.\Generated_Source\PSoC4/PWM.c **** * Return:
 599:.\Generated_Source\PSoC4/PWM.c **** *  None
 600:.\Generated_Source\PSoC4/PWM.c **** *
 601:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 603:.\Generated_Source\PSoC4/PWM.c **** {
 604:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 605:.\Generated_Source\PSoC4/PWM.c **** 
 606:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 607:.\Generated_Source\PSoC4/PWM.c **** 
 608:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 609:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 610:.\Generated_Source\PSoC4/PWM.c **** 
 611:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 612:.\Generated_Source\PSoC4/PWM.c **** }
 613:.\Generated_Source\PSoC4/PWM.c **** 
 614:.\Generated_Source\PSoC4/PWM.c **** 
 615:.\Generated_Source\PSoC4/PWM.c **** 
 616:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 618:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/PWM.c **** *
 620:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 621:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 622:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 623:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 626:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 627:.\Generated_Source\PSoC4/PWM.c **** *
 628:.\Generated_Source\PSoC4/PWM.c **** * Return:
 629:.\Generated_Source\PSoC4/PWM.c **** *  None
 630:.\Generated_Source\PSoC4/PWM.c **** *
 631:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 632:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 633:.\Generated_Source\PSoC4/PWM.c **** {
 634:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 635:.\Generated_Source\PSoC4/PWM.c **** }
 636:.\Generated_Source\PSoC4/PWM.c **** 
 637:.\Generated_Source\PSoC4/PWM.c **** 
 638:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 639:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 13


 640:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 641:.\Generated_Source\PSoC4/PWM.c **** *
 642:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 643:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 644:.\Generated_Source\PSoC4/PWM.c **** *
 645:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 646:.\Generated_Source\PSoC4/PWM.c **** *  None
 647:.\Generated_Source\PSoC4/PWM.c **** *
 648:.\Generated_Source\PSoC4/PWM.c **** * Return:
 649:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 650:.\Generated_Source\PSoC4/PWM.c **** *
 651:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 652:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 653:.\Generated_Source\PSoC4/PWM.c **** {
 654:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 655:.\Generated_Source\PSoC4/PWM.c **** }
 656:.\Generated_Source\PSoC4/PWM.c **** 
 657:.\Generated_Source\PSoC4/PWM.c **** 
 658:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 660:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 661:.\Generated_Source\PSoC4/PWM.c **** *
 662:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 663:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 664:.\Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 665:.\Generated_Source\PSoC4/PWM.c **** *
 666:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 667:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 668:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 669:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 670:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 671:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 672:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 673:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 674:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 675:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 676:.\Generated_Source\PSoC4/PWM.c **** *
 677:.\Generated_Source\PSoC4/PWM.c **** * Return:
 678:.\Generated_Source\PSoC4/PWM.c **** *  None
 679:.\Generated_Source\PSoC4/PWM.c **** *
 680:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 682:.\Generated_Source\PSoC4/PWM.c **** {
 683:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 684:.\Generated_Source\PSoC4/PWM.c **** 
 685:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 686:.\Generated_Source\PSoC4/PWM.c **** 
 687:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 688:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 689:.\Generated_Source\PSoC4/PWM.c **** 
 690:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 691:.\Generated_Source\PSoC4/PWM.c **** }
 692:.\Generated_Source\PSoC4/PWM.c **** 
 693:.\Generated_Source\PSoC4/PWM.c **** 
 694:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 696:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 14


 697:.\Generated_Source\PSoC4/PWM.c **** *
 698:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 699:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 700:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 701:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 704:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 705:.\Generated_Source\PSoC4/PWM.c **** *
 706:.\Generated_Source\PSoC4/PWM.c **** * Return:
 707:.\Generated_Source\PSoC4/PWM.c **** *  None
 708:.\Generated_Source\PSoC4/PWM.c **** *
 709:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 711:.\Generated_Source\PSoC4/PWM.c **** {
 712:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 713:.\Generated_Source\PSoC4/PWM.c **** }
 714:.\Generated_Source\PSoC4/PWM.c **** 
 715:.\Generated_Source\PSoC4/PWM.c **** 
 716:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 718:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 719:.\Generated_Source\PSoC4/PWM.c **** *
 720:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 721:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM.c **** *  None
 725:.\Generated_Source\PSoC4/PWM.c **** *
 726:.\Generated_Source\PSoC4/PWM.c **** * Return:
 727:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 728:.\Generated_Source\PSoC4/PWM.c **** *
 729:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 730:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 731:.\Generated_Source\PSoC4/PWM.c **** {
 732:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 733:.\Generated_Source\PSoC4/PWM.c **** }
 734:.\Generated_Source\PSoC4/PWM.c **** 
 735:.\Generated_Source\PSoC4/PWM.c **** 
 736:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 737:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 738:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 739:.\Generated_Source\PSoC4/PWM.c **** *
 740:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 741:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 742:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 743:.\Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 744:.\Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 745:.\Generated_Source\PSoC4/PWM.c **** *
 746:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 747:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 748:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 749:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 750:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 751:.\Generated_Source\PSoC4/PWM.c **** *
 752:.\Generated_Source\PSoC4/PWM.c **** * Return:
 753:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 15


 754:.\Generated_Source\PSoC4/PWM.c **** *
 755:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 757:.\Generated_Source\PSoC4/PWM.c **** {
 758:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 759:.\Generated_Source\PSoC4/PWM.c **** 
 760:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 761:.\Generated_Source\PSoC4/PWM.c **** 
 762:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 763:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 764:.\Generated_Source\PSoC4/PWM.c **** 
 765:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC4/PWM.c **** }
 767:.\Generated_Source\PSoC4/PWM.c **** 
 768:.\Generated_Source\PSoC4/PWM.c **** 
 769:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 771:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/PWM.c **** *
 773:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 774:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 777:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 778:.\Generated_Source\PSoC4/PWM.c **** *
 779:.\Generated_Source\PSoC4/PWM.c **** * Return:
 780:.\Generated_Source\PSoC4/PWM.c **** *  None
 781:.\Generated_Source\PSoC4/PWM.c **** *
 782:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 783:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 784:.\Generated_Source\PSoC4/PWM.c **** {
 785:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 786:.\Generated_Source\PSoC4/PWM.c **** }
 787:.\Generated_Source\PSoC4/PWM.c **** 
 788:.\Generated_Source\PSoC4/PWM.c **** 
 789:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 791:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 792:.\Generated_Source\PSoC4/PWM.c **** *
 793:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 794:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM.c **** *  None
 798:.\Generated_Source\PSoC4/PWM.c **** *
 799:.\Generated_Source\PSoC4/PWM.c **** * Return:
 800:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 801:.\Generated_Source\PSoC4/PWM.c **** *
 802:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 804:.\Generated_Source\PSoC4/PWM.c **** {
 805:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 806:.\Generated_Source\PSoC4/PWM.c **** }
 807:.\Generated_Source\PSoC4/PWM.c **** 
 808:.\Generated_Source\PSoC4/PWM.c **** 
 809:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 810:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 16


 811:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 812:.\Generated_Source\PSoC4/PWM.c **** *
 813:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 814:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 815:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 816:.\Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 817:.\Generated_Source\PSoC4/PWM.c **** *  switch event.
 818:.\Generated_Source\PSoC4/PWM.c **** *
 819:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 820:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 821:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 822:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 823:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 824:.\Generated_Source\PSoC4/PWM.c **** *
 825:.\Generated_Source\PSoC4/PWM.c **** * Return:
 826:.\Generated_Source\PSoC4/PWM.c **** *  None
 827:.\Generated_Source\PSoC4/PWM.c **** *
 828:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 830:.\Generated_Source\PSoC4/PWM.c **** {
 831:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 832:.\Generated_Source\PSoC4/PWM.c **** 
 833:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 834:.\Generated_Source\PSoC4/PWM.c **** 
 835:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 836:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 837:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 838:.\Generated_Source\PSoC4/PWM.c **** 
 839:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 840:.\Generated_Source\PSoC4/PWM.c **** }
 841:.\Generated_Source\PSoC4/PWM.c **** 
 842:.\Generated_Source\PSoC4/PWM.c **** 
 843:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 845:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/PWM.c **** *
 847:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 848:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 849:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 850:.\Generated_Source\PSoC4/PWM.c **** *
 851:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 852:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 853:.\Generated_Source\PSoC4/PWM.c **** *
 854:.\Generated_Source\PSoC4/PWM.c **** * Return:
 855:.\Generated_Source\PSoC4/PWM.c **** *  None
 856:.\Generated_Source\PSoC4/PWM.c **** *
 857:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 859:.\Generated_Source\PSoC4/PWM.c **** {
 860:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 861:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 862:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 863:.\Generated_Source\PSoC4/PWM.c **** 
 864:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 865:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 866:.\Generated_Source\PSoC4/PWM.c **** 
 867:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 17


 868:.\Generated_Source\PSoC4/PWM.c ****         {
 869:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_REG = ((compare + 1u) & PWM_16BIT_MASK);
 870:.\Generated_Source\PSoC4/PWM.c ****         }
 871:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
 872:.\Generated_Source\PSoC4/PWM.c ****         {
 873:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_REG = ((compare - 1u) & PWM_16BIT_MASK);
 874:.\Generated_Source\PSoC4/PWM.c ****         }
 875:.\Generated_Source\PSoC4/PWM.c ****         else
 876:.\Generated_Source\PSoC4/PWM.c ****         {
 877:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 878:.\Generated_Source\PSoC4/PWM.c ****         }
 879:.\Generated_Source\PSoC4/PWM.c ****     #else
 880:.\Generated_Source\PSoC4/PWM.c ****         PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
  45              		.loc 1 880 0
  46 0014 0A49     		ldr	r1, .L2+4
  47              	.LBE11:
  48              	.LBE10:
  73:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)PWM_PWM_PRESCALER         << PWM_PRESCALER_SHIFT);
  49              		.loc 1 73 0
  50 0016 1A60     		str	r2, [r3]
  96:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_SWITCH_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
  51              		.loc 1 96 0
  52 0018 C322     		mov	r2, #195
  53 001a 0A4B     		ldr	r3, .L2+8
  54 001c 9200     		lsl	r2, r2, #2
  55 001e 1A60     		str	r2, [r3]
  56              	.LVL0:
  57              	.LBB13:
  58              	.LBB14:
 881:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 882:.\Generated_Source\PSoC4/PWM.c **** }
 883:.\Generated_Source\PSoC4/PWM.c **** 
 884:.\Generated_Source\PSoC4/PWM.c **** 
 885:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 886:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 887:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 888:.\Generated_Source\PSoC4/PWM.c **** *
 889:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 890:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 891:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 892:.\Generated_Source\PSoC4/PWM.c **** *
 893:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 894:.\Generated_Source\PSoC4/PWM.c **** *  None
 895:.\Generated_Source\PSoC4/PWM.c **** *
 896:.\Generated_Source\PSoC4/PWM.c **** * Return:
 897:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 898:.\Generated_Source\PSoC4/PWM.c **** *
 899:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 901:.\Generated_Source\PSoC4/PWM.c **** {
 902:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 903:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 906:.\Generated_Source\PSoC4/PWM.c **** 
 907:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 908:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 18


 909:.\Generated_Source\PSoC4/PWM.c **** 
 910:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
 911:.\Generated_Source\PSoC4/PWM.c ****         {
 912:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_REG - 1u) & PWM_16BIT_MASK);
 913:.\Generated_Source\PSoC4/PWM.c ****         }
 914:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
 915:.\Generated_Source\PSoC4/PWM.c ****         {
 916:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_REG + 1u) & PWM_16BIT_MASK);
 917:.\Generated_Source\PSoC4/PWM.c ****         }
 918:.\Generated_Source\PSoC4/PWM.c ****         else
 919:.\Generated_Source\PSoC4/PWM.c ****         {
 920:.\Generated_Source\PSoC4/PWM.c ****             regVal = (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 921:.\Generated_Source\PSoC4/PWM.c ****         }
 922:.\Generated_Source\PSoC4/PWM.c ****         return (regVal);
 923:.\Generated_Source\PSoC4/PWM.c ****     #else
 924:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 925:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 926:.\Generated_Source\PSoC4/PWM.c **** }
 927:.\Generated_Source\PSoC4/PWM.c **** 
 928:.\Generated_Source\PSoC4/PWM.c **** 
 929:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 930:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 931:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 932:.\Generated_Source\PSoC4/PWM.c **** *
 933:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 934:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 935:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 936:.\Generated_Source\PSoC4/PWM.c **** *
 937:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 938:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 939:.\Generated_Source\PSoC4/PWM.c **** *
 940:.\Generated_Source\PSoC4/PWM.c **** * Return:
 941:.\Generated_Source\PSoC4/PWM.c **** *  None
 942:.\Generated_Source\PSoC4/PWM.c **** *
 943:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 944:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 945:.\Generated_Source\PSoC4/PWM.c **** {
 946:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 947:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 948:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 949:.\Generated_Source\PSoC4/PWM.c **** 
 950:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 951:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 952:.\Generated_Source\PSoC4/PWM.c **** 
 953:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
 954:.\Generated_Source\PSoC4/PWM.c ****         {
 955:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_BUF_REG = ((compareBuf + 1u) & PWM_16BIT_MASK);
 956:.\Generated_Source\PSoC4/PWM.c ****         }
 957:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
 958:.\Generated_Source\PSoC4/PWM.c ****         {
 959:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_BUF_REG = ((compareBuf - 1u) & PWM_16BIT_MASK);
 960:.\Generated_Source\PSoC4/PWM.c ****         }
 961:.\Generated_Source\PSoC4/PWM.c ****         else
 962:.\Generated_Source\PSoC4/PWM.c ****         {
 963:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 964:.\Generated_Source\PSoC4/PWM.c ****         }
 965:.\Generated_Source\PSoC4/PWM.c ****     #else
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 19


 966:.\Generated_Source\PSoC4/PWM.c ****         PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 967:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 968:.\Generated_Source\PSoC4/PWM.c **** }
 969:.\Generated_Source\PSoC4/PWM.c **** 
 970:.\Generated_Source\PSoC4/PWM.c **** 
 971:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 972:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 973:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 974:.\Generated_Source\PSoC4/PWM.c **** *
 975:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 976:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 977:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 978:.\Generated_Source\PSoC4/PWM.c **** *
 979:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 980:.\Generated_Source\PSoC4/PWM.c **** *  None
 981:.\Generated_Source\PSoC4/PWM.c **** *
 982:.\Generated_Source\PSoC4/PWM.c **** * Return:
 983:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 984:.\Generated_Source\PSoC4/PWM.c **** *
 985:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 986:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
 987:.\Generated_Source\PSoC4/PWM.c **** {
 988:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 989:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 990:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 991:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 992:.\Generated_Source\PSoC4/PWM.c **** 
 993:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 994:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 995:.\Generated_Source\PSoC4/PWM.c **** 
 996:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
 997:.\Generated_Source\PSoC4/PWM.c ****         {
 998:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_BUF_REG - 1u) & PWM_16BIT_MASK);
 999:.\Generated_Source\PSoC4/PWM.c ****         }
1000:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
1001:.\Generated_Source\PSoC4/PWM.c ****         {
1002:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_BUF_REG + 1u) & PWM_16BIT_MASK);
1003:.\Generated_Source\PSoC4/PWM.c ****         }
1004:.\Generated_Source\PSoC4/PWM.c ****         else
1005:.\Generated_Source\PSoC4/PWM.c ****         {
1006:.\Generated_Source\PSoC4/PWM.c ****             regVal = (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
1007:.\Generated_Source\PSoC4/PWM.c ****         }
1008:.\Generated_Source\PSoC4/PWM.c ****         return (regVal);
1009:.\Generated_Source\PSoC4/PWM.c ****     #else
1010:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
1011:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
1012:.\Generated_Source\PSoC4/PWM.c **** }
1013:.\Generated_Source\PSoC4/PWM.c **** 
1014:.\Generated_Source\PSoC4/PWM.c **** 
1015:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
1017:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1018:.\Generated_Source\PSoC4/PWM.c **** *
1019:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1020:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1021:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1022:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 20


1023:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1024:.\Generated_Source\PSoC4/PWM.c **** *  None
1025:.\Generated_Source\PSoC4/PWM.c **** *
1026:.\Generated_Source\PSoC4/PWM.c **** * Return:
1027:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
1028:.\Generated_Source\PSoC4/PWM.c **** *
1029:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1030:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1031:.\Generated_Source\PSoC4/PWM.c **** {
1032:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
1033:.\Generated_Source\PSoC4/PWM.c **** }
1034:.\Generated_Source\PSoC4/PWM.c **** 
1035:.\Generated_Source\PSoC4/PWM.c **** 
1036:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1037:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1038:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1039:.\Generated_Source\PSoC4/PWM.c **** *
1040:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1041:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1042:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1043:.\Generated_Source\PSoC4/PWM.c **** *
1044:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1045:.\Generated_Source\PSoC4/PWM.c **** *  None
1046:.\Generated_Source\PSoC4/PWM.c **** *
1047:.\Generated_Source\PSoC4/PWM.c **** * Return:
1048:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1049:.\Generated_Source\PSoC4/PWM.c **** *
1050:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1051:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1052:.\Generated_Source\PSoC4/PWM.c **** {
1053:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
1054:.\Generated_Source\PSoC4/PWM.c **** }
1055:.\Generated_Source\PSoC4/PWM.c **** 
1056:.\Generated_Source\PSoC4/PWM.c **** 
1057:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1058:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1059:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1060:.\Generated_Source\PSoC4/PWM.c **** *
1061:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1062:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1063:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1064:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1065:.\Generated_Source\PSoC4/PWM.c **** *
1066:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1067:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1068:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1069:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1070:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1071:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1072:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1073:.\Generated_Source\PSoC4/PWM.c **** *
1074:.\Generated_Source\PSoC4/PWM.c **** * Return:
1075:.\Generated_Source\PSoC4/PWM.c **** *  None
1076:.\Generated_Source\PSoC4/PWM.c **** *
1077:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1078:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1079:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 21


1080:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1081:.\Generated_Source\PSoC4/PWM.c **** 
1082:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1083:.\Generated_Source\PSoC4/PWM.c **** 
1084:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
1085:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
1086:.\Generated_Source\PSoC4/PWM.c **** 
1087:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1088:.\Generated_Source\PSoC4/PWM.c **** }
1089:.\Generated_Source\PSoC4/PWM.c **** 
1090:.\Generated_Source\PSoC4/PWM.c **** 
1091:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1093:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/PWM.c **** *
1095:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1096:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1097:.\Generated_Source\PSoC4/PWM.c **** *  input.
1098:.\Generated_Source\PSoC4/PWM.c **** *
1099:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1100:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1101:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1102:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1103:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1104:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1105:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1106:.\Generated_Source\PSoC4/PWM.c **** *
1107:.\Generated_Source\PSoC4/PWM.c **** * Return:
1108:.\Generated_Source\PSoC4/PWM.c **** *  None
1109:.\Generated_Source\PSoC4/PWM.c **** *
1110:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1112:.\Generated_Source\PSoC4/PWM.c **** {
1113:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1114:.\Generated_Source\PSoC4/PWM.c **** 
1115:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1116:.\Generated_Source\PSoC4/PWM.c **** 
1117:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
1118:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
1119:.\Generated_Source\PSoC4/PWM.c **** 
1120:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1121:.\Generated_Source\PSoC4/PWM.c **** }
1122:.\Generated_Source\PSoC4/PWM.c **** 
1123:.\Generated_Source\PSoC4/PWM.c **** 
1124:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1125:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1126:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1127:.\Generated_Source\PSoC4/PWM.c **** *
1128:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1129:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1130:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1131:.\Generated_Source\PSoC4/PWM.c **** *
1132:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1133:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1134:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1135:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1136:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 22


1137:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1138:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1139:.\Generated_Source\PSoC4/PWM.c **** *
1140:.\Generated_Source\PSoC4/PWM.c **** * Return:
1141:.\Generated_Source\PSoC4/PWM.c **** *  None
1142:.\Generated_Source\PSoC4/PWM.c **** *
1143:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1144:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1145:.\Generated_Source\PSoC4/PWM.c **** {
1146:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1147:.\Generated_Source\PSoC4/PWM.c **** 
1148:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1149:.\Generated_Source\PSoC4/PWM.c **** 
1150:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
1151:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
1152:.\Generated_Source\PSoC4/PWM.c **** 
1153:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1154:.\Generated_Source\PSoC4/PWM.c **** }
1155:.\Generated_Source\PSoC4/PWM.c **** 
1156:.\Generated_Source\PSoC4/PWM.c **** 
1157:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1158:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1159:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1160:.\Generated_Source\PSoC4/PWM.c **** *
1161:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1162:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1163:.\Generated_Source\PSoC4/PWM.c **** *
1164:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1165:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1166:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1167:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1168:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1169:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1170:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1171:.\Generated_Source\PSoC4/PWM.c **** *
1172:.\Generated_Source\PSoC4/PWM.c **** * Return:
1173:.\Generated_Source\PSoC4/PWM.c **** *  None
1174:.\Generated_Source\PSoC4/PWM.c **** *
1175:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1176:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1177:.\Generated_Source\PSoC4/PWM.c **** {
1178:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1179:.\Generated_Source\PSoC4/PWM.c **** 
1180:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1181:.\Generated_Source\PSoC4/PWM.c **** 
1182:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
1183:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
1184:.\Generated_Source\PSoC4/PWM.c **** 
1185:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1186:.\Generated_Source\PSoC4/PWM.c **** }
1187:.\Generated_Source\PSoC4/PWM.c **** 
1188:.\Generated_Source\PSoC4/PWM.c **** 
1189:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1190:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1191:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1192:.\Generated_Source\PSoC4/PWM.c **** *
1193:.\Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 23


1194:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1195:.\Generated_Source\PSoC4/PWM.c **** *  input.
1196:.\Generated_Source\PSoC4/PWM.c **** *
1197:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1198:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1199:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1200:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1201:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1202:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1203:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1204:.\Generated_Source\PSoC4/PWM.c **** *
1205:.\Generated_Source\PSoC4/PWM.c **** * Return:
1206:.\Generated_Source\PSoC4/PWM.c **** *  None
1207:.\Generated_Source\PSoC4/PWM.c **** *
1208:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1210:.\Generated_Source\PSoC4/PWM.c **** {
1211:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1212:.\Generated_Source\PSoC4/PWM.c **** 
1213:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1214:.\Generated_Source\PSoC4/PWM.c **** 
1215:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
1216:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
1217:.\Generated_Source\PSoC4/PWM.c **** 
1218:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1219:.\Generated_Source\PSoC4/PWM.c **** }
1220:.\Generated_Source\PSoC4/PWM.c **** 
1221:.\Generated_Source\PSoC4/PWM.c **** 
1222:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1224:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1225:.\Generated_Source\PSoC4/PWM.c **** *
1226:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1227:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1228:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1229:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1230:.\Generated_Source\PSoC4/PWM.c **** *
1231:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1232:.\Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1233:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1234:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1235:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1236:.\Generated_Source\PSoC4/PWM.c **** *        define.
1237:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1238:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1239:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1240:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture command
1241:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload command
1242:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop command
1243:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start command
1244:.\Generated_Source\PSoC4/PWM.c **** *
1245:.\Generated_Source\PSoC4/PWM.c **** * Return:
1246:.\Generated_Source\PSoC4/PWM.c **** *  None
1247:.\Generated_Source\PSoC4/PWM.c **** *
1248:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1250:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 24


1251:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1252:.\Generated_Source\PSoC4/PWM.c **** 
1253:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1254:.\Generated_Source\PSoC4/PWM.c **** 
1255:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
1256:.\Generated_Source\PSoC4/PWM.c **** 
1257:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1258:.\Generated_Source\PSoC4/PWM.c **** }
1259:.\Generated_Source\PSoC4/PWM.c **** 
1260:.\Generated_Source\PSoC4/PWM.c **** 
1261:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1263:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/PWM.c **** *
1265:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1266:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1267:.\Generated_Source\PSoC4/PWM.c **** *
1268:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1269:.\Generated_Source\PSoC4/PWM.c **** *  None
1270:.\Generated_Source\PSoC4/PWM.c **** *
1271:.\Generated_Source\PSoC4/PWM.c **** * Return:
1272:.\Generated_Source\PSoC4/PWM.c **** *  Status
1273:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1274:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1275:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1276:.\Generated_Source\PSoC4/PWM.c **** *
1277:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1279:.\Generated_Source\PSoC4/PWM.c **** {
1280:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
1281:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
1282:.\Generated_Source\PSoC4/PWM.c **** }
1283:.\Generated_Source\PSoC4/PWM.c **** 
1284:.\Generated_Source\PSoC4/PWM.c **** 
1285:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1286:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1287:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1288:.\Generated_Source\PSoC4/PWM.c **** *
1289:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1290:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1291:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1292:.\Generated_Source\PSoC4/PWM.c **** *
1293:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1294:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1295:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1296:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1297:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1298:.\Generated_Source\PSoC4/PWM.c **** *
1299:.\Generated_Source\PSoC4/PWM.c **** * Return:
1300:.\Generated_Source\PSoC4/PWM.c **** *  None
1301:.\Generated_Source\PSoC4/PWM.c **** *
1302:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1304:.\Generated_Source\PSoC4/PWM.c **** {
1305:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
  59              		.loc 1 1305 0
  60 0020 0022     		mov	r2, #0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 25


  61 0022 094B     		ldr	r3, .L2+12
  62              	.LBE14:
  63              	.LBE13:
 183:.\Generated_Source\PSoC4/PWM.c **** 
  64              		.loc 1 183 0
  65              		@ sp needed
  66              	.LBB16:
  67              	.LBB15:
  68              		.loc 1 1305 0
  69 0024 1A60     		str	r2, [r3]
  70              	.LVL1:
  71              	.LBE15:
  72              	.LBE16:
  73              	.LBB17:
  74              	.LBB18:
 712:.\Generated_Source\PSoC4/PWM.c **** }
  75              		.loc 1 712 0
  76 0026 094B     		ldr	r3, .L2+16
  77 0028 094A     		ldr	r2, .L2+20
  78 002a 1360     		str	r3, [r2]
  79              	.LVL2:
  80              	.LBE18:
  81              	.LBE17:
  82              	.LBB19:
  83              	.LBB12:
 880:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
  84              		.loc 1 880 0
  85 002c 094A     		ldr	r2, .L2+24
  86 002e 1160     		str	r1, [r2]
  87              	.LVL3:
  88              	.LBE12:
  89              	.LBE19:
  90              	.LBB20:
  91              	.LBB21:
 634:.\Generated_Source\PSoC4/PWM.c **** }
  92              		.loc 1 634 0
  93 0030 094A     		ldr	r2, .L2+28
  94 0032 1360     		str	r3, [r2]
  95              	.LBE21:
  96              	.LBE20:
 171:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
  97              		.loc 1 171 0
  98 0034 1C22     		mov	r2, #28
  99 0036 094B     		ldr	r3, .L2+32
 100 0038 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/PWM.c **** 
 101              		.loc 1 183 0
 102 003a 7047     		bx	lr
 103              	.L3:
 104              		.align	2
 105              	.L2:
 106 003c 00010540 		.word	1074069760
 107 0040 88130000 		.word	5000
 108 0044 24010540 		.word	1074069796
 109 0048 38010540 		.word	1074069816
 110 004c 10270000 		.word	10000
 111 0050 14010540 		.word	1074069780
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 26


 112 0054 0C010540 		.word	1074069772
 113 0058 08010540 		.word	1074069768
 114 005c 28010540 		.word	1074069800
 115              		.cfi_endproc
 116              	.LFE0:
 117              		.size	PWM_Init, .-PWM_Init
 118              		.section	.text.PWM_Enable,"ax",%progbits
 119              		.align	1
 120              		.global	PWM_Enable
 121              		.code	16
 122              		.thumb_func
 123              		.type	PWM_Enable, %function
 124              	PWM_Enable:
 125              	.LFB1:
 201:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 126              		.loc 1 201 0
 127              		.cfi_startproc
 128 0000 08B5     		push	{r3, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
 204:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 132              		.loc 1 204 0
 133 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 134              	.LVL4:
 205:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 135              		.loc 1 205 0
 136 0006 0121     		mov	r1, #1
 137 0008 034A     		ldr	r2, .L5
 220:.\Generated_Source\PSoC4/PWM.c **** 
 138              		.loc 1 220 0
 139              		@ sp needed
 205:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 140              		.loc 1 205 0
 141 000a 1368     		ldr	r3, [r2]
 142 000c 0B43     		orr	r3, r1
 143 000e 1360     		str	r3, [r2]
 206:.\Generated_Source\PSoC4/PWM.c **** 
 144              		.loc 1 206 0
 145 0010 FFF7FEFF 		bl	CyExitCriticalSection
 146              	.LVL5:
 220:.\Generated_Source\PSoC4/PWM.c **** 
 147              		.loc 1 220 0
 148 0014 08BD     		pop	{r3, pc}
 149              	.L6:
 150 0016 C046     		.align	2
 151              	.L5:
 152 0018 00000540 		.word	1074069504
 153              		.cfi_endproc
 154              	.LFE1:
 155              		.size	PWM_Enable, .-PWM_Enable
 156              		.section	.text.PWM_Start,"ax",%progbits
 157              		.align	1
 158              		.global	PWM_Start
 159              		.code	16
 160              		.thumb_func
 161              		.type	PWM_Start, %function
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 27


 162              	PWM_Start:
 163              	.LFB2:
 248:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 164              		.loc 1 248 0
 165              		.cfi_startproc
 166 0000 10B5     		push	{r4, lr}
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 4, -8
 169              		.cfi_offset 14, -4
 249:.\Generated_Source\PSoC4/PWM.c ****     {
 170              		.loc 1 249 0
 171 0002 054C     		ldr	r4, .L10
 172 0004 2378     		ldrb	r3, [r4]
 173 0006 002B     		cmp	r3, #0
 174 0008 03D1     		bne	.L8
 251:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 175              		.loc 1 251 0
 176 000a FFF7FEFF 		bl	PWM_Init
 177              	.LVL6:
 252:.\Generated_Source\PSoC4/PWM.c ****     }
 178              		.loc 1 252 0
 179 000e 0123     		mov	r3, #1
 180 0010 2370     		strb	r3, [r4]
 181              	.L8:
 255:.\Generated_Source\PSoC4/PWM.c **** }
 182              		.loc 1 255 0
 183 0012 FFF7FEFF 		bl	PWM_Enable
 184              	.LVL7:
 256:.\Generated_Source\PSoC4/PWM.c **** 
 185              		.loc 1 256 0
 186              		@ sp needed
 187 0016 10BD     		pop	{r4, pc}
 188              	.L11:
 189              		.align	2
 190              	.L10:
 191 0018 00000000 		.word	.LANCHOR0
 192              		.cfi_endproc
 193              	.LFE2:
 194              		.size	PWM_Start, .-PWM_Start
 195              		.section	.text.PWM_Stop,"ax",%progbits
 196              		.align	1
 197              		.global	PWM_Stop
 198              		.code	16
 199              		.thumb_func
 200              		.type	PWM_Stop, %function
 201              	PWM_Stop:
 202              	.LFB3:
 274:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 203              		.loc 1 274 0
 204              		.cfi_startproc
 205 0000 08B5     		push	{r3, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 277:.\Generated_Source\PSoC4/PWM.c **** 
 209              		.loc 1 277 0
 210 0002 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 28


 211              	.LVL8:
 279:.\Generated_Source\PSoC4/PWM.c **** 
 212              		.loc 1 279 0
 213 0006 0121     		mov	r1, #1
 214 0008 034A     		ldr	r2, .L13
 282:.\Generated_Source\PSoC4/PWM.c **** 
 215              		.loc 1 282 0
 216              		@ sp needed
 279:.\Generated_Source\PSoC4/PWM.c **** 
 217              		.loc 1 279 0
 218 000a 1368     		ldr	r3, [r2]
 219 000c 8B43     		bic	r3, r1
 220 000e 1360     		str	r3, [r2]
 281:.\Generated_Source\PSoC4/PWM.c **** }
 221              		.loc 1 281 0
 222 0010 FFF7FEFF 		bl	CyExitCriticalSection
 223              	.LVL9:
 282:.\Generated_Source\PSoC4/PWM.c **** 
 224              		.loc 1 282 0
 225 0014 08BD     		pop	{r3, pc}
 226              	.L14:
 227 0016 C046     		.align	2
 228              	.L13:
 229 0018 00000540 		.word	1074069504
 230              		.cfi_endproc
 231              	.LFE3:
 232              		.size	PWM_Stop, .-PWM_Stop
 233              		.section	.text.PWM_SetMode,"ax",%progbits
 234              		.align	1
 235              		.global	PWM_SetMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	PWM_SetMode, %function
 239              	PWM_SetMode:
 240              	.LFB4:
 311:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 241              		.loc 1 311 0
 242              		.cfi_startproc
 243              	.LVL10:
 244 0000 10B5     		push	{r4, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 4, -8
 247              		.cfi_offset 14, -4
 311:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 248              		.loc 1 311 0
 249 0002 041C     		mov	r4, r0
 314:.\Generated_Source\PSoC4/PWM.c **** 
 250              		.loc 1 314 0
 251 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 252              	.LVL11:
 316:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 253              		.loc 1 316 0
 254 0008 054B     		ldr	r3, .L16
 255 000a 064A     		ldr	r2, .L16+4
 256 000c 1968     		ldr	r1, [r3]
 320:.\Generated_Source\PSoC4/PWM.c **** 
 257              		.loc 1 320 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 29


 258              		@ sp needed
 316:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 259              		.loc 1 316 0
 260 000e 0A40     		and	r2, r1
 261 0010 1A60     		str	r2, [r3]
 317:.\Generated_Source\PSoC4/PWM.c **** 
 262              		.loc 1 317 0
 263 0012 1A68     		ldr	r2, [r3]
 264 0014 2243     		orr	r2, r4
 265 0016 1A60     		str	r2, [r3]
 319:.\Generated_Source\PSoC4/PWM.c **** }
 266              		.loc 1 319 0
 267 0018 FFF7FEFF 		bl	CyExitCriticalSection
 268              	.LVL12:
 269              	.LVL13:
 320:.\Generated_Source\PSoC4/PWM.c **** 
 270              		.loc 1 320 0
 271 001c 10BD     		pop	{r4, pc}
 272              	.L17:
 273 001e C046     		.align	2
 274              	.L16:
 275 0020 00010540 		.word	1074069760
 276 0024 FFFFFFF8 		.word	-117440513
 277              		.cfi_endproc
 278              	.LFE4:
 279              		.size	PWM_SetMode, .-PWM_SetMode
 280              		.section	.text.PWM_SetQDMode,"ax",%progbits
 281              		.align	1
 282              		.global	PWM_SetQDMode
 283              		.code	16
 284              		.thumb_func
 285              		.type	PWM_SetQDMode, %function
 286              	PWM_SetQDMode:
 287              	.LFB5:
 344:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 288              		.loc 1 344 0
 289              		.cfi_startproc
 290              	.LVL14:
 291 0000 10B5     		push	{r4, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 4, -8
 294              		.cfi_offset 14, -4
 344:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 295              		.loc 1 344 0
 296 0002 041C     		mov	r4, r0
 347:.\Generated_Source\PSoC4/PWM.c **** 
 297              		.loc 1 347 0
 298 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 299              	.LVL15:
 349:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 300              		.loc 1 349 0
 301 0008 054B     		ldr	r3, .L19
 302 000a 064A     		ldr	r2, .L19+4
 303 000c 1968     		ldr	r1, [r3]
 353:.\Generated_Source\PSoC4/PWM.c **** 
 304              		.loc 1 353 0
 305              		@ sp needed
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 30


 349:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 306              		.loc 1 349 0
 307 000e 0A40     		and	r2, r1
 308 0010 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/PWM.c **** 
 309              		.loc 1 350 0
 310 0012 1A68     		ldr	r2, [r3]
 311 0014 2243     		orr	r2, r4
 312 0016 1A60     		str	r2, [r3]
 352:.\Generated_Source\PSoC4/PWM.c **** }
 313              		.loc 1 352 0
 314 0018 FFF7FEFF 		bl	CyExitCriticalSection
 315              	.LVL16:
 316              	.LVL17:
 353:.\Generated_Source\PSoC4/PWM.c **** 
 317              		.loc 1 353 0
 318 001c 10BD     		pop	{r4, pc}
 319              	.L20:
 320 001e C046     		.align	2
 321              	.L19:
 322 0020 00010540 		.word	1074069760
 323 0024 FFFF8FFF 		.word	-7340033
 324              		.cfi_endproc
 325              	.LFE5:
 326              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 327              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 328              		.align	1
 329              		.global	PWM_SetPrescaler
 330              		.code	16
 331              		.thumb_func
 332              		.type	PWM_SetPrescaler, %function
 333              	PWM_SetPrescaler:
 334              	.LFB6:
 381:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 335              		.loc 1 381 0
 336              		.cfi_startproc
 337              	.LVL18:
 338 0000 10B5     		push	{r4, lr}
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 4, -8
 341              		.cfi_offset 14, -4
 381:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 342              		.loc 1 381 0
 343 0002 041C     		mov	r4, r0
 384:.\Generated_Source\PSoC4/PWM.c **** 
 344              		.loc 1 384 0
 345 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 346              	.LVL19:
 386:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 347              		.loc 1 386 0
 348 0008 054B     		ldr	r3, .L22
 349 000a 064A     		ldr	r2, .L22+4
 350 000c 1968     		ldr	r1, [r3]
 390:.\Generated_Source\PSoC4/PWM.c **** 
 351              		.loc 1 390 0
 352              		@ sp needed
 386:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 31


 353              		.loc 1 386 0
 354 000e 0A40     		and	r2, r1
 355 0010 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/PWM.c **** 
 356              		.loc 1 387 0
 357 0012 1A68     		ldr	r2, [r3]
 358 0014 2243     		orr	r2, r4
 359 0016 1A60     		str	r2, [r3]
 389:.\Generated_Source\PSoC4/PWM.c **** }
 360              		.loc 1 389 0
 361 0018 FFF7FEFF 		bl	CyExitCriticalSection
 362              	.LVL20:
 363              	.LVL21:
 390:.\Generated_Source\PSoC4/PWM.c **** 
 364              		.loc 1 390 0
 365 001c 10BD     		pop	{r4, pc}
 366              	.L23:
 367 001e C046     		.align	2
 368              	.L22:
 369 0020 00010540 		.word	1074069760
 370 0024 FF00FFFF 		.word	-65281
 371              		.cfi_endproc
 372              	.LFE6:
 373              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 374              		.section	.text.PWM_SetOneShot,"ax",%progbits
 375              		.align	1
 376              		.global	PWM_SetOneShot
 377              		.code	16
 378              		.thumb_func
 379              		.type	PWM_SetOneShot, %function
 380              	PWM_SetOneShot:
 381              	.LFB7:
 413:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 382              		.loc 1 413 0
 383              		.cfi_startproc
 384              	.LVL22:
 385 0000 10B5     		push	{r4, lr}
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 4, -8
 388              		.cfi_offset 14, -4
 413:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 389              		.loc 1 413 0
 390 0002 041C     		mov	r4, r0
 416:.\Generated_Source\PSoC4/PWM.c **** 
 391              		.loc 1 416 0
 392 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 393              	.LVL23:
 418:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 394              		.loc 1 418 0
 395 0008 064A     		ldr	r2, .L25
 396 000a 074B     		ldr	r3, .L25+4
 397 000c 1168     		ldr	r1, [r2]
 423:.\Generated_Source\PSoC4/PWM.c **** 
 398              		.loc 1 423 0
 399              		@ sp needed
 418:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 400              		.loc 1 418 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 32


 401 000e 0B40     		and	r3, r1
 402 0010 1360     		str	r3, [r2]
 419:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 403              		.loc 1 419 0
 404 0012 0123     		mov	r3, #1
 405 0014 1168     		ldr	r1, [r2]
 406 0016 2340     		and	r3, r4
 407 0018 9B04     		lsl	r3, r3, #18
 408 001a 0B43     		orr	r3, r1
 409 001c 1360     		str	r3, [r2]
 422:.\Generated_Source\PSoC4/PWM.c **** }
 410              		.loc 1 422 0
 411 001e FFF7FEFF 		bl	CyExitCriticalSection
 412              	.LVL24:
 413              	.LVL25:
 423:.\Generated_Source\PSoC4/PWM.c **** 
 414              		.loc 1 423 0
 415 0022 10BD     		pop	{r4, pc}
 416              	.L26:
 417              		.align	2
 418              	.L25:
 419 0024 00010540 		.word	1074069760
 420 0028 FFFFFBFF 		.word	-262145
 421              		.cfi_endproc
 422              	.LFE7:
 423              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 424              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 425              		.align	1
 426              		.global	PWM_SetPWMMode
 427              		.code	16
 428              		.thumb_func
 429              		.type	PWM_SetPWMMode, %function
 430              	PWM_SetPWMMode:
 431              	.LFB8:
 467:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 432              		.loc 1 467 0
 433              		.cfi_startproc
 434              	.LVL26:
 468:.\Generated_Source\PSoC4/PWM.c **** }
 435              		.loc 1 468 0
 436 0000 3F23     		mov	r3, #63
 437 0002 1840     		and	r0, r3
 438              	.LVL27:
 439 0004 014B     		ldr	r3, .L28
 469:.\Generated_Source\PSoC4/PWM.c **** 
 440              		.loc 1 469 0
 441              		@ sp needed
 468:.\Generated_Source\PSoC4/PWM.c **** }
 442              		.loc 1 468 0
 443 0006 1860     		str	r0, [r3]
 469:.\Generated_Source\PSoC4/PWM.c **** 
 444              		.loc 1 469 0
 445 0008 7047     		bx	lr
 446              	.L29:
 447 000a C046     		.align	2
 448              	.L28:
 449 000c 28010540 		.word	1074069800
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 33


 450              		.cfi_endproc
 451              	.LFE8:
 452              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 453              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 454              		.align	1
 455              		.global	PWM_SetPWMSyncKill
 456              		.code	16
 457              		.thumb_func
 458              		.type	PWM_SetPWMSyncKill, %function
 459              	PWM_SetPWMSyncKill:
 460              	.LFB9:
 503:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 461              		.loc 1 503 0
 462              		.cfi_startproc
 463              	.LVL28:
 464 0000 10B5     		push	{r4, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 503:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 468              		.loc 1 503 0
 469 0002 041C     		mov	r4, r0
 506:.\Generated_Source\PSoC4/PWM.c **** 
 470              		.loc 1 506 0
 471 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 472              	.LVL29:
 508:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 473              		.loc 1 508 0
 474 0008 0421     		mov	r1, #4
 475 000a 064A     		ldr	r2, .L31
 513:.\Generated_Source\PSoC4/PWM.c **** 
 476              		.loc 1 513 0
 477              		@ sp needed
 508:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 478              		.loc 1 508 0
 479 000c 1368     		ldr	r3, [r2]
 480 000e 8B43     		bic	r3, r1
 481 0010 1360     		str	r3, [r2]
 509:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 482              		.loc 1 509 0
 483 0012 0123     		mov	r3, #1
 484 0014 1168     		ldr	r1, [r2]
 485 0016 2340     		and	r3, r4
 486 0018 9B00     		lsl	r3, r3, #2
 487 001a 0B43     		orr	r3, r1
 488 001c 1360     		str	r3, [r2]
 512:.\Generated_Source\PSoC4/PWM.c **** }
 489              		.loc 1 512 0
 490 001e FFF7FEFF 		bl	CyExitCriticalSection
 491              	.LVL30:
 492              	.LVL31:
 513:.\Generated_Source\PSoC4/PWM.c **** 
 493              		.loc 1 513 0
 494 0022 10BD     		pop	{r4, pc}
 495              	.L32:
 496              		.align	2
 497              	.L31:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 34


 498 0024 00010540 		.word	1074069760
 499              		.cfi_endproc
 500              	.LFE9:
 501              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 502              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 503              		.align	1
 504              		.global	PWM_SetPWMStopOnKill
 505              		.code	16
 506              		.thumb_func
 507              		.type	PWM_SetPWMStopOnKill, %function
 508              	PWM_SetPWMStopOnKill:
 509              	.LFB10:
 537:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 510              		.loc 1 537 0
 511              		.cfi_startproc
 512              	.LVL32:
 513 0000 10B5     		push	{r4, lr}
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 4, -8
 516              		.cfi_offset 14, -4
 537:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 517              		.loc 1 537 0
 518 0002 041C     		mov	r4, r0
 540:.\Generated_Source\PSoC4/PWM.c **** 
 519              		.loc 1 540 0
 520 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 521              	.LVL33:
 542:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 522              		.loc 1 542 0
 523 0008 0821     		mov	r1, #8
 524 000a 064A     		ldr	r2, .L34
 547:.\Generated_Source\PSoC4/PWM.c **** 
 525              		.loc 1 547 0
 526              		@ sp needed
 542:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 527              		.loc 1 542 0
 528 000c 1368     		ldr	r3, [r2]
 529 000e 8B43     		bic	r3, r1
 530 0010 1360     		str	r3, [r2]
 543:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 531              		.loc 1 543 0
 532 0012 0123     		mov	r3, #1
 533 0014 1168     		ldr	r1, [r2]
 534 0016 2340     		and	r3, r4
 535 0018 DB00     		lsl	r3, r3, #3
 536 001a 0B43     		orr	r3, r1
 537 001c 1360     		str	r3, [r2]
 546:.\Generated_Source\PSoC4/PWM.c **** }
 538              		.loc 1 546 0
 539 001e FFF7FEFF 		bl	CyExitCriticalSection
 540              	.LVL34:
 541              	.LVL35:
 547:.\Generated_Source\PSoC4/PWM.c **** 
 542              		.loc 1 547 0
 543 0022 10BD     		pop	{r4, pc}
 544              	.L35:
 545              		.align	2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 35


 546              	.L34:
 547 0024 00010540 		.word	1074069760
 548              		.cfi_endproc
 549              	.LFE10:
 550              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 551              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 552              		.align	1
 553              		.global	PWM_SetPWMDeadTime
 554              		.code	16
 555              		.thumb_func
 556              		.type	PWM_SetPWMDeadTime, %function
 557              	PWM_SetPWMDeadTime:
 558              	.LFB11:
 570:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 559              		.loc 1 570 0
 560              		.cfi_startproc
 561              	.LVL36:
 562 0000 10B5     		push	{r4, lr}
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 4, -8
 565              		.cfi_offset 14, -4
 570:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 566              		.loc 1 570 0
 567 0002 041C     		mov	r4, r0
 573:.\Generated_Source\PSoC4/PWM.c **** 
 568              		.loc 1 573 0
 569 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 570              	.LVL37:
 575:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 571              		.loc 1 575 0
 572 0008 064B     		ldr	r3, .L37
 573 000a 074A     		ldr	r2, .L37+4
 574 000c 1968     		ldr	r1, [r3]
 576:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 575              		.loc 1 576 0
 576 000e 2406     		lsl	r4, r4, #24
 577              	.LVL38:
 575:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 578              		.loc 1 575 0
 579 0010 0A40     		and	r2, r1
 580 0012 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 581              		.loc 1 576 0
 582 0014 1A68     		ldr	r2, [r3]
 583 0016 240C     		lsr	r4, r4, #16
 584 0018 1443     		orr	r4, r2
 585 001a 1C60     		str	r4, [r3]
 579:.\Generated_Source\PSoC4/PWM.c **** }
 586              		.loc 1 579 0
 587 001c FFF7FEFF 		bl	CyExitCriticalSection
 588              	.LVL39:
 580:.\Generated_Source\PSoC4/PWM.c **** 
 589              		.loc 1 580 0
 590              		@ sp needed
 591 0020 10BD     		pop	{r4, pc}
 592              	.L38:
 593 0022 C046     		.align	2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 36


 594              	.L37:
 595 0024 00010540 		.word	1074069760
 596 0028 FF00FFFF 		.word	-65281
 597              		.cfi_endproc
 598              	.LFE11:
 599              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 600              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 601              		.align	1
 602              		.global	PWM_SetPWMInvert
 603              		.code	16
 604              		.thumb_func
 605              		.type	PWM_SetPWMInvert, %function
 606              	PWM_SetPWMInvert:
 607              	.LFB12:
 603:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 608              		.loc 1 603 0
 609              		.cfi_startproc
 610              	.LVL40:
 611 0000 10B5     		push	{r4, lr}
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 4, -8
 614              		.cfi_offset 14, -4
 603:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 615              		.loc 1 603 0
 616 0002 041C     		mov	r4, r0
 606:.\Generated_Source\PSoC4/PWM.c **** 
 617              		.loc 1 606 0
 618 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 619              	.LVL41:
 608:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 620              		.loc 1 608 0
 621 0008 054B     		ldr	r3, .L40
 622 000a 064A     		ldr	r2, .L40+4
 623 000c 1968     		ldr	r1, [r3]
 612:.\Generated_Source\PSoC4/PWM.c **** 
 624              		.loc 1 612 0
 625              		@ sp needed
 608:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 626              		.loc 1 608 0
 627 000e 0A40     		and	r2, r1
 628 0010 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/PWM.c **** 
 629              		.loc 1 609 0
 630 0012 1A68     		ldr	r2, [r3]
 631 0014 2243     		orr	r2, r4
 632 0016 1A60     		str	r2, [r3]
 611:.\Generated_Source\PSoC4/PWM.c **** }
 633              		.loc 1 611 0
 634 0018 FFF7FEFF 		bl	CyExitCriticalSection
 635              	.LVL42:
 636              	.LVL43:
 612:.\Generated_Source\PSoC4/PWM.c **** 
 637              		.loc 1 612 0
 638 001c 10BD     		pop	{r4, pc}
 639              	.L41:
 640 001e C046     		.align	2
 641              	.L40:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 37


 642 0020 00010540 		.word	1074069760
 643 0024 FFFFCFFF 		.word	-3145729
 644              		.cfi_endproc
 645              	.LFE12:
 646              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 647              		.section	.text.PWM_WriteCounter,"ax",%progbits
 648              		.align	1
 649              		.global	PWM_WriteCounter
 650              		.code	16
 651              		.thumb_func
 652              		.type	PWM_WriteCounter, %function
 653              	PWM_WriteCounter:
 654              	.LFB13:
 633:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 655              		.loc 1 633 0
 656              		.cfi_startproc
 657              	.LVL44:
 634:.\Generated_Source\PSoC4/PWM.c **** }
 658              		.loc 1 634 0
 659 0000 014B     		ldr	r3, .L43
 660 0002 80B2     		uxth	r0, r0
 661              	.LVL45:
 662 0004 1860     		str	r0, [r3]
 635:.\Generated_Source\PSoC4/PWM.c **** 
 663              		.loc 1 635 0
 664              		@ sp needed
 665 0006 7047     		bx	lr
 666              	.L44:
 667              		.align	2
 668              	.L43:
 669 0008 08010540 		.word	1074069768
 670              		.cfi_endproc
 671              	.LFE13:
 672              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 673              		.section	.text.PWM_ReadCounter,"ax",%progbits
 674              		.align	1
 675              		.global	PWM_ReadCounter
 676              		.code	16
 677              		.thumb_func
 678              		.type	PWM_ReadCounter, %function
 679              	PWM_ReadCounter:
 680              	.LFB14:
 653:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 681              		.loc 1 653 0
 682              		.cfi_startproc
 654:.\Generated_Source\PSoC4/PWM.c **** }
 683              		.loc 1 654 0
 684 0000 014B     		ldr	r3, .L46
 655:.\Generated_Source\PSoC4/PWM.c **** 
 685              		.loc 1 655 0
 686              		@ sp needed
 654:.\Generated_Source\PSoC4/PWM.c **** }
 687              		.loc 1 654 0
 688 0002 1868     		ldr	r0, [r3]
 689 0004 80B2     		uxth	r0, r0
 655:.\Generated_Source\PSoC4/PWM.c **** 
 690              		.loc 1 655 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 38


 691 0006 7047     		bx	lr
 692              	.L47:
 693              		.align	2
 694              	.L46:
 695 0008 08010540 		.word	1074069768
 696              		.cfi_endproc
 697              	.LFE14:
 698              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 699              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 700              		.align	1
 701              		.global	PWM_SetCounterMode
 702              		.code	16
 703              		.thumb_func
 704              		.type	PWM_SetCounterMode, %function
 705              	PWM_SetCounterMode:
 706              	.LFB15:
 682:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 707              		.loc 1 682 0
 708              		.cfi_startproc
 709              	.LVL46:
 710 0000 10B5     		push	{r4, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 4, -8
 713              		.cfi_offset 14, -4
 682:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 714              		.loc 1 682 0
 715 0002 041C     		mov	r4, r0
 685:.\Generated_Source\PSoC4/PWM.c **** 
 716              		.loc 1 685 0
 717 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 718              	.LVL47:
 687:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 719              		.loc 1 687 0
 720 0008 054B     		ldr	r3, .L49
 721 000a 064A     		ldr	r2, .L49+4
 722 000c 1968     		ldr	r1, [r3]
 691:.\Generated_Source\PSoC4/PWM.c **** 
 723              		.loc 1 691 0
 724              		@ sp needed
 687:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 725              		.loc 1 687 0
 726 000e 0A40     		and	r2, r1
 727 0010 1A60     		str	r2, [r3]
 688:.\Generated_Source\PSoC4/PWM.c **** 
 728              		.loc 1 688 0
 729 0012 1A68     		ldr	r2, [r3]
 730 0014 2243     		orr	r2, r4
 731 0016 1A60     		str	r2, [r3]
 690:.\Generated_Source\PSoC4/PWM.c **** }
 732              		.loc 1 690 0
 733 0018 FFF7FEFF 		bl	CyExitCriticalSection
 734              	.LVL48:
 735              	.LVL49:
 691:.\Generated_Source\PSoC4/PWM.c **** 
 736              		.loc 1 691 0
 737 001c 10BD     		pop	{r4, pc}
 738              	.L50:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 39


 739 001e C046     		.align	2
 740              	.L49:
 741 0020 00010540 		.word	1074069760
 742 0024 FFFFFCFF 		.word	-196609
 743              		.cfi_endproc
 744              	.LFE15:
 745              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 746              		.section	.text.PWM_WritePeriod,"ax",%progbits
 747              		.align	1
 748              		.global	PWM_WritePeriod
 749              		.code	16
 750              		.thumb_func
 751              		.type	PWM_WritePeriod, %function
 752              	PWM_WritePeriod:
 753              	.LFB16:
 711:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 754              		.loc 1 711 0
 755              		.cfi_startproc
 756              	.LVL50:
 712:.\Generated_Source\PSoC4/PWM.c **** }
 757              		.loc 1 712 0
 758 0000 014B     		ldr	r3, .L52
 759 0002 80B2     		uxth	r0, r0
 760              	.LVL51:
 761 0004 1860     		str	r0, [r3]
 713:.\Generated_Source\PSoC4/PWM.c **** 
 762              		.loc 1 713 0
 763              		@ sp needed
 764 0006 7047     		bx	lr
 765              	.L53:
 766              		.align	2
 767              	.L52:
 768 0008 14010540 		.word	1074069780
 769              		.cfi_endproc
 770              	.LFE16:
 771              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 772              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 773              		.align	1
 774              		.global	PWM_ReadPeriod
 775              		.code	16
 776              		.thumb_func
 777              		.type	PWM_ReadPeriod, %function
 778              	PWM_ReadPeriod:
 779              	.LFB17:
 731:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 780              		.loc 1 731 0
 781              		.cfi_startproc
 732:.\Generated_Source\PSoC4/PWM.c **** }
 782              		.loc 1 732 0
 783 0000 014B     		ldr	r3, .L55
 733:.\Generated_Source\PSoC4/PWM.c **** 
 784              		.loc 1 733 0
 785              		@ sp needed
 732:.\Generated_Source\PSoC4/PWM.c **** }
 786              		.loc 1 732 0
 787 0002 1868     		ldr	r0, [r3]
 788 0004 80B2     		uxth	r0, r0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 40


 733:.\Generated_Source\PSoC4/PWM.c **** 
 789              		.loc 1 733 0
 790 0006 7047     		bx	lr
 791              	.L56:
 792              		.align	2
 793              	.L55:
 794 0008 14010540 		.word	1074069780
 795              		.cfi_endproc
 796              	.LFE17:
 797              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 798              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 799              		.align	1
 800              		.global	PWM_SetCompareSwap
 801              		.code	16
 802              		.thumb_func
 803              		.type	PWM_SetCompareSwap, %function
 804              	PWM_SetCompareSwap:
 805              	.LFB18:
 757:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 806              		.loc 1 757 0
 807              		.cfi_startproc
 808              	.LVL52:
 809 0000 10B5     		push	{r4, lr}
 810              		.cfi_def_cfa_offset 8
 811              		.cfi_offset 4, -8
 812              		.cfi_offset 14, -4
 757:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 813              		.loc 1 757 0
 814 0002 041C     		mov	r4, r0
 760:.\Generated_Source\PSoC4/PWM.c **** 
 815              		.loc 1 760 0
 816 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 817              	.LVL53:
 762:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 818              		.loc 1 762 0
 819 0008 0122     		mov	r2, #1
 820 000a 054B     		ldr	r3, .L58
 766:.\Generated_Source\PSoC4/PWM.c **** 
 821              		.loc 1 766 0
 822              		@ sp needed
 762:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 823              		.loc 1 762 0
 824 000c 1968     		ldr	r1, [r3]
 825 000e 9143     		bic	r1, r2
 826 0010 1960     		str	r1, [r3]
 763:.\Generated_Source\PSoC4/PWM.c **** 
 827              		.loc 1 763 0
 828 0012 1968     		ldr	r1, [r3]
 829 0014 2240     		and	r2, r4
 830 0016 0A43     		orr	r2, r1
 831 0018 1A60     		str	r2, [r3]
 765:.\Generated_Source\PSoC4/PWM.c **** }
 832              		.loc 1 765 0
 833 001a FFF7FEFF 		bl	CyExitCriticalSection
 834              	.LVL54:
 835              	.LVL55:
 766:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 41


 836              		.loc 1 766 0
 837 001e 10BD     		pop	{r4, pc}
 838              	.L59:
 839              		.align	2
 840              	.L58:
 841 0020 00010540 		.word	1074069760
 842              		.cfi_endproc
 843              	.LFE18:
 844              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 845              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 846              		.align	1
 847              		.global	PWM_WritePeriodBuf
 848              		.code	16
 849              		.thumb_func
 850              		.type	PWM_WritePeriodBuf, %function
 851              	PWM_WritePeriodBuf:
 852              	.LFB19:
 784:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 853              		.loc 1 784 0
 854              		.cfi_startproc
 855              	.LVL56:
 785:.\Generated_Source\PSoC4/PWM.c **** }
 856              		.loc 1 785 0
 857 0000 014B     		ldr	r3, .L61
 858 0002 80B2     		uxth	r0, r0
 859              	.LVL57:
 860 0004 1860     		str	r0, [r3]
 786:.\Generated_Source\PSoC4/PWM.c **** 
 861              		.loc 1 786 0
 862              		@ sp needed
 863 0006 7047     		bx	lr
 864              	.L62:
 865              		.align	2
 866              	.L61:
 867 0008 18010540 		.word	1074069784
 868              		.cfi_endproc
 869              	.LFE19:
 870              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 871              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 872              		.align	1
 873              		.global	PWM_ReadPeriodBuf
 874              		.code	16
 875              		.thumb_func
 876              		.type	PWM_ReadPeriodBuf, %function
 877              	PWM_ReadPeriodBuf:
 878              	.LFB20:
 804:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 879              		.loc 1 804 0
 880              		.cfi_startproc
 805:.\Generated_Source\PSoC4/PWM.c **** }
 881              		.loc 1 805 0
 882 0000 014B     		ldr	r3, .L64
 806:.\Generated_Source\PSoC4/PWM.c **** 
 883              		.loc 1 806 0
 884              		@ sp needed
 805:.\Generated_Source\PSoC4/PWM.c **** }
 885              		.loc 1 805 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 42


 886 0002 1868     		ldr	r0, [r3]
 887 0004 80B2     		uxth	r0, r0
 806:.\Generated_Source\PSoC4/PWM.c **** 
 888              		.loc 1 806 0
 889 0006 7047     		bx	lr
 890              	.L65:
 891              		.align	2
 892              	.L64:
 893 0008 18010540 		.word	1074069784
 894              		.cfi_endproc
 895              	.LFE20:
 896              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 897              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 898              		.align	1
 899              		.global	PWM_SetPeriodSwap
 900              		.code	16
 901              		.thumb_func
 902              		.type	PWM_SetPeriodSwap, %function
 903              	PWM_SetPeriodSwap:
 904              	.LFB21:
 830:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 905              		.loc 1 830 0
 906              		.cfi_startproc
 907              	.LVL58:
 908 0000 10B5     		push	{r4, lr}
 909              		.cfi_def_cfa_offset 8
 910              		.cfi_offset 4, -8
 911              		.cfi_offset 14, -4
 830:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 912              		.loc 1 830 0
 913 0002 041C     		mov	r4, r0
 833:.\Generated_Source\PSoC4/PWM.c **** 
 914              		.loc 1 833 0
 915 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 916              	.LVL59:
 835:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 917              		.loc 1 835 0
 918 0008 0221     		mov	r1, #2
 919 000a 064A     		ldr	r2, .L67
 840:.\Generated_Source\PSoC4/PWM.c **** 
 920              		.loc 1 840 0
 921              		@ sp needed
 835:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 922              		.loc 1 835 0
 923 000c 1368     		ldr	r3, [r2]
 924 000e 8B43     		bic	r3, r1
 925 0010 1360     		str	r3, [r2]
 836:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 926              		.loc 1 836 0
 927 0012 0123     		mov	r3, #1
 928 0014 1168     		ldr	r1, [r2]
 929 0016 2340     		and	r3, r4
 930 0018 5B00     		lsl	r3, r3, #1
 931 001a 0B43     		orr	r3, r1
 932 001c 1360     		str	r3, [r2]
 839:.\Generated_Source\PSoC4/PWM.c **** }
 933              		.loc 1 839 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 43


 934 001e FFF7FEFF 		bl	CyExitCriticalSection
 935              	.LVL60:
 936              	.LVL61:
 840:.\Generated_Source\PSoC4/PWM.c **** 
 937              		.loc 1 840 0
 938 0022 10BD     		pop	{r4, pc}
 939              	.L68:
 940              		.align	2
 941              	.L67:
 942 0024 00010540 		.word	1074069760
 943              		.cfi_endproc
 944              	.LFE21:
 945              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 946              		.section	.text.PWM_WriteCompare,"ax",%progbits
 947              		.align	1
 948              		.global	PWM_WriteCompare
 949              		.code	16
 950              		.thumb_func
 951              		.type	PWM_WriteCompare, %function
 952              	PWM_WriteCompare:
 953              	.LFB22:
 859:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 954              		.loc 1 859 0
 955              		.cfi_startproc
 956              	.LVL62:
 880:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 957              		.loc 1 880 0
 958 0000 014B     		ldr	r3, .L70
 959 0002 80B2     		uxth	r0, r0
 960              	.LVL63:
 961 0004 1860     		str	r0, [r3]
 882:.\Generated_Source\PSoC4/PWM.c **** 
 962              		.loc 1 882 0
 963              		@ sp needed
 964 0006 7047     		bx	lr
 965              	.L71:
 966              		.align	2
 967              	.L70:
 968 0008 0C010540 		.word	1074069772
 969              		.cfi_endproc
 970              	.LFE22:
 971              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 972              		.section	.text.PWM_ReadCompare,"ax",%progbits
 973              		.align	1
 974              		.global	PWM_ReadCompare
 975              		.code	16
 976              		.thumb_func
 977              		.type	PWM_ReadCompare, %function
 978              	PWM_ReadCompare:
 979              	.LFB23:
 901:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 980              		.loc 1 901 0
 981              		.cfi_startproc
 924:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 982              		.loc 1 924 0
 983 0000 014B     		ldr	r3, .L73
 926:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 44


 984              		.loc 1 926 0
 985              		@ sp needed
 924:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 986              		.loc 1 924 0
 987 0002 1868     		ldr	r0, [r3]
 988 0004 80B2     		uxth	r0, r0
 926:.\Generated_Source\PSoC4/PWM.c **** 
 989              		.loc 1 926 0
 990 0006 7047     		bx	lr
 991              	.L74:
 992              		.align	2
 993              	.L73:
 994 0008 0C010540 		.word	1074069772
 995              		.cfi_endproc
 996              	.LFE23:
 997              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 998              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 999              		.align	1
 1000              		.global	PWM_WriteCompareBuf
 1001              		.code	16
 1002              		.thumb_func
 1003              		.type	PWM_WriteCompareBuf, %function
 1004              	PWM_WriteCompareBuf:
 1005              	.LFB24:
 945:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 1006              		.loc 1 945 0
 1007              		.cfi_startproc
 1008              	.LVL64:
 966:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 1009              		.loc 1 966 0
 1010 0000 014B     		ldr	r3, .L76
 1011 0002 80B2     		uxth	r0, r0
 1012              	.LVL65:
 1013 0004 1860     		str	r0, [r3]
 968:.\Generated_Source\PSoC4/PWM.c **** 
 1014              		.loc 1 968 0
 1015              		@ sp needed
 1016 0006 7047     		bx	lr
 1017              	.L77:
 1018              		.align	2
 1019              	.L76:
 1020 0008 10010540 		.word	1074069776
 1021              		.cfi_endproc
 1022              	.LFE24:
 1023              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 1024              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1025              		.align	1
 1026              		.global	PWM_ReadCompareBuf
 1027              		.code	16
 1028              		.thumb_func
 1029              		.type	PWM_ReadCompareBuf, %function
 1030              	PWM_ReadCompareBuf:
 1031              	.LFB25:
 987:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 1032              		.loc 1 987 0
 1033              		.cfi_startproc
1010:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 45


 1034              		.loc 1 1010 0
 1035 0000 014B     		ldr	r3, .L79
1012:.\Generated_Source\PSoC4/PWM.c **** 
 1036              		.loc 1 1012 0
 1037              		@ sp needed
1010:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 1038              		.loc 1 1010 0
 1039 0002 1868     		ldr	r0, [r3]
 1040 0004 80B2     		uxth	r0, r0
1012:.\Generated_Source\PSoC4/PWM.c **** 
 1041              		.loc 1 1012 0
 1042 0006 7047     		bx	lr
 1043              	.L80:
 1044              		.align	2
 1045              	.L79:
 1046 0008 10010540 		.word	1074069776
 1047              		.cfi_endproc
 1048              	.LFE25:
 1049              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1050              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1051              		.align	1
 1052              		.global	PWM_ReadCapture
 1053              		.code	16
 1054              		.thumb_func
 1055              		.type	PWM_ReadCapture, %function
 1056              	PWM_ReadCapture:
 1057              	.LFB26:
1031:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1058              		.loc 1 1031 0
 1059              		.cfi_startproc
1032:.\Generated_Source\PSoC4/PWM.c **** }
 1060              		.loc 1 1032 0
 1061 0000 014B     		ldr	r3, .L82
1033:.\Generated_Source\PSoC4/PWM.c **** 
 1062              		.loc 1 1033 0
 1063              		@ sp needed
1032:.\Generated_Source\PSoC4/PWM.c **** }
 1064              		.loc 1 1032 0
 1065 0002 1868     		ldr	r0, [r3]
 1066 0004 80B2     		uxth	r0, r0
1033:.\Generated_Source\PSoC4/PWM.c **** 
 1067              		.loc 1 1033 0
 1068 0006 7047     		bx	lr
 1069              	.L83:
 1070              		.align	2
 1071              	.L82:
 1072 0008 0C010540 		.word	1074069772
 1073              		.cfi_endproc
 1074              	.LFE26:
 1075              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1076              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1077              		.align	1
 1078              		.global	PWM_ReadCaptureBuf
 1079              		.code	16
 1080              		.thumb_func
 1081              		.type	PWM_ReadCaptureBuf, %function
 1082              	PWM_ReadCaptureBuf:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 46


 1083              	.LFB27:
1052:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1084              		.loc 1 1052 0
 1085              		.cfi_startproc
1053:.\Generated_Source\PSoC4/PWM.c **** }
 1086              		.loc 1 1053 0
 1087 0000 014B     		ldr	r3, .L85
1054:.\Generated_Source\PSoC4/PWM.c **** 
 1088              		.loc 1 1054 0
 1089              		@ sp needed
1053:.\Generated_Source\PSoC4/PWM.c **** }
 1090              		.loc 1 1053 0
 1091 0002 1868     		ldr	r0, [r3]
 1092 0004 80B2     		uxth	r0, r0
1054:.\Generated_Source\PSoC4/PWM.c **** 
 1093              		.loc 1 1054 0
 1094 0006 7047     		bx	lr
 1095              	.L86:
 1096              		.align	2
 1097              	.L85:
 1098 0008 10010540 		.word	1074069776
 1099              		.cfi_endproc
 1100              	.LFE27:
 1101              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1102              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1103              		.align	1
 1104              		.global	PWM_SetCaptureMode
 1105              		.code	16
 1106              		.thumb_func
 1107              		.type	PWM_SetCaptureMode, %function
 1108              	PWM_SetCaptureMode:
 1109              	.LFB28:
1079:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1110              		.loc 1 1079 0
 1111              		.cfi_startproc
 1112              	.LVL66:
 1113 0000 10B5     		push	{r4, lr}
 1114              		.cfi_def_cfa_offset 8
 1115              		.cfi_offset 4, -8
 1116              		.cfi_offset 14, -4
1079:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1117              		.loc 1 1079 0
 1118 0002 041C     		mov	r4, r0
1082:.\Generated_Source\PSoC4/PWM.c **** 
 1119              		.loc 1 1082 0
 1120 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1121              	.LVL67:
1084:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1122              		.loc 1 1084 0
 1123 0008 0321     		mov	r1, #3
 1124 000a 054B     		ldr	r3, .L88
1088:.\Generated_Source\PSoC4/PWM.c **** 
 1125              		.loc 1 1088 0
 1126              		@ sp needed
1084:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1127              		.loc 1 1084 0
 1128 000c 1A68     		ldr	r2, [r3]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 47


 1129 000e 8A43     		bic	r2, r1
 1130 0010 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/PWM.c **** 
 1131              		.loc 1 1085 0
 1132 0012 1A68     		ldr	r2, [r3]
 1133 0014 2243     		orr	r2, r4
 1134 0016 1A60     		str	r2, [r3]
1087:.\Generated_Source\PSoC4/PWM.c **** }
 1135              		.loc 1 1087 0
 1136 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1137              	.LVL68:
 1138              	.LVL69:
1088:.\Generated_Source\PSoC4/PWM.c **** 
 1139              		.loc 1 1088 0
 1140 001c 10BD     		pop	{r4, pc}
 1141              	.L89:
 1142 001e C046     		.align	2
 1143              	.L88:
 1144 0020 24010540 		.word	1074069796
 1145              		.cfi_endproc
 1146              	.LFE28:
 1147              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1148              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1149              		.align	1
 1150              		.global	PWM_SetReloadMode
 1151              		.code	16
 1152              		.thumb_func
 1153              		.type	PWM_SetReloadMode, %function
 1154              	PWM_SetReloadMode:
 1155              	.LFB29:
1112:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1156              		.loc 1 1112 0
 1157              		.cfi_startproc
 1158              	.LVL70:
 1159 0000 10B5     		push	{r4, lr}
 1160              		.cfi_def_cfa_offset 8
 1161              		.cfi_offset 4, -8
 1162              		.cfi_offset 14, -4
1112:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1163              		.loc 1 1112 0
 1164 0002 041C     		mov	r4, r0
1115:.\Generated_Source\PSoC4/PWM.c **** 
 1165              		.loc 1 1115 0
 1166 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1167              	.LVL71:
1117:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1168              		.loc 1 1117 0
 1169 0008 3021     		mov	r1, #48
 1170 000a 054B     		ldr	r3, .L91
1121:.\Generated_Source\PSoC4/PWM.c **** 
 1171              		.loc 1 1121 0
 1172              		@ sp needed
1117:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1173              		.loc 1 1117 0
 1174 000c 1A68     		ldr	r2, [r3]
 1175 000e 8A43     		bic	r2, r1
 1176 0010 1A60     		str	r2, [r3]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 48


1118:.\Generated_Source\PSoC4/PWM.c **** 
 1177              		.loc 1 1118 0
 1178 0012 1968     		ldr	r1, [r3]
 1179 0014 2201     		lsl	r2, r4, #4
 1180 0016 0A43     		orr	r2, r1
 1181 0018 1A60     		str	r2, [r3]
1120:.\Generated_Source\PSoC4/PWM.c **** }
 1182              		.loc 1 1120 0
 1183 001a FFF7FEFF 		bl	CyExitCriticalSection
 1184              	.LVL72:
 1185              	.LVL73:
1121:.\Generated_Source\PSoC4/PWM.c **** 
 1186              		.loc 1 1121 0
 1187 001e 10BD     		pop	{r4, pc}
 1188              	.L92:
 1189              		.align	2
 1190              	.L91:
 1191 0020 24010540 		.word	1074069796
 1192              		.cfi_endproc
 1193              	.LFE29:
 1194              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1195              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1196              		.align	1
 1197              		.global	PWM_SetStartMode
 1198              		.code	16
 1199              		.thumb_func
 1200              		.type	PWM_SetStartMode, %function
 1201              	PWM_SetStartMode:
 1202              	.LFB30:
1145:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1203              		.loc 1 1145 0
 1204              		.cfi_startproc
 1205              	.LVL74:
 1206 0000 10B5     		push	{r4, lr}
 1207              		.cfi_def_cfa_offset 8
 1208              		.cfi_offset 4, -8
 1209              		.cfi_offset 14, -4
1145:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1210              		.loc 1 1145 0
 1211 0002 041C     		mov	r4, r0
1148:.\Generated_Source\PSoC4/PWM.c **** 
 1212              		.loc 1 1148 0
 1213 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1214              	.LVL75:
1150:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1215              		.loc 1 1150 0
 1216 0008 054B     		ldr	r3, .L94
 1217 000a 064A     		ldr	r2, .L94+4
 1218 000c 1968     		ldr	r1, [r3]
1154:.\Generated_Source\PSoC4/PWM.c **** 
 1219              		.loc 1 1154 0
 1220              		@ sp needed
1150:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1221              		.loc 1 1150 0
 1222 000e 0A40     		and	r2, r1
 1223 0010 1A60     		str	r2, [r3]
1151:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 49


 1224              		.loc 1 1151 0
 1225 0012 1968     		ldr	r1, [r3]
 1226 0014 2202     		lsl	r2, r4, #8
 1227 0016 0A43     		orr	r2, r1
 1228 0018 1A60     		str	r2, [r3]
1153:.\Generated_Source\PSoC4/PWM.c **** }
 1229              		.loc 1 1153 0
 1230 001a FFF7FEFF 		bl	CyExitCriticalSection
 1231              	.LVL76:
 1232              	.LVL77:
1154:.\Generated_Source\PSoC4/PWM.c **** 
 1233              		.loc 1 1154 0
 1234 001e 10BD     		pop	{r4, pc}
 1235              	.L95:
 1236              		.align	2
 1237              	.L94:
 1238 0020 24010540 		.word	1074069796
 1239 0024 FFFCFFFF 		.word	-769
 1240              		.cfi_endproc
 1241              	.LFE30:
 1242              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1243              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1244              		.align	1
 1245              		.global	PWM_SetStopMode
 1246              		.code	16
 1247              		.thumb_func
 1248              		.type	PWM_SetStopMode, %function
 1249              	PWM_SetStopMode:
 1250              	.LFB31:
1177:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1251              		.loc 1 1177 0
 1252              		.cfi_startproc
 1253              	.LVL78:
 1254 0000 10B5     		push	{r4, lr}
 1255              		.cfi_def_cfa_offset 8
 1256              		.cfi_offset 4, -8
 1257              		.cfi_offset 14, -4
1177:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1258              		.loc 1 1177 0
 1259 0002 041C     		mov	r4, r0
1180:.\Generated_Source\PSoC4/PWM.c **** 
 1260              		.loc 1 1180 0
 1261 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1262              	.LVL79:
1182:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1263              		.loc 1 1182 0
 1264 0008 C021     		mov	r1, #192
 1265 000a 054B     		ldr	r3, .L97
1186:.\Generated_Source\PSoC4/PWM.c **** 
 1266              		.loc 1 1186 0
 1267              		@ sp needed
1182:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1268              		.loc 1 1182 0
 1269 000c 1A68     		ldr	r2, [r3]
 1270 000e 8A43     		bic	r2, r1
 1271 0010 1A60     		str	r2, [r3]
1183:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 50


 1272              		.loc 1 1183 0
 1273 0012 1968     		ldr	r1, [r3]
 1274 0014 A201     		lsl	r2, r4, #6
 1275 0016 0A43     		orr	r2, r1
 1276 0018 1A60     		str	r2, [r3]
1185:.\Generated_Source\PSoC4/PWM.c **** }
 1277              		.loc 1 1185 0
 1278 001a FFF7FEFF 		bl	CyExitCriticalSection
 1279              	.LVL80:
 1280              	.LVL81:
1186:.\Generated_Source\PSoC4/PWM.c **** 
 1281              		.loc 1 1186 0
 1282 001e 10BD     		pop	{r4, pc}
 1283              	.L98:
 1284              		.align	2
 1285              	.L97:
 1286 0020 24010540 		.word	1074069796
 1287              		.cfi_endproc
 1288              	.LFE31:
 1289              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1290              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1291              		.align	1
 1292              		.global	PWM_SetCountMode
 1293              		.code	16
 1294              		.thumb_func
 1295              		.type	PWM_SetCountMode, %function
 1296              	PWM_SetCountMode:
 1297              	.LFB32:
1210:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1298              		.loc 1 1210 0
 1299              		.cfi_startproc
 1300              	.LVL82:
 1301 0000 10B5     		push	{r4, lr}
 1302              		.cfi_def_cfa_offset 8
 1303              		.cfi_offset 4, -8
 1304              		.cfi_offset 14, -4
1210:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1305              		.loc 1 1210 0
 1306 0002 041C     		mov	r4, r0
1213:.\Generated_Source\PSoC4/PWM.c **** 
 1307              		.loc 1 1213 0
 1308 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1309              	.LVL83:
1215:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1310              		.loc 1 1215 0
 1311 0008 0C21     		mov	r1, #12
 1312 000a 054B     		ldr	r3, .L100
1219:.\Generated_Source\PSoC4/PWM.c **** 
 1313              		.loc 1 1219 0
 1314              		@ sp needed
1215:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1315              		.loc 1 1215 0
 1316 000c 1A68     		ldr	r2, [r3]
 1317 000e 8A43     		bic	r2, r1
 1318 0010 1A60     		str	r2, [r3]
1216:.\Generated_Source\PSoC4/PWM.c **** 
 1319              		.loc 1 1216 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 51


 1320 0012 1968     		ldr	r1, [r3]
 1321 0014 A200     		lsl	r2, r4, #2
 1322 0016 0A43     		orr	r2, r1
 1323 0018 1A60     		str	r2, [r3]
1218:.\Generated_Source\PSoC4/PWM.c **** }
 1324              		.loc 1 1218 0
 1325 001a FFF7FEFF 		bl	CyExitCriticalSection
 1326              	.LVL84:
 1327              	.LVL85:
1219:.\Generated_Source\PSoC4/PWM.c **** 
 1328              		.loc 1 1219 0
 1329 001e 10BD     		pop	{r4, pc}
 1330              	.L101:
 1331              		.align	2
 1332              	.L100:
 1333 0020 24010540 		.word	1074069796
 1334              		.cfi_endproc
 1335              	.LFE32:
 1336              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1337              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1338              		.align	1
 1339              		.global	PWM_TriggerCommand
 1340              		.code	16
 1341              		.thumb_func
 1342              		.type	PWM_TriggerCommand, %function
 1343              	PWM_TriggerCommand:
 1344              	.LFB33:
1250:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1345              		.loc 1 1250 0
 1346              		.cfi_startproc
 1347              	.LVL86:
 1348 0000 38B5     		push	{r3, r4, r5, lr}
 1349              		.cfi_def_cfa_offset 16
 1350              		.cfi_offset 3, -16
 1351              		.cfi_offset 4, -12
 1352              		.cfi_offset 5, -8
 1353              		.cfi_offset 14, -4
1250:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1354              		.loc 1 1250 0
 1355 0002 0D1C     		mov	r5, r1
 1356 0004 041C     		mov	r4, r0
1255:.\Generated_Source\PSoC4/PWM.c **** 
 1357              		.loc 1 1255 0
 1358 0006 AC40     		lsl	r4, r4, r5
1253:.\Generated_Source\PSoC4/PWM.c **** 
 1359              		.loc 1 1253 0
 1360 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1361              	.LVL87:
1255:.\Generated_Source\PSoC4/PWM.c **** 
 1362              		.loc 1 1255 0
 1363 000c 024B     		ldr	r3, .L103
1258:.\Generated_Source\PSoC4/PWM.c **** 
 1364              		.loc 1 1258 0
 1365              		@ sp needed
1255:.\Generated_Source\PSoC4/PWM.c **** 
 1366              		.loc 1 1255 0
 1367 000e 1C60     		str	r4, [r3]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 52


1257:.\Generated_Source\PSoC4/PWM.c **** }
 1368              		.loc 1 1257 0
 1369 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1370              	.LVL88:
 1371              	.LVL89:
1258:.\Generated_Source\PSoC4/PWM.c **** 
 1372              		.loc 1 1258 0
 1373 0014 38BD     		pop	{r3, r4, r5, pc}
 1374              	.L104:
 1375 0016 C046     		.align	2
 1376              	.L103:
 1377 0018 08000540 		.word	1074069512
 1378              		.cfi_endproc
 1379              	.LFE33:
 1380              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1381              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1382              		.align	1
 1383              		.global	PWM_ReadStatus
 1384              		.code	16
 1385              		.thumb_func
 1386              		.type	PWM_ReadStatus, %function
 1387              	PWM_ReadStatus:
 1388              	.LFB34:
1279:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1389              		.loc 1 1279 0
 1390              		.cfi_startproc
1280:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1391              		.loc 1 1280 0
 1392 0000 034A     		ldr	r2, .L106
1282:.\Generated_Source\PSoC4/PWM.c **** 
 1393              		.loc 1 1282 0
 1394              		@ sp needed
1280:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1395              		.loc 1 1280 0
 1396 0002 1368     		ldr	r3, [r2]
1281:.\Generated_Source\PSoC4/PWM.c **** }
 1397              		.loc 1 1281 0
 1398 0004 1068     		ldr	r0, [r2]
 1399 0006 0122     		mov	r2, #1
1280:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1400              		.loc 1 1280 0
 1401 0008 9B0F     		lsr	r3, r3, #30
1281:.\Generated_Source\PSoC4/PWM.c **** }
 1402              		.loc 1 1281 0
 1403 000a 1040     		and	r0, r2
1280:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1404              		.loc 1 1280 0
 1405 000c 1843     		orr	r0, r3
1282:.\Generated_Source\PSoC4/PWM.c **** 
 1406              		.loc 1 1282 0
 1407 000e 7047     		bx	lr
 1408              	.L107:
 1409              		.align	2
 1410              	.L106:
 1411 0010 04010540 		.word	1074069764
 1412              		.cfi_endproc
 1413              	.LFE34:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 53


 1414              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1415              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1416              		.align	1
 1417              		.global	PWM_SetInterruptMode
 1418              		.code	16
 1419              		.thumb_func
 1420              		.type	PWM_SetInterruptMode, %function
 1421              	PWM_SetInterruptMode:
 1422              	.LFB35:
1304:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1423              		.loc 1 1304 0
 1424              		.cfi_startproc
 1425              	.LVL90:
 1426              		.loc 1 1305 0
 1427 0000 014B     		ldr	r3, .L109
1306:.\Generated_Source\PSoC4/PWM.c **** }
 1428              		.loc 1 1306 0
 1429              		@ sp needed
1305:.\Generated_Source\PSoC4/PWM.c **** }
 1430              		.loc 1 1305 0
 1431 0002 1860     		str	r0, [r3]
 1432              		.loc 1 1306 0
 1433 0004 7047     		bx	lr
 1434              	.L110:
 1435 0006 C046     		.align	2
 1436              	.L109:
 1437 0008 38010540 		.word	1074069816
 1438              		.cfi_endproc
 1439              	.LFE35:
 1440              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1441              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1442              		.align	1
 1443              		.global	PWM_GetInterruptSourceMasked
 1444              		.code	16
 1445              		.thumb_func
 1446              		.type	PWM_GetInterruptSourceMasked, %function
 1447              	PWM_GetInterruptSourceMasked:
 1448              	.LFB36:
1307:.\Generated_Source\PSoC4/PWM.c **** 
1308:.\Generated_Source\PSoC4/PWM.c **** 
1309:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1310:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1311:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1312:.\Generated_Source\PSoC4/PWM.c **** *
1313:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1314:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1315:.\Generated_Source\PSoC4/PWM.c **** *
1316:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1317:.\Generated_Source\PSoC4/PWM.c **** *   None
1318:.\Generated_Source\PSoC4/PWM.c **** *
1319:.\Generated_Source\PSoC4/PWM.c **** * Return:
1320:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1321:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1322:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1323:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1324:.\Generated_Source\PSoC4/PWM.c **** *
1325:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 54


1326:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1327:.\Generated_Source\PSoC4/PWM.c **** {
 1449              		.loc 1 1327 0
 1450              		.cfi_startproc
1328:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1451              		.loc 1 1328 0
 1452 0000 014B     		ldr	r3, .L112
1329:.\Generated_Source\PSoC4/PWM.c **** }
 1453              		.loc 1 1329 0
 1454              		@ sp needed
1328:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1455              		.loc 1 1328 0
 1456 0002 1868     		ldr	r0, [r3]
 1457              		.loc 1 1329 0
 1458 0004 7047     		bx	lr
 1459              	.L113:
 1460 0006 C046     		.align	2
 1461              	.L112:
 1462 0008 3C010540 		.word	1074069820
 1463              		.cfi_endproc
 1464              	.LFE36:
 1465              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1466              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1467              		.align	1
 1468              		.global	PWM_GetInterruptSource
 1469              		.code	16
 1470              		.thumb_func
 1471              		.type	PWM_GetInterruptSource, %function
 1472              	PWM_GetInterruptSource:
 1473              	.LFB37:
1330:.\Generated_Source\PSoC4/PWM.c **** 
1331:.\Generated_Source\PSoC4/PWM.c **** 
1332:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1333:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1334:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1335:.\Generated_Source\PSoC4/PWM.c **** *
1336:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1337:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1338:.\Generated_Source\PSoC4/PWM.c **** *
1339:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1340:.\Generated_Source\PSoC4/PWM.c **** *  None
1341:.\Generated_Source\PSoC4/PWM.c **** *
1342:.\Generated_Source\PSoC4/PWM.c **** * Return:
1343:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1344:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1345:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1346:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1347:.\Generated_Source\PSoC4/PWM.c **** *
1348:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1349:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1350:.\Generated_Source\PSoC4/PWM.c **** {
 1474              		.loc 1 1350 0
 1475              		.cfi_startproc
1351:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1476              		.loc 1 1351 0
 1477 0000 014B     		ldr	r3, .L115
1352:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 55


 1478              		.loc 1 1352 0
 1479              		@ sp needed
1351:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1480              		.loc 1 1351 0
 1481 0002 1868     		ldr	r0, [r3]
 1482              		.loc 1 1352 0
 1483 0004 7047     		bx	lr
 1484              	.L116:
 1485 0006 C046     		.align	2
 1486              	.L115:
 1487 0008 30010540 		.word	1074069808
 1488              		.cfi_endproc
 1489              	.LFE37:
 1490              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1491              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1492              		.align	1
 1493              		.global	PWM_ClearInterrupt
 1494              		.code	16
 1495              		.thumb_func
 1496              		.type	PWM_ClearInterrupt, %function
 1497              	PWM_ClearInterrupt:
 1498              	.LFB38:
1353:.\Generated_Source\PSoC4/PWM.c **** 
1354:.\Generated_Source\PSoC4/PWM.c **** 
1355:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1357:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1358:.\Generated_Source\PSoC4/PWM.c **** *
1359:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1360:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1361:.\Generated_Source\PSoC4/PWM.c **** *
1362:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1363:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1364:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1365:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1366:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1367:.\Generated_Source\PSoC4/PWM.c **** *
1368:.\Generated_Source\PSoC4/PWM.c **** * Return:
1369:.\Generated_Source\PSoC4/PWM.c **** *  None
1370:.\Generated_Source\PSoC4/PWM.c **** *
1371:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1372:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1373:.\Generated_Source\PSoC4/PWM.c **** {
 1499              		.loc 1 1373 0
 1500              		.cfi_startproc
 1501              	.LVL91:
1374:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1502              		.loc 1 1374 0
 1503 0000 014B     		ldr	r3, .L118
1375:.\Generated_Source\PSoC4/PWM.c **** }
 1504              		.loc 1 1375 0
 1505              		@ sp needed
1374:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1506              		.loc 1 1374 0
 1507 0002 1860     		str	r0, [r3]
 1508              		.loc 1 1375 0
 1509 0004 7047     		bx	lr
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 56


 1510              	.L119:
 1511 0006 C046     		.align	2
 1512              	.L118:
 1513 0008 30010540 		.word	1074069808
 1514              		.cfi_endproc
 1515              	.LFE38:
 1516              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1517              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1518              		.align	1
 1519              		.global	PWM_SetInterrupt
 1520              		.code	16
 1521              		.thumb_func
 1522              		.type	PWM_SetInterrupt, %function
 1523              	PWM_SetInterrupt:
 1524              	.LFB39:
1376:.\Generated_Source\PSoC4/PWM.c **** 
1377:.\Generated_Source\PSoC4/PWM.c **** 
1378:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1379:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1380:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1381:.\Generated_Source\PSoC4/PWM.c **** *
1382:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1383:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1384:.\Generated_Source\PSoC4/PWM.c **** *
1385:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1386:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1387:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1388:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1389:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1390:.\Generated_Source\PSoC4/PWM.c **** *
1391:.\Generated_Source\PSoC4/PWM.c **** * Return:
1392:.\Generated_Source\PSoC4/PWM.c **** *  None
1393:.\Generated_Source\PSoC4/PWM.c **** *
1394:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1396:.\Generated_Source\PSoC4/PWM.c **** {
 1525              		.loc 1 1396 0
 1526              		.cfi_startproc
 1527              	.LVL92:
1397:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1528              		.loc 1 1397 0
 1529 0000 014B     		ldr	r3, .L121
1398:.\Generated_Source\PSoC4/PWM.c **** }
 1530              		.loc 1 1398 0
 1531              		@ sp needed
1397:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1532              		.loc 1 1397 0
 1533 0002 1860     		str	r0, [r3]
 1534              		.loc 1 1398 0
 1535 0004 7047     		bx	lr
 1536              	.L122:
 1537 0006 C046     		.align	2
 1538              	.L121:
 1539 0008 34010540 		.word	1074069812
 1540              		.cfi_endproc
 1541              	.LFE39:
 1542              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 57


 1543              		.global	PWM_initVar
 1544              		.bss
 1545              		.set	.LANCHOR0,. + 0
 1546              		.type	PWM_initVar, %object
 1547              		.size	PWM_initVar, 1
 1548              	PWM_initVar:
 1549 0000 00       		.space	1
 1550              		.text
 1551              	.Letext0:
 1552              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1553              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1554              		.section	.debug_info,"",%progbits
 1555              	.Ldebug_info0:
 1556 0000 46090000 		.4byte	0x946
 1557 0004 0400     		.2byte	0x4
 1558 0006 00000000 		.4byte	.Ldebug_abbrev0
 1559 000a 04       		.byte	0x4
 1560 000b 01       		.uleb128 0x1
 1561 000c 06000000 		.4byte	.LASF76
 1562 0010 01       		.byte	0x1
 1563 0011 77010000 		.4byte	.LASF77
 1564 0015 96010000 		.4byte	.LASF78
 1565 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 1566 001d 00000000 		.4byte	0
 1567 0021 00000000 		.4byte	.Ldebug_line0
 1568 0025 02       		.uleb128 0x2
 1569 0026 01       		.byte	0x1
 1570 0027 06       		.byte	0x6
 1571 0028 2F010000 		.4byte	.LASF0
 1572 002c 02       		.uleb128 0x2
 1573 002d 01       		.byte	0x1
 1574 002e 08       		.byte	0x8
 1575 002f D3030000 		.4byte	.LASF1
 1576 0033 02       		.uleb128 0x2
 1577 0034 02       		.byte	0x2
 1578 0035 05       		.byte	0x5
 1579 0036 0A040000 		.4byte	.LASF2
 1580 003a 02       		.uleb128 0x2
 1581 003b 02       		.byte	0x2
 1582 003c 07       		.byte	0x7
 1583 003d EE020000 		.4byte	.LASF3
 1584 0041 02       		.uleb128 0x2
 1585 0042 04       		.byte	0x4
 1586 0043 05       		.byte	0x5
 1587 0044 ED010000 		.4byte	.LASF4
 1588 0048 02       		.uleb128 0x2
 1589 0049 04       		.byte	0x4
 1590 004a 07       		.byte	0x7
 1591 004b BC020000 		.4byte	.LASF5
 1592 004f 02       		.uleb128 0x2
 1593 0050 08       		.byte	0x8
 1594 0051 05       		.byte	0x5
 1595 0052 21010000 		.4byte	.LASF6
 1596 0056 02       		.uleb128 0x2
 1597 0057 08       		.byte	0x8
 1598 0058 07       		.byte	0x7
 1599 0059 CF000000 		.4byte	.LASF7
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 58


 1600 005d 03       		.uleb128 0x3
 1601 005e 04       		.byte	0x4
 1602 005f 05       		.byte	0x5
 1603 0060 696E7400 		.ascii	"int\000"
 1604 0064 02       		.uleb128 0x2
 1605 0065 04       		.byte	0x4
 1606 0066 07       		.byte	0x7
 1607 0067 94020000 		.4byte	.LASF8
 1608 006b 04       		.uleb128 0x4
 1609 006c F6010000 		.4byte	.LASF9
 1610 0070 02       		.byte	0x2
 1611 0071 5B       		.byte	0x5b
 1612 0072 2C000000 		.4byte	0x2c
 1613 0076 04       		.uleb128 0x4
 1614 0077 43020000 		.4byte	.LASF10
 1615 007b 02       		.byte	0x2
 1616 007c 5D       		.byte	0x5d
 1617 007d 48000000 		.4byte	0x48
 1618 0081 02       		.uleb128 0x2
 1619 0082 04       		.byte	0x4
 1620 0083 04       		.byte	0x4
 1621 0084 A1030000 		.4byte	.LASF11
 1622 0088 02       		.uleb128 0x2
 1623 0089 08       		.byte	0x8
 1624 008a 04       		.byte	0x4
 1625 008b FC010000 		.4byte	.LASF12
 1626 008f 02       		.uleb128 0x2
 1627 0090 01       		.byte	0x1
 1628 0091 08       		.byte	0x8
 1629 0092 60040000 		.4byte	.LASF13
 1630 0096 04       		.uleb128 0x4
 1631 0097 3F030000 		.4byte	.LASF14
 1632 009b 02       		.byte	0x2
 1633 009c F2       		.byte	0xf2
 1634 009d A1000000 		.4byte	0xa1
 1635 00a1 05       		.uleb128 0x5
 1636 00a2 76000000 		.4byte	0x76
 1637 00a6 02       		.uleb128 0x2
 1638 00a7 04       		.byte	0x4
 1639 00a8 07       		.byte	0x7
 1640 00a9 60030000 		.4byte	.LASF15
 1641 00ad 06       		.uleb128 0x6
 1642 00ae 4F010000 		.4byte	.LASF16
 1643 00b2 01       		.byte	0x1
 1644 00b3 1705     		.2byte	0x517
 1645 00b5 01       		.byte	0x1
 1646 00b6 C7000000 		.4byte	0xc7
 1647 00ba 07       		.uleb128 0x7
 1648 00bb 31040000 		.4byte	.LASF18
 1649 00bf 01       		.byte	0x1
 1650 00c0 1705     		.2byte	0x517
 1651 00c2 76000000 		.4byte	0x76
 1652 00c6 00       		.byte	0
 1653 00c7 06       		.uleb128 0x6
 1654 00c8 2F030000 		.4byte	.LASF17
 1655 00cc 01       		.byte	0x1
 1656 00cd C602     		.2byte	0x2c6
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 59


 1657 00cf 01       		.byte	0x1
 1658 00d0 E1000000 		.4byte	0xe1
 1659 00d4 07       		.uleb128 0x7
 1660 00d5 C8000000 		.4byte	.LASF19
 1661 00d9 01       		.byte	0x1
 1662 00da C602     		.2byte	0x2c6
 1663 00dc 76000000 		.4byte	0x76
 1664 00e0 00       		.byte	0
 1665 00e1 06       		.uleb128 0x6
 1666 00e2 47050000 		.4byte	.LASF20
 1667 00e6 01       		.byte	0x1
 1668 00e7 5A03     		.2byte	0x35a
 1669 00e9 01       		.byte	0x1
 1670 00ea FB000000 		.4byte	0xfb
 1671 00ee 07       		.uleb128 0x7
 1672 00ef 78030000 		.4byte	.LASF21
 1673 00f3 01       		.byte	0x1
 1674 00f4 5A03     		.2byte	0x35a
 1675 00f6 76000000 		.4byte	0x76
 1676 00fa 00       		.byte	0
 1677 00fb 06       		.uleb128 0x6
 1678 00fc 00010000 		.4byte	.LASF22
 1679 0100 01       		.byte	0x1
 1680 0101 7802     		.2byte	0x278
 1681 0103 01       		.byte	0x1
 1682 0104 15010000 		.4byte	0x115
 1683 0108 07       		.uleb128 0x7
 1684 0109 00000000 		.4byte	.LASF23
 1685 010d 01       		.byte	0x1
 1686 010e 7802     		.2byte	0x278
 1687 0110 76000000 		.4byte	0x76
 1688 0114 00       		.byte	0
 1689 0115 08       		.uleb128 0x8
 1690 0116 E1030000 		.4byte	.LASF24
 1691 011a 01       		.byte	0x1
 1692 011b 27       		.byte	0x27
 1693 011c 00000000 		.4byte	.LFB0
 1694 0120 60000000 		.4byte	.LFE0-.LFB0
 1695 0124 01       		.uleb128 0x1
 1696 0125 9C       		.byte	0x9c
 1697 0126 92010000 		.4byte	0x192
 1698 012a 09       		.uleb128 0x9
 1699 012b E1000000 		.4byte	0xe1
 1700 012f 14000000 		.4byte	.LBB10
 1701 0133 00000000 		.4byte	.Ldebug_ranges0+0
 1702 0137 01       		.byte	0x1
 1703 0138 92       		.byte	0x92
 1704 0139 45010000 		.4byte	0x145
 1705 013d 0A       		.uleb128 0xa
 1706 013e EE000000 		.4byte	0xee
 1707 0142 8813     		.2byte	0x1388
 1708 0144 00       		.byte	0
 1709 0145 09       		.uleb128 0x9
 1710 0146 AD000000 		.4byte	0xad
 1711 014a 20000000 		.4byte	.LBB13
 1712 014e 18000000 		.4byte	.Ldebug_ranges0+0x18
 1713 0152 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 60


 1714 0153 77       		.byte	0x77
 1715 0154 5F010000 		.4byte	0x15f
 1716 0158 0B       		.uleb128 0xb
 1717 0159 BA000000 		.4byte	0xba
 1718 015d 00       		.byte	0
 1719 015e 00       		.byte	0
 1720 015f 0C       		.uleb128 0xc
 1721 0160 C7000000 		.4byte	0xc7
 1722 0164 26000000 		.4byte	.LBB17
 1723 0168 06000000 		.4byte	.LBE17-.LBB17
 1724 016c 01       		.byte	0x1
 1725 016d 91       		.byte	0x91
 1726 016e 7A010000 		.4byte	0x17a
 1727 0172 0A       		.uleb128 0xa
 1728 0173 D4000000 		.4byte	0xd4
 1729 0177 1027     		.2byte	0x2710
 1730 0179 00       		.byte	0
 1731 017a 0D       		.uleb128 0xd
 1732 017b FB000000 		.4byte	0xfb
 1733 017f 30000000 		.4byte	.LBB20
 1734 0183 04000000 		.4byte	.LBE20-.LBB20
 1735 0187 01       		.byte	0x1
 1736 0188 AA       		.byte	0xaa
 1737 0189 0A       		.uleb128 0xa
 1738 018a 08010000 		.4byte	0x108
 1739 018e 1027     		.2byte	0x2710
 1740 0190 00       		.byte	0
 1741 0191 00       		.byte	0
 1742 0192 08       		.uleb128 0x8
 1743 0193 94000000 		.4byte	.LASF25
 1744 0197 01       		.byte	0x1
 1745 0198 C8       		.byte	0xc8
 1746 0199 00000000 		.4byte	.LFB1
 1747 019d 1C000000 		.4byte	.LFE1-.LFB1
 1748 01a1 01       		.uleb128 0x1
 1749 01a2 9C       		.byte	0x9c
 1750 01a3 C9010000 		.4byte	0x1c9
 1751 01a7 0E       		.uleb128 0xe
 1752 01a8 C1040000 		.4byte	.LASF28
 1753 01ac 01       		.byte	0x1
 1754 01ad CA       		.byte	0xca
 1755 01ae 6B000000 		.4byte	0x6b
 1756 01b2 00000000 		.4byte	.LLST0
 1757 01b6 0F       		.uleb128 0xf
 1758 01b7 06000000 		.4byte	.LVL4
 1759 01bb 31090000 		.4byte	0x931
 1760 01bf 0F       		.uleb128 0xf
 1761 01c0 14000000 		.4byte	.LVL5
 1762 01c4 3C090000 		.4byte	0x93c
 1763 01c8 00       		.byte	0
 1764 01c9 08       		.uleb128 0x8
 1765 01ca 12030000 		.4byte	.LASF26
 1766 01ce 01       		.byte	0x1
 1767 01cf F7       		.byte	0xf7
 1768 01d0 00000000 		.4byte	.LFB2
 1769 01d4 1C000000 		.4byte	.LFE2-.LFB2
 1770 01d8 01       		.uleb128 0x1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 61


 1771 01d9 9C       		.byte	0x9c
 1772 01da F1010000 		.4byte	0x1f1
 1773 01de 0F       		.uleb128 0xf
 1774 01df 0E000000 		.4byte	.LVL6
 1775 01e3 15010000 		.4byte	0x115
 1776 01e7 0F       		.uleb128 0xf
 1777 01e8 16000000 		.4byte	.LVL7
 1778 01ec 92010000 		.4byte	0x192
 1779 01f0 00       		.byte	0
 1780 01f1 10       		.uleb128 0x10
 1781 01f2 29020000 		.4byte	.LASF27
 1782 01f6 01       		.byte	0x1
 1783 01f7 1101     		.2byte	0x111
 1784 01f9 00000000 		.4byte	.LFB3
 1785 01fd 1C000000 		.4byte	.LFE3-.LFB3
 1786 0201 01       		.uleb128 0x1
 1787 0202 9C       		.byte	0x9c
 1788 0203 2A020000 		.4byte	0x22a
 1789 0207 11       		.uleb128 0x11
 1790 0208 C1040000 		.4byte	.LASF28
 1791 020c 01       		.byte	0x1
 1792 020d 1301     		.2byte	0x113
 1793 020f 6B000000 		.4byte	0x6b
 1794 0213 13000000 		.4byte	.LLST1
 1795 0217 0F       		.uleb128 0xf
 1796 0218 06000000 		.4byte	.LVL8
 1797 021c 31090000 		.4byte	0x931
 1798 0220 0F       		.uleb128 0xf
 1799 0221 14000000 		.4byte	.LVL9
 1800 0225 3C090000 		.4byte	0x93c
 1801 0229 00       		.byte	0
 1802 022a 10       		.uleb128 0x10
 1803 022b F1040000 		.4byte	.LASF29
 1804 022f 01       		.byte	0x1
 1805 0230 3601     		.2byte	0x136
 1806 0232 00000000 		.4byte	.LFB4
 1807 0236 28000000 		.4byte	.LFE4-.LFB4
 1808 023a 01       		.uleb128 0x1
 1809 023b 9C       		.byte	0x9c
 1810 023c 73020000 		.4byte	0x273
 1811 0240 12       		.uleb128 0x12
 1812 0241 65040000 		.4byte	.LASF31
 1813 0245 01       		.byte	0x1
 1814 0246 3601     		.2byte	0x136
 1815 0248 76000000 		.4byte	0x76
 1816 024c 26000000 		.4byte	.LLST2
 1817 0250 11       		.uleb128 0x11
 1818 0251 C1040000 		.4byte	.LASF28
 1819 0255 01       		.byte	0x1
 1820 0256 3801     		.2byte	0x138
 1821 0258 6B000000 		.4byte	0x6b
 1822 025c 52000000 		.4byte	.LLST3
 1823 0260 0F       		.uleb128 0xf
 1824 0261 08000000 		.4byte	.LVL11
 1825 0265 31090000 		.4byte	0x931
 1826 0269 0F       		.uleb128 0xf
 1827 026a 1C000000 		.4byte	.LVL12
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 62


 1828 026e 3C090000 		.4byte	0x93c
 1829 0272 00       		.byte	0
 1830 0273 10       		.uleb128 0x10
 1831 0274 52040000 		.4byte	.LASF30
 1832 0278 01       		.byte	0x1
 1833 0279 5701     		.2byte	0x157
 1834 027b 00000000 		.4byte	.LFB5
 1835 027f 28000000 		.4byte	.LFE5-.LFB5
 1836 0283 01       		.uleb128 0x1
 1837 0284 9C       		.byte	0x9c
 1838 0285 BC020000 		.4byte	0x2bc
 1839 0289 12       		.uleb128 0x12
 1840 028a F9000000 		.4byte	.LASF32
 1841 028e 01       		.byte	0x1
 1842 028f 5701     		.2byte	0x157
 1843 0291 76000000 		.4byte	0x76
 1844 0295 65000000 		.4byte	.LLST4
 1845 0299 11       		.uleb128 0x11
 1846 029a C1040000 		.4byte	.LASF28
 1847 029e 01       		.byte	0x1
 1848 029f 5901     		.2byte	0x159
 1849 02a1 6B000000 		.4byte	0x6b
 1850 02a5 91000000 		.4byte	.LLST5
 1851 02a9 0F       		.uleb128 0xf
 1852 02aa 08000000 		.4byte	.LVL15
 1853 02ae 31090000 		.4byte	0x931
 1854 02b2 0F       		.uleb128 0xf
 1855 02b3 1C000000 		.4byte	.LVL16
 1856 02b7 3C090000 		.4byte	0x93c
 1857 02bb 00       		.byte	0
 1858 02bc 10       		.uleb128 0x10
 1859 02bd 01030000 		.4byte	.LASF33
 1860 02c1 01       		.byte	0x1
 1861 02c2 7C01     		.2byte	0x17c
 1862 02c4 00000000 		.4byte	.LFB6
 1863 02c8 28000000 		.4byte	.LFE6-.LFB6
 1864 02cc 01       		.uleb128 0x1
 1865 02cd 9C       		.byte	0x9c
 1866 02ce 05030000 		.4byte	0x305
 1867 02d2 12       		.uleb128 0x12
 1868 02d3 A7030000 		.4byte	.LASF34
 1869 02d7 01       		.byte	0x1
 1870 02d8 7C01     		.2byte	0x17c
 1871 02da 76000000 		.4byte	0x76
 1872 02de A4000000 		.4byte	.LLST6
 1873 02e2 11       		.uleb128 0x11
 1874 02e3 C1040000 		.4byte	.LASF28
 1875 02e7 01       		.byte	0x1
 1876 02e8 7E01     		.2byte	0x17e
 1877 02ea 6B000000 		.4byte	0x6b
 1878 02ee D0000000 		.4byte	.LLST7
 1879 02f2 0F       		.uleb128 0xf
 1880 02f3 08000000 		.4byte	.LVL19
 1881 02f7 31090000 		.4byte	0x931
 1882 02fb 0F       		.uleb128 0xf
 1883 02fc 1C000000 		.4byte	.LVL20
 1884 0300 3C090000 		.4byte	0x93c
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 63


 1885 0304 00       		.byte	0
 1886 0305 10       		.uleb128 0x10
 1887 0306 80030000 		.4byte	.LASF35
 1888 030a 01       		.byte	0x1
 1889 030b 9C01     		.2byte	0x19c
 1890 030d 00000000 		.4byte	.LFB7
 1891 0311 2C000000 		.4byte	.LFE7-.LFB7
 1892 0315 01       		.uleb128 0x1
 1893 0316 9C       		.byte	0x9c
 1894 0317 4E030000 		.4byte	0x34e
 1895 031b 12       		.uleb128 0x12
 1896 031c E3040000 		.4byte	.LASF36
 1897 0320 01       		.byte	0x1
 1898 0321 9C01     		.2byte	0x19c
 1899 0323 76000000 		.4byte	0x76
 1900 0327 E3000000 		.4byte	.LLST8
 1901 032b 11       		.uleb128 0x11
 1902 032c C1040000 		.4byte	.LASF28
 1903 0330 01       		.byte	0x1
 1904 0331 9E01     		.2byte	0x19e
 1905 0333 6B000000 		.4byte	0x6b
 1906 0337 0F010000 		.4byte	.LLST9
 1907 033b 0F       		.uleb128 0xf
 1908 033c 08000000 		.4byte	.LVL23
 1909 0340 31090000 		.4byte	0x931
 1910 0344 0F       		.uleb128 0xf
 1911 0345 22000000 		.4byte	.LVL24
 1912 0349 3C090000 		.4byte	0x93c
 1913 034d 00       		.byte	0
 1914 034e 10       		.uleb128 0x10
 1915 034f FB030000 		.4byte	.LASF37
 1916 0353 01       		.byte	0x1
 1917 0354 D201     		.2byte	0x1d2
 1918 0356 00000000 		.4byte	.LFB8
 1919 035a 10000000 		.4byte	.LFE8-.LFB8
 1920 035e 01       		.uleb128 0x1
 1921 035f 9C       		.byte	0x9c
 1922 0360 75030000 		.4byte	0x375
 1923 0364 12       		.uleb128 0x12
 1924 0365 CE020000 		.4byte	.LASF38
 1925 0369 01       		.byte	0x1
 1926 036a D201     		.2byte	0x1d2
 1927 036c 76000000 		.4byte	0x76
 1928 0370 22010000 		.4byte	.LLST10
 1929 0374 00       		.byte	0
 1930 0375 10       		.uleb128 0x10
 1931 0376 B5000000 		.4byte	.LASF39
 1932 037a 01       		.byte	0x1
 1933 037b F601     		.2byte	0x1f6
 1934 037d 00000000 		.4byte	.LFB9
 1935 0381 28000000 		.4byte	.LFE9-.LFB9
 1936 0385 01       		.uleb128 0x1
 1937 0386 9C       		.byte	0x9c
 1938 0387 BE030000 		.4byte	0x3be
 1939 038b 12       		.uleb128 0x12
 1940 038c 69030000 		.4byte	.LASF40
 1941 0390 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 64


 1942 0391 F601     		.2byte	0x1f6
 1943 0393 76000000 		.4byte	0x76
 1944 0397 43010000 		.4byte	.LLST11
 1945 039b 11       		.uleb128 0x11
 1946 039c C1040000 		.4byte	.LASF28
 1947 03a0 01       		.byte	0x1
 1948 03a1 F801     		.2byte	0x1f8
 1949 03a3 6B000000 		.4byte	0x6b
 1950 03a7 6F010000 		.4byte	.LLST12
 1951 03ab 0F       		.uleb128 0xf
 1952 03ac 08000000 		.4byte	.LVL29
 1953 03b0 31090000 		.4byte	0x931
 1954 03b4 0F       		.uleb128 0xf
 1955 03b5 22000000 		.4byte	.LVL30
 1956 03b9 3C090000 		.4byte	0x93c
 1957 03bd 00       		.byte	0
 1958 03be 10       		.uleb128 0x10
 1959 03bf FD040000 		.4byte	.LASF41
 1960 03c3 01       		.byte	0x1
 1961 03c4 1802     		.2byte	0x218
 1962 03c6 00000000 		.4byte	.LFB10
 1963 03ca 28000000 		.4byte	.LFE10-.LFB10
 1964 03ce 01       		.uleb128 0x1
 1965 03cf 9C       		.byte	0x9c
 1966 03d0 07040000 		.4byte	0x407
 1967 03d4 12       		.uleb128 0x12
 1968 03d5 EA030000 		.4byte	.LASF42
 1969 03d9 01       		.byte	0x1
 1970 03da 1802     		.2byte	0x218
 1971 03dc 76000000 		.4byte	0x76
 1972 03e0 82010000 		.4byte	.LLST13
 1973 03e4 11       		.uleb128 0x11
 1974 03e5 C1040000 		.4byte	.LASF28
 1975 03e9 01       		.byte	0x1
 1976 03ea 1A02     		.2byte	0x21a
 1977 03ec 6B000000 		.4byte	0x6b
 1978 03f0 AE010000 		.4byte	.LLST14
 1979 03f4 0F       		.uleb128 0xf
 1980 03f5 08000000 		.4byte	.LVL33
 1981 03f9 31090000 		.4byte	0x931
 1982 03fd 0F       		.uleb128 0xf
 1983 03fe 22000000 		.4byte	.LVL34
 1984 0402 3C090000 		.4byte	0x93c
 1985 0406 00       		.byte	0
 1986 0407 10       		.uleb128 0x10
 1987 0408 A1020000 		.4byte	.LASF43
 1988 040c 01       		.byte	0x1
 1989 040d 3902     		.2byte	0x239
 1990 040f 00000000 		.4byte	.LFB11
 1991 0413 2C000000 		.4byte	.LFE11-.LFB11
 1992 0417 01       		.uleb128 0x1
 1993 0418 9C       		.byte	0x9c
 1994 0419 50040000 		.4byte	0x450
 1995 041d 12       		.uleb128 0x12
 1996 041e 7B020000 		.4byte	.LASF44
 1997 0422 01       		.byte	0x1
 1998 0423 3902     		.2byte	0x239
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 65


 1999 0425 76000000 		.4byte	0x76
 2000 0429 C1010000 		.4byte	.LLST15
 2001 042d 11       		.uleb128 0x11
 2002 042e C1040000 		.4byte	.LASF28
 2003 0432 01       		.byte	0x1
 2004 0433 3B02     		.2byte	0x23b
 2005 0435 6B000000 		.4byte	0x6b
 2006 0439 ED010000 		.4byte	.LLST16
 2007 043d 0F       		.uleb128 0xf
 2008 043e 08000000 		.4byte	.LVL37
 2009 0442 31090000 		.4byte	0x931
 2010 0446 0F       		.uleb128 0xf
 2011 0447 20000000 		.4byte	.LVL39
 2012 044b 3C090000 		.4byte	0x93c
 2013 044f 00       		.byte	0
 2014 0450 10       		.uleb128 0x10
 2015 0451 32020000 		.4byte	.LASF45
 2016 0455 01       		.byte	0x1
 2017 0456 5A02     		.2byte	0x25a
 2018 0458 00000000 		.4byte	.LFB12
 2019 045c 28000000 		.4byte	.LFE12-.LFB12
 2020 0460 01       		.uleb128 0x1
 2021 0461 9C       		.byte	0x9c
 2022 0462 99040000 		.4byte	0x499
 2023 0466 12       		.uleb128 0x12
 2024 0467 67020000 		.4byte	.LASF46
 2025 046b 01       		.byte	0x1
 2026 046c 5A02     		.2byte	0x25a
 2027 046e 76000000 		.4byte	0x76
 2028 0472 00020000 		.4byte	.LLST17
 2029 0476 11       		.uleb128 0x11
 2030 0477 C1040000 		.4byte	.LASF28
 2031 047b 01       		.byte	0x1
 2032 047c 5C02     		.2byte	0x25c
 2033 047e 6B000000 		.4byte	0x6b
 2034 0482 2C020000 		.4byte	.LLST18
 2035 0486 0F       		.uleb128 0xf
 2036 0487 08000000 		.4byte	.LVL41
 2037 048b 31090000 		.4byte	0x931
 2038 048f 0F       		.uleb128 0xf
 2039 0490 1C000000 		.4byte	.LVL42
 2040 0494 3C090000 		.4byte	0x93c
 2041 0498 00       		.byte	0
 2042 0499 13       		.uleb128 0x13
 2043 049a FB000000 		.4byte	0xfb
 2044 049e 00000000 		.4byte	.LFB13
 2045 04a2 0C000000 		.4byte	.LFE13-.LFB13
 2046 04a6 01       		.uleb128 0x1
 2047 04a7 9C       		.byte	0x9c
 2048 04a8 B6040000 		.4byte	0x4b6
 2049 04ac 14       		.uleb128 0x14
 2050 04ad 08010000 		.4byte	0x108
 2051 04b1 3F020000 		.4byte	.LLST19
 2052 04b5 00       		.byte	0
 2053 04b6 15       		.uleb128 0x15
 2054 04b7 11010000 		.4byte	.LASF49
 2055 04bb 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 66


 2056 04bc 8C02     		.2byte	0x28c
 2057 04be 76000000 		.4byte	0x76
 2058 04c2 00000000 		.4byte	.LFB14
 2059 04c6 0C000000 		.4byte	.LFE14-.LFB14
 2060 04ca 01       		.uleb128 0x1
 2061 04cb 9C       		.byte	0x9c
 2062 04cc 10       		.uleb128 0x10
 2063 04cd 12050000 		.4byte	.LASF47
 2064 04d1 01       		.byte	0x1
 2065 04d2 A902     		.2byte	0x2a9
 2066 04d4 00000000 		.4byte	.LFB15
 2067 04d8 28000000 		.4byte	.LFE15-.LFB15
 2068 04dc 01       		.uleb128 0x1
 2069 04dd 9C       		.byte	0x9c
 2070 04de 15050000 		.4byte	0x515
 2071 04e2 12       		.uleb128 0x12
 2072 04e3 8D040000 		.4byte	.LASF48
 2073 04e7 01       		.byte	0x1
 2074 04e8 A902     		.2byte	0x2a9
 2075 04ea 76000000 		.4byte	0x76
 2076 04ee 60020000 		.4byte	.LLST20
 2077 04f2 11       		.uleb128 0x11
 2078 04f3 C1040000 		.4byte	.LASF28
 2079 04f7 01       		.byte	0x1
 2080 04f8 AB02     		.2byte	0x2ab
 2081 04fa 6B000000 		.4byte	0x6b
 2082 04fe 8C020000 		.4byte	.LLST21
 2083 0502 0F       		.uleb128 0xf
 2084 0503 08000000 		.4byte	.LVL47
 2085 0507 31090000 		.4byte	0x931
 2086 050b 0F       		.uleb128 0xf
 2087 050c 1C000000 		.4byte	.LVL48
 2088 0510 3C090000 		.4byte	0x93c
 2089 0514 00       		.byte	0
 2090 0515 13       		.uleb128 0x13
 2091 0516 C7000000 		.4byte	0xc7
 2092 051a 00000000 		.4byte	.LFB16
 2093 051e 0C000000 		.4byte	.LFE16-.LFB16
 2094 0522 01       		.uleb128 0x1
 2095 0523 9C       		.byte	0x9c
 2096 0524 32050000 		.4byte	0x532
 2097 0528 14       		.uleb128 0x14
 2098 0529 D4000000 		.4byte	0xd4
 2099 052d 9F020000 		.4byte	.LLST22
 2100 0531 00       		.byte	0
 2101 0532 15       		.uleb128 0x15
 2102 0533 51030000 		.4byte	.LASF50
 2103 0537 01       		.byte	0x1
 2104 0538 DA02     		.2byte	0x2da
 2105 053a 76000000 		.4byte	0x76
 2106 053e 00000000 		.4byte	.LFB17
 2107 0542 0C000000 		.4byte	.LFE17-.LFB17
 2108 0546 01       		.uleb128 0x1
 2109 0547 9C       		.byte	0x9c
 2110 0548 10       		.uleb128 0x10
 2111 0549 16020000 		.4byte	.LASF51
 2112 054d 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 67


 2113 054e F402     		.2byte	0x2f4
 2114 0550 00000000 		.4byte	.LFB18
 2115 0554 24000000 		.4byte	.LFE18-.LFB18
 2116 0558 01       		.uleb128 0x1
 2117 0559 9C       		.byte	0x9c
 2118 055a 91050000 		.4byte	0x591
 2119 055e 12       		.uleb128 0x12
 2120 055f 25050000 		.4byte	.LASF52
 2121 0563 01       		.byte	0x1
 2122 0564 F402     		.2byte	0x2f4
 2123 0566 76000000 		.4byte	0x76
 2124 056a C0020000 		.4byte	.LLST23
 2125 056e 11       		.uleb128 0x11
 2126 056f C1040000 		.4byte	.LASF28
 2127 0573 01       		.byte	0x1
 2128 0574 F602     		.2byte	0x2f6
 2129 0576 6B000000 		.4byte	0x6b
 2130 057a EC020000 		.4byte	.LLST24
 2131 057e 0F       		.uleb128 0xf
 2132 057f 08000000 		.4byte	.LVL53
 2133 0583 31090000 		.4byte	0x931
 2134 0587 0F       		.uleb128 0xf
 2135 0588 1E000000 		.4byte	.LVL54
 2136 058c 3C090000 		.4byte	0x93c
 2137 0590 00       		.byte	0
 2138 0591 10       		.uleb128 0x10
 2139 0592 3F040000 		.4byte	.LASF53
 2140 0596 01       		.byte	0x1
 2141 0597 0F03     		.2byte	0x30f
 2142 0599 00000000 		.4byte	.LFB19
 2143 059d 0C000000 		.4byte	.LFE19-.LFB19
 2144 05a1 01       		.uleb128 0x1
 2145 05a2 9C       		.byte	0x9c
 2146 05a3 B8050000 		.4byte	0x5b8
 2147 05a7 12       		.uleb128 0x12
 2148 05a8 A4040000 		.4byte	.LASF54
 2149 05ac 01       		.byte	0x1
 2150 05ad 0F03     		.2byte	0x30f
 2151 05af 76000000 		.4byte	0x76
 2152 05b3 FF020000 		.4byte	.LLST25
 2153 05b7 00       		.byte	0
 2154 05b8 15       		.uleb128 0x15
 2155 05b9 8F030000 		.4byte	.LASF55
 2156 05bd 01       		.byte	0x1
 2157 05be 2303     		.2byte	0x323
 2158 05c0 76000000 		.4byte	0x76
 2159 05c4 00000000 		.4byte	.LFB20
 2160 05c8 0C000000 		.4byte	.LFE20-.LFB20
 2161 05cc 01       		.uleb128 0x1
 2162 05cd 9C       		.byte	0x9c
 2163 05ce 10       		.uleb128 0x10
 2164 05cf C1030000 		.4byte	.LASF56
 2165 05d3 01       		.byte	0x1
 2166 05d4 3D03     		.2byte	0x33d
 2167 05d6 00000000 		.4byte	.LFB21
 2168 05da 28000000 		.4byte	.LFE21-.LFB21
 2169 05de 01       		.uleb128 0x1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 68


 2170 05df 9C       		.byte	0x9c
 2171 05e0 17060000 		.4byte	0x617
 2172 05e4 12       		.uleb128 0x12
 2173 05e5 25050000 		.4byte	.LASF52
 2174 05e9 01       		.byte	0x1
 2175 05ea 3D03     		.2byte	0x33d
 2176 05ec 76000000 		.4byte	0x76
 2177 05f0 20030000 		.4byte	.LLST26
 2178 05f4 11       		.uleb128 0x11
 2179 05f5 C1040000 		.4byte	.LASF28
 2180 05f9 01       		.byte	0x1
 2181 05fa 3F03     		.2byte	0x33f
 2182 05fc 6B000000 		.4byte	0x6b
 2183 0600 4C030000 		.4byte	.LLST27
 2184 0604 0F       		.uleb128 0xf
 2185 0605 08000000 		.4byte	.LVL59
 2186 0609 31090000 		.4byte	0x931
 2187 060d 0F       		.uleb128 0xf
 2188 060e 22000000 		.4byte	.LVL60
 2189 0612 3C090000 		.4byte	0x93c
 2190 0616 00       		.byte	0
 2191 0617 13       		.uleb128 0x13
 2192 0618 E1000000 		.4byte	0xe1
 2193 061c 00000000 		.4byte	.LFB22
 2194 0620 0C000000 		.4byte	.LFE22-.LFB22
 2195 0624 01       		.uleb128 0x1
 2196 0625 9C       		.byte	0x9c
 2197 0626 34060000 		.4byte	0x634
 2198 062a 14       		.uleb128 0x14
 2199 062b EE000000 		.4byte	0xee
 2200 062f 5F030000 		.4byte	.LLST28
 2201 0633 00       		.byte	0
 2202 0634 15       		.uleb128 0x15
 2203 0635 58050000 		.4byte	.LASF57
 2204 0639 01       		.byte	0x1
 2205 063a 8403     		.2byte	0x384
 2206 063c 76000000 		.4byte	0x76
 2207 0640 00000000 		.4byte	.LFB23
 2208 0644 0C000000 		.4byte	.LFE23-.LFB23
 2209 0648 01       		.uleb128 0x1
 2210 0649 9C       		.byte	0x9c
 2211 064a 10       		.uleb128 0x10
 2212 064b 3B010000 		.4byte	.LASF58
 2213 064f 01       		.byte	0x1
 2214 0650 B003     		.2byte	0x3b0
 2215 0652 00000000 		.4byte	.LFB24
 2216 0656 0C000000 		.4byte	.LFE24-.LFB24
 2217 065a 01       		.uleb128 0x1
 2218 065b 9C       		.byte	0x9c
 2219 065c 71060000 		.4byte	0x671
 2220 0660 12       		.uleb128 0x12
 2221 0661 99040000 		.4byte	.LASF59
 2222 0665 01       		.byte	0x1
 2223 0666 B003     		.2byte	0x3b0
 2224 0668 76000000 		.4byte	0x76
 2225 066c 80030000 		.4byte	.LLST29
 2226 0670 00       		.byte	0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 69


 2227 0671 15       		.uleb128 0x15
 2228 0672 03020000 		.4byte	.LASF60
 2229 0676 01       		.byte	0x1
 2230 0677 DA03     		.2byte	0x3da
 2231 0679 76000000 		.4byte	0x76
 2232 067d 00000000 		.4byte	.LFB25
 2233 0681 0C000000 		.4byte	.LFE25-.LFB25
 2234 0685 01       		.uleb128 0x1
 2235 0686 9C       		.byte	0x9c
 2236 0687 15       		.uleb128 0x15
 2237 0688 B1030000 		.4byte	.LASF61
 2238 068c 01       		.byte	0x1
 2239 068d 0604     		.2byte	0x406
 2240 068f 76000000 		.4byte	0x76
 2241 0693 00000000 		.4byte	.LFB26
 2242 0697 0C000000 		.4byte	.LFE26-.LFB26
 2243 069b 01       		.uleb128 0x1
 2244 069c 9C       		.byte	0x9c
 2245 069d 15       		.uleb128 0x15
 2246 069e AE040000 		.4byte	.LASF62
 2247 06a2 01       		.byte	0x1
 2248 06a3 1B04     		.2byte	0x41b
 2249 06a5 76000000 		.4byte	0x76
 2250 06a9 00000000 		.4byte	.LFB27
 2251 06ad 0C000000 		.4byte	.LFE27-.LFB27
 2252 06b1 01       		.uleb128 0x1
 2253 06b2 9C       		.byte	0x9c
 2254 06b3 10       		.uleb128 0x10
 2255 06b4 E6000000 		.4byte	.LASF63
 2256 06b8 01       		.byte	0x1
 2257 06b9 3604     		.2byte	0x436
 2258 06bb 00000000 		.4byte	.LFB28
 2259 06bf 24000000 		.4byte	.LFE28-.LFB28
 2260 06c3 01       		.uleb128 0x1
 2261 06c4 9C       		.byte	0x9c
 2262 06c5 FC060000 		.4byte	0x6fc
 2263 06c9 12       		.uleb128 0x12
 2264 06ca 5B020000 		.4byte	.LASF64
 2265 06ce 01       		.byte	0x1
 2266 06cf 3604     		.2byte	0x436
 2267 06d1 76000000 		.4byte	0x76
 2268 06d5 A1030000 		.4byte	.LLST30
 2269 06d9 11       		.uleb128 0x11
 2270 06da C1040000 		.4byte	.LASF28
 2271 06de 01       		.byte	0x1
 2272 06df 3804     		.2byte	0x438
 2273 06e1 6B000000 		.4byte	0x6b
 2274 06e5 CD030000 		.4byte	.LLST31
 2275 06e9 0F       		.uleb128 0xf
 2276 06ea 08000000 		.4byte	.LVL67
 2277 06ee 31090000 		.4byte	0x931
 2278 06f2 0F       		.uleb128 0xf
 2279 06f3 1C000000 		.4byte	.LVL68
 2280 06f7 3C090000 		.4byte	0x93c
 2281 06fb 00       		.byte	0
 2282 06fc 10       		.uleb128 0x10
 2283 06fd 7B040000 		.4byte	.LASF65
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 70


 2284 0701 01       		.byte	0x1
 2285 0702 5704     		.2byte	0x457
 2286 0704 00000000 		.4byte	.LFB29
 2287 0708 24000000 		.4byte	.LFE29-.LFB29
 2288 070c 01       		.uleb128 0x1
 2289 070d 9C       		.byte	0x9c
 2290 070e 45070000 		.4byte	0x745
 2291 0712 12       		.uleb128 0x12
 2292 0713 5B020000 		.4byte	.LASF64
 2293 0717 01       		.byte	0x1
 2294 0718 5704     		.2byte	0x457
 2295 071a 76000000 		.4byte	0x76
 2296 071e E0030000 		.4byte	.LLST32
 2297 0722 11       		.uleb128 0x11
 2298 0723 C1040000 		.4byte	.LASF28
 2299 0727 01       		.byte	0x1
 2300 0728 5904     		.2byte	0x459
 2301 072a 6B000000 		.4byte	0x6b
 2302 072e 0C040000 		.4byte	.LLST33
 2303 0732 0F       		.uleb128 0xf
 2304 0733 08000000 		.4byte	.LVL71
 2305 0737 31090000 		.4byte	0x931
 2306 073b 0F       		.uleb128 0xf
 2307 073c 1E000000 		.4byte	.LVL72
 2308 0740 3C090000 		.4byte	0x93c
 2309 0744 00       		.byte	0
 2310 0745 10       		.uleb128 0x10
 2311 0746 4A020000 		.4byte	.LASF66
 2312 074a 01       		.byte	0x1
 2313 074b 7804     		.2byte	0x478
 2314 074d 00000000 		.4byte	.LFB30
 2315 0751 28000000 		.4byte	.LFE30-.LFB30
 2316 0755 01       		.uleb128 0x1
 2317 0756 9C       		.byte	0x9c
 2318 0757 8E070000 		.4byte	0x78e
 2319 075b 12       		.uleb128 0x12
 2320 075c 5B020000 		.4byte	.LASF64
 2321 0760 01       		.byte	0x1
 2322 0761 7804     		.2byte	0x478
 2323 0763 76000000 		.4byte	0x76
 2324 0767 1F040000 		.4byte	.LLST34
 2325 076b 11       		.uleb128 0x11
 2326 076c C1040000 		.4byte	.LASF28
 2327 0770 01       		.byte	0x1
 2328 0771 7A04     		.2byte	0x47a
 2329 0773 6B000000 		.4byte	0x6b
 2330 0777 4B040000 		.4byte	.LLST35
 2331 077b 0F       		.uleb128 0xf
 2332 077c 08000000 		.4byte	.LVL75
 2333 0780 31090000 		.4byte	0x931
 2334 0784 0F       		.uleb128 0xf
 2335 0785 1E000000 		.4byte	.LVL76
 2336 0789 3C090000 		.4byte	0x93c
 2337 078d 00       		.byte	0
 2338 078e 10       		.uleb128 0x10
 2339 078f 84020000 		.4byte	.LASF67
 2340 0793 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 71


 2341 0794 9804     		.2byte	0x498
 2342 0796 00000000 		.4byte	.LFB31
 2343 079a 24000000 		.4byte	.LFE31-.LFB31
 2344 079e 01       		.uleb128 0x1
 2345 079f 9C       		.byte	0x9c
 2346 07a0 D7070000 		.4byte	0x7d7
 2347 07a4 12       		.uleb128 0x12
 2348 07a5 5B020000 		.4byte	.LASF64
 2349 07a9 01       		.byte	0x1
 2350 07aa 9804     		.2byte	0x498
 2351 07ac 76000000 		.4byte	0x76
 2352 07b0 5E040000 		.4byte	.LLST36
 2353 07b4 11       		.uleb128 0x11
 2354 07b5 C1040000 		.4byte	.LASF28
 2355 07b9 01       		.byte	0x1
 2356 07ba 9A04     		.2byte	0x49a
 2357 07bc 6B000000 		.4byte	0x6b
 2358 07c0 8A040000 		.4byte	.LLST37
 2359 07c4 0F       		.uleb128 0xf
 2360 07c5 08000000 		.4byte	.LVL79
 2361 07c9 31090000 		.4byte	0x931
 2362 07cd 0F       		.uleb128 0xf
 2363 07ce 1E000000 		.4byte	.LVL80
 2364 07d2 3C090000 		.4byte	0x93c
 2365 07d6 00       		.byte	0
 2366 07d7 10       		.uleb128 0x10
 2367 07d8 D2040000 		.4byte	.LASF68
 2368 07dc 01       		.byte	0x1
 2369 07dd B904     		.2byte	0x4b9
 2370 07df 00000000 		.4byte	.LFB32
 2371 07e3 24000000 		.4byte	.LFE32-.LFB32
 2372 07e7 01       		.uleb128 0x1
 2373 07e8 9C       		.byte	0x9c
 2374 07e9 20080000 		.4byte	0x820
 2375 07ed 12       		.uleb128 0x12
 2376 07ee 5B020000 		.4byte	.LASF64
 2377 07f2 01       		.byte	0x1
 2378 07f3 B904     		.2byte	0x4b9
 2379 07f5 76000000 		.4byte	0x76
 2380 07f9 9D040000 		.4byte	.LLST38
 2381 07fd 11       		.uleb128 0x11
 2382 07fe C1040000 		.4byte	.LASF28
 2383 0802 01       		.byte	0x1
 2384 0803 BB04     		.2byte	0x4bb
 2385 0805 6B000000 		.4byte	0x6b
 2386 0809 C9040000 		.4byte	.LLST39
 2387 080d 0F       		.uleb128 0xf
 2388 080e 08000000 		.4byte	.LVL83
 2389 0812 31090000 		.4byte	0x931
 2390 0816 0F       		.uleb128 0xf
 2391 0817 1E000000 		.4byte	.LVL84
 2392 081b 3C090000 		.4byte	0x93c
 2393 081f 00       		.byte	0
 2394 0820 10       		.uleb128 0x10
 2395 0821 1C030000 		.4byte	.LASF69
 2396 0825 01       		.byte	0x1
 2397 0826 E104     		.2byte	0x4e1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 72


 2398 0828 00000000 		.4byte	.LFB33
 2399 082c 1C000000 		.4byte	.LFE33-.LFB33
 2400 0830 01       		.uleb128 0x1
 2401 0831 9C       		.byte	0x9c
 2402 0832 79080000 		.4byte	0x879
 2403 0836 12       		.uleb128 0x12
 2404 0837 67020000 		.4byte	.LASF46
 2405 083b 01       		.byte	0x1
 2406 083c E104     		.2byte	0x4e1
 2407 083e 76000000 		.4byte	0x76
 2408 0842 DC040000 		.4byte	.LLST40
 2409 0846 12       		.uleb128 0x12
 2410 0847 B4020000 		.4byte	.LASF70
 2411 084b 01       		.byte	0x1
 2412 084c E104     		.2byte	0x4e1
 2413 084e 76000000 		.4byte	0x76
 2414 0852 FD040000 		.4byte	.LLST41
 2415 0856 11       		.uleb128 0x11
 2416 0857 C1040000 		.4byte	.LASF28
 2417 085b 01       		.byte	0x1
 2418 085c E304     		.2byte	0x4e3
 2419 085e 6B000000 		.4byte	0x6b
 2420 0862 29050000 		.4byte	.LLST42
 2421 0866 0F       		.uleb128 0xf
 2422 0867 0C000000 		.4byte	.LVL87
 2423 086b 31090000 		.4byte	0x931
 2424 086f 0F       		.uleb128 0xf
 2425 0870 14000000 		.4byte	.LVL88
 2426 0874 3C090000 		.4byte	0x93c
 2427 0878 00       		.byte	0
 2428 0879 15       		.uleb128 0x15
 2429 087a 6C020000 		.4byte	.LASF71
 2430 087e 01       		.byte	0x1
 2431 087f FE04     		.2byte	0x4fe
 2432 0881 76000000 		.4byte	0x76
 2433 0885 00000000 		.4byte	.LFB34
 2434 0889 14000000 		.4byte	.LFE34-.LFB34
 2435 088d 01       		.uleb128 0x1
 2436 088e 9C       		.byte	0x9c
 2437 088f 13       		.uleb128 0x13
 2438 0890 AD000000 		.4byte	0xad
 2439 0894 00000000 		.4byte	.LFB35
 2440 0898 0C000000 		.4byte	.LFE35-.LFB35
 2441 089c 01       		.uleb128 0x1
 2442 089d 9C       		.byte	0x9c
 2443 089e AA080000 		.4byte	0x8aa
 2444 08a2 16       		.uleb128 0x16
 2445 08a3 BA000000 		.4byte	0xba
 2446 08a7 01       		.uleb128 0x1
 2447 08a8 50       		.byte	0x50
 2448 08a9 00       		.byte	0
 2449 08aa 15       		.uleb128 0x15
 2450 08ab 14040000 		.4byte	.LASF72
 2451 08af 01       		.byte	0x1
 2452 08b0 2E05     		.2byte	0x52e
 2453 08b2 76000000 		.4byte	0x76
 2454 08b6 00000000 		.4byte	.LFB36
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 73


 2455 08ba 0C000000 		.4byte	.LFE36-.LFB36
 2456 08be 01       		.uleb128 0x1
 2457 08bf 9C       		.byte	0x9c
 2458 08c0 15       		.uleb128 0x15
 2459 08c1 30050000 		.4byte	.LASF73
 2460 08c5 01       		.byte	0x1
 2461 08c6 4505     		.2byte	0x545
 2462 08c8 76000000 		.4byte	0x76
 2463 08cc 00000000 		.4byte	.LFB37
 2464 08d0 0C000000 		.4byte	.LFE37-.LFB37
 2465 08d4 01       		.uleb128 0x1
 2466 08d5 9C       		.byte	0x9c
 2467 08d6 10       		.uleb128 0x10
 2468 08d7 64010000 		.4byte	.LASF74
 2469 08db 01       		.byte	0x1
 2470 08dc 5C05     		.2byte	0x55c
 2471 08de 00000000 		.4byte	.LFB38
 2472 08e2 0C000000 		.4byte	.LFE38-.LFB38
 2473 08e6 01       		.uleb128 0x1
 2474 08e7 9C       		.byte	0x9c
 2475 08e8 FB080000 		.4byte	0x8fb
 2476 08ec 17       		.uleb128 0x17
 2477 08ed 31040000 		.4byte	.LASF18
 2478 08f1 01       		.byte	0x1
 2479 08f2 5C05     		.2byte	0x55c
 2480 08f4 76000000 		.4byte	0x76
 2481 08f8 01       		.uleb128 0x1
 2482 08f9 50       		.byte	0x50
 2483 08fa 00       		.byte	0
 2484 08fb 10       		.uleb128 0x10
 2485 08fc 6A040000 		.4byte	.LASF75
 2486 0900 01       		.byte	0x1
 2487 0901 7305     		.2byte	0x573
 2488 0903 00000000 		.4byte	.LFB39
 2489 0907 0C000000 		.4byte	.LFE39-.LFB39
 2490 090b 01       		.uleb128 0x1
 2491 090c 9C       		.byte	0x9c
 2492 090d 20090000 		.4byte	0x920
 2493 0911 17       		.uleb128 0x17
 2494 0912 31040000 		.4byte	.LASF18
 2495 0916 01       		.byte	0x1
 2496 0917 7305     		.2byte	0x573
 2497 0919 76000000 		.4byte	0x76
 2498 091d 01       		.uleb128 0x1
 2499 091e 50       		.byte	0x50
 2500 091f 00       		.byte	0
 2501 0920 18       		.uleb128 0x18
 2502 0921 45030000 		.4byte	.LASF79
 2503 0925 01       		.byte	0x1
 2504 0926 16       		.byte	0x16
 2505 0927 6B000000 		.4byte	0x6b
 2506 092b 05       		.uleb128 0x5
 2507 092c 03       		.byte	0x3
 2508 092d 00000000 		.4byte	PWM_initVar
 2509 0931 19       		.uleb128 0x19
 2510 0932 D7020000 		.4byte	.LASF80
 2511 0936 03       		.byte	0x3
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 74


 2512 0937 73       		.byte	0x73
 2513 0938 6B000000 		.4byte	0x6b
 2514 093c 1A       		.uleb128 0x1a
 2515 093d 9F000000 		.4byte	.LASF81
 2516 0941 03       		.byte	0x3
 2517 0942 74       		.byte	0x74
 2518 0943 1B       		.uleb128 0x1b
 2519 0944 6B000000 		.4byte	0x6b
 2520 0948 00       		.byte	0
 2521 0949 00       		.byte	0
 2522              		.section	.debug_abbrev,"",%progbits
 2523              	.Ldebug_abbrev0:
 2524 0000 01       		.uleb128 0x1
 2525 0001 11       		.uleb128 0x11
 2526 0002 01       		.byte	0x1
 2527 0003 25       		.uleb128 0x25
 2528 0004 0E       		.uleb128 0xe
 2529 0005 13       		.uleb128 0x13
 2530 0006 0B       		.uleb128 0xb
 2531 0007 03       		.uleb128 0x3
 2532 0008 0E       		.uleb128 0xe
 2533 0009 1B       		.uleb128 0x1b
 2534 000a 0E       		.uleb128 0xe
 2535 000b 55       		.uleb128 0x55
 2536 000c 17       		.uleb128 0x17
 2537 000d 11       		.uleb128 0x11
 2538 000e 01       		.uleb128 0x1
 2539 000f 10       		.uleb128 0x10
 2540 0010 17       		.uleb128 0x17
 2541 0011 00       		.byte	0
 2542 0012 00       		.byte	0
 2543 0013 02       		.uleb128 0x2
 2544 0014 24       		.uleb128 0x24
 2545 0015 00       		.byte	0
 2546 0016 0B       		.uleb128 0xb
 2547 0017 0B       		.uleb128 0xb
 2548 0018 3E       		.uleb128 0x3e
 2549 0019 0B       		.uleb128 0xb
 2550 001a 03       		.uleb128 0x3
 2551 001b 0E       		.uleb128 0xe
 2552 001c 00       		.byte	0
 2553 001d 00       		.byte	0
 2554 001e 03       		.uleb128 0x3
 2555 001f 24       		.uleb128 0x24
 2556 0020 00       		.byte	0
 2557 0021 0B       		.uleb128 0xb
 2558 0022 0B       		.uleb128 0xb
 2559 0023 3E       		.uleb128 0x3e
 2560 0024 0B       		.uleb128 0xb
 2561 0025 03       		.uleb128 0x3
 2562 0026 08       		.uleb128 0x8
 2563 0027 00       		.byte	0
 2564 0028 00       		.byte	0
 2565 0029 04       		.uleb128 0x4
 2566 002a 16       		.uleb128 0x16
 2567 002b 00       		.byte	0
 2568 002c 03       		.uleb128 0x3
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 75


 2569 002d 0E       		.uleb128 0xe
 2570 002e 3A       		.uleb128 0x3a
 2571 002f 0B       		.uleb128 0xb
 2572 0030 3B       		.uleb128 0x3b
 2573 0031 0B       		.uleb128 0xb
 2574 0032 49       		.uleb128 0x49
 2575 0033 13       		.uleb128 0x13
 2576 0034 00       		.byte	0
 2577 0035 00       		.byte	0
 2578 0036 05       		.uleb128 0x5
 2579 0037 35       		.uleb128 0x35
 2580 0038 00       		.byte	0
 2581 0039 49       		.uleb128 0x49
 2582 003a 13       		.uleb128 0x13
 2583 003b 00       		.byte	0
 2584 003c 00       		.byte	0
 2585 003d 06       		.uleb128 0x6
 2586 003e 2E       		.uleb128 0x2e
 2587 003f 01       		.byte	0x1
 2588 0040 3F       		.uleb128 0x3f
 2589 0041 19       		.uleb128 0x19
 2590 0042 03       		.uleb128 0x3
 2591 0043 0E       		.uleb128 0xe
 2592 0044 3A       		.uleb128 0x3a
 2593 0045 0B       		.uleb128 0xb
 2594 0046 3B       		.uleb128 0x3b
 2595 0047 05       		.uleb128 0x5
 2596 0048 27       		.uleb128 0x27
 2597 0049 19       		.uleb128 0x19
 2598 004a 20       		.uleb128 0x20
 2599 004b 0B       		.uleb128 0xb
 2600 004c 01       		.uleb128 0x1
 2601 004d 13       		.uleb128 0x13
 2602 004e 00       		.byte	0
 2603 004f 00       		.byte	0
 2604 0050 07       		.uleb128 0x7
 2605 0051 05       		.uleb128 0x5
 2606 0052 00       		.byte	0
 2607 0053 03       		.uleb128 0x3
 2608 0054 0E       		.uleb128 0xe
 2609 0055 3A       		.uleb128 0x3a
 2610 0056 0B       		.uleb128 0xb
 2611 0057 3B       		.uleb128 0x3b
 2612 0058 05       		.uleb128 0x5
 2613 0059 49       		.uleb128 0x49
 2614 005a 13       		.uleb128 0x13
 2615 005b 00       		.byte	0
 2616 005c 00       		.byte	0
 2617 005d 08       		.uleb128 0x8
 2618 005e 2E       		.uleb128 0x2e
 2619 005f 01       		.byte	0x1
 2620 0060 3F       		.uleb128 0x3f
 2621 0061 19       		.uleb128 0x19
 2622 0062 03       		.uleb128 0x3
 2623 0063 0E       		.uleb128 0xe
 2624 0064 3A       		.uleb128 0x3a
 2625 0065 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 76


 2626 0066 3B       		.uleb128 0x3b
 2627 0067 0B       		.uleb128 0xb
 2628 0068 27       		.uleb128 0x27
 2629 0069 19       		.uleb128 0x19
 2630 006a 11       		.uleb128 0x11
 2631 006b 01       		.uleb128 0x1
 2632 006c 12       		.uleb128 0x12
 2633 006d 06       		.uleb128 0x6
 2634 006e 40       		.uleb128 0x40
 2635 006f 18       		.uleb128 0x18
 2636 0070 9742     		.uleb128 0x2117
 2637 0072 19       		.uleb128 0x19
 2638 0073 01       		.uleb128 0x1
 2639 0074 13       		.uleb128 0x13
 2640 0075 00       		.byte	0
 2641 0076 00       		.byte	0
 2642 0077 09       		.uleb128 0x9
 2643 0078 1D       		.uleb128 0x1d
 2644 0079 01       		.byte	0x1
 2645 007a 31       		.uleb128 0x31
 2646 007b 13       		.uleb128 0x13
 2647 007c 52       		.uleb128 0x52
 2648 007d 01       		.uleb128 0x1
 2649 007e 55       		.uleb128 0x55
 2650 007f 17       		.uleb128 0x17
 2651 0080 58       		.uleb128 0x58
 2652 0081 0B       		.uleb128 0xb
 2653 0082 59       		.uleb128 0x59
 2654 0083 0B       		.uleb128 0xb
 2655 0084 01       		.uleb128 0x1
 2656 0085 13       		.uleb128 0x13
 2657 0086 00       		.byte	0
 2658 0087 00       		.byte	0
 2659 0088 0A       		.uleb128 0xa
 2660 0089 05       		.uleb128 0x5
 2661 008a 00       		.byte	0
 2662 008b 31       		.uleb128 0x31
 2663 008c 13       		.uleb128 0x13
 2664 008d 1C       		.uleb128 0x1c
 2665 008e 05       		.uleb128 0x5
 2666 008f 00       		.byte	0
 2667 0090 00       		.byte	0
 2668 0091 0B       		.uleb128 0xb
 2669 0092 05       		.uleb128 0x5
 2670 0093 00       		.byte	0
 2671 0094 31       		.uleb128 0x31
 2672 0095 13       		.uleb128 0x13
 2673 0096 1C       		.uleb128 0x1c
 2674 0097 0B       		.uleb128 0xb
 2675 0098 00       		.byte	0
 2676 0099 00       		.byte	0
 2677 009a 0C       		.uleb128 0xc
 2678 009b 1D       		.uleb128 0x1d
 2679 009c 01       		.byte	0x1
 2680 009d 31       		.uleb128 0x31
 2681 009e 13       		.uleb128 0x13
 2682 009f 11       		.uleb128 0x11
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 77


 2683 00a0 01       		.uleb128 0x1
 2684 00a1 12       		.uleb128 0x12
 2685 00a2 06       		.uleb128 0x6
 2686 00a3 58       		.uleb128 0x58
 2687 00a4 0B       		.uleb128 0xb
 2688 00a5 59       		.uleb128 0x59
 2689 00a6 0B       		.uleb128 0xb
 2690 00a7 01       		.uleb128 0x1
 2691 00a8 13       		.uleb128 0x13
 2692 00a9 00       		.byte	0
 2693 00aa 00       		.byte	0
 2694 00ab 0D       		.uleb128 0xd
 2695 00ac 1D       		.uleb128 0x1d
 2696 00ad 01       		.byte	0x1
 2697 00ae 31       		.uleb128 0x31
 2698 00af 13       		.uleb128 0x13
 2699 00b0 11       		.uleb128 0x11
 2700 00b1 01       		.uleb128 0x1
 2701 00b2 12       		.uleb128 0x12
 2702 00b3 06       		.uleb128 0x6
 2703 00b4 58       		.uleb128 0x58
 2704 00b5 0B       		.uleb128 0xb
 2705 00b6 59       		.uleb128 0x59
 2706 00b7 0B       		.uleb128 0xb
 2707 00b8 00       		.byte	0
 2708 00b9 00       		.byte	0
 2709 00ba 0E       		.uleb128 0xe
 2710 00bb 34       		.uleb128 0x34
 2711 00bc 00       		.byte	0
 2712 00bd 03       		.uleb128 0x3
 2713 00be 0E       		.uleb128 0xe
 2714 00bf 3A       		.uleb128 0x3a
 2715 00c0 0B       		.uleb128 0xb
 2716 00c1 3B       		.uleb128 0x3b
 2717 00c2 0B       		.uleb128 0xb
 2718 00c3 49       		.uleb128 0x49
 2719 00c4 13       		.uleb128 0x13
 2720 00c5 02       		.uleb128 0x2
 2721 00c6 17       		.uleb128 0x17
 2722 00c7 00       		.byte	0
 2723 00c8 00       		.byte	0
 2724 00c9 0F       		.uleb128 0xf
 2725 00ca 898201   		.uleb128 0x4109
 2726 00cd 00       		.byte	0
 2727 00ce 11       		.uleb128 0x11
 2728 00cf 01       		.uleb128 0x1
 2729 00d0 31       		.uleb128 0x31
 2730 00d1 13       		.uleb128 0x13
 2731 00d2 00       		.byte	0
 2732 00d3 00       		.byte	0
 2733 00d4 10       		.uleb128 0x10
 2734 00d5 2E       		.uleb128 0x2e
 2735 00d6 01       		.byte	0x1
 2736 00d7 3F       		.uleb128 0x3f
 2737 00d8 19       		.uleb128 0x19
 2738 00d9 03       		.uleb128 0x3
 2739 00da 0E       		.uleb128 0xe
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 78


 2740 00db 3A       		.uleb128 0x3a
 2741 00dc 0B       		.uleb128 0xb
 2742 00dd 3B       		.uleb128 0x3b
 2743 00de 05       		.uleb128 0x5
 2744 00df 27       		.uleb128 0x27
 2745 00e0 19       		.uleb128 0x19
 2746 00e1 11       		.uleb128 0x11
 2747 00e2 01       		.uleb128 0x1
 2748 00e3 12       		.uleb128 0x12
 2749 00e4 06       		.uleb128 0x6
 2750 00e5 40       		.uleb128 0x40
 2751 00e6 18       		.uleb128 0x18
 2752 00e7 9742     		.uleb128 0x2117
 2753 00e9 19       		.uleb128 0x19
 2754 00ea 01       		.uleb128 0x1
 2755 00eb 13       		.uleb128 0x13
 2756 00ec 00       		.byte	0
 2757 00ed 00       		.byte	0
 2758 00ee 11       		.uleb128 0x11
 2759 00ef 34       		.uleb128 0x34
 2760 00f0 00       		.byte	0
 2761 00f1 03       		.uleb128 0x3
 2762 00f2 0E       		.uleb128 0xe
 2763 00f3 3A       		.uleb128 0x3a
 2764 00f4 0B       		.uleb128 0xb
 2765 00f5 3B       		.uleb128 0x3b
 2766 00f6 05       		.uleb128 0x5
 2767 00f7 49       		.uleb128 0x49
 2768 00f8 13       		.uleb128 0x13
 2769 00f9 02       		.uleb128 0x2
 2770 00fa 17       		.uleb128 0x17
 2771 00fb 00       		.byte	0
 2772 00fc 00       		.byte	0
 2773 00fd 12       		.uleb128 0x12
 2774 00fe 05       		.uleb128 0x5
 2775 00ff 00       		.byte	0
 2776 0100 03       		.uleb128 0x3
 2777 0101 0E       		.uleb128 0xe
 2778 0102 3A       		.uleb128 0x3a
 2779 0103 0B       		.uleb128 0xb
 2780 0104 3B       		.uleb128 0x3b
 2781 0105 05       		.uleb128 0x5
 2782 0106 49       		.uleb128 0x49
 2783 0107 13       		.uleb128 0x13
 2784 0108 02       		.uleb128 0x2
 2785 0109 17       		.uleb128 0x17
 2786 010a 00       		.byte	0
 2787 010b 00       		.byte	0
 2788 010c 13       		.uleb128 0x13
 2789 010d 2E       		.uleb128 0x2e
 2790 010e 01       		.byte	0x1
 2791 010f 31       		.uleb128 0x31
 2792 0110 13       		.uleb128 0x13
 2793 0111 11       		.uleb128 0x11
 2794 0112 01       		.uleb128 0x1
 2795 0113 12       		.uleb128 0x12
 2796 0114 06       		.uleb128 0x6
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 79


 2797 0115 40       		.uleb128 0x40
 2798 0116 18       		.uleb128 0x18
 2799 0117 9742     		.uleb128 0x2117
 2800 0119 19       		.uleb128 0x19
 2801 011a 01       		.uleb128 0x1
 2802 011b 13       		.uleb128 0x13
 2803 011c 00       		.byte	0
 2804 011d 00       		.byte	0
 2805 011e 14       		.uleb128 0x14
 2806 011f 05       		.uleb128 0x5
 2807 0120 00       		.byte	0
 2808 0121 31       		.uleb128 0x31
 2809 0122 13       		.uleb128 0x13
 2810 0123 02       		.uleb128 0x2
 2811 0124 17       		.uleb128 0x17
 2812 0125 00       		.byte	0
 2813 0126 00       		.byte	0
 2814 0127 15       		.uleb128 0x15
 2815 0128 2E       		.uleb128 0x2e
 2816 0129 00       		.byte	0
 2817 012a 3F       		.uleb128 0x3f
 2818 012b 19       		.uleb128 0x19
 2819 012c 03       		.uleb128 0x3
 2820 012d 0E       		.uleb128 0xe
 2821 012e 3A       		.uleb128 0x3a
 2822 012f 0B       		.uleb128 0xb
 2823 0130 3B       		.uleb128 0x3b
 2824 0131 05       		.uleb128 0x5
 2825 0132 27       		.uleb128 0x27
 2826 0133 19       		.uleb128 0x19
 2827 0134 49       		.uleb128 0x49
 2828 0135 13       		.uleb128 0x13
 2829 0136 11       		.uleb128 0x11
 2830 0137 01       		.uleb128 0x1
 2831 0138 12       		.uleb128 0x12
 2832 0139 06       		.uleb128 0x6
 2833 013a 40       		.uleb128 0x40
 2834 013b 18       		.uleb128 0x18
 2835 013c 9742     		.uleb128 0x2117
 2836 013e 19       		.uleb128 0x19
 2837 013f 00       		.byte	0
 2838 0140 00       		.byte	0
 2839 0141 16       		.uleb128 0x16
 2840 0142 05       		.uleb128 0x5
 2841 0143 00       		.byte	0
 2842 0144 31       		.uleb128 0x31
 2843 0145 13       		.uleb128 0x13
 2844 0146 02       		.uleb128 0x2
 2845 0147 18       		.uleb128 0x18
 2846 0148 00       		.byte	0
 2847 0149 00       		.byte	0
 2848 014a 17       		.uleb128 0x17
 2849 014b 05       		.uleb128 0x5
 2850 014c 00       		.byte	0
 2851 014d 03       		.uleb128 0x3
 2852 014e 0E       		.uleb128 0xe
 2853 014f 3A       		.uleb128 0x3a
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 80


 2854 0150 0B       		.uleb128 0xb
 2855 0151 3B       		.uleb128 0x3b
 2856 0152 05       		.uleb128 0x5
 2857 0153 49       		.uleb128 0x49
 2858 0154 13       		.uleb128 0x13
 2859 0155 02       		.uleb128 0x2
 2860 0156 18       		.uleb128 0x18
 2861 0157 00       		.byte	0
 2862 0158 00       		.byte	0
 2863 0159 18       		.uleb128 0x18
 2864 015a 34       		.uleb128 0x34
 2865 015b 00       		.byte	0
 2866 015c 03       		.uleb128 0x3
 2867 015d 0E       		.uleb128 0xe
 2868 015e 3A       		.uleb128 0x3a
 2869 015f 0B       		.uleb128 0xb
 2870 0160 3B       		.uleb128 0x3b
 2871 0161 0B       		.uleb128 0xb
 2872 0162 49       		.uleb128 0x49
 2873 0163 13       		.uleb128 0x13
 2874 0164 3F       		.uleb128 0x3f
 2875 0165 19       		.uleb128 0x19
 2876 0166 02       		.uleb128 0x2
 2877 0167 18       		.uleb128 0x18
 2878 0168 00       		.byte	0
 2879 0169 00       		.byte	0
 2880 016a 19       		.uleb128 0x19
 2881 016b 2E       		.uleb128 0x2e
 2882 016c 00       		.byte	0
 2883 016d 3F       		.uleb128 0x3f
 2884 016e 19       		.uleb128 0x19
 2885 016f 03       		.uleb128 0x3
 2886 0170 0E       		.uleb128 0xe
 2887 0171 3A       		.uleb128 0x3a
 2888 0172 0B       		.uleb128 0xb
 2889 0173 3B       		.uleb128 0x3b
 2890 0174 0B       		.uleb128 0xb
 2891 0175 27       		.uleb128 0x27
 2892 0176 19       		.uleb128 0x19
 2893 0177 49       		.uleb128 0x49
 2894 0178 13       		.uleb128 0x13
 2895 0179 3C       		.uleb128 0x3c
 2896 017a 19       		.uleb128 0x19
 2897 017b 00       		.byte	0
 2898 017c 00       		.byte	0
 2899 017d 1A       		.uleb128 0x1a
 2900 017e 2E       		.uleb128 0x2e
 2901 017f 01       		.byte	0x1
 2902 0180 3F       		.uleb128 0x3f
 2903 0181 19       		.uleb128 0x19
 2904 0182 03       		.uleb128 0x3
 2905 0183 0E       		.uleb128 0xe
 2906 0184 3A       		.uleb128 0x3a
 2907 0185 0B       		.uleb128 0xb
 2908 0186 3B       		.uleb128 0x3b
 2909 0187 0B       		.uleb128 0xb
 2910 0188 27       		.uleb128 0x27
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 81


 2911 0189 19       		.uleb128 0x19
 2912 018a 3C       		.uleb128 0x3c
 2913 018b 19       		.uleb128 0x19
 2914 018c 00       		.byte	0
 2915 018d 00       		.byte	0
 2916 018e 1B       		.uleb128 0x1b
 2917 018f 05       		.uleb128 0x5
 2918 0190 00       		.byte	0
 2919 0191 49       		.uleb128 0x49
 2920 0192 13       		.uleb128 0x13
 2921 0193 00       		.byte	0
 2922 0194 00       		.byte	0
 2923 0195 00       		.byte	0
 2924              		.section	.debug_loc,"",%progbits
 2925              	.Ldebug_loc0:
 2926              	.LLST0:
 2927 0000 06000000 		.4byte	.LVL4
 2928 0004 13000000 		.4byte	.LVL5-1
 2929 0008 0100     		.2byte	0x1
 2930 000a 50       		.byte	0x50
 2931 000b 00000000 		.4byte	0
 2932 000f 00000000 		.4byte	0
 2933              	.LLST1:
 2934 0013 06000000 		.4byte	.LVL8
 2935 0017 13000000 		.4byte	.LVL9-1
 2936 001b 0100     		.2byte	0x1
 2937 001d 50       		.byte	0x50
 2938 001e 00000000 		.4byte	0
 2939 0022 00000000 		.4byte	0
 2940              	.LLST2:
 2941 0026 00000000 		.4byte	.LVL10
 2942 002a 07000000 		.4byte	.LVL11-1
 2943 002e 0100     		.2byte	0x1
 2944 0030 50       		.byte	0x50
 2945 0031 07000000 		.4byte	.LVL11-1
 2946 0035 1C000000 		.4byte	.LVL13
 2947 0039 0100     		.2byte	0x1
 2948 003b 54       		.byte	0x54
 2949 003c 1C000000 		.4byte	.LVL13
 2950 0040 28000000 		.4byte	.LFE4
 2951 0044 0400     		.2byte	0x4
 2952 0046 F3       		.byte	0xf3
 2953 0047 01       		.uleb128 0x1
 2954 0048 50       		.byte	0x50
 2955 0049 9F       		.byte	0x9f
 2956 004a 00000000 		.4byte	0
 2957 004e 00000000 		.4byte	0
 2958              	.LLST3:
 2959 0052 08000000 		.4byte	.LVL11
 2960 0056 1B000000 		.4byte	.LVL12-1
 2961 005a 0100     		.2byte	0x1
 2962 005c 50       		.byte	0x50
 2963 005d 00000000 		.4byte	0
 2964 0061 00000000 		.4byte	0
 2965              	.LLST4:
 2966 0065 00000000 		.4byte	.LVL14
 2967 0069 07000000 		.4byte	.LVL15-1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 82


 2968 006d 0100     		.2byte	0x1
 2969 006f 50       		.byte	0x50
 2970 0070 07000000 		.4byte	.LVL15-1
 2971 0074 1C000000 		.4byte	.LVL17
 2972 0078 0100     		.2byte	0x1
 2973 007a 54       		.byte	0x54
 2974 007b 1C000000 		.4byte	.LVL17
 2975 007f 28000000 		.4byte	.LFE5
 2976 0083 0400     		.2byte	0x4
 2977 0085 F3       		.byte	0xf3
 2978 0086 01       		.uleb128 0x1
 2979 0087 50       		.byte	0x50
 2980 0088 9F       		.byte	0x9f
 2981 0089 00000000 		.4byte	0
 2982 008d 00000000 		.4byte	0
 2983              	.LLST5:
 2984 0091 08000000 		.4byte	.LVL15
 2985 0095 1B000000 		.4byte	.LVL16-1
 2986 0099 0100     		.2byte	0x1
 2987 009b 50       		.byte	0x50
 2988 009c 00000000 		.4byte	0
 2989 00a0 00000000 		.4byte	0
 2990              	.LLST6:
 2991 00a4 00000000 		.4byte	.LVL18
 2992 00a8 07000000 		.4byte	.LVL19-1
 2993 00ac 0100     		.2byte	0x1
 2994 00ae 50       		.byte	0x50
 2995 00af 07000000 		.4byte	.LVL19-1
 2996 00b3 1C000000 		.4byte	.LVL21
 2997 00b7 0100     		.2byte	0x1
 2998 00b9 54       		.byte	0x54
 2999 00ba 1C000000 		.4byte	.LVL21
 3000 00be 28000000 		.4byte	.LFE6
 3001 00c2 0400     		.2byte	0x4
 3002 00c4 F3       		.byte	0xf3
 3003 00c5 01       		.uleb128 0x1
 3004 00c6 50       		.byte	0x50
 3005 00c7 9F       		.byte	0x9f
 3006 00c8 00000000 		.4byte	0
 3007 00cc 00000000 		.4byte	0
 3008              	.LLST7:
 3009 00d0 08000000 		.4byte	.LVL19
 3010 00d4 1B000000 		.4byte	.LVL20-1
 3011 00d8 0100     		.2byte	0x1
 3012 00da 50       		.byte	0x50
 3013 00db 00000000 		.4byte	0
 3014 00df 00000000 		.4byte	0
 3015              	.LLST8:
 3016 00e3 00000000 		.4byte	.LVL22
 3017 00e7 07000000 		.4byte	.LVL23-1
 3018 00eb 0100     		.2byte	0x1
 3019 00ed 50       		.byte	0x50
 3020 00ee 07000000 		.4byte	.LVL23-1
 3021 00f2 22000000 		.4byte	.LVL25
 3022 00f6 0100     		.2byte	0x1
 3023 00f8 54       		.byte	0x54
 3024 00f9 22000000 		.4byte	.LVL25
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 83


 3025 00fd 2C000000 		.4byte	.LFE7
 3026 0101 0400     		.2byte	0x4
 3027 0103 F3       		.byte	0xf3
 3028 0104 01       		.uleb128 0x1
 3029 0105 50       		.byte	0x50
 3030 0106 9F       		.byte	0x9f
 3031 0107 00000000 		.4byte	0
 3032 010b 00000000 		.4byte	0
 3033              	.LLST9:
 3034 010f 08000000 		.4byte	.LVL23
 3035 0113 21000000 		.4byte	.LVL24-1
 3036 0117 0100     		.2byte	0x1
 3037 0119 50       		.byte	0x50
 3038 011a 00000000 		.4byte	0
 3039 011e 00000000 		.4byte	0
 3040              	.LLST10:
 3041 0122 00000000 		.4byte	.LVL26
 3042 0126 04000000 		.4byte	.LVL27
 3043 012a 0100     		.2byte	0x1
 3044 012c 50       		.byte	0x50
 3045 012d 04000000 		.4byte	.LVL27
 3046 0131 10000000 		.4byte	.LFE8
 3047 0135 0400     		.2byte	0x4
 3048 0137 F3       		.byte	0xf3
 3049 0138 01       		.uleb128 0x1
 3050 0139 50       		.byte	0x50
 3051 013a 9F       		.byte	0x9f
 3052 013b 00000000 		.4byte	0
 3053 013f 00000000 		.4byte	0
 3054              	.LLST11:
 3055 0143 00000000 		.4byte	.LVL28
 3056 0147 07000000 		.4byte	.LVL29-1
 3057 014b 0100     		.2byte	0x1
 3058 014d 50       		.byte	0x50
 3059 014e 07000000 		.4byte	.LVL29-1
 3060 0152 22000000 		.4byte	.LVL31
 3061 0156 0100     		.2byte	0x1
 3062 0158 54       		.byte	0x54
 3063 0159 22000000 		.4byte	.LVL31
 3064 015d 28000000 		.4byte	.LFE9
 3065 0161 0400     		.2byte	0x4
 3066 0163 F3       		.byte	0xf3
 3067 0164 01       		.uleb128 0x1
 3068 0165 50       		.byte	0x50
 3069 0166 9F       		.byte	0x9f
 3070 0167 00000000 		.4byte	0
 3071 016b 00000000 		.4byte	0
 3072              	.LLST12:
 3073 016f 08000000 		.4byte	.LVL29
 3074 0173 21000000 		.4byte	.LVL30-1
 3075 0177 0100     		.2byte	0x1
 3076 0179 50       		.byte	0x50
 3077 017a 00000000 		.4byte	0
 3078 017e 00000000 		.4byte	0
 3079              	.LLST13:
 3080 0182 00000000 		.4byte	.LVL32
 3081 0186 07000000 		.4byte	.LVL33-1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 84


 3082 018a 0100     		.2byte	0x1
 3083 018c 50       		.byte	0x50
 3084 018d 07000000 		.4byte	.LVL33-1
 3085 0191 22000000 		.4byte	.LVL35
 3086 0195 0100     		.2byte	0x1
 3087 0197 54       		.byte	0x54
 3088 0198 22000000 		.4byte	.LVL35
 3089 019c 28000000 		.4byte	.LFE10
 3090 01a0 0400     		.2byte	0x4
 3091 01a2 F3       		.byte	0xf3
 3092 01a3 01       		.uleb128 0x1
 3093 01a4 50       		.byte	0x50
 3094 01a5 9F       		.byte	0x9f
 3095 01a6 00000000 		.4byte	0
 3096 01aa 00000000 		.4byte	0
 3097              	.LLST14:
 3098 01ae 08000000 		.4byte	.LVL33
 3099 01b2 21000000 		.4byte	.LVL34-1
 3100 01b6 0100     		.2byte	0x1
 3101 01b8 50       		.byte	0x50
 3102 01b9 00000000 		.4byte	0
 3103 01bd 00000000 		.4byte	0
 3104              	.LLST15:
 3105 01c1 00000000 		.4byte	.LVL36
 3106 01c5 07000000 		.4byte	.LVL37-1
 3107 01c9 0100     		.2byte	0x1
 3108 01cb 50       		.byte	0x50
 3109 01cc 07000000 		.4byte	.LVL37-1
 3110 01d0 10000000 		.4byte	.LVL38
 3111 01d4 0100     		.2byte	0x1
 3112 01d6 54       		.byte	0x54
 3113 01d7 10000000 		.4byte	.LVL38
 3114 01db 2C000000 		.4byte	.LFE11
 3115 01df 0400     		.2byte	0x4
 3116 01e1 F3       		.byte	0xf3
 3117 01e2 01       		.uleb128 0x1
 3118 01e3 50       		.byte	0x50
 3119 01e4 9F       		.byte	0x9f
 3120 01e5 00000000 		.4byte	0
 3121 01e9 00000000 		.4byte	0
 3122              	.LLST16:
 3123 01ed 08000000 		.4byte	.LVL37
 3124 01f1 1F000000 		.4byte	.LVL39-1
 3125 01f5 0100     		.2byte	0x1
 3126 01f7 50       		.byte	0x50
 3127 01f8 00000000 		.4byte	0
 3128 01fc 00000000 		.4byte	0
 3129              	.LLST17:
 3130 0200 00000000 		.4byte	.LVL40
 3131 0204 07000000 		.4byte	.LVL41-1
 3132 0208 0100     		.2byte	0x1
 3133 020a 50       		.byte	0x50
 3134 020b 07000000 		.4byte	.LVL41-1
 3135 020f 1C000000 		.4byte	.LVL43
 3136 0213 0100     		.2byte	0x1
 3137 0215 54       		.byte	0x54
 3138 0216 1C000000 		.4byte	.LVL43
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 85


 3139 021a 28000000 		.4byte	.LFE12
 3140 021e 0400     		.2byte	0x4
 3141 0220 F3       		.byte	0xf3
 3142 0221 01       		.uleb128 0x1
 3143 0222 50       		.byte	0x50
 3144 0223 9F       		.byte	0x9f
 3145 0224 00000000 		.4byte	0
 3146 0228 00000000 		.4byte	0
 3147              	.LLST18:
 3148 022c 08000000 		.4byte	.LVL41
 3149 0230 1B000000 		.4byte	.LVL42-1
 3150 0234 0100     		.2byte	0x1
 3151 0236 50       		.byte	0x50
 3152 0237 00000000 		.4byte	0
 3153 023b 00000000 		.4byte	0
 3154              	.LLST19:
 3155 023f 00000000 		.4byte	.LVL44
 3156 0243 04000000 		.4byte	.LVL45
 3157 0247 0100     		.2byte	0x1
 3158 0249 50       		.byte	0x50
 3159 024a 04000000 		.4byte	.LVL45
 3160 024e 0C000000 		.4byte	.LFE13
 3161 0252 0400     		.2byte	0x4
 3162 0254 F3       		.byte	0xf3
 3163 0255 01       		.uleb128 0x1
 3164 0256 50       		.byte	0x50
 3165 0257 9F       		.byte	0x9f
 3166 0258 00000000 		.4byte	0
 3167 025c 00000000 		.4byte	0
 3168              	.LLST20:
 3169 0260 00000000 		.4byte	.LVL46
 3170 0264 07000000 		.4byte	.LVL47-1
 3171 0268 0100     		.2byte	0x1
 3172 026a 50       		.byte	0x50
 3173 026b 07000000 		.4byte	.LVL47-1
 3174 026f 1C000000 		.4byte	.LVL49
 3175 0273 0100     		.2byte	0x1
 3176 0275 54       		.byte	0x54
 3177 0276 1C000000 		.4byte	.LVL49
 3178 027a 28000000 		.4byte	.LFE15
 3179 027e 0400     		.2byte	0x4
 3180 0280 F3       		.byte	0xf3
 3181 0281 01       		.uleb128 0x1
 3182 0282 50       		.byte	0x50
 3183 0283 9F       		.byte	0x9f
 3184 0284 00000000 		.4byte	0
 3185 0288 00000000 		.4byte	0
 3186              	.LLST21:
 3187 028c 08000000 		.4byte	.LVL47
 3188 0290 1B000000 		.4byte	.LVL48-1
 3189 0294 0100     		.2byte	0x1
 3190 0296 50       		.byte	0x50
 3191 0297 00000000 		.4byte	0
 3192 029b 00000000 		.4byte	0
 3193              	.LLST22:
 3194 029f 00000000 		.4byte	.LVL50
 3195 02a3 04000000 		.4byte	.LVL51
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 86


 3196 02a7 0100     		.2byte	0x1
 3197 02a9 50       		.byte	0x50
 3198 02aa 04000000 		.4byte	.LVL51
 3199 02ae 0C000000 		.4byte	.LFE16
 3200 02b2 0400     		.2byte	0x4
 3201 02b4 F3       		.byte	0xf3
 3202 02b5 01       		.uleb128 0x1
 3203 02b6 50       		.byte	0x50
 3204 02b7 9F       		.byte	0x9f
 3205 02b8 00000000 		.4byte	0
 3206 02bc 00000000 		.4byte	0
 3207              	.LLST23:
 3208 02c0 00000000 		.4byte	.LVL52
 3209 02c4 07000000 		.4byte	.LVL53-1
 3210 02c8 0100     		.2byte	0x1
 3211 02ca 50       		.byte	0x50
 3212 02cb 07000000 		.4byte	.LVL53-1
 3213 02cf 1E000000 		.4byte	.LVL55
 3214 02d3 0100     		.2byte	0x1
 3215 02d5 54       		.byte	0x54
 3216 02d6 1E000000 		.4byte	.LVL55
 3217 02da 24000000 		.4byte	.LFE18
 3218 02de 0400     		.2byte	0x4
 3219 02e0 F3       		.byte	0xf3
 3220 02e1 01       		.uleb128 0x1
 3221 02e2 50       		.byte	0x50
 3222 02e3 9F       		.byte	0x9f
 3223 02e4 00000000 		.4byte	0
 3224 02e8 00000000 		.4byte	0
 3225              	.LLST24:
 3226 02ec 08000000 		.4byte	.LVL53
 3227 02f0 1D000000 		.4byte	.LVL54-1
 3228 02f4 0100     		.2byte	0x1
 3229 02f6 50       		.byte	0x50
 3230 02f7 00000000 		.4byte	0
 3231 02fb 00000000 		.4byte	0
 3232              	.LLST25:
 3233 02ff 00000000 		.4byte	.LVL56
 3234 0303 04000000 		.4byte	.LVL57
 3235 0307 0100     		.2byte	0x1
 3236 0309 50       		.byte	0x50
 3237 030a 04000000 		.4byte	.LVL57
 3238 030e 0C000000 		.4byte	.LFE19
 3239 0312 0400     		.2byte	0x4
 3240 0314 F3       		.byte	0xf3
 3241 0315 01       		.uleb128 0x1
 3242 0316 50       		.byte	0x50
 3243 0317 9F       		.byte	0x9f
 3244 0318 00000000 		.4byte	0
 3245 031c 00000000 		.4byte	0
 3246              	.LLST26:
 3247 0320 00000000 		.4byte	.LVL58
 3248 0324 07000000 		.4byte	.LVL59-1
 3249 0328 0100     		.2byte	0x1
 3250 032a 50       		.byte	0x50
 3251 032b 07000000 		.4byte	.LVL59-1
 3252 032f 22000000 		.4byte	.LVL61
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 87


 3253 0333 0100     		.2byte	0x1
 3254 0335 54       		.byte	0x54
 3255 0336 22000000 		.4byte	.LVL61
 3256 033a 28000000 		.4byte	.LFE21
 3257 033e 0400     		.2byte	0x4
 3258 0340 F3       		.byte	0xf3
 3259 0341 01       		.uleb128 0x1
 3260 0342 50       		.byte	0x50
 3261 0343 9F       		.byte	0x9f
 3262 0344 00000000 		.4byte	0
 3263 0348 00000000 		.4byte	0
 3264              	.LLST27:
 3265 034c 08000000 		.4byte	.LVL59
 3266 0350 21000000 		.4byte	.LVL60-1
 3267 0354 0100     		.2byte	0x1
 3268 0356 50       		.byte	0x50
 3269 0357 00000000 		.4byte	0
 3270 035b 00000000 		.4byte	0
 3271              	.LLST28:
 3272 035f 00000000 		.4byte	.LVL62
 3273 0363 04000000 		.4byte	.LVL63
 3274 0367 0100     		.2byte	0x1
 3275 0369 50       		.byte	0x50
 3276 036a 04000000 		.4byte	.LVL63
 3277 036e 0C000000 		.4byte	.LFE22
 3278 0372 0400     		.2byte	0x4
 3279 0374 F3       		.byte	0xf3
 3280 0375 01       		.uleb128 0x1
 3281 0376 50       		.byte	0x50
 3282 0377 9F       		.byte	0x9f
 3283 0378 00000000 		.4byte	0
 3284 037c 00000000 		.4byte	0
 3285              	.LLST29:
 3286 0380 00000000 		.4byte	.LVL64
 3287 0384 04000000 		.4byte	.LVL65
 3288 0388 0100     		.2byte	0x1
 3289 038a 50       		.byte	0x50
 3290 038b 04000000 		.4byte	.LVL65
 3291 038f 0C000000 		.4byte	.LFE24
 3292 0393 0400     		.2byte	0x4
 3293 0395 F3       		.byte	0xf3
 3294 0396 01       		.uleb128 0x1
 3295 0397 50       		.byte	0x50
 3296 0398 9F       		.byte	0x9f
 3297 0399 00000000 		.4byte	0
 3298 039d 00000000 		.4byte	0
 3299              	.LLST30:
 3300 03a1 00000000 		.4byte	.LVL66
 3301 03a5 07000000 		.4byte	.LVL67-1
 3302 03a9 0100     		.2byte	0x1
 3303 03ab 50       		.byte	0x50
 3304 03ac 07000000 		.4byte	.LVL67-1
 3305 03b0 1C000000 		.4byte	.LVL69
 3306 03b4 0100     		.2byte	0x1
 3307 03b6 54       		.byte	0x54
 3308 03b7 1C000000 		.4byte	.LVL69
 3309 03bb 24000000 		.4byte	.LFE28
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 88


 3310 03bf 0400     		.2byte	0x4
 3311 03c1 F3       		.byte	0xf3
 3312 03c2 01       		.uleb128 0x1
 3313 03c3 50       		.byte	0x50
 3314 03c4 9F       		.byte	0x9f
 3315 03c5 00000000 		.4byte	0
 3316 03c9 00000000 		.4byte	0
 3317              	.LLST31:
 3318 03cd 08000000 		.4byte	.LVL67
 3319 03d1 1B000000 		.4byte	.LVL68-1
 3320 03d5 0100     		.2byte	0x1
 3321 03d7 50       		.byte	0x50
 3322 03d8 00000000 		.4byte	0
 3323 03dc 00000000 		.4byte	0
 3324              	.LLST32:
 3325 03e0 00000000 		.4byte	.LVL70
 3326 03e4 07000000 		.4byte	.LVL71-1
 3327 03e8 0100     		.2byte	0x1
 3328 03ea 50       		.byte	0x50
 3329 03eb 07000000 		.4byte	.LVL71-1
 3330 03ef 1E000000 		.4byte	.LVL73
 3331 03f3 0100     		.2byte	0x1
 3332 03f5 54       		.byte	0x54
 3333 03f6 1E000000 		.4byte	.LVL73
 3334 03fa 24000000 		.4byte	.LFE29
 3335 03fe 0400     		.2byte	0x4
 3336 0400 F3       		.byte	0xf3
 3337 0401 01       		.uleb128 0x1
 3338 0402 50       		.byte	0x50
 3339 0403 9F       		.byte	0x9f
 3340 0404 00000000 		.4byte	0
 3341 0408 00000000 		.4byte	0
 3342              	.LLST33:
 3343 040c 08000000 		.4byte	.LVL71
 3344 0410 1D000000 		.4byte	.LVL72-1
 3345 0414 0100     		.2byte	0x1
 3346 0416 50       		.byte	0x50
 3347 0417 00000000 		.4byte	0
 3348 041b 00000000 		.4byte	0
 3349              	.LLST34:
 3350 041f 00000000 		.4byte	.LVL74
 3351 0423 07000000 		.4byte	.LVL75-1
 3352 0427 0100     		.2byte	0x1
 3353 0429 50       		.byte	0x50
 3354 042a 07000000 		.4byte	.LVL75-1
 3355 042e 1E000000 		.4byte	.LVL77
 3356 0432 0100     		.2byte	0x1
 3357 0434 54       		.byte	0x54
 3358 0435 1E000000 		.4byte	.LVL77
 3359 0439 28000000 		.4byte	.LFE30
 3360 043d 0400     		.2byte	0x4
 3361 043f F3       		.byte	0xf3
 3362 0440 01       		.uleb128 0x1
 3363 0441 50       		.byte	0x50
 3364 0442 9F       		.byte	0x9f
 3365 0443 00000000 		.4byte	0
 3366 0447 00000000 		.4byte	0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 89


 3367              	.LLST35:
 3368 044b 08000000 		.4byte	.LVL75
 3369 044f 1D000000 		.4byte	.LVL76-1
 3370 0453 0100     		.2byte	0x1
 3371 0455 50       		.byte	0x50
 3372 0456 00000000 		.4byte	0
 3373 045a 00000000 		.4byte	0
 3374              	.LLST36:
 3375 045e 00000000 		.4byte	.LVL78
 3376 0462 07000000 		.4byte	.LVL79-1
 3377 0466 0100     		.2byte	0x1
 3378 0468 50       		.byte	0x50
 3379 0469 07000000 		.4byte	.LVL79-1
 3380 046d 1E000000 		.4byte	.LVL81
 3381 0471 0100     		.2byte	0x1
 3382 0473 54       		.byte	0x54
 3383 0474 1E000000 		.4byte	.LVL81
 3384 0478 24000000 		.4byte	.LFE31
 3385 047c 0400     		.2byte	0x4
 3386 047e F3       		.byte	0xf3
 3387 047f 01       		.uleb128 0x1
 3388 0480 50       		.byte	0x50
 3389 0481 9F       		.byte	0x9f
 3390 0482 00000000 		.4byte	0
 3391 0486 00000000 		.4byte	0
 3392              	.LLST37:
 3393 048a 08000000 		.4byte	.LVL79
 3394 048e 1D000000 		.4byte	.LVL80-1
 3395 0492 0100     		.2byte	0x1
 3396 0494 50       		.byte	0x50
 3397 0495 00000000 		.4byte	0
 3398 0499 00000000 		.4byte	0
 3399              	.LLST38:
 3400 049d 00000000 		.4byte	.LVL82
 3401 04a1 07000000 		.4byte	.LVL83-1
 3402 04a5 0100     		.2byte	0x1
 3403 04a7 50       		.byte	0x50
 3404 04a8 07000000 		.4byte	.LVL83-1
 3405 04ac 1E000000 		.4byte	.LVL85
 3406 04b0 0100     		.2byte	0x1
 3407 04b2 54       		.byte	0x54
 3408 04b3 1E000000 		.4byte	.LVL85
 3409 04b7 24000000 		.4byte	.LFE32
 3410 04bb 0400     		.2byte	0x4
 3411 04bd F3       		.byte	0xf3
 3412 04be 01       		.uleb128 0x1
 3413 04bf 50       		.byte	0x50
 3414 04c0 9F       		.byte	0x9f
 3415 04c1 00000000 		.4byte	0
 3416 04c5 00000000 		.4byte	0
 3417              	.LLST39:
 3418 04c9 08000000 		.4byte	.LVL83
 3419 04cd 1D000000 		.4byte	.LVL84-1
 3420 04d1 0100     		.2byte	0x1
 3421 04d3 50       		.byte	0x50
 3422 04d4 00000000 		.4byte	0
 3423 04d8 00000000 		.4byte	0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 90


 3424              	.LLST40:
 3425 04dc 00000000 		.4byte	.LVL86
 3426 04e0 0B000000 		.4byte	.LVL87-1
 3427 04e4 0100     		.2byte	0x1
 3428 04e6 50       		.byte	0x50
 3429 04e7 0B000000 		.4byte	.LVL87-1
 3430 04eb 1C000000 		.4byte	.LFE33
 3431 04ef 0400     		.2byte	0x4
 3432 04f1 F3       		.byte	0xf3
 3433 04f2 01       		.uleb128 0x1
 3434 04f3 50       		.byte	0x50
 3435 04f4 9F       		.byte	0x9f
 3436 04f5 00000000 		.4byte	0
 3437 04f9 00000000 		.4byte	0
 3438              	.LLST41:
 3439 04fd 00000000 		.4byte	.LVL86
 3440 0501 0B000000 		.4byte	.LVL87-1
 3441 0505 0100     		.2byte	0x1
 3442 0507 51       		.byte	0x51
 3443 0508 0B000000 		.4byte	.LVL87-1
 3444 050c 14000000 		.4byte	.LVL89
 3445 0510 0100     		.2byte	0x1
 3446 0512 55       		.byte	0x55
 3447 0513 14000000 		.4byte	.LVL89
 3448 0517 1C000000 		.4byte	.LFE33
 3449 051b 0400     		.2byte	0x4
 3450 051d F3       		.byte	0xf3
 3451 051e 01       		.uleb128 0x1
 3452 051f 51       		.byte	0x51
 3453 0520 9F       		.byte	0x9f
 3454 0521 00000000 		.4byte	0
 3455 0525 00000000 		.4byte	0
 3456              	.LLST42:
 3457 0529 0C000000 		.4byte	.LVL87
 3458 052d 13000000 		.4byte	.LVL88-1
 3459 0531 0100     		.2byte	0x1
 3460 0533 50       		.byte	0x50
 3461 0534 00000000 		.4byte	0
 3462 0538 00000000 		.4byte	0
 3463              		.section	.debug_aranges,"",%progbits
 3464 0000 54010000 		.4byte	0x154
 3465 0004 0200     		.2byte	0x2
 3466 0006 00000000 		.4byte	.Ldebug_info0
 3467 000a 04       		.byte	0x4
 3468 000b 00       		.byte	0
 3469 000c 0000     		.2byte	0
 3470 000e 0000     		.2byte	0
 3471 0010 00000000 		.4byte	.LFB0
 3472 0014 60000000 		.4byte	.LFE0-.LFB0
 3473 0018 00000000 		.4byte	.LFB1
 3474 001c 1C000000 		.4byte	.LFE1-.LFB1
 3475 0020 00000000 		.4byte	.LFB2
 3476 0024 1C000000 		.4byte	.LFE2-.LFB2
 3477 0028 00000000 		.4byte	.LFB3
 3478 002c 1C000000 		.4byte	.LFE3-.LFB3
 3479 0030 00000000 		.4byte	.LFB4
 3480 0034 28000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 91


 3481 0038 00000000 		.4byte	.LFB5
 3482 003c 28000000 		.4byte	.LFE5-.LFB5
 3483 0040 00000000 		.4byte	.LFB6
 3484 0044 28000000 		.4byte	.LFE6-.LFB6
 3485 0048 00000000 		.4byte	.LFB7
 3486 004c 2C000000 		.4byte	.LFE7-.LFB7
 3487 0050 00000000 		.4byte	.LFB8
 3488 0054 10000000 		.4byte	.LFE8-.LFB8
 3489 0058 00000000 		.4byte	.LFB9
 3490 005c 28000000 		.4byte	.LFE9-.LFB9
 3491 0060 00000000 		.4byte	.LFB10
 3492 0064 28000000 		.4byte	.LFE10-.LFB10
 3493 0068 00000000 		.4byte	.LFB11
 3494 006c 2C000000 		.4byte	.LFE11-.LFB11
 3495 0070 00000000 		.4byte	.LFB12
 3496 0074 28000000 		.4byte	.LFE12-.LFB12
 3497 0078 00000000 		.4byte	.LFB13
 3498 007c 0C000000 		.4byte	.LFE13-.LFB13
 3499 0080 00000000 		.4byte	.LFB14
 3500 0084 0C000000 		.4byte	.LFE14-.LFB14
 3501 0088 00000000 		.4byte	.LFB15
 3502 008c 28000000 		.4byte	.LFE15-.LFB15
 3503 0090 00000000 		.4byte	.LFB16
 3504 0094 0C000000 		.4byte	.LFE16-.LFB16
 3505 0098 00000000 		.4byte	.LFB17
 3506 009c 0C000000 		.4byte	.LFE17-.LFB17
 3507 00a0 00000000 		.4byte	.LFB18
 3508 00a4 24000000 		.4byte	.LFE18-.LFB18
 3509 00a8 00000000 		.4byte	.LFB19
 3510 00ac 0C000000 		.4byte	.LFE19-.LFB19
 3511 00b0 00000000 		.4byte	.LFB20
 3512 00b4 0C000000 		.4byte	.LFE20-.LFB20
 3513 00b8 00000000 		.4byte	.LFB21
 3514 00bc 28000000 		.4byte	.LFE21-.LFB21
 3515 00c0 00000000 		.4byte	.LFB22
 3516 00c4 0C000000 		.4byte	.LFE22-.LFB22
 3517 00c8 00000000 		.4byte	.LFB23
 3518 00cc 0C000000 		.4byte	.LFE23-.LFB23
 3519 00d0 00000000 		.4byte	.LFB24
 3520 00d4 0C000000 		.4byte	.LFE24-.LFB24
 3521 00d8 00000000 		.4byte	.LFB25
 3522 00dc 0C000000 		.4byte	.LFE25-.LFB25
 3523 00e0 00000000 		.4byte	.LFB26
 3524 00e4 0C000000 		.4byte	.LFE26-.LFB26
 3525 00e8 00000000 		.4byte	.LFB27
 3526 00ec 0C000000 		.4byte	.LFE27-.LFB27
 3527 00f0 00000000 		.4byte	.LFB28
 3528 00f4 24000000 		.4byte	.LFE28-.LFB28
 3529 00f8 00000000 		.4byte	.LFB29
 3530 00fc 24000000 		.4byte	.LFE29-.LFB29
 3531 0100 00000000 		.4byte	.LFB30
 3532 0104 28000000 		.4byte	.LFE30-.LFB30
 3533 0108 00000000 		.4byte	.LFB31
 3534 010c 24000000 		.4byte	.LFE31-.LFB31
 3535 0110 00000000 		.4byte	.LFB32
 3536 0114 24000000 		.4byte	.LFE32-.LFB32
 3537 0118 00000000 		.4byte	.LFB33
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 92


 3538 011c 1C000000 		.4byte	.LFE33-.LFB33
 3539 0120 00000000 		.4byte	.LFB34
 3540 0124 14000000 		.4byte	.LFE34-.LFB34
 3541 0128 00000000 		.4byte	.LFB35
 3542 012c 0C000000 		.4byte	.LFE35-.LFB35
 3543 0130 00000000 		.4byte	.LFB36
 3544 0134 0C000000 		.4byte	.LFE36-.LFB36
 3545 0138 00000000 		.4byte	.LFB37
 3546 013c 0C000000 		.4byte	.LFE37-.LFB37
 3547 0140 00000000 		.4byte	.LFB38
 3548 0144 0C000000 		.4byte	.LFE38-.LFB38
 3549 0148 00000000 		.4byte	.LFB39
 3550 014c 0C000000 		.4byte	.LFE39-.LFB39
 3551 0150 00000000 		.4byte	0
 3552 0154 00000000 		.4byte	0
 3553              		.section	.debug_ranges,"",%progbits
 3554              	.Ldebug_ranges0:
 3555 0000 14000000 		.4byte	.LBB10
 3556 0004 16000000 		.4byte	.LBE10
 3557 0008 2C000000 		.4byte	.LBB19
 3558 000c 30000000 		.4byte	.LBE19
 3559 0010 00000000 		.4byte	0
 3560 0014 00000000 		.4byte	0
 3561 0018 20000000 		.4byte	.LBB13
 3562 001c 24000000 		.4byte	.LBE13
 3563 0020 24000000 		.4byte	.LBB16
 3564 0024 26000000 		.4byte	.LBE16
 3565 0028 00000000 		.4byte	0
 3566 002c 00000000 		.4byte	0
 3567 0030 00000000 		.4byte	.LFB0
 3568 0034 60000000 		.4byte	.LFE0
 3569 0038 00000000 		.4byte	.LFB1
 3570 003c 1C000000 		.4byte	.LFE1
 3571 0040 00000000 		.4byte	.LFB2
 3572 0044 1C000000 		.4byte	.LFE2
 3573 0048 00000000 		.4byte	.LFB3
 3574 004c 1C000000 		.4byte	.LFE3
 3575 0050 00000000 		.4byte	.LFB4
 3576 0054 28000000 		.4byte	.LFE4
 3577 0058 00000000 		.4byte	.LFB5
 3578 005c 28000000 		.4byte	.LFE5
 3579 0060 00000000 		.4byte	.LFB6
 3580 0064 28000000 		.4byte	.LFE6
 3581 0068 00000000 		.4byte	.LFB7
 3582 006c 2C000000 		.4byte	.LFE7
 3583 0070 00000000 		.4byte	.LFB8
 3584 0074 10000000 		.4byte	.LFE8
 3585 0078 00000000 		.4byte	.LFB9
 3586 007c 28000000 		.4byte	.LFE9
 3587 0080 00000000 		.4byte	.LFB10
 3588 0084 28000000 		.4byte	.LFE10
 3589 0088 00000000 		.4byte	.LFB11
 3590 008c 2C000000 		.4byte	.LFE11
 3591 0090 00000000 		.4byte	.LFB12
 3592 0094 28000000 		.4byte	.LFE12
 3593 0098 00000000 		.4byte	.LFB13
 3594 009c 0C000000 		.4byte	.LFE13
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 93


 3595 00a0 00000000 		.4byte	.LFB14
 3596 00a4 0C000000 		.4byte	.LFE14
 3597 00a8 00000000 		.4byte	.LFB15
 3598 00ac 28000000 		.4byte	.LFE15
 3599 00b0 00000000 		.4byte	.LFB16
 3600 00b4 0C000000 		.4byte	.LFE16
 3601 00b8 00000000 		.4byte	.LFB17
 3602 00bc 0C000000 		.4byte	.LFE17
 3603 00c0 00000000 		.4byte	.LFB18
 3604 00c4 24000000 		.4byte	.LFE18
 3605 00c8 00000000 		.4byte	.LFB19
 3606 00cc 0C000000 		.4byte	.LFE19
 3607 00d0 00000000 		.4byte	.LFB20
 3608 00d4 0C000000 		.4byte	.LFE20
 3609 00d8 00000000 		.4byte	.LFB21
 3610 00dc 28000000 		.4byte	.LFE21
 3611 00e0 00000000 		.4byte	.LFB22
 3612 00e4 0C000000 		.4byte	.LFE22
 3613 00e8 00000000 		.4byte	.LFB23
 3614 00ec 0C000000 		.4byte	.LFE23
 3615 00f0 00000000 		.4byte	.LFB24
 3616 00f4 0C000000 		.4byte	.LFE24
 3617 00f8 00000000 		.4byte	.LFB25
 3618 00fc 0C000000 		.4byte	.LFE25
 3619 0100 00000000 		.4byte	.LFB26
 3620 0104 0C000000 		.4byte	.LFE26
 3621 0108 00000000 		.4byte	.LFB27
 3622 010c 0C000000 		.4byte	.LFE27
 3623 0110 00000000 		.4byte	.LFB28
 3624 0114 24000000 		.4byte	.LFE28
 3625 0118 00000000 		.4byte	.LFB29
 3626 011c 24000000 		.4byte	.LFE29
 3627 0120 00000000 		.4byte	.LFB30
 3628 0124 28000000 		.4byte	.LFE30
 3629 0128 00000000 		.4byte	.LFB31
 3630 012c 24000000 		.4byte	.LFE31
 3631 0130 00000000 		.4byte	.LFB32
 3632 0134 24000000 		.4byte	.LFE32
 3633 0138 00000000 		.4byte	.LFB33
 3634 013c 1C000000 		.4byte	.LFE33
 3635 0140 00000000 		.4byte	.LFB34
 3636 0144 14000000 		.4byte	.LFE34
 3637 0148 00000000 		.4byte	.LFB35
 3638 014c 0C000000 		.4byte	.LFE35
 3639 0150 00000000 		.4byte	.LFB36
 3640 0154 0C000000 		.4byte	.LFE36
 3641 0158 00000000 		.4byte	.LFB37
 3642 015c 0C000000 		.4byte	.LFE37
 3643 0160 00000000 		.4byte	.LFB38
 3644 0164 0C000000 		.4byte	.LFE38
 3645 0168 00000000 		.4byte	.LFB39
 3646 016c 0C000000 		.4byte	.LFE39
 3647 0170 00000000 		.4byte	0
 3648 0174 00000000 		.4byte	0
 3649              		.section	.debug_line,"",%progbits
 3650              	.Ldebug_line0:
 3651 0000 F8030000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 94


 3651      02004D00 
 3651      00000201 
 3651      FB0E0D00 
 3651      01010101 
 3652              	.LASF23:
 3653 0000 636F756E 		.ascii	"count\000"
 3653      7400
 3654              	.LASF76:
 3655 0006 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3655      4320342E 
 3655      392E3320 
 3655      32303135 
 3655      30333033 
 3656 0039 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3656      20726576 
 3656      6973696F 
 3656      6E203232 
 3656      31323230 
 3657 006c 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3657      66756E63 
 3657      74696F6E 
 3657      2D736563 
 3657      74696F6E 
 3658              	.LASF25:
 3659 0094 50574D5F 		.ascii	"PWM_Enable\000"
 3659      456E6162 
 3659      6C6500
 3660              	.LASF81:
 3661 009f 43794578 		.ascii	"CyExitCriticalSection\000"
 3661      69744372 
 3661      69746963 
 3661      616C5365 
 3661      6374696F 
 3662              	.LASF39:
 3663 00b5 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3663      53657450 
 3663      574D5379 
 3663      6E634B69 
 3663      6C6C00
 3664              	.LASF19:
 3665 00c8 70657269 		.ascii	"period\000"
 3665      6F6400
 3666              	.LASF7:
 3667 00cf 6C6F6E67 		.ascii	"long long unsigned int\000"
 3667      206C6F6E 
 3667      6720756E 
 3667      7369676E 
 3667      65642069 
 3668              	.LASF63:
 3669 00e6 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3669      53657443 
 3669      61707475 
 3669      72654D6F 
 3669      646500
 3670              	.LASF32:
 3671 00f9 71644D6F 		.ascii	"qdMode\000"
 3671      646500
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 95


 3672              	.LASF22:
 3673 0100 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3673      57726974 
 3673      65436F75 
 3673      6E746572 
 3673      00
 3674              	.LASF49:
 3675 0111 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3675      52656164 
 3675      436F756E 
 3675      74657200 
 3676              	.LASF6:
 3677 0121 6C6F6E67 		.ascii	"long long int\000"
 3677      206C6F6E 
 3677      6720696E 
 3677      7400
 3678              	.LASF0:
 3679 012f 7369676E 		.ascii	"signed char\000"
 3679      65642063 
 3679      68617200 
 3680              	.LASF58:
 3681 013b 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3681      57726974 
 3681      65436F6D 
 3681      70617265 
 3681      42756600 
 3682              	.LASF16:
 3683 014f 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3683      53657449 
 3683      6E746572 
 3683      72757074 
 3683      4D6F6465 
 3684              	.LASF74:
 3685 0164 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3685      436C6561 
 3685      72496E74 
 3685      65727275 
 3685      707400
 3686              	.LASF77:
 3687 0177 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 3687      6E657261 
 3687      7465645F 
 3687      536F7572 
 3687      63655C50 
 3688              	.LASF78:
 3689 0196 433A5C44 		.ascii	"C:\\Documents and Settings\\Chuck\\My Documents\\PS"
 3689      6F63756D 
 3689      656E7473 
 3689      20616E64 
 3689      20536574 
 3690 01c5 6F432043 		.ascii	"oC Creator\\RosOnAStick\\Bootloader.cydsn\000"
 3690      72656174 
 3690      6F725C52 
 3690      6F734F6E 
 3690      41537469 
 3691              	.LASF4:
 3692 01ed 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 96


 3692      20696E74 
 3692      00
 3693              	.LASF9:
 3694 01f6 75696E74 		.ascii	"uint8\000"
 3694      3800
 3695              	.LASF12:
 3696 01fc 646F7562 		.ascii	"double\000"
 3696      6C6500
 3697              	.LASF60:
 3698 0203 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3698      52656164 
 3698      436F6D70 
 3698      61726542 
 3698      756600
 3699              	.LASF51:
 3700 0216 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3700      53657443 
 3700      6F6D7061 
 3700      72655377 
 3700      617000
 3701              	.LASF27:
 3702 0229 50574D5F 		.ascii	"PWM_Stop\000"
 3702      53746F70 
 3702      00
 3703              	.LASF45:
 3704 0232 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3704      53657450 
 3704      574D496E 
 3704      76657274 
 3704      00
 3705              	.LASF10:
 3706 0243 75696E74 		.ascii	"uint32\000"
 3706      333200
 3707              	.LASF66:
 3708 024a 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3708      53657453 
 3708      74617274 
 3708      4D6F6465 
 3708      00
 3709              	.LASF64:
 3710 025b 74726967 		.ascii	"triggerMode\000"
 3710      6765724D 
 3710      6F646500 
 3711              	.LASF46:
 3712 0267 6D61736B 		.ascii	"mask\000"
 3712      00
 3713              	.LASF71:
 3714 026c 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3714      52656164 
 3714      53746174 
 3714      757300
 3715              	.LASF44:
 3716 027b 64656164 		.ascii	"deadTime\000"
 3716      54696D65 
 3716      00
 3717              	.LASF67:
 3718 0284 50574D5F 		.ascii	"PWM_SetStopMode\000"
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 97


 3718      53657453 
 3718      746F704D 
 3718      6F646500 
 3719              	.LASF8:
 3720 0294 756E7369 		.ascii	"unsigned int\000"
 3720      676E6564 
 3720      20696E74 
 3720      00
 3721              	.LASF43:
 3722 02a1 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3722      53657450 
 3722      574D4465 
 3722      61645469 
 3722      6D6500
 3723              	.LASF70:
 3724 02b4 636F6D6D 		.ascii	"command\000"
 3724      616E6400 
 3725              	.LASF5:
 3726 02bc 6C6F6E67 		.ascii	"long unsigned int\000"
 3726      20756E73 
 3726      69676E65 
 3726      6420696E 
 3726      7400
 3727              	.LASF38:
 3728 02ce 6D6F6465 		.ascii	"modeMask\000"
 3728      4D61736B 
 3728      00
 3729              	.LASF80:
 3730 02d7 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3730      74657243 
 3730      72697469 
 3730      63616C53 
 3730      65637469 
 3731              	.LASF3:
 3732 02ee 73686F72 		.ascii	"short unsigned int\000"
 3732      7420756E 
 3732      7369676E 
 3732      65642069 
 3732      6E7400
 3733              	.LASF33:
 3734 0301 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3734      53657450 
 3734      72657363 
 3734      616C6572 
 3734      00
 3735              	.LASF26:
 3736 0312 50574D5F 		.ascii	"PWM_Start\000"
 3736      53746172 
 3736      7400
 3737              	.LASF69:
 3738 031c 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3738      54726967 
 3738      67657243 
 3738      6F6D6D61 
 3738      6E6400
 3739              	.LASF17:
 3740 032f 50574D5F 		.ascii	"PWM_WritePeriod\000"
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 98


 3740      57726974 
 3740      65506572 
 3740      696F6400 
 3741              	.LASF14:
 3742 033f 72656733 		.ascii	"reg32\000"
 3742      3200
 3743              	.LASF79:
 3744 0345 50574D5F 		.ascii	"PWM_initVar\000"
 3744      696E6974 
 3744      56617200 
 3745              	.LASF50:
 3746 0351 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3746      52656164 
 3746      50657269 
 3746      6F6400
 3747              	.LASF15:
 3748 0360 73697A65 		.ascii	"sizetype\000"
 3748      74797065 
 3748      00
 3749              	.LASF40:
 3750 0369 73796E63 		.ascii	"syncKillEnable\000"
 3750      4B696C6C 
 3750      456E6162 
 3750      6C6500
 3751              	.LASF21:
 3752 0378 636F6D70 		.ascii	"compare\000"
 3752      61726500 
 3753              	.LASF35:
 3754 0380 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3754      5365744F 
 3754      6E655368 
 3754      6F7400
 3755              	.LASF55:
 3756 038f 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3756      52656164 
 3756      50657269 
 3756      6F644275 
 3756      6600
 3757              	.LASF11:
 3758 03a1 666C6F61 		.ascii	"float\000"
 3758      7400
 3759              	.LASF34:
 3760 03a7 70726573 		.ascii	"prescaler\000"
 3760      63616C65 
 3760      7200
 3761              	.LASF61:
 3762 03b1 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3762      52656164 
 3762      43617074 
 3762      75726500 
 3763              	.LASF56:
 3764 03c1 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3764      53657450 
 3764      6572696F 
 3764      64537761 
 3764      7000
 3765              	.LASF1:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 99


 3766 03d3 756E7369 		.ascii	"unsigned char\000"
 3766      676E6564 
 3766      20636861 
 3766      7200
 3767              	.LASF24:
 3768 03e1 50574D5F 		.ascii	"PWM_Init\000"
 3768      496E6974 
 3768      00
 3769              	.LASF42:
 3770 03ea 73746F70 		.ascii	"stopOnKillEnable\000"
 3770      4F6E4B69 
 3770      6C6C456E 
 3770      61626C65 
 3770      00
 3771              	.LASF37:
 3772 03fb 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3772      53657450 
 3772      574D4D6F 
 3772      646500
 3773              	.LASF2:
 3774 040a 73686F72 		.ascii	"short int\000"
 3774      7420696E 
 3774      7400
 3775              	.LASF72:
 3776 0414 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3776      47657449 
 3776      6E746572 
 3776      72757074 
 3776      536F7572 
 3777              	.LASF18:
 3778 0431 696E7465 		.ascii	"interruptMask\000"
 3778      72727570 
 3778      744D6173 
 3778      6B00
 3779              	.LASF53:
 3780 043f 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3780      57726974 
 3780      65506572 
 3780      696F6442 
 3780      756600
 3781              	.LASF30:
 3782 0452 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3782      53657451 
 3782      444D6F64 
 3782      6500
 3783              	.LASF13:
 3784 0460 63686172 		.ascii	"char\000"
 3784      00
 3785              	.LASF31:
 3786 0465 6D6F6465 		.ascii	"mode\000"
 3786      00
 3787              	.LASF75:
 3788 046a 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3788      53657449 
 3788      6E746572 
 3788      72757074 
 3788      00
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 100


 3789              	.LASF65:
 3790 047b 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3790      53657452 
 3790      656C6F61 
 3790      644D6F64 
 3790      6500
 3791              	.LASF48:
 3792 048d 636F756E 		.ascii	"counterMode\000"
 3792      7465724D 
 3792      6F646500 
 3793              	.LASF59:
 3794 0499 636F6D70 		.ascii	"compareBuf\000"
 3794      61726542 
 3794      756600
 3795              	.LASF54:
 3796 04a4 70657269 		.ascii	"periodBuf\000"
 3796      6F644275 
 3796      6600
 3797              	.LASF62:
 3798 04ae 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3798      52656164 
 3798      43617074 
 3798      75726542 
 3798      756600
 3799              	.LASF28:
 3800 04c1 656E6162 		.ascii	"enableInterrupts\000"
 3800      6C65496E 
 3800      74657272 
 3800      75707473 
 3800      00
 3801              	.LASF68:
 3802 04d2 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3802      53657443 
 3802      6F756E74 
 3802      4D6F6465 
 3802      00
 3803              	.LASF36:
 3804 04e3 6F6E6553 		.ascii	"oneShotEnable\000"
 3804      686F7445 
 3804      6E61626C 
 3804      6500
 3805              	.LASF29:
 3806 04f1 50574D5F 		.ascii	"PWM_SetMode\000"
 3806      5365744D 
 3806      6F646500 
 3807              	.LASF41:
 3808 04fd 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3808      53657450 
 3808      574D5374 
 3808      6F704F6E 
 3808      4B696C6C 
 3809              	.LASF47:
 3810 0512 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3810      53657443 
 3810      6F756E74 
 3810      65724D6F 
 3810      646500
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccxhKFfP.s 			page 101


 3811              	.LASF52:
 3812 0525 73776170 		.ascii	"swapEnable\000"
 3812      456E6162 
 3812      6C6500
 3813              	.LASF73:
 3814 0530 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3814      47657449 
 3814      6E746572 
 3814      72757074 
 3814      536F7572 
 3815              	.LASF20:
 3816 0547 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3816      57726974 
 3816      65436F6D 
 3816      70617265 
 3816      00
 3817              	.LASF57:
 3818 0558 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3818      52656164 
 3818      436F6D70 
 3818      61726500 
 3819              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
