ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"isnprintf.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZL8add_charPPcPiic,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	_ZL8add_charPPcPiic, %function
  22              	_ZL8add_charPPcPiic:
  23              	.LFB0:
  24              		.file 1 ".\\ros_lib\\isnprintf.cpp"
   1:.\ros_lib/isnprintf.cpp **** /******************************************************************************
   2:.\ros_lib/isnprintf.cpp **** * derived from http://www.cypress.com/?id=4&rID=81086, license terms unknown
   3:.\ros_lib/isnprintf.cpp **** * modifications (c) C. Harrison CC BY 3.0 http://creativecommons.org/licenses/by/3.0/
   4:.\ros_lib/isnprintf.cpp **** *This file is for isnprintf()
   5:.\ros_lib/isnprintf.cpp **** *The isnprintf() is a simple snprintf() and only can print string with %s,%d,%c,%x.
   6:.\ros_lib/isnprintf.cpp **** *******************************************************************************/
   7:.\ros_lib/isnprintf.cpp **** #include "isnprintf.h"
   8:.\ros_lib/isnprintf.cpp **** 
   9:.\ros_lib/isnprintf.cpp **** static void add_char(char **ps, int* pchars_generated, int buf_len, char ch)
  10:.\ros_lib/isnprintf.cpp **** {
  25              		.loc 1 10 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 84B0     		sub	sp, sp, #16
  32              		.cfi_def_cfa_offset 24
  33 0004 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  35 0006 F860     		str	r0, [r7, #12]
  36 0008 B960     		str	r1, [r7, #8]
  37 000a 7A60     		str	r2, [r7, #4]
  38 000c 1A1C     		mov	r2, r3
  39 000e FB1C     		add	r3, r7, #3
  40 0010 1A70     		strb	r2, [r3]
  11:.\ros_lib/isnprintf.cpp ****    if((*pchars_generated)++ < buf_len)
  41              		.loc 1 11 0
  42 0012 BB68     		ldr	r3, [r7, #8]
  43 0014 1A68     		ldr	r2, [r3]
  44 0016 511C     		add	r1, r2, #1
  45 0018 BB68     		ldr	r3, [r7, #8]
  46 001a 1960     		str	r1, [r3]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 2


  47 001c 0123     		mov	r3, #1
  48 001e 7968     		ldr	r1, [r7, #4]
  49 0020 8A42     		cmp	r2, r1
  50 0022 00DB     		blt	.L2
  51 0024 0023     		mov	r3, #0
  52              	.L2:
  53 0026 DBB2     		uxtb	r3, r3
  54 0028 002B     		cmp	r3, #0
  55 002a 07D0     		beq	.L3
  12:.\ros_lib/isnprintf.cpp ****    {
  13:.\ros_lib/isnprintf.cpp ****        *(*ps)++ = ch;
  56              		.loc 1 13 0
  57 002c FB68     		ldr	r3, [r7, #12]
  58 002e 1B68     		ldr	r3, [r3]
  59 0030 591C     		add	r1, r3, #1
  60 0032 FA68     		ldr	r2, [r7, #12]
  61 0034 1160     		str	r1, [r2]
  62 0036 FA1C     		add	r2, r7, #3
  63 0038 1278     		ldrb	r2, [r2]
  64 003a 1A70     		strb	r2, [r3]
  65              	.L3:
  14:.\ros_lib/isnprintf.cpp ****    }
  15:.\ros_lib/isnprintf.cpp ****    if (*pchars_generated == buf_len)
  66              		.loc 1 15 0
  67 003c BB68     		ldr	r3, [r7, #8]
  68 003e 1A68     		ldr	r2, [r3]
  69 0040 7B68     		ldr	r3, [r7, #4]
  70 0042 9A42     		cmp	r2, r3
  71 0044 04D1     		bne	.L1
  16:.\ros_lib/isnprintf.cpp ****    {
  17:.\ros_lib/isnprintf.cpp ****        *(*ps-1) = 0;
  72              		.loc 1 17 0
  73 0046 FB68     		ldr	r3, [r7, #12]
  74 0048 1B68     		ldr	r3, [r3]
  75 004a 013B     		sub	r3, r3, #1
  76 004c 0022     		mov	r2, #0
  77 004e 1A70     		strb	r2, [r3]
  78              	.L1:
  18:.\ros_lib/isnprintf.cpp ****    }
  19:.\ros_lib/isnprintf.cpp **** }
  79              		.loc 1 19 0
  80 0050 BD46     		mov	sp, r7
  81 0052 04B0     		add	sp, sp, #16
  82              		@ sp needed
  83 0054 80BD     		pop	{r7, pc}
  84              		.cfi_endproc
  85              	.LFE0:
  86              		.size	_ZL8add_charPPcPiic, .-_ZL8add_charPPcPiic
  87 0056 C046     		.section	.rodata
  88              		.align	2
  89              	.LC0:
  90 0000 30313233 		.ascii	"0123456789abcdef\000"
  90      34353637 
  90      38396162 
  90      63646566 
  90      00
  91 0011 000000   		.section	.text._ZL6changeh,"ax",%progbits
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 3


  92              		.align	2
  93              		.code	16
  94              		.thumb_func
  95              		.type	_ZL6changeh, %function
  96              	_ZL6changeh:
  97              	.LFB1:
  20:.\ros_lib/isnprintf.cpp **** 
  21:.\ros_lib/isnprintf.cpp ****       
  22:.\ros_lib/isnprintf.cpp **** static char* change(uint8_t Index)
  23:.\ros_lib/isnprintf.cpp **** {
  98              		.loc 1 23 0
  99              		.cfi_startproc
 100 0000 80B5     		push	{r7, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 82B0     		sub	sp, sp, #8
 105              		.cfi_def_cfa_offset 16
 106 0004 00AF     		add	r7, sp, #0
 107              		.cfi_def_cfa_register 7
 108 0006 021C     		mov	r2, r0
 109 0008 FB1D     		add	r3, r7, #7
 110 000a 1A70     		strb	r2, [r3]
  24:.\ros_lib/isnprintf.cpp ****     return (char*)("0123456789abcdef"+Index);
 111              		.loc 1 24 0
 112 000c FB1D     		add	r3, r7, #7
 113 000e 1A78     		ldrb	r2, [r3]
 114 0010 024B     		ldr	r3, .L7
 115 0012 D318     		add	r3, r2, r3
  25:.\ros_lib/isnprintf.cpp **** }
 116              		.loc 1 25 0
 117 0014 181C     		mov	r0, r3
 118 0016 BD46     		mov	sp, r7
 119 0018 02B0     		add	sp, sp, #8
 120              		@ sp needed
 121 001a 80BD     		pop	{r7, pc}
 122              	.L8:
 123              		.align	2
 124              	.L7:
 125 001c 00000000 		.word	.LC0
 126              		.cfi_endproc
 127              	.LFE1:
 128              		.size	_ZL6changeh, .-_ZL6changeh
 129              		.global	__aeabi_uidivmod
 130              		.global	__aeabi_uidiv
 131              		.section	.text._Z9isnprintfPciPKcz,"ax",%progbits
 132              		.align	2
 133              		.global	_Z9isnprintfPciPKcz
 134              		.code	16
 135              		.thumb_func
 136              		.type	_Z9isnprintfPciPKcz, %function
 137              	_Z9isnprintfPciPKcz:
 138              	.LFB2:
  26:.\ros_lib/isnprintf.cpp **** 
  27:.\ros_lib/isnprintf.cpp **** 
  28:.\ros_lib/isnprintf.cpp **** int isnprintf(char *s, int buf_len, const char *pszFmt,...)
  29:.\ros_lib/isnprintf.cpp **** {
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 4


 139              		.loc 1 29 0
 140              		.cfi_startproc
 141 0000 0CB4     		push	{r2, r3}
 142              		.cfi_def_cfa_offset 8
 143 0002 90B5     		push	{r4, r7, lr}
 144              		.cfi_def_cfa_offset 20
 145              		.cfi_offset 4, -20
 146              		.cfi_offset 7, -16
 147              		.cfi_offset 14, -12
 148 0004 8FB0     		sub	sp, sp, #60
 149              		.cfi_def_cfa_offset 80
 150 0006 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
 152 0008 7860     		str	r0, [r7, #4]
 153 000a 3960     		str	r1, [r7]
 154              	.LBB2:
  30:.\ros_lib/isnprintf.cpp ****     int chars_generated=0;
 155              		.loc 1 30 0
 156 000c 0023     		mov	r3, #0
 157 000e BB61     		str	r3, [r7, #24]
  31:.\ros_lib/isnprintf.cpp ****     char *pszVal;
  32:.\ros_lib/isnprintf.cpp ****     uint32_t iVal, xVal, i = 0, index = 1;
 158              		.loc 1 32 0
 159 0010 0023     		mov	r3, #0
 160 0012 BB62     		str	r3, [r7, #40]
 161 0014 0123     		mov	r3, #1
 162 0016 7B62     		str	r3, [r7, #36]
  33:.\ros_lib/isnprintf.cpp ****     uint8_t buffer[12];
  34:.\ros_lib/isnprintf.cpp ****     char cVal;
  35:.\ros_lib/isnprintf.cpp ****     uint32_t *pArg;
  36:.\ros_lib/isnprintf.cpp ****     pArg =(uint32_t *)&pszFmt;
 163              		.loc 1 36 0
 164 0018 4823     		mov	r3, #72
 165 001a DB19     		add	r3, r3, r7
 166 001c 3B62     		str	r3, [r7, #32]
  37:.\ros_lib/isnprintf.cpp **** 
  38:.\ros_lib/isnprintf.cpp ****     while(*pszFmt)
 167              		.loc 1 38 0
 168 001e F2E0     		b	.L10
 169              	.L28:
  39:.\ros_lib/isnprintf.cpp ****     {
  40:.\ros_lib/isnprintf.cpp ****         if('%' != *pszFmt)
 170              		.loc 1 40 0
 171 0020 BB6C     		ldr	r3, [r7, #72]
 172 0022 1B78     		ldrb	r3, [r3]
 173 0024 252B     		cmp	r3, #37
 174 0026 0BD0     		beq	.L11
  41:.\ros_lib/isnprintf.cpp ****         {
  42:.\ros_lib/isnprintf.cpp ****             add_char(&s, &chars_generated, buf_len, *pszFmt);
 175              		.loc 1 42 0
 176 0028 BB6C     		ldr	r3, [r7, #72]
 177 002a 1B78     		ldrb	r3, [r3]
 178 002c 381D     		add	r0, r7, #4
 179 002e 391C     		mov	r1, r7
 180 0030 1831     		add	r1, r1, #24
 181 0032 3A68     		ldr	r2, [r7]
 182 0034 FFF7FEFF 		bl	_ZL8add_charPPcPiic
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 5


  43:.\ros_lib/isnprintf.cpp ****             pszFmt++;
 183              		.loc 1 43 0
 184 0038 BB6C     		ldr	r3, [r7, #72]
 185 003a 0133     		add	r3, r3, #1
 186 003c BB64     		str	r3, [r7, #72]
  44:.\ros_lib/isnprintf.cpp ****             continue;
 187              		.loc 1 44 0
 188 003e E2E0     		b	.L10
 189              	.L11:
  45:.\ros_lib/isnprintf.cpp ****         }
  46:.\ros_lib/isnprintf.cpp ****         pszFmt++;
 190              		.loc 1 46 0
 191 0040 BB6C     		ldr	r3, [r7, #72]
 192 0042 0133     		add	r3, r3, #1
 193 0044 BB64     		str	r3, [r7, #72]
  47:.\ros_lib/isnprintf.cpp **** 
  48:.\ros_lib/isnprintf.cpp ****         if(*pszFmt == 's')
 194              		.loc 1 48 0
 195 0046 BB6C     		ldr	r3, [r7, #72]
 196 0048 1B78     		ldrb	r3, [r3]
 197 004a 732B     		cmp	r3, #115
 198 004c 1BD1     		bne	.L12
  49:.\ros_lib/isnprintf.cpp ****         {
  50:.\ros_lib/isnprintf.cpp ****             pszVal = (char*)pArg[index++];
 199              		.loc 1 50 0
 200 004e 7B6A     		ldr	r3, [r7, #36]
 201 0050 5A1C     		add	r2, r3, #1
 202 0052 7A62     		str	r2, [r7, #36]
 203 0054 9B00     		lsl	r3, r3, #2
 204 0056 3A6A     		ldr	r2, [r7, #32]
 205 0058 D318     		add	r3, r2, r3
 206 005a 1B68     		ldr	r3, [r3]
 207 005c 7B63     		str	r3, [r7, #52]
  51:.\ros_lib/isnprintf.cpp ****             for(; *pszVal != '\0'; pszVal++)
 208              		.loc 1 51 0
 209 005e 0AE0     		b	.L13
 210              	.L14:
  52:.\ros_lib/isnprintf.cpp ****                 add_char(&s, &chars_generated, buf_len, *pszVal);
 211              		.loc 1 52 0 discriminator 2
 212 0060 7B6B     		ldr	r3, [r7, #52]
 213 0062 1B78     		ldrb	r3, [r3]
 214 0064 381D     		add	r0, r7, #4
 215 0066 391C     		mov	r1, r7
 216 0068 1831     		add	r1, r1, #24
 217 006a 3A68     		ldr	r2, [r7]
 218 006c FFF7FEFF 		bl	_ZL8add_charPPcPiic
  51:.\ros_lib/isnprintf.cpp ****             for(; *pszVal != '\0'; pszVal++)
 219              		.loc 1 51 0 discriminator 2
 220 0070 7B6B     		ldr	r3, [r7, #52]
 221 0072 0133     		add	r3, r3, #1
 222 0074 7B63     		str	r3, [r7, #52]
 223              	.L13:
  51:.\ros_lib/isnprintf.cpp ****             for(; *pszVal != '\0'; pszVal++)
 224              		.loc 1 51 0 is_stmt 0 discriminator 1
 225 0076 7B6B     		ldr	r3, [r7, #52]
 226 0078 1B78     		ldrb	r3, [r3]
 227 007a 002B     		cmp	r3, #0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 6


 228 007c F0D1     		bne	.L14
  53:.\ros_lib/isnprintf.cpp ****             pszFmt++;
 229              		.loc 1 53 0 is_stmt 1
 230 007e BB6C     		ldr	r3, [r7, #72]
 231 0080 0133     		add	r3, r3, #1
 232 0082 BB64     		str	r3, [r7, #72]
  54:.\ros_lib/isnprintf.cpp ****             continue;
 233              		.loc 1 54 0
 234 0084 BFE0     		b	.L10
 235              	.L12:
  55:.\ros_lib/isnprintf.cpp ****         }
  56:.\ros_lib/isnprintf.cpp ****         if(*pszFmt == 'd')
 236              		.loc 1 56 0
 237 0086 BB6C     		ldr	r3, [r7, #72]
 238 0088 1B78     		ldrb	r3, [r3]
 239 008a 642B     		cmp	r3, #100
 240 008c 4DD1     		bne	.L15
  57:.\ros_lib/isnprintf.cpp ****         {
  58:.\ros_lib/isnprintf.cpp ****             iVal = pArg[index++];
 241              		.loc 1 58 0
 242 008e 7B6A     		ldr	r3, [r7, #36]
 243 0090 5A1C     		add	r2, r3, #1
 244 0092 7A62     		str	r2, [r7, #36]
 245 0094 9B00     		lsl	r3, r3, #2
 246 0096 3A6A     		ldr	r2, [r7, #32]
 247 0098 D318     		add	r3, r2, r3
 248 009a 1B68     		ldr	r3, [r3]
 249 009c 3B63     		str	r3, [r7, #48]
  59:.\ros_lib/isnprintf.cpp ****             // handle negative sign
  60:.\ros_lib/isnprintf.cpp ****             if (iVal & 0x8000) {
 250              		.loc 1 60 0
 251 009e 3A6B     		ldr	r2, [r7, #48]
 252 00a0 8023     		mov	r3, #128
 253 00a2 1B02     		lsl	r3, r3, #8
 254 00a4 1340     		and	r3, r2
 255 00a6 0CD0     		beq	.L16
  61:.\ros_lib/isnprintf.cpp ****               iVal = ~iVal + 1;
 256              		.loc 1 61 0
 257 00a8 3B6B     		ldr	r3, [r7, #48]
 258 00aa 5B42     		neg	r3, r3
 259 00ac 3B63     		str	r3, [r7, #48]
  62:.\ros_lib/isnprintf.cpp ****               add_char(&s, &chars_generated, buf_len, '-');
 260              		.loc 1 62 0
 261 00ae 391D     		add	r1, r7, #4
 262 00b0 3A1C     		mov	r2, r7
 263 00b2 1832     		add	r2, r2, #24
 264 00b4 3B68     		ldr	r3, [r7]
 265 00b6 081C     		mov	r0, r1
 266 00b8 111C     		mov	r1, r2
 267 00ba 1A1C     		mov	r2, r3
 268 00bc 2D23     		mov	r3, #45
 269 00be FFF7FEFF 		bl	_ZL8add_charPPcPiic
 270              	.L16:
  63:.\ros_lib/isnprintf.cpp ****             }
  64:.\ros_lib/isnprintf.cpp ****             i = 0;
 271              		.loc 1 64 0
 272 00c2 0023     		mov	r3, #0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 7


 273 00c4 BB62     		str	r3, [r7, #40]
 274              	.L17:
  65:.\ros_lib/isnprintf.cpp ****             do{
  66:.\ros_lib/isnprintf.cpp ****                 buffer[i++] = iVal % 10;
 275              		.loc 1 66 0 discriminator 1
 276 00c6 BC6A     		ldr	r4, [r7, #40]
 277 00c8 631C     		add	r3, r4, #1
 278 00ca BB62     		str	r3, [r7, #40]
 279 00cc 3B6B     		ldr	r3, [r7, #48]
 280 00ce 181C     		mov	r0, r3
 281 00d0 0A21     		mov	r1, #10
 282 00d2 FFF7FEFF 		bl	__aeabi_uidivmod
 283 00d6 0B1C     		mov	r3, r1
 284 00d8 DAB2     		uxtb	r2, r3
 285 00da 3B1C     		mov	r3, r7
 286 00dc 0C33     		add	r3, r3, #12
 287 00de 1A55     		strb	r2, [r3, r4]
  67:.\ros_lib/isnprintf.cpp ****                 iVal /= 10;
 288              		.loc 1 67 0 discriminator 1
 289 00e0 3B6B     		ldr	r3, [r7, #48]
 290 00e2 181C     		mov	r0, r3
 291 00e4 0A21     		mov	r1, #10
 292 00e6 FFF7FEFF 		bl	__aeabi_uidiv
 293 00ea 031C     		mov	r3, r0
 294 00ec 3B63     		str	r3, [r7, #48]
  65:.\ros_lib/isnprintf.cpp ****             do{
 295              		.loc 1 65 0 discriminator 1
 296 00ee 3B6B     		ldr	r3, [r7, #48]
 297 00f0 002B     		cmp	r3, #0
 298 00f2 E8D1     		bne	.L17
  68:.\ros_lib/isnprintf.cpp ****             }while(iVal);
  69:.\ros_lib/isnprintf.cpp ****             while(i > 0)
 299              		.loc 1 69 0
 300 00f4 12E0     		b	.L18
 301              	.L19:
  70:.\ros_lib/isnprintf.cpp ****             {
  71:.\ros_lib/isnprintf.cpp ****                 i--;
 302              		.loc 1 71 0
 303 00f6 BB6A     		ldr	r3, [r7, #40]
 304 00f8 013B     		sub	r3, r3, #1
 305 00fa BB62     		str	r3, [r7, #40]
  72:.\ros_lib/isnprintf.cpp ****                 add_char(&s, &chars_generated, buf_len, *change(buffer[i]));
 306              		.loc 1 72 0
 307 00fc 3A1C     		mov	r2, r7
 308 00fe 0C32     		add	r2, r2, #12
 309 0100 BB6A     		ldr	r3, [r7, #40]
 310 0102 D318     		add	r3, r2, r3
 311 0104 1B78     		ldrb	r3, [r3]
 312 0106 181C     		mov	r0, r3
 313 0108 FFF7FEFF 		bl	_ZL6changeh
 314 010c 031C     		mov	r3, r0
 315 010e 1B78     		ldrb	r3, [r3]
 316 0110 381D     		add	r0, r7, #4
 317 0112 391C     		mov	r1, r7
 318 0114 1831     		add	r1, r1, #24
 319 0116 3A68     		ldr	r2, [r7]
 320 0118 FFF7FEFF 		bl	_ZL8add_charPPcPiic
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 8


 321              	.L18:
  69:.\ros_lib/isnprintf.cpp ****             while(i > 0)
 322              		.loc 1 69 0 discriminator 1
 323 011c BB6A     		ldr	r3, [r7, #40]
 324 011e 002B     		cmp	r3, #0
 325 0120 E9D1     		bne	.L19
  73:.\ros_lib/isnprintf.cpp ****             }
  74:.\ros_lib/isnprintf.cpp ****             pszFmt++;
 326              		.loc 1 74 0
 327 0122 BB6C     		ldr	r3, [r7, #72]
 328 0124 0133     		add	r3, r3, #1
 329 0126 BB64     		str	r3, [r7, #72]
  75:.\ros_lib/isnprintf.cpp ****             continue;
 330              		.loc 1 75 0
 331 0128 6DE0     		b	.L10
 332              	.L15:
  76:.\ros_lib/isnprintf.cpp ****         }
  77:.\ros_lib/isnprintf.cpp ****         if(*pszFmt == 'c')
 333              		.loc 1 77 0
 334 012a BB6C     		ldr	r3, [r7, #72]
 335 012c 1B78     		ldrb	r3, [r3]
 336 012e 632B     		cmp	r3, #99
 337 0130 16D1     		bne	.L20
  78:.\ros_lib/isnprintf.cpp ****         {
  79:.\ros_lib/isnprintf.cpp ****             cVal = (char)pArg[index++];
 338              		.loc 1 79 0
 339 0132 7B6A     		ldr	r3, [r7, #36]
 340 0134 5A1C     		add	r2, r3, #1
 341 0136 7A62     		str	r2, [r7, #36]
 342 0138 9B00     		lsl	r3, r3, #2
 343 013a 3A6A     		ldr	r2, [r7, #32]
 344 013c D318     		add	r3, r2, r3
 345 013e 1A68     		ldr	r2, [r3]
 346 0140 3B1C     		mov	r3, r7
 347 0142 1F33     		add	r3, r3, #31
 348 0144 1A70     		strb	r2, [r3]
  80:.\ros_lib/isnprintf.cpp ****             add_char(&s, &chars_generated, buf_len, cVal);
 349              		.loc 1 80 0
 350 0146 381D     		add	r0, r7, #4
 351 0148 391C     		mov	r1, r7
 352 014a 1831     		add	r1, r1, #24
 353 014c 3A68     		ldr	r2, [r7]
 354 014e 3B1C     		mov	r3, r7
 355 0150 1F33     		add	r3, r3, #31
 356 0152 1B78     		ldrb	r3, [r3]
 357 0154 FFF7FEFF 		bl	_ZL8add_charPPcPiic
  81:.\ros_lib/isnprintf.cpp ****             pszFmt++;
 358              		.loc 1 81 0
 359 0158 BB6C     		ldr	r3, [r7, #72]
 360 015a 0133     		add	r3, r3, #1
 361 015c BB64     		str	r3, [r7, #72]
  82:.\ros_lib/isnprintf.cpp ****             continue;
 362              		.loc 1 82 0
 363 015e 52E0     		b	.L10
 364              	.L20:
  83:.\ros_lib/isnprintf.cpp ****         }
  84:.\ros_lib/isnprintf.cpp ****         if(*pszFmt == 'x')
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 9


 365              		.loc 1 84 0
 366 0160 BB6C     		ldr	r3, [r7, #72]
 367 0162 1B78     		ldrb	r3, [r3]
 368 0164 782B     		cmp	r3, #120
 369 0166 4AD1     		bne	.L21
  85:.\ros_lib/isnprintf.cpp ****         {
  86:.\ros_lib/isnprintf.cpp ****             xVal = pArg[index++];
 370              		.loc 1 86 0
 371 0168 7B6A     		ldr	r3, [r7, #36]
 372 016a 5A1C     		add	r2, r3, #1
 373 016c 7A62     		str	r2, [r7, #36]
 374 016e 9B00     		lsl	r3, r3, #2
 375 0170 3A6A     		ldr	r2, [r7, #32]
 376 0172 D318     		add	r3, r2, r3
 377 0174 1B68     		ldr	r3, [r3]
 378 0176 FB62     		str	r3, [r7, #44]
  87:.\ros_lib/isnprintf.cpp ****             i = 0;
 379              		.loc 1 87 0
 380 0178 0023     		mov	r3, #0
 381 017a BB62     		str	r3, [r7, #40]
 382              	.L22:
  88:.\ros_lib/isnprintf.cpp ****             do{
  89:.\ros_lib/isnprintf.cpp ****                 buffer[i++] = xVal % 16;
 383              		.loc 1 89 0 discriminator 1
 384 017c BB6A     		ldr	r3, [r7, #40]
 385 017e 5A1C     		add	r2, r3, #1
 386 0180 BA62     		str	r2, [r7, #40]
 387 0182 FA6A     		ldr	r2, [r7, #44]
 388 0184 D1B2     		uxtb	r1, r2
 389 0186 0F22     		mov	r2, #15
 390 0188 0A40     		and	r2, r1
 391 018a D1B2     		uxtb	r1, r2
 392 018c 3A1C     		mov	r2, r7
 393 018e 0C32     		add	r2, r2, #12
 394 0190 D154     		strb	r1, [r2, r3]
  90:.\ros_lib/isnprintf.cpp ****                 xVal /= 16;
 395              		.loc 1 90 0 discriminator 1
 396 0192 FB6A     		ldr	r3, [r7, #44]
 397 0194 1B09     		lsr	r3, r3, #4
 398 0196 FB62     		str	r3, [r7, #44]
  88:.\ros_lib/isnprintf.cpp ****             do{
 399              		.loc 1 88 0 discriminator 1
 400 0198 FB6A     		ldr	r3, [r7, #44]
 401 019a 002B     		cmp	r3, #0
 402 019c EED1     		bne	.L22
  91:.\ros_lib/isnprintf.cpp ****             }while(xVal);
  92:.\ros_lib/isnprintf.cpp ****             if(i%2!=0)
 403              		.loc 1 92 0
 404 019e BA6A     		ldr	r2, [r7, #40]
 405 01a0 0123     		mov	r3, #1
 406 01a2 1340     		and	r3, r2
 407 01a4 06D0     		beq	.L23
  93:.\ros_lib/isnprintf.cpp ****                 buffer[i++]=0;
 408              		.loc 1 93 0
 409 01a6 BB6A     		ldr	r3, [r7, #40]
 410 01a8 5A1C     		add	r2, r3, #1
 411 01aa BA62     		str	r2, [r7, #40]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 10


 412 01ac 3A1C     		mov	r2, r7
 413 01ae 0C32     		add	r2, r2, #12
 414 01b0 0021     		mov	r1, #0
 415 01b2 D154     		strb	r1, [r2, r3]
 416              	.L23:
  94:.\ros_lib/isnprintf.cpp ****             if(i<2)
 417              		.loc 1 94 0
 418 01b4 BB6A     		ldr	r3, [r7, #40]
 419 01b6 012B     		cmp	r3, #1
 420 01b8 06D8     		bhi	.L24
  95:.\ros_lib/isnprintf.cpp ****                 buffer[i++]=0;
 421              		.loc 1 95 0
 422 01ba BB6A     		ldr	r3, [r7, #40]
 423 01bc 5A1C     		add	r2, r3, #1
 424 01be BA62     		str	r2, [r7, #40]
 425 01c0 3A1C     		mov	r2, r7
 426 01c2 0C32     		add	r2, r2, #12
 427 01c4 0021     		mov	r1, #0
 428 01c6 D154     		strb	r1, [r2, r3]
 429              	.L24:
  96:.\ros_lib/isnprintf.cpp **** 
  97:.\ros_lib/isnprintf.cpp ****             while(i > 0)
 430              		.loc 1 97 0
 431 01c8 12E0     		b	.L25
 432              	.L26:
  98:.\ros_lib/isnprintf.cpp ****             {
  99:.\ros_lib/isnprintf.cpp ****                 i--;
 433              		.loc 1 99 0
 434 01ca BB6A     		ldr	r3, [r7, #40]
 435 01cc 013B     		sub	r3, r3, #1
 436 01ce BB62     		str	r3, [r7, #40]
 100:.\ros_lib/isnprintf.cpp ****                 add_char(&s, &chars_generated, buf_len, *change(buffer[i]));
 437              		.loc 1 100 0
 438 01d0 3A1C     		mov	r2, r7
 439 01d2 0C32     		add	r2, r2, #12
 440 01d4 BB6A     		ldr	r3, [r7, #40]
 441 01d6 D318     		add	r3, r2, r3
 442 01d8 1B78     		ldrb	r3, [r3]
 443 01da 181C     		mov	r0, r3
 444 01dc FFF7FEFF 		bl	_ZL6changeh
 445 01e0 031C     		mov	r3, r0
 446 01e2 1B78     		ldrb	r3, [r3]
 447 01e4 381D     		add	r0, r7, #4
 448 01e6 391C     		mov	r1, r7
 449 01e8 1831     		add	r1, r1, #24
 450 01ea 3A68     		ldr	r2, [r7]
 451 01ec FFF7FEFF 		bl	_ZL8add_charPPcPiic
 452              	.L25:
  97:.\ros_lib/isnprintf.cpp ****             while(i > 0)
 453              		.loc 1 97 0 discriminator 1
 454 01f0 BB6A     		ldr	r3, [r7, #40]
 455 01f2 002B     		cmp	r3, #0
 456 01f4 E9D1     		bne	.L26
 101:.\ros_lib/isnprintf.cpp ****             }
 102:.\ros_lib/isnprintf.cpp ****             pszFmt++;
 457              		.loc 1 102 0
 458 01f6 BB6C     		ldr	r3, [r7, #72]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 11


 459 01f8 0133     		add	r3, r3, #1
 460 01fa BB64     		str	r3, [r7, #72]
 103:.\ros_lib/isnprintf.cpp ****             continue;
 461              		.loc 1 103 0
 462 01fc 03E0     		b	.L10
 463              	.L21:
 104:.\ros_lib/isnprintf.cpp ****         }
 105:.\ros_lib/isnprintf.cpp ****         if(pszFmt == '\0')
 464              		.loc 1 105 0
 465 01fe BB6C     		ldr	r3, [r7, #72]
 466 0200 002B     		cmp	r3, #0
 467 0202 00D1     		bne	.L10
 106:.\ros_lib/isnprintf.cpp ****         {
 107:.\ros_lib/isnprintf.cpp ****             break;
 468              		.loc 1 107 0
 469 0204 04E0     		b	.L27
 470              	.L10:
  38:.\ros_lib/isnprintf.cpp ****     while(*pszFmt)
 471              		.loc 1 38 0 discriminator 1
 472 0206 BB6C     		ldr	r3, [r7, #72]
 473 0208 1B78     		ldrb	r3, [r3]
 474 020a 002B     		cmp	r3, #0
 475 020c 00D0     		beq	.LCB414
 476 020e 07E7     		b	.L28	@long jump
 477              	.LCB414:
 478              	.L27:
 108:.\ros_lib/isnprintf.cpp ****         }
 109:.\ros_lib/isnprintf.cpp ****     }
 110:.\ros_lib/isnprintf.cpp ****     if (chars_generated < buf_len)
 479              		.loc 1 110 0
 480 0210 BA69     		ldr	r2, [r7, #24]
 481 0212 3B68     		ldr	r3, [r7]
 482 0214 9A42     		cmp	r2, r3
 483 0216 02DA     		bge	.L29
 111:.\ros_lib/isnprintf.cpp ****     {
 112:.\ros_lib/isnprintf.cpp ****         *s = '\0';
 484              		.loc 1 112 0
 485 0218 7B68     		ldr	r3, [r7, #4]
 486 021a 0022     		mov	r2, #0
 487 021c 1A70     		strb	r2, [r3]
 488              	.L29:
 113:.\ros_lib/isnprintf.cpp ****     }
 114:.\ros_lib/isnprintf.cpp ****     return chars_generated;
 489              		.loc 1 114 0
 490 021e BB69     		ldr	r3, [r7, #24]
 491              	.LBE2:
 115:.\ros_lib/isnprintf.cpp **** }
 492              		.loc 1 115 0
 493 0220 181C     		mov	r0, r3
 494 0222 BD46     		mov	sp, r7
 495 0224 0FB0     		add	sp, sp, #60
 496              		@ sp needed
 497 0226 90BC     		pop	{r4, r7}
 498 0228 08BC     		pop	{r3}
 499 022a 02B0     		add	sp, sp, #8
 500 022c 1847     		bx	r3
 501              		.cfi_endproc
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 12


 502              	.LFE2:
 503              		.size	_Z9isnprintfPciPKcz, .-_Z9isnprintfPciPKcz
 504              		.text
 505              	.Letext0:
 506              		.file 2 "c:\\program files\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4.8.4\\
 507              		.file 3 "c:\\program files\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4.8.4\\
 508              		.section	.debug_info,"",%progbits
 509              	.Ldebug_info0:
 510 0000 19020000 		.4byte	0x219
 511 0004 0400     		.2byte	0x4
 512 0006 00000000 		.4byte	.Ldebug_abbrev0
 513 000a 04       		.byte	0x4
 514 000b 01       		.uleb128 0x1
 515 000c 6C000000 		.4byte	.LASF27
 516 0010 04       		.byte	0x4
 517 0011 67020000 		.4byte	.LASF28
 518 0015 00000000 		.4byte	.LASF29
 519 0019 00000000 		.4byte	.Ldebug_ranges0+0
 520 001d 00000000 		.4byte	0
 521 0021 00000000 		.4byte	.Ldebug_line0
 522 0025 02       		.uleb128 0x2
 523 0026 01       		.byte	0x1
 524 0027 06       		.byte	0x6
 525 0028 55020000 		.4byte	.LASF0
 526 002c 03       		.uleb128 0x3
 527 002d 58000000 		.4byte	.LASF5
 528 0031 02       		.byte	0x2
 529 0032 1C       		.byte	0x1c
 530 0033 37000000 		.4byte	0x37
 531 0037 02       		.uleb128 0x2
 532 0038 01       		.byte	0x1
 533 0039 08       		.byte	0x8
 534 003a 4F010000 		.4byte	.LASF1
 535 003e 02       		.uleb128 0x2
 536 003f 02       		.byte	0x2
 537 0040 05       		.byte	0x5
 538 0041 15020000 		.4byte	.LASF2
 539 0045 02       		.uleb128 0x2
 540 0046 02       		.byte	0x2
 541 0047 07       		.byte	0x7
 542 0048 7B010000 		.4byte	.LASF3
 543 004c 02       		.uleb128 0x2
 544 004d 04       		.byte	0x4
 545 004e 05       		.byte	0x5
 546 004f 43020000 		.4byte	.LASF4
 547 0053 03       		.uleb128 0x3
 548 0054 96010000 		.4byte	.LASF6
 549 0058 02       		.byte	0x2
 550 0059 38       		.byte	0x38
 551 005a 5E000000 		.4byte	0x5e
 552 005e 02       		.uleb128 0x2
 553 005f 04       		.byte	0x4
 554 0060 07       		.byte	0x7
 555 0061 69010000 		.4byte	.LASF7
 556 0065 02       		.uleb128 0x2
 557 0066 08       		.byte	0x8
 558 0067 05       		.byte	0x5
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 13


 559 0068 F7010000 		.4byte	.LASF8
 560 006c 02       		.uleb128 0x2
 561 006d 08       		.byte	0x8
 562 006e 07       		.byte	0x7
 563 006f C3010000 		.4byte	.LASF9
 564 0073 04       		.uleb128 0x4
 565 0074 04       		.byte	0x4
 566 0075 05       		.byte	0x5
 567 0076 696E7400 		.ascii	"int\000"
 568 007a 02       		.uleb128 0x2
 569 007b 04       		.byte	0x4
 570 007c 07       		.byte	0x7
 571 007d B1010000 		.4byte	.LASF10
 572 0081 03       		.uleb128 0x3
 573 0082 DA010000 		.4byte	.LASF11
 574 0086 03       		.byte	0x3
 575 0087 2A       		.byte	0x2a
 576 0088 2C000000 		.4byte	0x2c
 577 008c 03       		.uleb128 0x3
 578 008d 3A020000 		.4byte	.LASF12
 579 0091 03       		.byte	0x3
 580 0092 42       		.byte	0x42
 581 0093 53000000 		.4byte	0x53
 582 0097 05       		.uleb128 0x5
 583 0098 4C020000 		.4byte	.LASF30
 584 009c 01       		.byte	0x1
 585 009d 09       		.byte	0x9
 586 009e 00000000 		.4byte	.LFB0
 587 00a2 56000000 		.4byte	.LFE0-.LFB0
 588 00a6 01       		.uleb128 0x1
 589 00a7 9C       		.byte	0x9c
 590 00a8 E3000000 		.4byte	0xe3
 591 00ac 06       		.uleb128 0x6
 592 00ad 707300   		.ascii	"ps\000"
 593 00b0 01       		.byte	0x1
 594 00b1 09       		.byte	0x9
 595 00b2 E3000000 		.4byte	0xe3
 596 00b6 02       		.uleb128 0x2
 597 00b7 91       		.byte	0x91
 598 00b8 74       		.sleb128 -12
 599 00b9 07       		.uleb128 0x7
 600 00ba 3E010000 		.4byte	.LASF13
 601 00be 01       		.byte	0x1
 602 00bf 09       		.byte	0x9
 603 00c0 F6000000 		.4byte	0xf6
 604 00c4 02       		.uleb128 0x2
 605 00c5 91       		.byte	0x91
 606 00c6 70       		.sleb128 -16
 607 00c7 07       		.uleb128 0x7
 608 00c8 8E010000 		.4byte	.LASF14
 609 00cc 01       		.byte	0x1
 610 00cd 09       		.byte	0x9
 611 00ce 73000000 		.4byte	0x73
 612 00d2 02       		.uleb128 0x2
 613 00d3 91       		.byte	0x91
 614 00d4 6C       		.sleb128 -20
 615 00d5 06       		.uleb128 0x6
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 14


 616 00d6 636800   		.ascii	"ch\000"
 617 00d9 01       		.byte	0x1
 618 00da 09       		.byte	0x9
 619 00db EF000000 		.4byte	0xef
 620 00df 02       		.uleb128 0x2
 621 00e0 91       		.byte	0x91
 622 00e1 6B       		.sleb128 -21
 623 00e2 00       		.byte	0
 624 00e3 08       		.uleb128 0x8
 625 00e4 04       		.byte	0x4
 626 00e5 E9000000 		.4byte	0xe9
 627 00e9 08       		.uleb128 0x8
 628 00ea 04       		.byte	0x4
 629 00eb EF000000 		.4byte	0xef
 630 00ef 02       		.uleb128 0x2
 631 00f0 01       		.byte	0x1
 632 00f1 08       		.byte	0x8
 633 00f2 0A020000 		.4byte	.LASF15
 634 00f6 08       		.uleb128 0x8
 635 00f7 04       		.byte	0x4
 636 00f8 73000000 		.4byte	0x73
 637 00fc 09       		.uleb128 0x9
 638 00fd E7010000 		.4byte	.LASF31
 639 0101 01       		.byte	0x1
 640 0102 16       		.byte	0x16
 641 0103 E9000000 		.4byte	0xe9
 642 0107 00000000 		.4byte	.LFB1
 643 010b 20000000 		.4byte	.LFE1-.LFB1
 644 010f 01       		.uleb128 0x1
 645 0110 9C       		.byte	0x9c
 646 0111 24010000 		.4byte	0x124
 647 0115 07       		.uleb128 0x7
 648 0116 61020000 		.4byte	.LASF16
 649 011a 01       		.byte	0x1
 650 011b 16       		.byte	0x16
 651 011c 81000000 		.4byte	0x81
 652 0120 02       		.uleb128 0x2
 653 0121 91       		.byte	0x91
 654 0122 77       		.sleb128 -9
 655 0123 00       		.byte	0
 656 0124 0A       		.uleb128 0xa
 657 0125 62000000 		.4byte	.LASF32
 658 0129 01       		.byte	0x1
 659 012a 1C       		.byte	0x1c
 660 012b 26020000 		.4byte	.LASF33
 661 012f 73000000 		.4byte	0x73
 662 0133 00000000 		.4byte	.LFB2
 663 0137 2E020000 		.4byte	.LFE2-.LFB2
 664 013b 01       		.uleb128 0x1
 665 013c 9C       		.byte	0x9c
 666 013d F4010000 		.4byte	0x1f4
 667 0141 06       		.uleb128 0x6
 668 0142 7300     		.ascii	"s\000"
 669 0144 01       		.byte	0x1
 670 0145 1C       		.byte	0x1c
 671 0146 E9000000 		.4byte	0xe9
 672 014a 03       		.uleb128 0x3
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 15


 673 014b 91       		.byte	0x91
 674 014c B47F     		.sleb128 -76
 675 014e 07       		.uleb128 0x7
 676 014f 8E010000 		.4byte	.LASF14
 677 0153 01       		.byte	0x1
 678 0154 1C       		.byte	0x1c
 679 0155 73000000 		.4byte	0x73
 680 0159 03       		.uleb128 0x3
 681 015a 91       		.byte	0x91
 682 015b B07F     		.sleb128 -80
 683 015d 07       		.uleb128 0x7
 684 015e 37010000 		.4byte	.LASF17
 685 0162 01       		.byte	0x1
 686 0163 1C       		.byte	0x1c
 687 0164 F4010000 		.4byte	0x1f4
 688 0168 02       		.uleb128 0x2
 689 0169 91       		.byte	0x91
 690 016a 78       		.sleb128 -8
 691 016b 0B       		.uleb128 0xb
 692 016c 0C       		.uleb128 0xc
 693 016d 0C000000 		.4byte	.LBB2
 694 0171 14020000 		.4byte	.LBE2-.LBB2
 695 0175 0D       		.uleb128 0xd
 696 0176 A1010000 		.4byte	.LASF18
 697 017a 01       		.byte	0x1
 698 017b 1E       		.byte	0x1e
 699 017c 73000000 		.4byte	0x73
 700 0180 02       		.uleb128 0x2
 701 0181 91       		.byte	0x91
 702 0182 48       		.sleb128 -56
 703 0183 0D       		.uleb128 0xd
 704 0184 62010000 		.4byte	.LASF19
 705 0188 01       		.byte	0x1
 706 0189 1F       		.byte	0x1f
 707 018a E9000000 		.4byte	0xe9
 708 018e 02       		.uleb128 0x2
 709 018f 91       		.byte	0x91
 710 0190 64       		.sleb128 -28
 711 0191 0D       		.uleb128 0xd
 712 0192 BE010000 		.4byte	.LASF20
 713 0196 01       		.byte	0x1
 714 0197 20       		.byte	0x20
 715 0198 8C000000 		.4byte	0x8c
 716 019c 02       		.uleb128 0x2
 717 019d 91       		.byte	0x91
 718 019e 60       		.sleb128 -32
 719 019f 0D       		.uleb128 0xd
 720 01a0 E2010000 		.4byte	.LASF21
 721 01a4 01       		.byte	0x1
 722 01a5 20       		.byte	0x20
 723 01a6 8C000000 		.4byte	0x8c
 724 01aa 02       		.uleb128 0x2
 725 01ab 91       		.byte	0x91
 726 01ac 5C       		.sleb128 -36
 727 01ad 0E       		.uleb128 0xe
 728 01ae 6900     		.ascii	"i\000"
 729 01b0 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 16


 730 01b1 20       		.byte	0x20
 731 01b2 8C000000 		.4byte	0x8c
 732 01b6 02       		.uleb128 0x2
 733 01b7 91       		.byte	0x91
 734 01b8 58       		.sleb128 -40
 735 01b9 0D       		.uleb128 0xd
 736 01ba 0F020000 		.4byte	.LASF22
 737 01be 01       		.byte	0x1
 738 01bf 20       		.byte	0x20
 739 01c0 8C000000 		.4byte	0x8c
 740 01c4 02       		.uleb128 0x2
 741 01c5 91       		.byte	0x91
 742 01c6 54       		.sleb128 -44
 743 01c7 0D       		.uleb128 0xd
 744 01c8 1F020000 		.4byte	.LASF23
 745 01cc 01       		.byte	0x1
 746 01cd 21       		.byte	0x21
 747 01ce FF010000 		.4byte	0x1ff
 748 01d2 03       		.uleb128 0x3
 749 01d3 91       		.byte	0x91
 750 01d4 BC7F     		.sleb128 -68
 751 01d6 0D       		.uleb128 0xd
 752 01d7 5D010000 		.4byte	.LASF24
 753 01db 01       		.byte	0x1
 754 01dc 22       		.byte	0x22
 755 01dd EF000000 		.4byte	0xef
 756 01e1 02       		.uleb128 0x2
 757 01e2 91       		.byte	0x91
 758 01e3 4F       		.sleb128 -49
 759 01e4 0D       		.uleb128 0xd
 760 01e5 05020000 		.4byte	.LASF25
 761 01e9 01       		.byte	0x1
 762 01ea 23       		.byte	0x23
 763 01eb 16020000 		.4byte	0x216
 764 01ef 02       		.uleb128 0x2
 765 01f0 91       		.byte	0x91
 766 01f1 50       		.sleb128 -48
 767 01f2 00       		.byte	0
 768 01f3 00       		.byte	0
 769 01f4 08       		.uleb128 0x8
 770 01f5 04       		.byte	0x4
 771 01f6 FA010000 		.4byte	0x1fa
 772 01fa 0F       		.uleb128 0xf
 773 01fb EF000000 		.4byte	0xef
 774 01ff 10       		.uleb128 0x10
 775 0200 37000000 		.4byte	0x37
 776 0204 0F020000 		.4byte	0x20f
 777 0208 11       		.uleb128 0x11
 778 0209 0F020000 		.4byte	0x20f
 779 020d 0B       		.byte	0xb
 780 020e 00       		.byte	0
 781 020f 02       		.uleb128 0x2
 782 0210 04       		.byte	0x4
 783 0211 07       		.byte	0x7
 784 0212 EE010000 		.4byte	.LASF26
 785 0216 08       		.uleb128 0x8
 786 0217 04       		.byte	0x4
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 17


 787 0218 8C000000 		.4byte	0x8c
 788 021c 00       		.byte	0
 789              		.section	.debug_abbrev,"",%progbits
 790              	.Ldebug_abbrev0:
 791 0000 01       		.uleb128 0x1
 792 0001 11       		.uleb128 0x11
 793 0002 01       		.byte	0x1
 794 0003 25       		.uleb128 0x25
 795 0004 0E       		.uleb128 0xe
 796 0005 13       		.uleb128 0x13
 797 0006 0B       		.uleb128 0xb
 798 0007 03       		.uleb128 0x3
 799 0008 0E       		.uleb128 0xe
 800 0009 1B       		.uleb128 0x1b
 801 000a 0E       		.uleb128 0xe
 802 000b 55       		.uleb128 0x55
 803 000c 17       		.uleb128 0x17
 804 000d 11       		.uleb128 0x11
 805 000e 01       		.uleb128 0x1
 806 000f 10       		.uleb128 0x10
 807 0010 17       		.uleb128 0x17
 808 0011 00       		.byte	0
 809 0012 00       		.byte	0
 810 0013 02       		.uleb128 0x2
 811 0014 24       		.uleb128 0x24
 812 0015 00       		.byte	0
 813 0016 0B       		.uleb128 0xb
 814 0017 0B       		.uleb128 0xb
 815 0018 3E       		.uleb128 0x3e
 816 0019 0B       		.uleb128 0xb
 817 001a 03       		.uleb128 0x3
 818 001b 0E       		.uleb128 0xe
 819 001c 00       		.byte	0
 820 001d 00       		.byte	0
 821 001e 03       		.uleb128 0x3
 822 001f 16       		.uleb128 0x16
 823 0020 00       		.byte	0
 824 0021 03       		.uleb128 0x3
 825 0022 0E       		.uleb128 0xe
 826 0023 3A       		.uleb128 0x3a
 827 0024 0B       		.uleb128 0xb
 828 0025 3B       		.uleb128 0x3b
 829 0026 0B       		.uleb128 0xb
 830 0027 49       		.uleb128 0x49
 831 0028 13       		.uleb128 0x13
 832 0029 00       		.byte	0
 833 002a 00       		.byte	0
 834 002b 04       		.uleb128 0x4
 835 002c 24       		.uleb128 0x24
 836 002d 00       		.byte	0
 837 002e 0B       		.uleb128 0xb
 838 002f 0B       		.uleb128 0xb
 839 0030 3E       		.uleb128 0x3e
 840 0031 0B       		.uleb128 0xb
 841 0032 03       		.uleb128 0x3
 842 0033 08       		.uleb128 0x8
 843 0034 00       		.byte	0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 18


 844 0035 00       		.byte	0
 845 0036 05       		.uleb128 0x5
 846 0037 2E       		.uleb128 0x2e
 847 0038 01       		.byte	0x1
 848 0039 03       		.uleb128 0x3
 849 003a 0E       		.uleb128 0xe
 850 003b 3A       		.uleb128 0x3a
 851 003c 0B       		.uleb128 0xb
 852 003d 3B       		.uleb128 0x3b
 853 003e 0B       		.uleb128 0xb
 854 003f 11       		.uleb128 0x11
 855 0040 01       		.uleb128 0x1
 856 0041 12       		.uleb128 0x12
 857 0042 06       		.uleb128 0x6
 858 0043 40       		.uleb128 0x40
 859 0044 18       		.uleb128 0x18
 860 0045 9742     		.uleb128 0x2117
 861 0047 19       		.uleb128 0x19
 862 0048 01       		.uleb128 0x1
 863 0049 13       		.uleb128 0x13
 864 004a 00       		.byte	0
 865 004b 00       		.byte	0
 866 004c 06       		.uleb128 0x6
 867 004d 05       		.uleb128 0x5
 868 004e 00       		.byte	0
 869 004f 03       		.uleb128 0x3
 870 0050 08       		.uleb128 0x8
 871 0051 3A       		.uleb128 0x3a
 872 0052 0B       		.uleb128 0xb
 873 0053 3B       		.uleb128 0x3b
 874 0054 0B       		.uleb128 0xb
 875 0055 49       		.uleb128 0x49
 876 0056 13       		.uleb128 0x13
 877 0057 02       		.uleb128 0x2
 878 0058 18       		.uleb128 0x18
 879 0059 00       		.byte	0
 880 005a 00       		.byte	0
 881 005b 07       		.uleb128 0x7
 882 005c 05       		.uleb128 0x5
 883 005d 00       		.byte	0
 884 005e 03       		.uleb128 0x3
 885 005f 0E       		.uleb128 0xe
 886 0060 3A       		.uleb128 0x3a
 887 0061 0B       		.uleb128 0xb
 888 0062 3B       		.uleb128 0x3b
 889 0063 0B       		.uleb128 0xb
 890 0064 49       		.uleb128 0x49
 891 0065 13       		.uleb128 0x13
 892 0066 02       		.uleb128 0x2
 893 0067 18       		.uleb128 0x18
 894 0068 00       		.byte	0
 895 0069 00       		.byte	0
 896 006a 08       		.uleb128 0x8
 897 006b 0F       		.uleb128 0xf
 898 006c 00       		.byte	0
 899 006d 0B       		.uleb128 0xb
 900 006e 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 19


 901 006f 49       		.uleb128 0x49
 902 0070 13       		.uleb128 0x13
 903 0071 00       		.byte	0
 904 0072 00       		.byte	0
 905 0073 09       		.uleb128 0x9
 906 0074 2E       		.uleb128 0x2e
 907 0075 01       		.byte	0x1
 908 0076 03       		.uleb128 0x3
 909 0077 0E       		.uleb128 0xe
 910 0078 3A       		.uleb128 0x3a
 911 0079 0B       		.uleb128 0xb
 912 007a 3B       		.uleb128 0x3b
 913 007b 0B       		.uleb128 0xb
 914 007c 49       		.uleb128 0x49
 915 007d 13       		.uleb128 0x13
 916 007e 11       		.uleb128 0x11
 917 007f 01       		.uleb128 0x1
 918 0080 12       		.uleb128 0x12
 919 0081 06       		.uleb128 0x6
 920 0082 40       		.uleb128 0x40
 921 0083 18       		.uleb128 0x18
 922 0084 9742     		.uleb128 0x2117
 923 0086 19       		.uleb128 0x19
 924 0087 01       		.uleb128 0x1
 925 0088 13       		.uleb128 0x13
 926 0089 00       		.byte	0
 927 008a 00       		.byte	0
 928 008b 0A       		.uleb128 0xa
 929 008c 2E       		.uleb128 0x2e
 930 008d 01       		.byte	0x1
 931 008e 3F       		.uleb128 0x3f
 932 008f 19       		.uleb128 0x19
 933 0090 03       		.uleb128 0x3
 934 0091 0E       		.uleb128 0xe
 935 0092 3A       		.uleb128 0x3a
 936 0093 0B       		.uleb128 0xb
 937 0094 3B       		.uleb128 0x3b
 938 0095 0B       		.uleb128 0xb
 939 0096 6E       		.uleb128 0x6e
 940 0097 0E       		.uleb128 0xe
 941 0098 49       		.uleb128 0x49
 942 0099 13       		.uleb128 0x13
 943 009a 11       		.uleb128 0x11
 944 009b 01       		.uleb128 0x1
 945 009c 12       		.uleb128 0x12
 946 009d 06       		.uleb128 0x6
 947 009e 40       		.uleb128 0x40
 948 009f 18       		.uleb128 0x18
 949 00a0 9642     		.uleb128 0x2116
 950 00a2 19       		.uleb128 0x19
 951 00a3 01       		.uleb128 0x1
 952 00a4 13       		.uleb128 0x13
 953 00a5 00       		.byte	0
 954 00a6 00       		.byte	0
 955 00a7 0B       		.uleb128 0xb
 956 00a8 18       		.uleb128 0x18
 957 00a9 00       		.byte	0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 20


 958 00aa 00       		.byte	0
 959 00ab 00       		.byte	0
 960 00ac 0C       		.uleb128 0xc
 961 00ad 0B       		.uleb128 0xb
 962 00ae 01       		.byte	0x1
 963 00af 11       		.uleb128 0x11
 964 00b0 01       		.uleb128 0x1
 965 00b1 12       		.uleb128 0x12
 966 00b2 06       		.uleb128 0x6
 967 00b3 00       		.byte	0
 968 00b4 00       		.byte	0
 969 00b5 0D       		.uleb128 0xd
 970 00b6 34       		.uleb128 0x34
 971 00b7 00       		.byte	0
 972 00b8 03       		.uleb128 0x3
 973 00b9 0E       		.uleb128 0xe
 974 00ba 3A       		.uleb128 0x3a
 975 00bb 0B       		.uleb128 0xb
 976 00bc 3B       		.uleb128 0x3b
 977 00bd 0B       		.uleb128 0xb
 978 00be 49       		.uleb128 0x49
 979 00bf 13       		.uleb128 0x13
 980 00c0 02       		.uleb128 0x2
 981 00c1 18       		.uleb128 0x18
 982 00c2 00       		.byte	0
 983 00c3 00       		.byte	0
 984 00c4 0E       		.uleb128 0xe
 985 00c5 34       		.uleb128 0x34
 986 00c6 00       		.byte	0
 987 00c7 03       		.uleb128 0x3
 988 00c8 08       		.uleb128 0x8
 989 00c9 3A       		.uleb128 0x3a
 990 00ca 0B       		.uleb128 0xb
 991 00cb 3B       		.uleb128 0x3b
 992 00cc 0B       		.uleb128 0xb
 993 00cd 49       		.uleb128 0x49
 994 00ce 13       		.uleb128 0x13
 995 00cf 02       		.uleb128 0x2
 996 00d0 18       		.uleb128 0x18
 997 00d1 00       		.byte	0
 998 00d2 00       		.byte	0
 999 00d3 0F       		.uleb128 0xf
 1000 00d4 26       		.uleb128 0x26
 1001 00d5 00       		.byte	0
 1002 00d6 49       		.uleb128 0x49
 1003 00d7 13       		.uleb128 0x13
 1004 00d8 00       		.byte	0
 1005 00d9 00       		.byte	0
 1006 00da 10       		.uleb128 0x10
 1007 00db 01       		.uleb128 0x1
 1008 00dc 01       		.byte	0x1
 1009 00dd 49       		.uleb128 0x49
 1010 00de 13       		.uleb128 0x13
 1011 00df 01       		.uleb128 0x1
 1012 00e0 13       		.uleb128 0x13
 1013 00e1 00       		.byte	0
 1014 00e2 00       		.byte	0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 21


 1015 00e3 11       		.uleb128 0x11
 1016 00e4 21       		.uleb128 0x21
 1017 00e5 00       		.byte	0
 1018 00e6 49       		.uleb128 0x49
 1019 00e7 13       		.uleb128 0x13
 1020 00e8 2F       		.uleb128 0x2f
 1021 00e9 0B       		.uleb128 0xb
 1022 00ea 00       		.byte	0
 1023 00eb 00       		.byte	0
 1024 00ec 00       		.byte	0
 1025              		.section	.debug_aranges,"",%progbits
 1026 0000 2C000000 		.4byte	0x2c
 1027 0004 0200     		.2byte	0x2
 1028 0006 00000000 		.4byte	.Ldebug_info0
 1029 000a 04       		.byte	0x4
 1030 000b 00       		.byte	0
 1031 000c 0000     		.2byte	0
 1032 000e 0000     		.2byte	0
 1033 0010 00000000 		.4byte	.LFB0
 1034 0014 56000000 		.4byte	.LFE0-.LFB0
 1035 0018 00000000 		.4byte	.LFB1
 1036 001c 20000000 		.4byte	.LFE1-.LFB1
 1037 0020 00000000 		.4byte	.LFB2
 1038 0024 2E020000 		.4byte	.LFE2-.LFB2
 1039 0028 00000000 		.4byte	0
 1040 002c 00000000 		.4byte	0
 1041              		.section	.debug_ranges,"",%progbits
 1042              	.Ldebug_ranges0:
 1043 0000 00000000 		.4byte	.LFB0
 1044 0004 56000000 		.4byte	.LFE0
 1045 0008 00000000 		.4byte	.LFB1
 1046 000c 20000000 		.4byte	.LFE1
 1047 0010 00000000 		.4byte	.LFB2
 1048 0014 2E020000 		.4byte	.LFE2
 1049 0018 00000000 		.4byte	0
 1050 001c 00000000 		.4byte	0
 1051              		.section	.debug_line,"",%progbits
 1052              	.Ldebug_line0:
 1053 0000 CE010000 		.section	.debug_str,"MS",%progbits,1
 1053      02002001 
 1053      00000201 
 1053      FB0E0D00 
 1053      01010101 
 1054              	.LASF29:
 1055 0000 433A5C44 		.ascii	"C:\\Documents and Settings\\Chuck\\My Documents\\PS"
 1055      6F63756D 
 1055      656E7473 
 1055      20616E64 
 1055      20536574 
 1056 002f 6F432043 		.ascii	"oC Creator\\RosOnAStick\\RosOnAStick.cydsn\000"
 1056      72656174 
 1056      6F725C52 
 1056      6F734F6E 
 1056      41537469 
 1057              	.LASF5:
 1058 0058 5F5F7569 		.ascii	"__uint8_t\000"
 1058      6E74385F 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 22


 1058      7400
 1059              	.LASF32:
 1060 0062 69736E70 		.ascii	"isnprintf\000"
 1060      72696E74 
 1060      6600
 1061              	.LASF27:
 1062 006c 474E5520 		.ascii	"GNU C++ 4.8.4 20140526 (release) [ARM/embedded-4_8-"
 1062      432B2B20 
 1062      342E382E 
 1062      34203230 
 1062      31343035 
 1063 009f 6272616E 		.ascii	"branch revision 211358] -mcpu=cortex-m0 -mthumb -g "
 1063      63682072 
 1063      65766973 
 1063      696F6E20 
 1063      32313133 
 1064 00d2 2D4F3020 		.ascii	"-O0 -ffunction-sections -fno-rtti -fno-exceptions -"
 1064      2D666675 
 1064      6E637469 
 1064      6F6E2D73 
 1064      65637469 
 1065 0105 66756E73 		.ascii	"funsigned-char -funsigned-bitfields -fshort-enums\000"
 1065      69676E65 
 1065      642D6368 
 1065      6172202D 
 1065      66756E73 
 1066              	.LASF17:
 1067 0137 70737A46 		.ascii	"pszFmt\000"
 1067      6D7400
 1068              	.LASF13:
 1069 013e 70636861 		.ascii	"pchars_generated\000"
 1069      72735F67 
 1069      656E6572 
 1069      61746564 
 1069      00
 1070              	.LASF1:
 1071 014f 756E7369 		.ascii	"unsigned char\000"
 1071      676E6564 
 1071      20636861 
 1071      7200
 1072              	.LASF24:
 1073 015d 6356616C 		.ascii	"cVal\000"
 1073      00
 1074              	.LASF19:
 1075 0162 70737A56 		.ascii	"pszVal\000"
 1075      616C00
 1076              	.LASF7:
 1077 0169 6C6F6E67 		.ascii	"long unsigned int\000"
 1077      20756E73 
 1077      69676E65 
 1077      6420696E 
 1077      7400
 1078              	.LASF3:
 1079 017b 73686F72 		.ascii	"short unsigned int\000"
 1079      7420756E 
 1079      7369676E 
 1079      65642069 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 23


 1079      6E7400
 1080              	.LASF14:
 1081 018e 6275665F 		.ascii	"buf_len\000"
 1081      6C656E00 
 1082              	.LASF6:
 1083 0196 5F5F7569 		.ascii	"__uint32_t\000"
 1083      6E743332 
 1083      5F7400
 1084              	.LASF18:
 1085 01a1 63686172 		.ascii	"chars_generated\000"
 1085      735F6765 
 1085      6E657261 
 1085      74656400 
 1086              	.LASF10:
 1087 01b1 756E7369 		.ascii	"unsigned int\000"
 1087      676E6564 
 1087      20696E74 
 1087      00
 1088              	.LASF20:
 1089 01be 6956616C 		.ascii	"iVal\000"
 1089      00
 1090              	.LASF9:
 1091 01c3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1091      206C6F6E 
 1091      6720756E 
 1091      7369676E 
 1091      65642069 
 1092              	.LASF11:
 1093 01da 75696E74 		.ascii	"uint8_t\000"
 1093      385F7400 
 1094              	.LASF21:
 1095 01e2 7856616C 		.ascii	"xVal\000"
 1095      00
 1096              	.LASF31:
 1097 01e7 6368616E 		.ascii	"change\000"
 1097      676500
 1098              	.LASF26:
 1099 01ee 73697A65 		.ascii	"sizetype\000"
 1099      74797065 
 1099      00
 1100              	.LASF8:
 1101 01f7 6C6F6E67 		.ascii	"long long int\000"
 1101      206C6F6E 
 1101      6720696E 
 1101      7400
 1102              	.LASF25:
 1103 0205 70417267 		.ascii	"pArg\000"
 1103      00
 1104              	.LASF15:
 1105 020a 63686172 		.ascii	"char\000"
 1105      00
 1106              	.LASF22:
 1107 020f 696E6465 		.ascii	"index\000"
 1107      7800
 1108              	.LASF2:
 1109 0215 73686F72 		.ascii	"short int\000"
 1109      7420696E 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccFzXblh.s 			page 24


 1109      7400
 1110              	.LASF23:
 1111 021f 62756666 		.ascii	"buffer\000"
 1111      657200
 1112              	.LASF33:
 1113 0226 5F5A3969 		.ascii	"_Z9isnprintfPciPKcz\000"
 1113      736E7072 
 1113      696E7466 
 1113      50636950 
 1113      4B637A00 
 1114              	.LASF12:
 1115 023a 75696E74 		.ascii	"uint32_t\000"
 1115      33325F74 
 1115      00
 1116              	.LASF4:
 1117 0243 6C6F6E67 		.ascii	"long int\000"
 1117      20696E74 
 1117      00
 1118              	.LASF30:
 1119 024c 6164645F 		.ascii	"add_char\000"
 1119      63686172 
 1119      00
 1120              	.LASF0:
 1121 0255 7369676E 		.ascii	"signed char\000"
 1121      65642063 
 1121      68617200 
 1122              	.LASF16:
 1123 0261 496E6465 		.ascii	"Index\000"
 1123      7800
 1124              	.LASF28:
 1125 0267 2E5C726F 		.ascii	".\\ros_lib\\isnprintf.cpp\000"
 1125      735F6C69 
 1125      625C6973 
 1125      6E707269 
 1125      6E74662E 
 1126              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
