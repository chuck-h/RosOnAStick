ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	CapSense_lowLevelTuningDone
  18              		.bss
  19              		.type	CapSense_lowLevelTuningDone, %object
  20              		.size	CapSense_lowLevelTuningDone, 1
  21              	CapSense_lowLevelTuningDone:
  22 0000 00       		.space	1
  23              	CapSense_initVar:
  24 0001 00       		.space	1
  25              		.global	CapSense_csdStatusVar
  26              		.type	CapSense_csdStatusVar, %object
  27              		.size	CapSense_csdStatusVar, 1
  28              	CapSense_csdStatusVar:
  29 0002 00       		.space	1
  30              		.global	CapSense_sensorIndex
  31              		.type	CapSense_sensorIndex, %object
  32              		.size	CapSense_sensorIndex, 1
  33              	CapSense_sensorIndex:
  34 0003 00       		.space	1
  35              		.global	CapSense_sensorRaw
  36              		.align	2
  37              		.type	CapSense_sensorRaw, %object
  38              		.size	CapSense_sensorRaw, 2
  39              	CapSense_sensorRaw:
  40 0004 0000     		.space	2
  41              		.comm	CapSense_csdTrim1,1,1
  42              		.comm	CapSense_unscannedSnsDriveMode,1,4
  43              		.comm	CapSense_sensorEnableMaskBackup,1,4
  44              		.global	CapSense_sensorEnableMask
  45 0006 0000     		.data
  46              		.align	2
  47              		.type	CapSense_sensorEnableMask, %object
  48              		.size	CapSense_sensorEnableMask, 1
  49              	CapSense_sensorEnableMask:
  50 0000 01       		.byte	1
  51              		.global	CapSense_pcTable
  52 0001 000000   		.align	2
  53              		.type	CapSense_pcTable, %object
  54              		.size	CapSense_pcTable, 4
  55              	CapSense_pcTable:
  56 0004 08030440 		.word	1074004744
  57              		.global	CapSense_portTable
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 2


  58              		.section	.rodata
  59              		.align	2
  60              		.type	CapSense_portTable, %object
  61              		.size	CapSense_portTable, 1
  62              	CapSense_portTable:
  63 0000 03       		.byte	3
  64              		.global	CapSense_maskTable
  65 0001 000000   		.align	2
  66              		.type	CapSense_maskTable, %object
  67              		.size	CapSense_maskTable, 4
  68              	CapSense_maskTable:
  69 0004 02000000 		.word	2
  70              		.global	CapSense_pinShiftTbl
  71              		.align	2
  72              		.type	CapSense_pinShiftTbl, %object
  73              		.size	CapSense_pinShiftTbl, 1
  74              	CapSense_pinShiftTbl:
  75 0008 01       		.byte	1
  76              		.comm	CapSense_modulationIDAC,1,4
  77              		.comm	CapSense_compensationIDAC,1,4
  78              		.global	CapSense_widgetResolution
  79              		.data
  80              		.align	2
  81              		.type	CapSense_widgetResolution, %object
  82              		.size	CapSense_widgetResolution, 4
  83              	CapSense_widgetResolution:
  84 0008 0000FF0F 		.word	268369920
  85              		.comm	CapSense_senseClkDividerVal,1,4
  86              		.comm	CapSense_sampleClkDividerVal,1,4
  87              		.global	CapSense_widgetNumber
  88              		.section	.rodata
  89 0009 000000   		.align	2
  90              		.type	CapSense_widgetNumber, %object
  91              		.size	CapSense_widgetNumber, 1
  92              	CapSense_widgetNumber:
  93 000c 00       		.space	1
  94              		.global	CapSense_prtSelTbl
  95 000d 000000   		.align	2
  96              		.type	CapSense_prtSelTbl, %object
  97              		.size	CapSense_prtSelTbl, 20
  98              	CapSense_prtSelTbl:
  99 0010 00000140 		.word	1073807360
 100 0014 04000140 		.word	1073807364
 101 0018 08000140 		.word	1073807368
 102 001c 0C000140 		.word	1073807372
 103 0020 10000140 		.word	1073807376
 104              		.global	CapSense_prtCfgTbl
 105              		.align	2
 106              		.type	CapSense_prtCfgTbl, %object
 107              		.size	CapSense_prtCfgTbl, 20
 108              	CapSense_prtCfgTbl:
 109 0024 08000440 		.word	1074003976
 110 0028 08010440 		.word	1074004232
 111 002c 08020440 		.word	1074004488
 112 0030 08030440 		.word	1074004744
 113 0034 08040440 		.word	1074005000
 114              		.global	CapSense_prtDRTbl
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 3


 115              		.align	2
 116              		.type	CapSense_prtDRTbl, %object
 117              		.size	CapSense_prtDRTbl, 20
 118              	CapSense_prtDRTbl:
 119 0038 00000440 		.word	1074003968
 120 003c 00010440 		.word	1074004224
 121 0040 00020440 		.word	1074004480
 122 0044 00030440 		.word	1074004736
 123 0048 00040440 		.word	1074004992
 124              		.section	.text.CapSense_Init,"ax",%progbits
 125              		.align	2
 126              		.global	CapSense_Init
 127              		.code	16
 128              		.thumb_func
 129              		.type	CapSense_Init, %function
 130              	CapSense_Init:
 131              	.LFB33:
 132              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense.c"
   1:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense.c **** * File Name: CapSense.c
   3:.\Generated_Source\PSoC4/CapSense.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/CapSense.c **** *
   5:.\Generated_Source\PSoC4/CapSense.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense.c **** *  This file provides the source code for scanning APIs for the CapSense CSD 
   7:.\Generated_Source\PSoC4/CapSense.c **** *  component.
   8:.\Generated_Source\PSoC4/CapSense.c **** *
   9:.\Generated_Source\PSoC4/CapSense.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense.c **** *
  11:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense.c **** 
  18:.\Generated_Source\PSoC4/CapSense.c **** #include "CapSense.h"
  19:.\Generated_Source\PSoC4/CapSense.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense.c **** #include "cypins.h"
  21:.\Generated_Source\PSoC4/CapSense.c **** 
  22:.\Generated_Source\PSoC4/CapSense.c **** #if(0u != CapSense_CSHL_API_GENERATE)
  23:.\Generated_Source\PSoC4/CapSense.c **** 	#include "CapSense_CSHL.h"
  24:.\Generated_Source\PSoC4/CapSense.c **** 	extern uint8 CapSense_numberOfSensors[];
  25:.\Generated_Source\PSoC4/CapSense.c **** 	extern uint8 CapSense_rawDataIndex[];
  26:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (0u != CapSense_CSHL_API_GENERATE) */
  27:.\Generated_Source\PSoC4/CapSense.c **** 
  28:.\Generated_Source\PSoC4/CapSense.c **** /* SmartSense functions */
  29:.\Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  30:.\Generated_Source\PSoC4/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 0u;
  31:.\Generated_Source\PSoC4/CapSense.c **** 	extern uint8 scanSpeedTbl[((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u];
  32:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  33:.\Generated_Source\PSoC4/CapSense.c **** 
  34:.\Generated_Source\PSoC4/CapSense.c **** #if(CapSense_PRS_OPTIONS != CapSense__PRS_NONE)
  35:.\Generated_Source\PSoC4/CapSense.c **** 	uint8 CapSense_prescalersTuningDone = 0u;
  36:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_PRS_OPTIONS == CapSense__PRS_NONE) */
  37:.\Generated_Source\PSoC4/CapSense.c **** 
  38:.\Generated_Source\PSoC4/CapSense.c **** static uint8 CapSense_initVar = 0u;
  39:.\Generated_Source\PSoC4/CapSense.c ****             
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 4


  40:.\Generated_Source\PSoC4/CapSense.c **** /* Global software variables */
  41:.\Generated_Source\PSoC4/CapSense.c **** volatile uint8 CapSense_csdStatusVar = 0u;   /* CapSense CSD status, variable */
  42:.\Generated_Source\PSoC4/CapSense.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of scannig sensor */
  43:.\Generated_Source\PSoC4/CapSense.c **** 
  44:.\Generated_Source\PSoC4/CapSense.c **** /* Global array of Raw Counts */
  45:.\Generated_Source\PSoC4/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  46:.\Generated_Source\PSoC4/CapSense.c **** 
  47:.\Generated_Source\PSoC4/CapSense.c **** /* Backup variables for trim registers*/
  48:.\Generated_Source\PSoC4/CapSense.c **** #if (CapSense_IDAC1_POLARITY == CapSense__IDAC_SINK)
  49:.\Generated_Source\PSoC4/CapSense.c **** 	uint8 CapSense_csdTrim2;   
  50:.\Generated_Source\PSoC4/CapSense.c **** #else
  51:.\Generated_Source\PSoC4/CapSense.c ****     uint8 CapSense_csdTrim1;	
  52:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_IDAC1_POLARITY == CapSense__IDAC_SINK) */
  53:.\Generated_Source\PSoC4/CapSense.c **** 
  54:.\Generated_Source\PSoC4/CapSense.c **** /* Global array of un-scanned sensors state */
  55:.\Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_unscannedSnsDriveMode[CapSense_TOTAL_SENSOR_COUNT];
  56:.\Generated_Source\PSoC4/CapSense.c **** 
  57:.\Generated_Source\PSoC4/CapSense.c **** /* Backup array for CapSense_sensorEnableMask */
  58:.\Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_sensorEnableMaskBackup[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  59:.\Generated_Source\PSoC4/CapSense.c **** 
  60:.\Generated_Source\PSoC4/CapSense.c **** /* Configured constants and arrays by Customizer */
  61:.\Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  62:.\Generated_Source\PSoC4/CapSense.c **** 0x1u, };
  63:.\Generated_Source\PSoC4/CapSense.c **** 
  64:.\Generated_Source\PSoC4/CapSense.c **** reg32 * CapSense_pcTable[] = {
  65:.\Generated_Source\PSoC4/CapSense.c ****     (reg32 *)CapSense_Sns__Button0__BTN__PC, 
  66:.\Generated_Source\PSoC4/CapSense.c **** };
  67:.\Generated_Source\PSoC4/CapSense.c **** 
  68:.\Generated_Source\PSoC4/CapSense.c **** const uint8 CapSense_portTable[] = {
  69:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__Button0__BTN__PORT, 
  70:.\Generated_Source\PSoC4/CapSense.c **** };
  71:.\Generated_Source\PSoC4/CapSense.c **** 
  72:.\Generated_Source\PSoC4/CapSense.c **** const uint32 CapSense_maskTable[] = {
  73:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__Button0__BTN__MASK, 
  74:.\Generated_Source\PSoC4/CapSense.c **** };
  75:.\Generated_Source\PSoC4/CapSense.c **** 
  76:.\Generated_Source\PSoC4/CapSense.c **** const uint8 CapSense_pinShiftTbl[] = {
  77:.\Generated_Source\PSoC4/CapSense.c ****     (uint8) CapSense_Sns__Button0__BTN__SHIFT, 
  78:.\Generated_Source\PSoC4/CapSense.c **** };
  79:.\Generated_Source\PSoC4/CapSense.c **** 
  80:.\Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_modulationIDAC[CapSense_TOTAL_SENSOR_COUNT];
  81:.\Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_compensationIDAC[CapSense_TOTAL_SENSOR_COUNT];
  82:.\Generated_Source\PSoC4/CapSense.c **** 
  83:.\Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE] = {
  84:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_RESOLUTION_12_BITS,
  85:.\Generated_Source\PSoC4/CapSense.c **** };
  86:.\Generated_Source\PSoC4/CapSense.c **** 
  87:.\Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_senseClkDividerVal[CapSense_TOTAL_SCANSLOT_COUNT];
  88:.\Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_sampleClkDividerVal[CapSense_TOTAL_SCANSLOT_COUNT];
  89:.\Generated_Source\PSoC4/CapSense.c **** 
  90:.\Generated_Source\PSoC4/CapSense.c **** const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT] = {
  91:.\Generated_Source\PSoC4/CapSense.c ****     0u, /* Button0__BTN */
  92:.\Generated_Source\PSoC4/CapSense.c **** };
  93:.\Generated_Source\PSoC4/CapSense.c **** 
  94:.\Generated_Source\PSoC4/CapSense.c **** 
  95:.\Generated_Source\PSoC4/CapSense.c **** 
  96:.\Generated_Source\PSoC4/CapSense.c **** reg32* const CapSense_prtSelTbl[] = {
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 5


  97:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL0),
  98:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL1),
  99:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL2),
 100:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL3),
 101:.\Generated_Source\PSoC4/CapSense.c **** #if(0u == CapSense_M0S8CSD_BLOCK_VER)
 102:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL4)	
 103:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (0u == CapSense_M0S8CSD_BLOCK_VER) */
 104:.\Generated_Source\PSoC4/CapSense.c **** };
 105:.\Generated_Source\PSoC4/CapSense.c **** 
 106:.\Generated_Source\PSoC4/CapSense.c **** reg32* const CapSense_prtCfgTbl[] = {
 107:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_PRT0_PC),
 108:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_PRT1_PC),
 109:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_PRT2_PC),
 110:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_PRT3_PC),
 111:.\Generated_Source\PSoC4/CapSense.c **** #if(0u == CapSense_M0S8CSD_BLOCK_VER)
 112:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_PRT4_PC)	
 113:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (0u == CapSense_M0S8CSD_BLOCK_VER) */	
 114:.\Generated_Source\PSoC4/CapSense.c **** };
 115:.\Generated_Source\PSoC4/CapSense.c **** 
 116:.\Generated_Source\PSoC4/CapSense.c **** reg32* const CapSense_prtDRTbl[] = {
 117:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_PRT0_DR),
 118:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_PRT1_DR),
 119:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_PRT2_DR),
 120:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_PRT3_DR),
 121:.\Generated_Source\PSoC4/CapSense.c **** #if(0u == CapSense_M0S8CSD_BLOCK_VER)
 122:.\Generated_Source\PSoC4/CapSense.c **** 	((reg32 *) CYREG_PRT4_DR),
 123:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (0u == CapSense_M0S8CSD_BLOCK_VER) */	
 124:.\Generated_Source\PSoC4/CapSense.c **** };
 125:.\Generated_Source\PSoC4/CapSense.c ****     
 126:.\Generated_Source\PSoC4/CapSense.c **** 
 127:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 128:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_Init
 129:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 130:.\Generated_Source\PSoC4/CapSense.c **** *
 131:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 132:.\Generated_Source\PSoC4/CapSense.c **** *  API initializes default CapSense configuration provided by the customizer that defines 
 133:.\Generated_Source\PSoC4/CapSense.c **** *  the mode of component operations and resets all the sensors to an inactive state.
 134:.\Generated_Source\PSoC4/CapSense.c **** *
 135:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 136:.\Generated_Source\PSoC4/CapSense.c **** *  None
 137:.\Generated_Source\PSoC4/CapSense.c **** *
 138:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 139:.\Generated_Source\PSoC4/CapSense.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense.c **** *
 141:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 142:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_immunityIndex - defines immunity level.
 143:.\Generated_Source\PSoC4/CapSense.c **** *
 144:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 145:.\Generated_Source\PSoC4/CapSense.c **** *  None
 146:.\Generated_Source\PSoC4/CapSense.c **** * 
 147:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 148:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_Init(void)
 149:.\Generated_Source\PSoC4/CapSense.c **** {   
 133              		.loc 1 149 0
 134              		.cfi_startproc
 135 0000 80B5     		push	{r7, lr}
 136              		.cfi_def_cfa_offset 8
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 6


 137              		.cfi_offset 7, -8
 138              		.cfi_offset 14, -4
 139 0002 82B0     		sub	sp, sp, #8
 140              		.cfi_def_cfa_offset 16
 141 0004 00AF     		add	r7, sp, #0
 142              		.cfi_def_cfa_register 7
 150:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 curSensor;
 151:.\Generated_Source\PSoC4/CapSense.c **** 	
 152:.\Generated_Source\PSoC4/CapSense.c **** 	#if(CapSense_IS_SHIELD_ENABLE)
 153:.\Generated_Source\PSoC4/CapSense.c **** 		
 154:.\Generated_Source\PSoC4/CapSense.c **** 		#if((CapSense_CSH_TANK_PREGARGE_OPTION == CapSense__CAPPRIOBUF) || (0u != CapSense_CSH_TANK_ENABL
 155:.\Generated_Source\PSoC4/CapSense.c **** 			uint32 newRegValue;
 156:.\Generated_Source\PSoC4/CapSense.c **** 			
 157:.\Generated_Source\PSoC4/CapSense.c **** 			newRegValue = CapSense_CTANK_CONNECTION_REG;
 158:.\Generated_Source\PSoC4/CapSense.c **** 	        newRegValue &= ~(CapSense_CSD_CTANK_CONNECTION_MASK);
 159:.\Generated_Source\PSoC4/CapSense.c **** 			newRegValue |= CapSense_CSD_CTANK_TO_AMUXBUS_B;
 160:.\Generated_Source\PSoC4/CapSense.c **** 	        CapSense_CTANK_CONNECTION_REG = newRegValue;
 161:.\Generated_Source\PSoC4/CapSense.c **** 			
 162:.\Generated_Source\PSoC4/CapSense.c **** 			#if(CapSense_CSH_TANK_PREGARGE_OPTION == CapSense__CAPPRIOBUF)
 163:.\Generated_Source\PSoC4/CapSense.c **** 				newRegValue = CapSense_CTANK_PORT_PC_REG;
 164:.\Generated_Source\PSoC4/CapSense.c **** 		        newRegValue &= ~(CapSense_CSD_CTANK_PC_MASK);
 165:.\Generated_Source\PSoC4/CapSense.c **** 				newRegValue |= CapSense_CTANK_PC_STRONG_MODE;
 166:.\Generated_Source\PSoC4/CapSense.c **** 		        CapSense_CTANK_PORT_PC_REG = newRegValue;
 167:.\Generated_Source\PSoC4/CapSense.c **** 				
 168:.\Generated_Source\PSoC4/CapSense.c **** 				newRegValue = CapSense_CTANK_PORT_DR_REG;
 169:.\Generated_Source\PSoC4/CapSense.c **** 		        newRegValue &= ~(CapSense_CTANK_DR_MASK);
 170:.\Generated_Source\PSoC4/CapSense.c **** 				newRegValue |= CapSense_CTANK_DR_CONFIG;
 171:.\Generated_Source\PSoC4/CapSense.c **** 		        CapSense_CTANK_PORT_DR_REG = newRegValue;
 172:.\Generated_Source\PSoC4/CapSense.c **** 			#endif /* (CapSense_CSH_TANK_PREGARGE_OPTION == CapSense__CAPPRIOBUF) */
 173:.\Generated_Source\PSoC4/CapSense.c **** 	        
 174:.\Generated_Source\PSoC4/CapSense.c **** 		#endif /* ((CapSense_CSH_TANK_PREGARGE_OPTION == CapSense__CAPPRIOBUF) || (CapSense_CSH_TANK_ENAB
 175:.\Generated_Source\PSoC4/CapSense.c **** 		
 176:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_EnableShieldElectrode((uint32)CapSense_SHIELD_PIN_NUMBER, (uint32)CapSense_SHIELD_PORT_N
 177:.\Generated_Source\PSoC4/CapSense.c **** 		
 178:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (CapSense_IS_SHIELD_ENABLE) */
 179:.\Generated_Source\PSoC4/CapSense.c **** 	
 180:.\Generated_Source\PSoC4/CapSense.c **** 	for(curSensor = 0u; curSensor < CapSense_TOTAL_SENSOR_COUNT; curSensor++)
 143              		.loc 1 180 0
 144 0006 0023     		mov	r3, #0
 145 0008 7B60     		str	r3, [r7, #4]
 146 000a 07E0     		b	.L2
 147              	.L3:
 181:.\Generated_Source\PSoC4/CapSense.c **** 	{
 182:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_unscannedSnsDriveMode[curSensor] = CapSense_CONNECT_INACTIVE_SNS;
 148              		.loc 1 182 0 discriminator 2
 149 000c 0A4A     		ldr	r2, .L4
 150 000e 7B68     		ldr	r3, [r7, #4]
 151 0010 D318     		add	r3, r2, r3
 152 0012 0022     		mov	r2, #0
 153 0014 1A70     		strb	r2, [r3]
 180:.\Generated_Source\PSoC4/CapSense.c **** 	for(curSensor = 0u; curSensor < CapSense_TOTAL_SENSOR_COUNT; curSensor++)
 154              		.loc 1 180 0 discriminator 2
 155 0016 7B68     		ldr	r3, [r7, #4]
 156 0018 0133     		add	r3, r3, #1
 157 001a 7B60     		str	r3, [r7, #4]
 158              	.L2:
 180:.\Generated_Source\PSoC4/CapSense.c **** 	for(curSensor = 0u; curSensor < CapSense_TOTAL_SENSOR_COUNT; curSensor++)
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 7


 159              		.loc 1 180 0 is_stmt 0 discriminator 1
 160 001c 7B68     		ldr	r3, [r7, #4]
 161 001e 002B     		cmp	r3, #0
 162 0020 F4D0     		beq	.L3
 183:.\Generated_Source\PSoC4/CapSense.c **** 	}
 184:.\Generated_Source\PSoC4/CapSense.c ****     
 185:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CsdHwBlockInit();
 163              		.loc 1 185 0 is_stmt 1
 164 0022 FFF7FEFF 		bl	CapSense_CsdHwBlockInit
 186:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_SetShieldDelay(CapSense_SHIELD_DELAY );
 165              		.loc 1 186 0
 166 0026 0020     		mov	r0, #0
 167 0028 FFF7FEFF 		bl	CapSense_SetShieldDelay
 187:.\Generated_Source\PSoC4/CapSense.c **** 	
 188:.\Generated_Source\PSoC4/CapSense.c **** 	/* Clear all sensors */
 189:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_ClearSensors();
 168              		.loc 1 189 0
 169 002c FFF7FEFF 		bl	CapSense_ClearSensors
 190:.\Generated_Source\PSoC4/CapSense.c **** }
 170              		.loc 1 190 0
 171 0030 BD46     		mov	sp, r7
 172 0032 02B0     		add	sp, sp, #8
 173              		@ sp needed
 174 0034 80BD     		pop	{r7, pc}
 175              	.L5:
 176 0036 C046     		.align	2
 177              	.L4:
 178 0038 00000000 		.word	CapSense_unscannedSnsDriveMode
 179              		.cfi_endproc
 180              	.LFE33:
 181              		.size	CapSense_Init, .-CapSense_Init
 182              		.section	.text.CapSense_CsdHwBlockInit,"ax",%progbits
 183              		.align	2
 184              		.global	CapSense_CsdHwBlockInit
 185              		.code	16
 186              		.thumb_func
 187              		.type	CapSense_CsdHwBlockInit, %function
 188              	CapSense_CsdHwBlockInit:
 189              	.LFB34:
 191:.\Generated_Source\PSoC4/CapSense.c **** 
 192:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 193:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_CsdHwBlockInit
 194:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 195:.\Generated_Source\PSoC4/CapSense.c **** *
 196:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 197:.\Generated_Source\PSoC4/CapSense.c **** *  Initialises the hardware parameters of the CSD block 
 198:.\Generated_Source\PSoC4/CapSense.c **** *
 199:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 200:.\Generated_Source\PSoC4/CapSense.c **** *  None
 201:.\Generated_Source\PSoC4/CapSense.c **** *
 202:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 203:.\Generated_Source\PSoC4/CapSense.c **** *  None
 204:.\Generated_Source\PSoC4/CapSense.c **** *
 205:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 206:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdTrim1 - Contains IDAC trim register value for Sourcing Mode.
 207:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdTrim2 - Contains IDAC trim register value for Sinking Mode.
 208:.\Generated_Source\PSoC4/CapSense.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 8


 209:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 210:.\Generated_Source\PSoC4/CapSense.c **** *  None
 211:.\Generated_Source\PSoC4/CapSense.c **** * 
 212:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 213:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_CsdHwBlockInit(void)
 214:.\Generated_Source\PSoC4/CapSense.c **** {
 190              		.loc 1 214 0
 191              		.cfi_startproc
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 82B0     		sub	sp, sp, #8
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 215:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 newRegValue;
 216:.\Generated_Source\PSoC4/CapSense.c **** 	
 217:.\Generated_Source\PSoC4/CapSense.c **** 	    /* Set trim registers for CSD Mode */ 
 218:.\Generated_Source\PSoC4/CapSense.c ****     #if (CapSense_IDAC1_POLARITY == CapSense__IDAC_SINK)
 219:.\Generated_Source\PSoC4/CapSense.c **** 		/* iDAC1 Sinking Mode */ 
 220:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_csdTrim2 = (uint8)CapSense_CSD_TRIM2_REG;
 221:.\Generated_Source\PSoC4/CapSense.c **** 		newRegValue = CapSense_csdTrim2;
 222:.\Generated_Source\PSoC4/CapSense.c **** 		newRegValue &= CapSense_CSD_IDAC1_TRIM_MASK;
 223:.\Generated_Source\PSoC4/CapSense.c **** 		newRegValue |= (uint32)((uint32)CapSense_SFLASH_CSD_TRIM2_REG & (uint32)CapSense_CSFLASH_TRIM_IDA
 224:.\Generated_Source\PSoC4/CapSense.c **** 		
 225:.\Generated_Source\PSoC4/CapSense.c **** 		#if (CapSense_IDAC_CNT == 2u)
 226:.\Generated_Source\PSoC4/CapSense.c **** 		    /* iDAC2 Sinking Mode */ 
 227:.\Generated_Source\PSoC4/CapSense.c **** 			newRegValue &= CapSense_CSD_IDAC2_TRIM_MASK;
 228:.\Generated_Source\PSoC4/CapSense.c **** 			newRegValue |= (uint32)((uint32)CapSense_SFLASH_CSD_TRIM2_REG & (uint32)CapSense_CSFLASH_TRIM_ID
 229:.\Generated_Source\PSoC4/CapSense.c **** 		#endif /* (CapSense_IDAC_CNT == 2u) */
 230:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_CSD_TRIM2_REG = newRegValue;
 231:.\Generated_Source\PSoC4/CapSense.c ****     #else   
 232:.\Generated_Source\PSoC4/CapSense.c **** 		/* iDAC1 Sourcing Mode */ 
 233:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_csdTrim1 = (uint8)CapSense_CSD_TRIM1_REG;
 200              		.loc 1 233 0
 201 0006 244B     		ldr	r3, .L7
 202 0008 1B68     		ldr	r3, [r3]
 203 000a DAB2     		uxtb	r2, r3
 204 000c 234B     		ldr	r3, .L7+4
 205 000e 1A70     		strb	r2, [r3]
 234:.\Generated_Source\PSoC4/CapSense.c **** 		newRegValue = CapSense_csdTrim1;
 206              		.loc 1 234 0
 207 0010 224B     		ldr	r3, .L7+4
 208 0012 1B78     		ldrb	r3, [r3]
 209 0014 7B60     		str	r3, [r7, #4]
 235:.\Generated_Source\PSoC4/CapSense.c **** 		newRegValue &= CapSense_CSD_IDAC1_TRIM_MASK;
 210              		.loc 1 235 0
 211 0016 7B68     		ldr	r3, [r7, #4]
 212 0018 0F22     		mov	r2, #15
 213 001a 9343     		bic	r3, r2
 214 001c 7B60     		str	r3, [r7, #4]
 236:.\Generated_Source\PSoC4/CapSense.c **** 		newRegValue |= (uint32)((uint32)CapSense_SFLASH_CSD_TRIM1_REG & (uint32)CapSense_CSFLASH_TRIM_IDA
 215              		.loc 1 236 0
 216 001e 204B     		ldr	r3, .L7+8
 217 0020 1B78     		ldrb	r3, [r3]
 218 0022 DBB2     		uxtb	r3, r3
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 9


 219 0024 1A1C     		mov	r2, r3
 220 0026 0F23     		mov	r3, #15
 221 0028 1340     		and	r3, r2
 222 002a 7A68     		ldr	r2, [r7, #4]
 223 002c 1343     		orr	r3, r2
 224 002e 7B60     		str	r3, [r7, #4]
 237:.\Generated_Source\PSoC4/CapSense.c **** 		#if (CapSense_IDAC_CNT == 2u)
 238:.\Generated_Source\PSoC4/CapSense.c **** 		     /* iDAC2 Sourcing Mode */ 
 239:.\Generated_Source\PSoC4/CapSense.c **** 			newRegValue &= CapSense_CSD_IDAC2_TRIM_MASK;
 225              		.loc 1 239 0
 226 0030 7B68     		ldr	r3, [r7, #4]
 227 0032 F022     		mov	r2, #240
 228 0034 9343     		bic	r3, r2
 229 0036 7B60     		str	r3, [r7, #4]
 240:.\Generated_Source\PSoC4/CapSense.c **** 			newRegValue |= (uint32)((uint32)CapSense_SFLASH_CSD_TRIM1_REG & (uint32)CapSense_CSFLASH_TRIM_ID
 230              		.loc 1 240 0
 231 0038 194B     		ldr	r3, .L7+8
 232 003a 1B78     		ldrb	r3, [r3]
 233 003c DBB2     		uxtb	r3, r3
 234 003e 1A1C     		mov	r2, r3
 235 0040 F023     		mov	r3, #240
 236 0042 1340     		and	r3, r2
 237 0044 7A68     		ldr	r2, [r7, #4]
 238 0046 1343     		orr	r3, r2
 239 0048 7B60     		str	r3, [r7, #4]
 241:.\Generated_Source\PSoC4/CapSense.c **** 		#endif		
 242:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_CSD_TRIM1_REG = newRegValue;
 240              		.loc 1 242 0
 241 004a 134B     		ldr	r3, .L7
 242 004c 7A68     		ldr	r2, [r7, #4]
 243 004e 1A60     		str	r2, [r3]
 243:.\Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_IDAC1_POLARITY == CapSense__IDAC_SINK) */
 244:.\Generated_Source\PSoC4/CapSense.c **** 	
 245:.\Generated_Source\PSoC4/CapSense.c **** 	/* Configure CSD and IDAC */
 246:.\Generated_Source\PSoC4/CapSense.c **** 	#if (CapSense_IDAC_CNT > 1u)
 247:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_CSD_IDAC_REG = CapSense_DEFAULT_CSD_IDAC_CONFIG;
 244              		.loc 1 247 0
 245 0050 144B     		ldr	r3, .L7+12
 246 0052 154A     		ldr	r2, .L7+16
 247 0054 1A60     		str	r2, [r3]
 248:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_CSD_CFG_REG = CapSense_DEFAULT_CSD_CONFIG;
 248              		.loc 1 248 0
 249 0056 154B     		ldr	r3, .L7+20
 250 0058 154A     		ldr	r2, .L7+24
 251 005a 1A60     		str	r2, [r3]
 249:.\Generated_Source\PSoC4/CapSense.c **** 	#else
 250:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_CSD_IDAC_REG &= ~(CapSense_CSD_IDAC1_MODE_MASK  | CapSense_CSD_IDAC1_DATA_MASK);
 251:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_CSD_IDAC_REG |= CapSense_DEFAULT_CSD_IDAC_CONFIG;
 252:.\Generated_Source\PSoC4/CapSense.c **** 		
 253:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_CSD_CFG_REG &= ~(CapSense_CSD_CONFIG_MASK);
 254:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_CSD_CFG_REG |= (CapSense_DEFAULT_CSD_CONFIG);
 255:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (CapSense_IDAC_CNT > 1u) */
 256:.\Generated_Source\PSoC4/CapSense.c **** 	
 257:.\Generated_Source\PSoC4/CapSense.c **** 	
 258:.\Generated_Source\PSoC4/CapSense.c **** 	/* Connect Cmod to AMUX bus */ 
 259:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue = CapSense_CMOD_CONNECTION_REG; 
 252              		.loc 1 259 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 10


 253 005c 154B     		ldr	r3, .L7+28
 254 005e 1B68     		ldr	r3, [r3]
 255 0060 7B60     		str	r3, [r7, #4]
 260:.\Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CSD_CMOD_CONNECTION_MASK);
 256              		.loc 1 260 0
 257 0062 7A68     		ldr	r2, [r7, #4]
 258 0064 144B     		ldr	r3, .L7+32
 259 0066 1340     		and	r3, r2
 260 0068 7B60     		str	r3, [r7, #4]
 261:.\Generated_Source\PSoC4/CapSense.c ****     newRegValue |= CapSense_CSD_CMOD_TO_AMUXBUS_A;
 261              		.loc 1 261 0
 262 006a 7B68     		ldr	r3, [r7, #4]
 263 006c C022     		mov	r2, #192
 264 006e D200     		lsl	r2, r2, #3
 265 0070 1343     		orr	r3, r2
 266 0072 7B60     		str	r3, [r7, #4]
 262:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_CMOD_CONNECTION_REG = newRegValue;
 267              		.loc 1 262 0
 268 0074 0F4B     		ldr	r3, .L7+28
 269 0076 7A68     		ldr	r2, [r7, #4]
 270 0078 1A60     		str	r2, [r3]
 263:.\Generated_Source\PSoC4/CapSense.c **** 	
 264:.\Generated_Source\PSoC4/CapSense.c **** 	/* Configure Dead Band PWM if it is enabled */
 265:.\Generated_Source\PSoC4/CapSense.c **** 	#if(CapSense_CSD_4B_PWM_MODE != CapSense__PWM_OFF)
 266:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_CSD_4B_PWM_REG = CapSense_DEFAULT_CSD_4B_PWM_CONFIG;
 267:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (CapSense_CSD_4B_PWM_MODE != CapSense__PWM_OFF) */
 268:.\Generated_Source\PSoC4/CapSense.c **** 
 269:.\Generated_Source\PSoC4/CapSense.c **** 	/* Setup ISR */
 270:.\Generated_Source\PSoC4/CapSense.c **** 	CyIntDisable(CapSense_ISR_NUMBER);
 271              		.loc 1 270 0
 272 007a 0F20     		mov	r0, #15
 273 007c FFF7FEFF 		bl	CyIntDisable
 271:.\Generated_Source\PSoC4/CapSense.c **** 	#if !defined(CY_EXTERNAL_INTERRUPT_CONFIG)		
 272:.\Generated_Source\PSoC4/CapSense.c **** 	    (void)CyIntSetVector(CapSense_ISR_NUMBER, &CapSense_ISR);
 274              		.loc 1 272 0
 275 0080 0E4B     		ldr	r3, .L7+36
 276 0082 0F20     		mov	r0, #15
 277 0084 191C     		mov	r1, r3
 278 0086 FFF7FEFF 		bl	CyIntSetVector
 273:.\Generated_Source\PSoC4/CapSense.c **** 	    CyIntSetPriority(CapSense_ISR_NUMBER, CapSense_ISR_PRIORITY);
 279              		.loc 1 273 0
 280 008a 0F20     		mov	r0, #15
 281 008c 0321     		mov	r1, #3
 282 008e FFF7FEFF 		bl	CyIntSetPriority
 274:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (CY_EXTERNAL_INTERRUPT_CONFIG) */
 275:.\Generated_Source\PSoC4/CapSense.c **** }
 283              		.loc 1 275 0
 284 0092 BD46     		mov	sp, r7
 285 0094 02B0     		add	sp, sp, #8
 286              		@ sp needed
 287 0096 80BD     		pop	{r7, pc}
 288              	.L8:
 289              		.align	2
 290              	.L7:
 291 0098 00FF0840 		.word	1074331392
 292 009c 00000000 		.word	CapSense_csdTrim1
 293 00a0 62F1FF0F 		.word	268431714
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 11


 294 00a4 08000840 		.word	1074266120
 295 00a8 00020001 		.word	16777728
 296 00ac 04000840 		.word	1074266116
 297 00b0 0008A001 		.word	27265024
 298 00b4 10000140 		.word	1073807376
 299 00b8 FFF0FFFF 		.word	-3841
 300 00bc 00000000 		.word	CapSense_ISR
 301              		.cfi_endproc
 302              	.LFE34:
 303              		.size	CapSense_CsdHwBlockInit, .-CapSense_CsdHwBlockInit
 304              		.section	.text.CapSense_Enable,"ax",%progbits
 305              		.align	2
 306              		.global	CapSense_Enable
 307              		.code	16
 308              		.thumb_func
 309              		.type	CapSense_Enable, %function
 310              	CapSense_Enable:
 311              	.LFB35:
 276:.\Generated_Source\PSoC4/CapSense.c **** 
 277:.\Generated_Source\PSoC4/CapSense.c **** 
 278:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 279:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_Enable
 280:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 281:.\Generated_Source\PSoC4/CapSense.c **** *
 282:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 283:.\Generated_Source\PSoC4/CapSense.c **** *  Enables the CSD block and related resources to an active mode.
 284:.\Generated_Source\PSoC4/CapSense.c **** *
 285:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 286:.\Generated_Source\PSoC4/CapSense.c **** *  None
 287:.\Generated_Source\PSoC4/CapSense.c **** *
 288:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 289:.\Generated_Source\PSoC4/CapSense.c **** *  None
 290:.\Generated_Source\PSoC4/CapSense.c **** *
 291:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 292:.\Generated_Source\PSoC4/CapSense.c **** *  None.
 293:.\Generated_Source\PSoC4/CapSense.c **** *
 294:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 295:.\Generated_Source\PSoC4/CapSense.c **** *  None
 296:.\Generated_Source\PSoC4/CapSense.c **** * 
 297:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 298:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_Enable(void)
 299:.\Generated_Source\PSoC4/CapSense.c **** {
 312              		.loc 1 299 0
 313              		.cfi_startproc
 314 0000 80B5     		push	{r7, lr}
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 7, -8
 317              		.cfi_offset 14, -4
 318 0002 82B0     		sub	sp, sp, #8
 319              		.cfi_def_cfa_offset 16
 320 0004 00AF     		add	r7, sp, #0
 321              		.cfi_def_cfa_register 7
 300:.\Generated_Source\PSoC4/CapSense.c ****     uint32 newRegValue;
 301:.\Generated_Source\PSoC4/CapSense.c ****     
 302:.\Generated_Source\PSoC4/CapSense.c ****     /* Enable Clocks */
 303:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_SenseClk_Stop();
 322              		.loc 1 303 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 12


 323 0006 FFF7FEFF 		bl	CapSense_SenseClk_Stop
 304:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_SampleClk_Stop();
 324              		.loc 1 304 0
 325 000a FFF7FEFF 		bl	CapSense_SampleClk_Stop
 305:.\Generated_Source\PSoC4/CapSense.c **** 	
 306:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_SampleClk_SetDividerValue((uint16)CapSense_INITIAL_CLK_DIVIDER);
 326              		.loc 1 306 0
 327 000e 0020     		mov	r0, #0
 328 0010 0021     		mov	r1, #0
 329 0012 FFF7FEFF 		bl	CapSense_SampleClk_SetFractionalDividerRegister
 307:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_SenseClk_SetDividerValue((uint16)CapSense_INITIAL_CLK_DIVIDER);
 330              		.loc 1 307 0
 331 0016 0020     		mov	r0, #0
 332 0018 0021     		mov	r1, #0
 333 001a FFF7FEFF 		bl	CapSense_SenseClk_SetFractionalDividerRegister
 308:.\Generated_Source\PSoC4/CapSense.c **** 	
 309:.\Generated_Source\PSoC4/CapSense.c **** 	#if (0u == CapSense_IS_M0S8PERI_BLOCK)
 310:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SenseClk_Start();
 334              		.loc 1 310 0
 335 001e FFF7FEFF 		bl	CapSense_SenseClk_Start
 311:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SampleClk_Start();
 336              		.loc 1 311 0
 337 0022 FFF7FEFF 		bl	CapSense_SampleClk_Start
 312:.\Generated_Source\PSoC4/CapSense.c **** 	#else
 313:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SampleClk_Start();
 314:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SenseClk_StartEx(CapSense_SampleClk__DIV_ID);
 315:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (0u == CapSense_IS_M0S8PERI_BLOCK) */
 316:.\Generated_Source\PSoC4/CapSense.c **** 	
 317:.\Generated_Source\PSoC4/CapSense.c **** 	/* Enable the CSD block */
 318:.\Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CSD_CFG_REG;
 338              		.loc 1 318 0
 339 0026 084B     		ldr	r3, .L10
 340 0028 1B68     		ldr	r3, [r3]
 341 002a 7B60     		str	r3, [r7, #4]
 319:.\Generated_Source\PSoC4/CapSense.c ****     newRegValue |= (CapSense_CSD_CFG_ENABLE | CapSense_CSD_CFG_SENSE_COMP_EN 
 342              		.loc 1 319 0
 343 002c 7B68     		ldr	r3, [r7, #4]
 344 002e 074A     		ldr	r2, .L10+4
 345 0030 1343     		orr	r3, r2
 346 0032 7B60     		str	r3, [r7, #4]
 320:.\Generated_Source\PSoC4/CapSense.c ****                                                    | CapSense_CSD_CFG_SENSE_EN);    
 321:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_CFG_REG = newRegValue;
 347              		.loc 1 321 0
 348 0034 044B     		ldr	r3, .L10
 349 0036 7A68     		ldr	r2, [r7, #4]
 350 0038 1A60     		str	r2, [r3]
 322:.\Generated_Source\PSoC4/CapSense.c **** 
 323:.\Generated_Source\PSoC4/CapSense.c ****     /* Enable interrupt */
 324:.\Generated_Source\PSoC4/CapSense.c ****     CyIntEnable(CapSense_ISR_NUMBER);
 351              		.loc 1 324 0
 352 003a 0F20     		mov	r0, #15
 353 003c FFF7FEFF 		bl	CyIntEnable
 325:.\Generated_Source\PSoC4/CapSense.c **** }
 354              		.loc 1 325 0
 355 0040 BD46     		mov	sp, r7
 356 0042 02B0     		add	sp, sp, #8
 357              		@ sp needed
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 13


 358 0044 80BD     		pop	{r7, pc}
 359              	.L11:
 360 0046 C046     		.align	2
 361              	.L10:
 362 0048 04000840 		.word	1074266116
 363 004c 00100880 		.word	-2146955264
 364              		.cfi_endproc
 365              	.LFE35:
 366              		.size	CapSense_Enable, .-CapSense_Enable
 367              		.section	.text.CapSense_Start,"ax",%progbits
 368              		.align	2
 369              		.global	CapSense_Start
 370              		.code	16
 371              		.thumb_func
 372              		.type	CapSense_Start, %function
 373              	CapSense_Start:
 374              	.LFB36:
 326:.\Generated_Source\PSoC4/CapSense.c **** 
 327:.\Generated_Source\PSoC4/CapSense.c **** 
 328:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 329:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_Start
 330:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 331:.\Generated_Source\PSoC4/CapSense.c **** *
 332:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 333:.\Generated_Source\PSoC4/CapSense.c **** *  This is the preferred method to begin the component operation. CapSense_Start() 
 334:.\Generated_Source\PSoC4/CapSense.c **** *  calls the CapSense_Init() function, and then calls the CapSense_Enable() 
 335:.\Generated_Source\PSoC4/CapSense.c **** *  function. Initializes the registers and starts the CSD method of the CapSense 
 336:.\Generated_Source\PSoC4/CapSense.c **** *  component. Resets all the sensors to an inactive state. Enables interrupts for 
 337:.\Generated_Source\PSoC4/CapSense.c **** *  sensors scanning. When the SmartSense tuning mode is selected, the tuning procedure
 338:.\Generated_Source\PSoC4/CapSense.c **** *  is applied for all the sensors. The CapSense_Start() routine must be called before 
 339:.\Generated_Source\PSoC4/CapSense.c **** *  any other API routines.
 340:.\Generated_Source\PSoC4/CapSense.c **** *
 341:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 342:.\Generated_Source\PSoC4/CapSense.c **** *  None
 343:.\Generated_Source\PSoC4/CapSense.c **** *
 344:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 345:.\Generated_Source\PSoC4/CapSense.c **** *  None
 346:.\Generated_Source\PSoC4/CapSense.c **** *
 347:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 348:.\Generated_Source\PSoC4/CapSense.c **** *   CapSense_initVar - used to check the initial configuration, 
 349:.\Generated_Source\PSoC4/CapSense.c **** *   modified on the first function call.
 350:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_lowLevelTuningDone - Used to notify the Tuner GUI that 
 351:.\Generated_Source\PSoC4/CapSense.c **** *   tuning of the scanning parameters is done. 
 352:.\Generated_Source\PSoC4/CapSense.c **** *
 353:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 354:.\Generated_Source\PSoC4/CapSense.c **** *  None
 355:.\Generated_Source\PSoC4/CapSense.c **** * 
 356:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_Start(void)
 358:.\Generated_Source\PSoC4/CapSense.c **** {
 375              		.loc 1 358 0
 376              		.cfi_startproc
 377 0000 80B5     		push	{r7, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 14


 382              		.cfi_def_cfa_register 7
 359:.\Generated_Source\PSoC4/CapSense.c **** 	#if((0u != CapSense_AUTOCALIBRATION_ENABLE) && (CapSense_TUNING_METHOD != CapSense__TUNING_AUTO))
 360:.\Generated_Source\PSoC4/CapSense.c **** 		uint32 curSensor;
 361:.\Generated_Source\PSoC4/CapSense.c **** 		uint32 rawLevel;
 362:.\Generated_Source\PSoC4/CapSense.c **** 		uint32 widget;
 363:.\Generated_Source\PSoC4/CapSense.c ****     #endif /* ((0u != CapSense_AUTOCALIBRATION_ENABLE) && (CapSense_TUNING_METHOD != CapSense__TUNI
 364:.\Generated_Source\PSoC4/CapSense.c **** 	
 365:.\Generated_Source\PSoC4/CapSense.c ****     if (CapSense_initVar == 0u)
 383              		.loc 1 365 0
 384 0004 0C4B     		ldr	r3, .L14
 385 0006 1B78     		ldrb	r3, [r3]
 386 0008 002B     		cmp	r3, #0
 387 000a 04D1     		bne	.L13
 366:.\Generated_Source\PSoC4/CapSense.c ****     {
 367:.\Generated_Source\PSoC4/CapSense.c ****         CapSense_Init();
 388              		.loc 1 367 0
 389 000c FFF7FEFF 		bl	CapSense_Init
 368:.\Generated_Source\PSoC4/CapSense.c ****         CapSense_initVar = 1u;
 390              		.loc 1 368 0
 391 0010 094B     		ldr	r3, .L14
 392 0012 0122     		mov	r2, #1
 393 0014 1A70     		strb	r2, [r3]
 394              	.L13:
 369:.\Generated_Source\PSoC4/CapSense.c ****     }
 370:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_Enable();
 395              		.loc 1 370 0
 396 0016 FFF7FEFF 		bl	CapSense_Enable
 371:.\Generated_Source\PSoC4/CapSense.c **** 	
 372:.\Generated_Source\PSoC4/CapSense.c ****     /* AutoTunning start */
 373:.\Generated_Source\PSoC4/CapSense.c ****     #if ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
 374:.\Generated_Source\PSoC4/CapSense.c **** 		 (0u != CapSense_CSHL_API_GENERATE))
 375:.\Generated_Source\PSoC4/CapSense.c ****         /* AutoTune by sensor basis */
 376:.\Generated_Source\PSoC4/CapSense.c ****         CapSense_AutoTune();
 397              		.loc 1 376 0
 398 001a FFF7FEFF 		bl	CapSense_AutoTune
 377:.\Generated_Source\PSoC4/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 399              		.loc 1 377 0
 400 001e 074B     		ldr	r3, .L14+4
 401 0020 0122     		mov	r2, #1
 402 0022 1A70     		strb	r2, [r3]
 378:.\Generated_Source\PSoC4/CapSense.c **** 	#else
 379:.\Generated_Source\PSoC4/CapSense.c **** 		#if(0u != CapSense_AUTOCALIBRATION_ENABLE)
 380:.\Generated_Source\PSoC4/CapSense.c **** 			
 381:.\Generated_Source\PSoC4/CapSense.c **** 			#if(CapSense_IDAC_CNT > 1u)
 382:.\Generated_Source\PSoC4/CapSense.c **** 				CapSense_CSD_IDAC_REG &= ~(CapSense_CSD_IDAC2_MODE_MASK);	
 383:.\Generated_Source\PSoC4/CapSense.c **** 			#endif /* (CapSense_IDAC_CNT > 1u) */
 384:.\Generated_Source\PSoC4/CapSense.c **** 			
 385:.\Generated_Source\PSoC4/CapSense.c **** 			for(curSensor = 0u; curSensor < CapSense_TOTAL_SCANSLOT_COUNT; curSensor++)
 386:.\Generated_Source\PSoC4/CapSense.c **** 			{
 387:.\Generated_Source\PSoC4/CapSense.c **** 				widget = CapSense_widgetNumber[curSensor];
 388:.\Generated_Source\PSoC4/CapSense.c **** 				rawLevel = CapSense_widgetResolution[widget] >> CapSense_RESOLUTION_OFFSET;
 389:.\Generated_Source\PSoC4/CapSense.c **** 				
 390:.\Generated_Source\PSoC4/CapSense.c **** 				/* Calibration level should be equal to 85% from scanning resolution */
 391:.\Generated_Source\PSoC4/CapSense.c **** 				rawLevel = (rawLevel * 85u) / 100u;
 392:.\Generated_Source\PSoC4/CapSense.c **** 				
 393:.\Generated_Source\PSoC4/CapSense.c **** 				CapSense_CalibrateSensor(curSensor, rawLevel, CapSense_modulationIDAC);
 394:.\Generated_Source\PSoC4/CapSense.c **** 			}
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 15


 395:.\Generated_Source\PSoC4/CapSense.c **** 			
 396:.\Generated_Source\PSoC4/CapSense.c **** 			#if(CapSense_IDAC_CNT > 1u)
 397:.\Generated_Source\PSoC4/CapSense.c **** 				for(curSensor = 0u; curSensor < CapSense_TOTAL_SCANSLOT_COUNT; curSensor++)
 398:.\Generated_Source\PSoC4/CapSense.c **** 			    {
 399:.\Generated_Source\PSoC4/CapSense.c **** 				    CapSense_compensationIDAC[curSensor] = (CapSense_modulationIDAC[curSensor] + 1u) / 2u;
 400:.\Generated_Source\PSoC4/CapSense.c **** 					CapSense_modulationIDAC[curSensor] = CapSense_modulationIDAC[curSensor] / 2u;
 401:.\Generated_Source\PSoC4/CapSense.c **** 			    }
 402:.\Generated_Source\PSoC4/CapSense.c **** 				CapSense_CSD_IDAC_REG |= CapSense_CSD_IDAC2_MODE_FIXED;
 403:.\Generated_Source\PSoC4/CapSense.c **** 			#endif /* (CapSense_IDAC_CNT > 1u) */
 404:.\Generated_Source\PSoC4/CapSense.c **** 			
 405:.\Generated_Source\PSoC4/CapSense.c ****         #endif /* (0u != CapSense_AUTOCALIBRATION_ENABLE) */ 	
 406:.\Generated_Source\PSoC4/CapSense.c ****     #endif /* ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&
 407:.\Generated_Source\PSoC4/CapSense.c **** 		       (0u != CapSense_CSHL_API_GENERATE)) */	
 408:.\Generated_Source\PSoC4/CapSense.c **** 	
 409:.\Generated_Source\PSoC4/CapSense.c **** 	/* Connect sense comparator input to AMUXA */
 410:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CSD_CFG_REG |= CapSense_CSD_CFG_SENSE_INSEL;
 403              		.loc 1 410 0
 404 0024 064B     		ldr	r3, .L14+8
 405 0026 064A     		ldr	r2, .L14+8
 406 0028 1268     		ldr	r2, [r2]
 407 002a 8021     		mov	r1, #128
 408 002c C903     		lsl	r1, r1, #15
 409 002e 0A43     		orr	r2, r1
 410 0030 1A60     		str	r2, [r3]
 411:.\Generated_Source\PSoC4/CapSense.c **** }
 411              		.loc 1 411 0
 412 0032 BD46     		mov	sp, r7
 413              		@ sp needed
 414 0034 80BD     		pop	{r7, pc}
 415              	.L15:
 416 0036 C046     		.align	2
 417              	.L14:
 418 0038 01000000 		.word	CapSense_initVar
 419 003c 00000000 		.word	CapSense_lowLevelTuningDone
 420 0040 04000840 		.word	1074266116
 421              		.cfi_endproc
 422              	.LFE36:
 423              		.size	CapSense_Start, .-CapSense_Start
 424              		.section	.text.CapSense_Stop,"ax",%progbits
 425              		.align	2
 426              		.global	CapSense_Stop
 427              		.code	16
 428              		.thumb_func
 429              		.type	CapSense_Stop, %function
 430              	CapSense_Stop:
 431              	.LFB37:
 412:.\Generated_Source\PSoC4/CapSense.c **** 
 413:.\Generated_Source\PSoC4/CapSense.c **** 
 414:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 415:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_Stop
 416:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 417:.\Generated_Source\PSoC4/CapSense.c **** *
 418:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 419:.\Generated_Source\PSoC4/CapSense.c **** *  Stops the sensor scanning, disables component interrupts, and resets all the 
 420:.\Generated_Source\PSoC4/CapSense.c **** *  sensors to an inactive state. Disables the Active mode power template bits for
 421:.\Generated_Source\PSoC4/CapSense.c **** *  the subcomponents used within CapSense.
 422:.\Generated_Source\PSoC4/CapSense.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 16


 423:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 424:.\Generated_Source\PSoC4/CapSense.c **** *  None
 425:.\Generated_Source\PSoC4/CapSense.c **** *
 426:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 427:.\Generated_Source\PSoC4/CapSense.c **** *  None
 428:.\Generated_Source\PSoC4/CapSense.c **** *
 429:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 430:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdTrim1 - Contains the IDAC trim register value for the Sourcing Mode.
 431:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdTrim2 - Contains the IDAC trim register value for vSinking Mode.
 432:.\Generated_Source\PSoC4/CapSense.c **** *
 433:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 434:.\Generated_Source\PSoC4/CapSense.c **** *  This function should be called after scans are completed.
 435:.\Generated_Source\PSoC4/CapSense.c **** *
 436:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 437:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_Stop(void)
 438:.\Generated_Source\PSoC4/CapSense.c **** {
 432              		.loc 1 438 0
 433              		.cfi_startproc
 434 0000 80B5     		push	{r7, lr}
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 439:.\Generated_Source\PSoC4/CapSense.c ****     /* Disable interrupt */
 440:.\Generated_Source\PSoC4/CapSense.c ****     CyIntDisable(CapSense_ISR_NUMBER);
 440              		.loc 1 440 0
 441 0004 0F20     		mov	r0, #15
 442 0006 FFF7FEFF 		bl	CyIntDisable
 441:.\Generated_Source\PSoC4/CapSense.c **** 	
 442:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CSD_CFG_REG &= ~(CapSense_CSD_CFG_SENSE_COMP_EN | CapSense_CSD_CFG_SENSE_EN);
 443              		.loc 1 442 0
 444 000a 094B     		ldr	r3, .L17
 445 000c 084A     		ldr	r2, .L17
 446 000e 1168     		ldr	r1, [r2]
 447 0010 084A     		ldr	r2, .L17+4
 448 0012 0A40     		and	r2, r1
 449 0014 1A60     		str	r2, [r3]
 443:.\Generated_Source\PSoC4/CapSense.c **** 	
 444:.\Generated_Source\PSoC4/CapSense.c **** 	#if(CapSense_IDAC_CNT == 2u)
 445:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_CSD_CFG_REG &= ~(CapSense_CSD_CFG_ENABLE);
 450              		.loc 1 445 0
 451 0016 064B     		ldr	r3, .L17
 452 0018 054A     		ldr	r2, .L17
 453 001a 1268     		ldr	r2, [r2]
 454 001c 5200     		lsl	r2, r2, #1
 455 001e 5208     		lsr	r2, r2, #1
 456 0020 1A60     		str	r2, [r3]
 446:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (CapSense_IDAC_CNT == 2u) */
 447:.\Generated_Source\PSoC4/CapSense.c **** 
 448:.\Generated_Source\PSoC4/CapSense.c ****     /* Disable the Clocks */
 449:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_SenseClk_Stop();
 457              		.loc 1 449 0
 458 0022 FFF7FEFF 		bl	CapSense_SenseClk_Stop
 450:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_SampleClk_Stop();
 459              		.loc 1 450 0
 460 0026 FFF7FEFF 		bl	CapSense_SampleClk_Stop
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 17


 451:.\Generated_Source\PSoC4/CapSense.c **** }
 461              		.loc 1 451 0
 462 002a BD46     		mov	sp, r7
 463              		@ sp needed
 464 002c 80BD     		pop	{r7, pc}
 465              	.L18:
 466 002e C046     		.align	2
 467              	.L17:
 468 0030 04000840 		.word	1074266116
 469 0034 FFEFF7FF 		.word	-528385
 470              		.cfi_endproc
 471              	.LFE37:
 472              		.size	CapSense_Stop, .-CapSense_Stop
 473              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
 474              		.align	2
 475              		.global	CapSense_FindNextSensor
 476              		.code	16
 477              		.thumb_func
 478              		.type	CapSense_FindNextSensor, %function
 479              	CapSense_FindNextSensor:
 480              	.LFB38:
 452:.\Generated_Source\PSoC4/CapSense.c **** 
 453:.\Generated_Source\PSoC4/CapSense.c **** 
 454:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 455:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_FindNextSensor
 456:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 457:.\Generated_Source\PSoC4/CapSense.c **** *
 458:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 459:.\Generated_Source\PSoC4/CapSense.c **** *  Finds the next sensor to scan. 
 460:.\Generated_Source\PSoC4/CapSense.c **** *
 461:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 462:.\Generated_Source\PSoC4/CapSense.c **** *  snsIndex:  Current index of sensor.
 463:.\Generated_Source\PSoC4/CapSense.c **** *
 464:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 465:.\Generated_Source\PSoC4/CapSense.c **** *  Returns the next sensor index to scan.
 466:.\Generated_Source\PSoC4/CapSense.c **** *
 467:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 468:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorEnableMask[] - used to store bit masks of the enabled sensors.
 469:.\Generated_Source\PSoC4/CapSense.c **** *
 470:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 471:.\Generated_Source\PSoC4/CapSense.c **** *  This function affects the  current scanning and should not
 472:.\Generated_Source\PSoC4/CapSense.c **** *  be used outside the component.
 473:.\Generated_Source\PSoC4/CapSense.c **** *
 474:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_FindNextSensor(uint8 snsIndex)
 476:.\Generated_Source\PSoC4/CapSense.c **** {
 481              		.loc 1 476 0
 482              		.cfi_startproc
 483 0000 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 84B0     		sub	sp, sp, #16
 488              		.cfi_def_cfa_offset 24
 489 0004 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
 491 0006 021C     		mov	r2, r0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 18


 492 0008 FB1D     		add	r3, r7, #7
 493 000a 1A70     		strb	r2, [r3]
 494              	.L22:
 477:.\Generated_Source\PSoC4/CapSense.c ****     uint32 enableFlag;
 478:.\Generated_Source\PSoC4/CapSense.c ****     
 479:.\Generated_Source\PSoC4/CapSense.c ****     /* Check if sensor enabled */
 480:.\Generated_Source\PSoC4/CapSense.c ****     do
 481:.\Generated_Source\PSoC4/CapSense.c ****     {
 482:.\Generated_Source\PSoC4/CapSense.c ****         /* Proceed with next sensor */
 483:.\Generated_Source\PSoC4/CapSense.c ****         snsIndex++;
 495              		.loc 1 483 0
 496 000c FB1D     		add	r3, r7, #7
 497 000e 1A78     		ldrb	r2, [r3]
 498 0010 FB1D     		add	r3, r7, #7
 499 0012 0132     		add	r2, r2, #1
 500 0014 1A70     		strb	r2, [r3]
 484:.\Generated_Source\PSoC4/CapSense.c ****         if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 501              		.loc 1 484 0
 502 0016 FB1D     		add	r3, r7, #7
 503 0018 1B78     		ldrb	r3, [r3]
 504 001a 012B     		cmp	r3, #1
 505 001c 00D1     		bne	.L20
 485:.\Generated_Source\PSoC4/CapSense.c ****         {
 486:.\Generated_Source\PSoC4/CapSense.c ****             break;
 506              		.loc 1 486 0
 507 001e 0BE0     		b	.L21
 508              	.L20:
 487:.\Generated_Source\PSoC4/CapSense.c ****         }
 488:.\Generated_Source\PSoC4/CapSense.c ****         enableFlag = CapSense_GetBitValue(CapSense_sensorEnableMask, (uint32)snsIndex);
 509              		.loc 1 488 0
 510 0020 FB1D     		add	r3, r7, #7
 511 0022 1B78     		ldrb	r3, [r3]
 512 0024 074A     		ldr	r2, .L24
 513 0026 101C     		mov	r0, r2
 514 0028 191C     		mov	r1, r3
 515 002a FFF7FEFF 		bl	CapSense_GetBitValue
 516 002e 031C     		mov	r3, r0
 517 0030 FB60     		str	r3, [r7, #12]
 489:.\Generated_Source\PSoC4/CapSense.c ****     }    
 490:.\Generated_Source\PSoC4/CapSense.c ****     while(enableFlag == 0u);
 518              		.loc 1 490 0
 519 0032 FB68     		ldr	r3, [r7, #12]
 520 0034 002B     		cmp	r3, #0
 521 0036 E9D0     		beq	.L22
 522              	.L21:
 491:.\Generated_Source\PSoC4/CapSense.c ****     
 492:.\Generated_Source\PSoC4/CapSense.c ****     return ((uint8)snsIndex);
 523              		.loc 1 492 0
 524 0038 FB1D     		add	r3, r7, #7
 525 003a 1B78     		ldrb	r3, [r3]
 493:.\Generated_Source\PSoC4/CapSense.c **** }
 526              		.loc 1 493 0
 527 003c 181C     		mov	r0, r3
 528 003e BD46     		mov	sp, r7
 529 0040 04B0     		add	sp, sp, #16
 530              		@ sp needed
 531 0042 80BD     		pop	{r7, pc}
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 19


 532              	.L25:
 533              		.align	2
 534              	.L24:
 535 0044 00000000 		.word	CapSense_sensorEnableMask
 536              		.cfi_endproc
 537              	.LFE38:
 538              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 539              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 540              		.align	2
 541              		.global	CapSense_ScanSensor
 542              		.code	16
 543              		.thumb_func
 544              		.type	CapSense_ScanSensor, %function
 545              	CapSense_ScanSensor:
 546              	.LFB39:
 494:.\Generated_Source\PSoC4/CapSense.c **** 
 495:.\Generated_Source\PSoC4/CapSense.c **** 
 496:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ScanSensor
 498:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 499:.\Generated_Source\PSoC4/CapSense.c **** *
 500:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 501:.\Generated_Source\PSoC4/CapSense.c **** *  Sets the scan settings and starts scanning a sensor. After scanning is complete,
 502:.\Generated_Source\PSoC4/CapSense.c **** *  the ISR copies the measured sensor raw data to the global raw sensor array. 
 503:.\Generated_Source\PSoC4/CapSense.c **** *  Use of the ISR ensures this function is non-blocking. 
 504:.\Generated_Source\PSoC4/CapSense.c **** *  Each sensor has a unique number within the sensor array. 
 505:.\Generated_Source\PSoC4/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 506:.\Generated_Source\PSoC4/CapSense.c **** *
 507:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 508:.\Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
 509:.\Generated_Source\PSoC4/CapSense.c **** *
 510:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 511:.\Generated_Source\PSoC4/CapSense.c **** *  None
 512:.\Generated_Source\PSoC4/CapSense.c **** *
 513:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 514:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdStatusVar - used to provide the status and mode of the scanning process. 
 515:.\Generated_Source\PSoC4/CapSense.c **** *  Sets the busy status(scan in progress) and mode of scan as single scan.
 516:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorIndex - used to store a sensor scanning sensor number.
 517:.\Generated_Source\PSoC4/CapSense.c **** *  Sets to the provided sensor argument.
 518:.\Generated_Source\PSoC4/CapSense.c **** *
 519:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 520:.\Generated_Source\PSoC4/CapSense.c **** *  None
 521:.\Generated_Source\PSoC4/CapSense.c **** * 
 522:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 523:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_ScanSensor(uint32 sensor)
 524:.\Generated_Source\PSoC4/CapSense.c **** {
 547              		.loc 1 524 0
 548              		.cfi_startproc
 549 0000 80B5     		push	{r7, lr}
 550              		.cfi_def_cfa_offset 8
 551              		.cfi_offset 7, -8
 552              		.cfi_offset 14, -4
 553 0002 82B0     		sub	sp, sp, #8
 554              		.cfi_def_cfa_offset 16
 555 0004 00AF     		add	r7, sp, #0
 556              		.cfi_def_cfa_register 7
 557 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 20


 525:.\Generated_Source\PSoC4/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 526:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_csdStatusVar = 0u;
 558              		.loc 1 526 0
 559 0008 084B     		ldr	r3, .L27
 560 000a 0022     		mov	r2, #0
 561 000c 1A70     		strb	r2, [r3]
 527:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_sensorIndex = (uint8)sensor;
 562              		.loc 1 527 0
 563 000e 7B68     		ldr	r3, [r7, #4]
 564 0010 DAB2     		uxtb	r2, r3
 565 0012 074B     		ldr	r3, .L27+4
 566 0014 1A70     		strb	r2, [r3]
 528:.\Generated_Source\PSoC4/CapSense.c ****     
 529:.\Generated_Source\PSoC4/CapSense.c ****     /* Start of sensor scan */
 530:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_csdStatusVar = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 567              		.loc 1 530 0
 568 0016 054B     		ldr	r3, .L27
 569 0018 8122     		mov	r2, #129
 570 001a 1A70     		strb	r2, [r3]
 531:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_PreScan(sensor);
 571              		.loc 1 531 0
 572 001c 7B68     		ldr	r3, [r7, #4]
 573 001e 181C     		mov	r0, r3
 574 0020 FFF7FEFF 		bl	CapSense_PreScan
 532:.\Generated_Source\PSoC4/CapSense.c **** }
 575              		.loc 1 532 0
 576 0024 BD46     		mov	sp, r7
 577 0026 02B0     		add	sp, sp, #8
 578              		@ sp needed
 579 0028 80BD     		pop	{r7, pc}
 580              	.L28:
 581 002a C046     		.align	2
 582              	.L27:
 583 002c 00000000 		.word	CapSense_csdStatusVar
 584 0030 00000000 		.word	CapSense_sensorIndex
 585              		.cfi_endproc
 586              	.LFE39:
 587              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 588              		.section	.text.CapSense_ScanWidget,"ax",%progbits
 589              		.align	2
 590              		.global	CapSense_ScanWidget
 591              		.code	16
 592              		.thumb_func
 593              		.type	CapSense_ScanWidget, %function
 594              	CapSense_ScanWidget:
 595              	.LFB40:
 533:.\Generated_Source\PSoC4/CapSense.c **** 
 534:.\Generated_Source\PSoC4/CapSense.c **** 
 535:.\Generated_Source\PSoC4/CapSense.c **** #if(0u != CapSense_CSHL_API_GENERATE)
 536:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 537:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ScanWidget
 538:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 539:.\Generated_Source\PSoC4/CapSense.c **** *
 540:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 541:.\Generated_Source\PSoC4/CapSense.c **** *  Sets the scan settings and starts scanning a widget.
 542:.\Generated_Source\PSoC4/CapSense.c **** *
 543:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 21


 544:.\Generated_Source\PSoC4/CapSense.c **** *  uint32 widget: Widget number.
 545:.\Generated_Source\PSoC4/CapSense.c **** *
 546:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 547:.\Generated_Source\PSoC4/CapSense.c **** *  None
 548:.\Generated_Source\PSoC4/CapSense.c **** *
 549:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 550:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdStatusVar - used to provide the status and mode of the scanning process. 
 551:.\Generated_Source\PSoC4/CapSense.c **** *  Sets the busy status(scan in progress) and clears the single scan mode.
 552:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorIndex - used to store a sensor scanning sensor number.
 553:.\Generated_Source\PSoC4/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
 554:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorEnableMask[] - used to store bit masks of the enabled sensors.
 555:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorEnableMaskBackup[] - used to backup bit masks of the enabled
 556:.\Generated_Source\PSoC4/CapSense.c **** *   sensors.
 557:.\Generated_Source\PSoC4/CapSense.c **** *
 558:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 559:.\Generated_Source\PSoC4/CapSense.c **** *  None
 560:.\Generated_Source\PSoC4/CapSense.c **** * 
 561:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 562:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_ScanWidget(uint32 widget)
 563:.\Generated_Source\PSoC4/CapSense.c **** {
 596              		.loc 1 563 0
 597              		.cfi_startproc
 598 0000 80B5     		push	{r7, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 86B0     		sub	sp, sp, #24
 603              		.cfi_def_cfa_offset 32
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 7860     		str	r0, [r7, #4]
 564:.\Generated_Source\PSoC4/CapSense.c ****     uint32 sensorsPerWidget;
 565:.\Generated_Source\PSoC4/CapSense.c ****     uint32 lastSensor;
 566:.\Generated_Source\PSoC4/CapSense.c ****     uint32 snsIndex;
 567:.\Generated_Source\PSoC4/CapSense.c **** 
 568:.\Generated_Source\PSoC4/CapSense.c **** 	/* Get first sensor in widget */
 569:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_sensorIndex = CapSense_rawDataIndex[widget];
 607              		.loc 1 569 0
 608 0008 2E4A     		ldr	r2, .L38
 609 000a 7B68     		ldr	r3, [r7, #4]
 610 000c D318     		add	r3, r2, r3
 611 000e 1A78     		ldrb	r2, [r3]
 612 0010 2D4B     		ldr	r3, .L38+4
 613 0012 1A70     		strb	r2, [r3]
 570:.\Generated_Source\PSoC4/CapSense.c **** 	
 571:.\Generated_Source\PSoC4/CapSense.c **** 	/* Get number of sensors in widget */
 572:.\Generated_Source\PSoC4/CapSense.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 614              		.loc 1 572 0
 615 0014 2D4A     		ldr	r2, .L38+8
 616 0016 7B68     		ldr	r3, [r7, #4]
 617 0018 D318     		add	r3, r2, r3
 618 001a 1B78     		ldrb	r3, [r3]
 619 001c 7B61     		str	r3, [r7, #20]
 573:.\Generated_Source\PSoC4/CapSense.c **** 	
 574:.\Generated_Source\PSoC4/CapSense.c **** 	/* Check if generic Sensor */
 575:.\Generated_Source\PSoC4/CapSense.c **** 	if(sensorsPerWidget == 0u)
 620              		.loc 1 575 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 22


 621 001e 7B69     		ldr	r3, [r7, #20]
 622 0020 002B     		cmp	r3, #0
 623 0022 01D1     		bne	.L30
 576:.\Generated_Source\PSoC4/CapSense.c **** 	{
 577:.\Generated_Source\PSoC4/CapSense.c **** 		sensorsPerWidget = 1u;
 624              		.loc 1 577 0
 625 0024 0123     		mov	r3, #1
 626 0026 7B61     		str	r3, [r7, #20]
 627              	.L30:
 578:.\Generated_Source\PSoC4/CapSense.c **** 	}
 579:.\Generated_Source\PSoC4/CapSense.c **** 	
 580:.\Generated_Source\PSoC4/CapSense.c **** 	/* Get last sensor in widget */
 581:.\Generated_Source\PSoC4/CapSense.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget) - 1u;
 628              		.loc 1 581 0
 629 0028 264A     		ldr	r2, .L38
 630 002a 7B68     		ldr	r3, [r7, #4]
 631 002c D318     		add	r3, r2, r3
 632 002e 1B78     		ldrb	r3, [r3]
 633 0030 1A1C     		mov	r2, r3
 634 0032 7B69     		ldr	r3, [r7, #20]
 635 0034 D318     		add	r3, r2, r3
 636 0036 013B     		sub	r3, r3, #1
 637 0038 FB60     		str	r3, [r7, #12]
 582:.\Generated_Source\PSoC4/CapSense.c **** 
 583:.\Generated_Source\PSoC4/CapSense.c **** 	/* Backup sensorEnableMask array */
 584:.\Generated_Source\PSoC4/CapSense.c **** 	for(snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_MASK; snsIndex++)
 638              		.loc 1 584 0
 639 003a 0023     		mov	r3, #0
 640 003c 3B61     		str	r3, [r7, #16]
 641 003e 0AE0     		b	.L31
 642              	.L32:
 585:.\Generated_Source\PSoC4/CapSense.c **** 	{
 586:.\Generated_Source\PSoC4/CapSense.c **** 		/* Backup sensorEnableMask array */
 587:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_sensorEnableMaskBackup[snsIndex] = CapSense_sensorEnableMask[snsIndex];
 643              		.loc 1 587 0 discriminator 2
 644 0040 234A     		ldr	r2, .L38+12
 645 0042 3B69     		ldr	r3, [r7, #16]
 646 0044 D318     		add	r3, r2, r3
 647 0046 1A78     		ldrb	r2, [r3]
 648 0048 2249     		ldr	r1, .L38+16
 649 004a 3B69     		ldr	r3, [r7, #16]
 650 004c CB18     		add	r3, r1, r3
 651 004e 1A70     		strb	r2, [r3]
 584:.\Generated_Source\PSoC4/CapSense.c **** 	for(snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_MASK; snsIndex++)
 652              		.loc 1 584 0 discriminator 2
 653 0050 3B69     		ldr	r3, [r7, #16]
 654 0052 0133     		add	r3, r3, #1
 655 0054 3B61     		str	r3, [r7, #16]
 656              	.L31:
 584:.\Generated_Source\PSoC4/CapSense.c **** 	for(snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_MASK; snsIndex++)
 657              		.loc 1 584 0 is_stmt 0 discriminator 1
 658 0056 3B69     		ldr	r3, [r7, #16]
 659 0058 002B     		cmp	r3, #0
 660 005a F1D0     		beq	.L32
 588:.\Generated_Source\PSoC4/CapSense.c **** 	}
 589:.\Generated_Source\PSoC4/CapSense.c **** 
 590:.\Generated_Source\PSoC4/CapSense.c **** 	/* Update sensorEnableMask to scan the sensors that belong to widget */
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 23


 591:.\Generated_Source\PSoC4/CapSense.c **** 	for(snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_COUNT; snsIndex++)
 661              		.loc 1 591 0 is_stmt 1
 662 005c 0023     		mov	r3, #0
 663 005e 3B61     		str	r3, [r7, #16]
 664 0060 1CE0     		b	.L33
 665              	.L36:
 592:.\Generated_Source\PSoC4/CapSense.c **** 	{
 593:.\Generated_Source\PSoC4/CapSense.c **** 		/* Update sensorEnableMask array bits to scan the widget only */ 
 594:.\Generated_Source\PSoC4/CapSense.c **** 	    if((snsIndex >= CapSense_sensorIndex) && (snsIndex <= lastSensor))
 666              		.loc 1 594 0
 667 0062 194B     		ldr	r3, .L38+4
 668 0064 1B78     		ldrb	r3, [r3]
 669 0066 DBB2     		uxtb	r3, r3
 670 0068 1A1C     		mov	r2, r3
 671 006a 3B69     		ldr	r3, [r7, #16]
 672 006c 9A42     		cmp	r2, r3
 673 006e 0BD8     		bhi	.L34
 674              		.loc 1 594 0 is_stmt 0 discriminator 1
 675 0070 3A69     		ldr	r2, [r7, #16]
 676 0072 FB68     		ldr	r3, [r7, #12]
 677 0074 9A42     		cmp	r2, r3
 678 0076 07D8     		bhi	.L34
 595:.\Generated_Source\PSoC4/CapSense.c **** 		{
 596:.\Generated_Source\PSoC4/CapSense.c **** 		    /* Set sensor bit to scan */
 597:.\Generated_Source\PSoC4/CapSense.c **** 			CapSense_SetBitValue(CapSense_sensorEnableMask, snsIndex, 1u);
 679              		.loc 1 597 0 is_stmt 1
 680 0078 154A     		ldr	r2, .L38+12
 681 007a 3B69     		ldr	r3, [r7, #16]
 682 007c 101C     		mov	r0, r2
 683 007e 191C     		mov	r1, r3
 684 0080 0122     		mov	r2, #1
 685 0082 FFF7FEFF 		bl	CapSense_SetBitValue
 686 0086 06E0     		b	.L35
 687              	.L34:
 598:.\Generated_Source\PSoC4/CapSense.c **** 		}
 599:.\Generated_Source\PSoC4/CapSense.c **** 		else
 600:.\Generated_Source\PSoC4/CapSense.c **** 		{
 601:.\Generated_Source\PSoC4/CapSense.c **** 		    /* Reset sensor bit to do not scan */
 602:.\Generated_Source\PSoC4/CapSense.c **** 		    CapSense_SetBitValue(CapSense_sensorEnableMask, snsIndex, 0u);
 688              		.loc 1 602 0
 689 0088 114A     		ldr	r2, .L38+12
 690 008a 3B69     		ldr	r3, [r7, #16]
 691 008c 101C     		mov	r0, r2
 692 008e 191C     		mov	r1, r3
 693 0090 0022     		mov	r2, #0
 694 0092 FFF7FEFF 		bl	CapSense_SetBitValue
 695              	.L35:
 591:.\Generated_Source\PSoC4/CapSense.c **** 	for(snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_COUNT; snsIndex++)
 696              		.loc 1 591 0
 697 0096 3B69     		ldr	r3, [r7, #16]
 698 0098 0133     		add	r3, r3, #1
 699 009a 3B61     		str	r3, [r7, #16]
 700              	.L33:
 591:.\Generated_Source\PSoC4/CapSense.c **** 	for(snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_COUNT; snsIndex++)
 701              		.loc 1 591 0 is_stmt 0 discriminator 1
 702 009c 3B69     		ldr	r3, [r7, #16]
 703 009e 002B     		cmp	r3, #0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 24


 704 00a0 DFD0     		beq	.L36
 603:.\Generated_Source\PSoC4/CapSense.c **** 		}
 604:.\Generated_Source\PSoC4/CapSense.c **** 	}
 605:.\Generated_Source\PSoC4/CapSense.c **** 
 606:.\Generated_Source\PSoC4/CapSense.c ****     /* Check end of scan condition */
 607:.\Generated_Source\PSoC4/CapSense.c ****     if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
 705              		.loc 1 607 0 is_stmt 1
 706 00a2 094B     		ldr	r3, .L38+4
 707 00a4 1B78     		ldrb	r3, [r3]
 708 00a6 DBB2     		uxtb	r3, r3
 709 00a8 002B     		cmp	r3, #0
 710 00aa 08D1     		bne	.L29
 608:.\Generated_Source\PSoC4/CapSense.c ****     {
 609:.\Generated_Source\PSoC4/CapSense.c **** 		/* Set widget busy bit in status/control variable*/ 
 610:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_csdStatusVar = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_WIDGET_SCAN);
 711              		.loc 1 610 0
 712 00ac 0A4B     		ldr	r3, .L38+20
 713 00ae 4122     		mov	r2, #65
 714 00b0 1A70     		strb	r2, [r3]
 611:.\Generated_Source\PSoC4/CapSense.c **** 		/* Scan first sensor of widget*/ 
 612:.\Generated_Source\PSoC4/CapSense.c ****         CapSense_PreScan((uint32)CapSense_sensorIndex);
 715              		.loc 1 612 0
 716 00b2 054B     		ldr	r3, .L38+4
 717 00b4 1B78     		ldrb	r3, [r3]
 718 00b6 DBB2     		uxtb	r3, r3
 719 00b8 181C     		mov	r0, r3
 720 00ba FFF7FEFF 		bl	CapSense_PreScan
 721              	.L29:
 613:.\Generated_Source\PSoC4/CapSense.c ****     }
 614:.\Generated_Source\PSoC4/CapSense.c **** }
 722              		.loc 1 614 0
 723 00be BD46     		mov	sp, r7
 724 00c0 06B0     		add	sp, sp, #24
 725              		@ sp needed
 726 00c2 80BD     		pop	{r7, pc}
 727              	.L39:
 728              		.align	2
 729              	.L38:
 730 00c4 00000000 		.word	CapSense_rawDataIndex
 731 00c8 00000000 		.word	CapSense_sensorIndex
 732 00cc 00000000 		.word	CapSense_numberOfSensors
 733 00d0 00000000 		.word	CapSense_sensorEnableMask
 734 00d4 00000000 		.word	CapSense_sensorEnableMaskBackup
 735 00d8 00000000 		.word	CapSense_csdStatusVar
 736              		.cfi_endproc
 737              	.LFE40:
 738              		.size	CapSense_ScanWidget, .-CapSense_ScanWidget
 739              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 740              		.align	2
 741              		.global	CapSense_ScanEnabledWidgets
 742              		.code	16
 743              		.thumb_func
 744              		.type	CapSense_ScanEnabledWidgets, %function
 745              	CapSense_ScanEnabledWidgets:
 746              	.LFB41:
 615:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (0u != CapSense_CSHL_API_GENERATE) */
 616:.\Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 25


 617:.\Generated_Source\PSoC4/CapSense.c **** 
 618:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 619:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 620:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 621:.\Generated_Source\PSoC4/CapSense.c **** *
 622:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 623:.\Generated_Source\PSoC4/CapSense.c **** *  This is the preferred method to scan all of the enabled widgets. 
 624:.\Generated_Source\PSoC4/CapSense.c **** *  The API starts scanning a sensor within the enabled widgets. 
 625:.\Generated_Source\PSoC4/CapSense.c **** *  The ISR continues scanning the sensors until all the enabled widgets are scanned. 
 626:.\Generated_Source\PSoC4/CapSense.c **** *  Use of the ISR ensures this function is non-blocking.
 627:.\Generated_Source\PSoC4/CapSense.c **** *  All the widgets are enabled by default except proximity widgets. 
 628:.\Generated_Source\PSoC4/CapSense.c **** *  The proximity widgets must be manually enabled as their long scan time 
 629:.\Generated_Source\PSoC4/CapSense.c **** *  is incompatible with a fast response required of other widget types.
 630:.\Generated_Source\PSoC4/CapSense.c **** *
 631:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 632:.\Generated_Source\PSoC4/CapSense.c **** *  None
 633:.\Generated_Source\PSoC4/CapSense.c **** *
 634:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 635:.\Generated_Source\PSoC4/CapSense.c **** *  None
 636:.\Generated_Source\PSoC4/CapSense.c **** *
 637:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 638:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdStatusVar - used to provide the status and mode of the scanning process. 
 639:.\Generated_Source\PSoC4/CapSense.c **** *  Sets the busy status(scan in progress) and clears the single scan mode.
 640:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorIndex - used to store a sensor scanning sensor number.
 641:.\Generated_Source\PSoC4/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
 642:.\Generated_Source\PSoC4/CapSense.c **** *
 643:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 644:.\Generated_Source\PSoC4/CapSense.c **** *  None
 645:.\Generated_Source\PSoC4/CapSense.c **** * 
 646:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 647:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_ScanEnabledWidgets(void)
 648:.\Generated_Source\PSoC4/CapSense.c **** {
 747              		.loc 1 648 0
 748              		.cfi_startproc
 749 0000 80B5     		push	{r7, lr}
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753 0002 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 649:.\Generated_Source\PSoC4/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 650:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_csdStatusVar = 0u;
 755              		.loc 1 650 0
 756 0004 124B     		ldr	r3, .L42
 757 0006 0022     		mov	r2, #0
 758 0008 1A70     		strb	r2, [r3]
 651:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 759              		.loc 1 651 0
 760 000a 124B     		ldr	r3, .L42+4
 761 000c FF22     		mov	r2, #255
 762 000e 1A70     		strb	r2, [r3]
 652:.\Generated_Source\PSoC4/CapSense.c ****     
 653:.\Generated_Source\PSoC4/CapSense.c ****     /* Find next sensor */
 654:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_sensorIndex = (uint8)CapSense_FindNextSensor(CapSense_sensorIndex);
 763              		.loc 1 654 0
 764 0010 104B     		ldr	r3, .L42+4
 765 0012 1B78     		ldrb	r3, [r3]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 26


 766 0014 DBB2     		uxtb	r3, r3
 767 0016 181C     		mov	r0, r3
 768 0018 FFF7FEFF 		bl	CapSense_FindNextSensor
 769 001c 031C     		mov	r3, r0
 770 001e 1A1C     		mov	r2, r3
 771 0020 0C4B     		ldr	r3, .L42+4
 772 0022 1A70     		strb	r2, [r3]
 655:.\Generated_Source\PSoC4/CapSense.c **** 
 656:.\Generated_Source\PSoC4/CapSense.c ****     /* Check end of scan condition */
 657:.\Generated_Source\PSoC4/CapSense.c ****     if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
 773              		.loc 1 657 0
 774 0024 0B4B     		ldr	r3, .L42+4
 775 0026 1B78     		ldrb	r3, [r3]
 776 0028 DBB2     		uxtb	r3, r3
 777 002a 002B     		cmp	r3, #0
 778 002c 0DD1     		bne	.L40
 658:.\Generated_Source\PSoC4/CapSense.c ****     {
 659:.\Generated_Source\PSoC4/CapSense.c ****         CapSense_csdStatusVar |= CapSense_SW_STS_BUSY;
 779              		.loc 1 659 0
 780 002e 084B     		ldr	r3, .L42
 781 0030 1B78     		ldrb	r3, [r3]
 782 0032 DBB2     		uxtb	r3, r3
 783 0034 0122     		mov	r2, #1
 784 0036 1343     		orr	r3, r2
 785 0038 DAB2     		uxtb	r2, r3
 786 003a 054B     		ldr	r3, .L42
 787 003c 1A70     		strb	r2, [r3]
 660:.\Generated_Source\PSoC4/CapSense.c ****         CapSense_PreScan((uint32)CapSense_sensorIndex);
 788              		.loc 1 660 0
 789 003e 054B     		ldr	r3, .L42+4
 790 0040 1B78     		ldrb	r3, [r3]
 791 0042 DBB2     		uxtb	r3, r3
 792 0044 181C     		mov	r0, r3
 793 0046 FFF7FEFF 		bl	CapSense_PreScan
 794              	.L40:
 661:.\Generated_Source\PSoC4/CapSense.c ****     }
 662:.\Generated_Source\PSoC4/CapSense.c **** }
 795              		.loc 1 662 0
 796 004a BD46     		mov	sp, r7
 797              		@ sp needed
 798 004c 80BD     		pop	{r7, pc}
 799              	.L43:
 800 004e C046     		.align	2
 801              	.L42:
 802 0050 00000000 		.word	CapSense_csdStatusVar
 803 0054 00000000 		.word	CapSense_sensorIndex
 804              		.cfi_endproc
 805              	.LFE41:
 806              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 807              		.section	.text.CapSense_IsBusy,"ax",%progbits
 808              		.align	2
 809              		.global	CapSense_IsBusy
 810              		.code	16
 811              		.thumb_func
 812              		.type	CapSense_IsBusy, %function
 813              	CapSense_IsBusy:
 814              	.LFB42:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 27


 663:.\Generated_Source\PSoC4/CapSense.c **** 
 664:.\Generated_Source\PSoC4/CapSense.c **** 
 665:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 666:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_IsBusy
 667:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 668:.\Generated_Source\PSoC4/CapSense.c **** *
 669:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 670:.\Generated_Source\PSoC4/CapSense.c **** *  Returns the state of the CapSense component. 1 means that scanning in 
 671:.\Generated_Source\PSoC4/CapSense.c **** *  progress and 0 means that scanning is complete.
 672:.\Generated_Source\PSoC4/CapSense.c **** *
 673:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 674:.\Generated_Source\PSoC4/CapSense.c **** *  None
 675:.\Generated_Source\PSoC4/CapSense.c **** *
 676:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 677:.\Generated_Source\PSoC4/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
 678:.\Generated_Source\PSoC4/CapSense.c **** *  completed.
 679:.\Generated_Source\PSoC4/CapSense.c **** *
 680:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 681:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdStatusVar - used to provide the status and mode of the scanning process. 
 682:.\Generated_Source\PSoC4/CapSense.c **** *  Checks the busy status.
 683:.\Generated_Source\PSoC4/CapSense.c **** *
 684:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 685:.\Generated_Source\PSoC4/CapSense.c **** *  None
 686:.\Generated_Source\PSoC4/CapSense.c **** * 
 687:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_IsBusy(void)
 689:.\Generated_Source\PSoC4/CapSense.c **** {
 815              		.loc 1 689 0
 816              		.cfi_startproc
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
 690:.\Generated_Source\PSoC4/CapSense.c ****     return ((uint32)((0u != (CapSense_csdStatusVar & CapSense_SW_STS_BUSY)) ? 1u : 0u));
 823              		.loc 1 690 0
 824 0004 044B     		ldr	r3, .L46
 825 0006 1B78     		ldrb	r3, [r3]
 826 0008 DBB2     		uxtb	r3, r3
 827 000a 1A1C     		mov	r2, r3
 828 000c 0123     		mov	r3, #1
 829 000e 1340     		and	r3, r2
 691:.\Generated_Source\PSoC4/CapSense.c **** }
 830              		.loc 1 691 0
 831 0010 181C     		mov	r0, r3
 832 0012 BD46     		mov	sp, r7
 833              		@ sp needed
 834 0014 80BD     		pop	{r7, pc}
 835              	.L47:
 836 0016 C046     		.align	2
 837              	.L46:
 838 0018 00000000 		.word	CapSense_csdStatusVar
 839              		.cfi_endproc
 840              	.LFE42:
 841              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 842              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 28


 843              		.align	2
 844              		.global	CapSense_ReadSensorRaw
 845              		.code	16
 846              		.thumb_func
 847              		.type	CapSense_ReadSensorRaw, %function
 848              	CapSense_ReadSensorRaw:
 849              	.LFB43:
 692:.\Generated_Source\PSoC4/CapSense.c **** 
 693:.\Generated_Source\PSoC4/CapSense.c **** 
 694:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
 696:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/CapSense.c **** *
 698:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 699:.\Generated_Source\PSoC4/CapSense.c **** *  Returns sensor raw data from the global CapSense_sensorRaw[ ] array. 
 700:.\Generated_Source\PSoC4/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. 
 701:.\Generated_Source\PSoC4/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence. 
 702:.\Generated_Source\PSoC4/CapSense.c **** *  Raw data can be used to perform calculations outside of the CapSense 
 703:.\Generated_Source\PSoC4/CapSense.c **** *  provided framework.
 704:.\Generated_Source\PSoC4/CapSense.c **** *
 705:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 706:.\Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
 707:.\Generated_Source\PSoC4/CapSense.c **** *
 708:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 709:.\Generated_Source\PSoC4/CapSense.c **** *  Returns the current raw data value for a defined sensor number.
 710:.\Generated_Source\PSoC4/CapSense.c **** *
 711:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 712:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
 713:.\Generated_Source\PSoC4/CapSense.c **** *
 714:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
 715:.\Generated_Source\PSoC4/CapSense.c **** *  None
 716:.\Generated_Source\PSoC4/CapSense.c **** *
 717:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 718:.\Generated_Source\PSoC4/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint32 sensor)
 719:.\Generated_Source\PSoC4/CapSense.c **** {
 850              		.loc 1 719 0
 851              		.cfi_startproc
 852 0000 80B5     		push	{r7, lr}
 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 7, -8
 855              		.cfi_offset 14, -4
 856 0002 82B0     		sub	sp, sp, #8
 857              		.cfi_def_cfa_offset 16
 858 0004 00AF     		add	r7, sp, #0
 859              		.cfi_def_cfa_register 7
 860 0006 7860     		str	r0, [r7, #4]
 720:.\Generated_Source\PSoC4/CapSense.c ****     return CapSense_sensorRaw[sensor];
 861              		.loc 1 720 0
 862 0008 034B     		ldr	r3, .L50
 863 000a 7A68     		ldr	r2, [r7, #4]
 864 000c 5200     		lsl	r2, r2, #1
 865 000e D35A     		ldrh	r3, [r2, r3]
 721:.\Generated_Source\PSoC4/CapSense.c **** }
 866              		.loc 1 721 0
 867 0010 181C     		mov	r0, r3
 868 0012 BD46     		mov	sp, r7
 869 0014 02B0     		add	sp, sp, #8
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 29


 870              		@ sp needed
 871 0016 80BD     		pop	{r7, pc}
 872              	.L51:
 873              		.align	2
 874              	.L50:
 875 0018 00000000 		.word	CapSense_sensorRaw
 876              		.cfi_endproc
 877              	.LFE43:
 878              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 879              		.section	.text.CapSense_WriteSensorRaw,"ax",%progbits
 880              		.align	2
 881              		.global	CapSense_WriteSensorRaw
 882              		.code	16
 883              		.thumb_func
 884              		.type	CapSense_WriteSensorRaw, %function
 885              	CapSense_WriteSensorRaw:
 886              	.LFB44:
 722:.\Generated_Source\PSoC4/CapSense.c **** 
 723:.\Generated_Source\PSoC4/CapSense.c **** 
 724:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 725:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_WriteSensorRaw
 726:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 727:.\Generated_Source\PSoC4/CapSense.c **** *
 728:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 729:.\Generated_Source\PSoC4/CapSense.c **** *  This API writes the raw count value passed as an argument to the sensor Raw count array.
 730:.\Generated_Source\PSoC4/CapSense.c **** *
 731:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 732:.\Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
 733:.\Generated_Source\PSoC4/CapSense.c **** *  value: Raw count value.
 734:.\Generated_Source\PSoC4/CapSense.c **** *
 735:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 736:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
 737:.\Generated_Source\PSoC4/CapSense.c **** *
 738:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 739:.\Generated_Source\PSoC4/CapSense.c **** *  None
 740:.\Generated_Source\PSoC4/CapSense.c **** *
 741:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
 742:.\Generated_Source\PSoC4/CapSense.c **** *  None
 743:.\Generated_Source\PSoC4/CapSense.c **** *
 744:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 745:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_WriteSensorRaw(uint32 sensor, uint16 value)
 746:.\Generated_Source\PSoC4/CapSense.c **** {
 887              		.loc 1 746 0
 888              		.cfi_startproc
 889 0000 80B5     		push	{r7, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 7, -8
 892              		.cfi_offset 14, -4
 893 0002 82B0     		sub	sp, sp, #8
 894              		.cfi_def_cfa_offset 16
 895 0004 00AF     		add	r7, sp, #0
 896              		.cfi_def_cfa_register 7
 897 0006 7860     		str	r0, [r7, #4]
 898 0008 0A1C     		mov	r2, r1
 899 000a BB1C     		add	r3, r7, #2
 900 000c 1A80     		strh	r2, [r3]
 747:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_sensorRaw[sensor] = value;
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 30


 901              		.loc 1 747 0
 902 000e 044B     		ldr	r3, .L53
 903 0010 7A68     		ldr	r2, [r7, #4]
 904 0012 5200     		lsl	r2, r2, #1
 905 0014 B91C     		add	r1, r7, #2
 906 0016 0988     		ldrh	r1, [r1]
 907 0018 D152     		strh	r1, [r2, r3]
 748:.\Generated_Source\PSoC4/CapSense.c **** }
 908              		.loc 1 748 0
 909 001a BD46     		mov	sp, r7
 910 001c 02B0     		add	sp, sp, #8
 911              		@ sp needed
 912 001e 80BD     		pop	{r7, pc}
 913              	.L54:
 914              		.align	2
 915              	.L53:
 916 0020 00000000 		.word	CapSense_sensorRaw
 917              		.cfi_endproc
 918              	.LFE44:
 919              		.size	CapSense_WriteSensorRaw, .-CapSense_WriteSensorRaw
 920              		.section	.text.CapSense_SetScanResolution,"ax",%progbits
 921              		.align	2
 922              		.global	CapSense_SetScanResolution
 923              		.code	16
 924              		.thumb_func
 925              		.type	CapSense_SetScanResolution, %function
 926              	CapSense_SetScanResolution:
 927              	.LFB45:
 749:.\Generated_Source\PSoC4/CapSense.c **** 
 750:.\Generated_Source\PSoC4/CapSense.c **** 
 751:.\Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 752:.\Generated_Source\PSoC4/CapSense.c **** 	/*******************************************************************************
 753:.\Generated_Source\PSoC4/CapSense.c **** 	* Function Name: CapSense_SetScanResolution
 754:.\Generated_Source\PSoC4/CapSense.c **** 	********************************************************************************
 755:.\Generated_Source\PSoC4/CapSense.c **** 	*
 756:.\Generated_Source\PSoC4/CapSense.c **** 	* Summary:
 757:.\Generated_Source\PSoC4/CapSense.c **** 	*  Sets a value of the sensor scan resolution for a widget. 
 758:.\Generated_Source\PSoC4/CapSense.c **** 	*  The MIN resolution can be set 8-bit. The MAX Resolution can be set 16 bit.
 759:.\Generated_Source\PSoC4/CapSense.c **** 	*  This function is not available for the tuning mode "None".
 760:.\Generated_Source\PSoC4/CapSense.c **** 	*
 761:.\Generated_Source\PSoC4/CapSense.c **** 	* Parameters:
 762:.\Generated_Source\PSoC4/CapSense.c **** 	*  widget:     Widget index.
 763:.\Generated_Source\PSoC4/CapSense.c **** 	*  resolution: Represents the resolution value. The following defines which are available in the
 764:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense.h file should be used:
 765:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense_RESOLUTION_6_BITS
 766:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense_RESOLUTION_7_BITS
 767:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense_RESOLUTION_8_BITS
 768:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense_RESOLUTION_9_BITS
 769:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense_RESOLUTION_10_BITS
 770:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense_RESOLUTION_11_BITS
 771:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense_RESOLUTION_12_BITS
 772:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense_RESOLUTION_13_BITS
 773:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense_RESOLUTION_14_BITS
 774:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense_RESOLUTION_15_BITS
 775:.\Generated_Source\PSoC4/CapSense.c **** 	*			   CapSense_RESOLUTION_16_BITS
 776:.\Generated_Source\PSoC4/CapSense.c **** 	*
 777:.\Generated_Source\PSoC4/CapSense.c **** 	* Return:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 31


 778:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
 779:.\Generated_Source\PSoC4/CapSense.c **** 	*
 780:.\Generated_Source\PSoC4/CapSense.c **** 	* Global Variables:
 781:.\Generated_Source\PSoC4/CapSense.c **** 	*  CapSense_widgetResolution[] - used to store scan resolution of each widget.
 782:.\Generated_Source\PSoC4/CapSense.c **** 	*
 783:.\Generated_Source\PSoC4/CapSense.c **** 	* Side Effects: 
 784:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
 785:.\Generated_Source\PSoC4/CapSense.c **** 	*
 786:.\Generated_Source\PSoC4/CapSense.c **** 	*******************************************************************************/
 787:.\Generated_Source\PSoC4/CapSense.c **** 	void CapSense_SetScanResolution(uint32 widget, uint32 resolution)
 788:.\Generated_Source\PSoC4/CapSense.c **** 	{ 
 928              		.loc 1 788 0
 929              		.cfi_startproc
 930 0000 80B5     		push	{r7, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 82B0     		sub	sp, sp, #8
 935              		.cfi_def_cfa_offset 16
 936 0004 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
 938 0006 7860     		str	r0, [r7, #4]
 939 0008 3960     		str	r1, [r7]
 789:.\Generated_Source\PSoC4/CapSense.c ****         CapSense_widgetResolution[widget] = resolution;
 940              		.loc 1 789 0
 941 000a 044B     		ldr	r3, .L56
 942 000c 7A68     		ldr	r2, [r7, #4]
 943 000e 9200     		lsl	r2, r2, #2
 944 0010 3968     		ldr	r1, [r7]
 945 0012 D150     		str	r1, [r2, r3]
 790:.\Generated_Source\PSoC4/CapSense.c **** 	}
 946              		.loc 1 790 0
 947 0014 BD46     		mov	sp, r7
 948 0016 02B0     		add	sp, sp, #8
 949              		@ sp needed
 950 0018 80BD     		pop	{r7, pc}
 951              	.L57:
 952 001a C046     		.align	2
 953              	.L56:
 954 001c 00000000 		.word	CapSense_widgetResolution
 955              		.cfi_endproc
 956              	.LFE45:
 957              		.size	CapSense_SetScanResolution, .-CapSense_SetScanResolution
 958              		.section	.text.CapSense_GetScanResolution,"ax",%progbits
 959              		.align	2
 960              		.global	CapSense_GetScanResolution
 961              		.code	16
 962              		.thumb_func
 963              		.type	CapSense_GetScanResolution, %function
 964              	CapSense_GetScanResolution:
 965              	.LFB46:
 791:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 792:.\Generated_Source\PSoC4/CapSense.c **** 
 793:.\Generated_Source\PSoC4/CapSense.c **** 
 794:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 795:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetScanResolution
 796:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 32


 797:.\Generated_Source\PSoC4/CapSense.c **** *
 798:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 799:.\Generated_Source\PSoC4/CapSense.c **** *  Returns the resolution value for the appropriate sensor.
 800:.\Generated_Source\PSoC4/CapSense.c **** *  This function is not available for tuning mode "None".
 801:.\Generated_Source\PSoC4/CapSense.c **** *
 802:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 803:.\Generated_Source\PSoC4/CapSense.c **** *  widget:     Widget index.
 804:.\Generated_Source\PSoC4/CapSense.c **** *
 805:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 806:.\Generated_Source\PSoC4/CapSense.c **** *  resolution: Returns the resolution value for the appropriate sensor. 
 807:.\Generated_Source\PSoC4/CapSense.c **** *              The resolution values are defined in the CapSense.h file 
 808:.\Generated_Source\PSoC4/CapSense.c **** *              The defines are encountered below:
 809:.\Generated_Source\PSoC4/CapSense.c **** *			   CapSense_RESOLUTION_6_BITS
 810:.\Generated_Source\PSoC4/CapSense.c **** *			   CapSense_RESOLUTION_7_BITS
 811:.\Generated_Source\PSoC4/CapSense.c **** *			   CapSense_RESOLUTION_8_BITS
 812:.\Generated_Source\PSoC4/CapSense.c **** *			   CapSense_RESOLUTION_9_BITS
 813:.\Generated_Source\PSoC4/CapSense.c **** *			   CapSense_RESOLUTION_10_BITS
 814:.\Generated_Source\PSoC4/CapSense.c **** *			   CapSense_RESOLUTION_11_BITS
 815:.\Generated_Source\PSoC4/CapSense.c **** *			   CapSense_RESOLUTION_12_BITS
 816:.\Generated_Source\PSoC4/CapSense.c **** *			   CapSense_RESOLUTION_13_BITS
 817:.\Generated_Source\PSoC4/CapSense.c **** *			   CapSense_RESOLUTION_14_BITS
 818:.\Generated_Source\PSoC4/CapSense.c **** *			   CapSense_RESOLUTION_15_BITS
 819:.\Generated_Source\PSoC4/CapSense.c **** *			   CapSense_RESOLUTION_16_BITS
 820:.\Generated_Source\PSoC4/CapSense.c **** *
 821:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 822:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every widget.
 823:.\Generated_Source\PSoC4/CapSense.c **** *
 824:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
 825:.\Generated_Source\PSoC4/CapSense.c **** *  None
 826:.\Generated_Source\PSoC4/CapSense.c **** *
 827:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 828:.\Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetScanResolution(uint32 widget)
 829:.\Generated_Source\PSoC4/CapSense.c **** {
 966              		.loc 1 829 0
 967              		.cfi_startproc
 968 0000 80B5     		push	{r7, lr}
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 0002 82B0     		sub	sp, sp, #8
 973              		.cfi_def_cfa_offset 16
 974 0004 00AF     		add	r7, sp, #0
 975              		.cfi_def_cfa_register 7
 976 0006 7860     		str	r0, [r7, #4]
 830:.\Generated_Source\PSoC4/CapSense.c **** 	return(CapSense_widgetResolution[widget]);
 977              		.loc 1 830 0
 978 0008 034B     		ldr	r3, .L60
 979 000a 7A68     		ldr	r2, [r7, #4]
 980 000c 9200     		lsl	r2, r2, #2
 981 000e D358     		ldr	r3, [r2, r3]
 831:.\Generated_Source\PSoC4/CapSense.c **** }
 982              		.loc 1 831 0
 983 0010 181C     		mov	r0, r3
 984 0012 BD46     		mov	sp, r7
 985 0014 02B0     		add	sp, sp, #8
 986              		@ sp needed
 987 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 33


 988              	.L61:
 989              		.align	2
 990              	.L60:
 991 0018 00000000 		.word	CapSense_widgetResolution
 992              		.cfi_endproc
 993              	.LFE46:
 994              		.size	CapSense_GetScanResolution, .-CapSense_GetScanResolution
 995              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 996              		.align	2
 997              		.global	CapSense_ClearSensors
 998              		.code	16
 999              		.thumb_func
 1000              		.type	CapSense_ClearSensors, %function
 1001              	CapSense_ClearSensors:
 1002              	.LFB47:
 832:.\Generated_Source\PSoC4/CapSense.c **** 
 833:.\Generated_Source\PSoC4/CapSense.c **** 
 834:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 835:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ClearSensors
 836:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 837:.\Generated_Source\PSoC4/CapSense.c **** *
 838:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 839:.\Generated_Source\PSoC4/CapSense.c **** *  Resets all the sensors to the non-sampling state by sequentially disconnecting
 840:.\Generated_Source\PSoC4/CapSense.c **** *  all the sensors from Analog MUX Bus and putting them to an inactive state.
 841:.\Generated_Source\PSoC4/CapSense.c **** *
 842:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 843:.\Generated_Source\PSoC4/CapSense.c **** *  None
 844:.\Generated_Source\PSoC4/CapSense.c **** *
 845:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 846:.\Generated_Source\PSoC4/CapSense.c **** *  None
 847:.\Generated_Source\PSoC4/CapSense.c **** *
 848:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 849:.\Generated_Source\PSoC4/CapSense.c **** *  None
 850:.\Generated_Source\PSoC4/CapSense.c **** *
 851:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
 852:.\Generated_Source\PSoC4/CapSense.c **** *  None
 853:.\Generated_Source\PSoC4/CapSense.c **** *
 854:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 855:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_ClearSensors(void)
 856:.\Generated_Source\PSoC4/CapSense.c **** {
 1003              		.loc 1 856 0
 1004              		.cfi_startproc
 1005 0000 80B5     		push	{r7, lr}
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 7, -8
 1008              		.cfi_offset 14, -4
 1009 0002 82B0     		sub	sp, sp, #8
 1010              		.cfi_def_cfa_offset 16
 1011 0004 00AF     		add	r7, sp, #0
 1012              		.cfi_def_cfa_register 7
 857:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 snsIndex;
 858:.\Generated_Source\PSoC4/CapSense.c **** 	
 859:.\Generated_Source\PSoC4/CapSense.c ****     for (snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_COUNT; snsIndex++)
 1013              		.loc 1 859 0
 1014 0006 0023     		mov	r3, #0
 1015 0008 7B60     		str	r3, [r7, #4]
 1016 000a 06E0     		b	.L63
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 34


 1017              	.L64:
 860:.\Generated_Source\PSoC4/CapSense.c ****     {
 861:.\Generated_Source\PSoC4/CapSense.c ****         CapSense_DisableScanSlot(snsIndex);
 1018              		.loc 1 861 0 discriminator 2
 1019 000c 7B68     		ldr	r3, [r7, #4]
 1020 000e 181C     		mov	r0, r3
 1021 0010 FFF7FEFF 		bl	CapSense_DisableSensor
 859:.\Generated_Source\PSoC4/CapSense.c ****     for (snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_COUNT; snsIndex++)
 1022              		.loc 1 859 0 discriminator 2
 1023 0014 7B68     		ldr	r3, [r7, #4]
 1024 0016 0133     		add	r3, r3, #1
 1025 0018 7B60     		str	r3, [r7, #4]
 1026              	.L63:
 859:.\Generated_Source\PSoC4/CapSense.c ****     for (snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_COUNT; snsIndex++)
 1027              		.loc 1 859 0 is_stmt 0 discriminator 1
 1028 001a 7B68     		ldr	r3, [r7, #4]
 1029 001c 002B     		cmp	r3, #0
 1030 001e F5D0     		beq	.L64
 862:.\Generated_Source\PSoC4/CapSense.c ****     }
 863:.\Generated_Source\PSoC4/CapSense.c **** }
 1031              		.loc 1 863 0 is_stmt 1
 1032 0020 BD46     		mov	sp, r7
 1033 0022 02B0     		add	sp, sp, #8
 1034              		@ sp needed
 1035 0024 80BD     		pop	{r7, pc}
 1036              		.cfi_endproc
 1037              	.LFE47:
 1038              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 1039 0026 C046     		.section	.text.CapSense_EnableSensor,"ax",%progbits
 1040              		.align	2
 1041              		.global	CapSense_EnableSensor
 1042              		.code	16
 1043              		.thumb_func
 1044              		.type	CapSense_EnableSensor, %function
 1045              	CapSense_EnableSensor:
 1046              	.LFB48:
 864:.\Generated_Source\PSoC4/CapSense.c **** 
 865:.\Generated_Source\PSoC4/CapSense.c **** 
 866:.\Generated_Source\PSoC4/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
 867:.\Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
 868:.\Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
 869:.\Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
 870:.\Generated_Source\PSoC4/CapSense.c ****     *
 871:.\Generated_Source\PSoC4/CapSense.c ****     * Summary:
 872:.\Generated_Source\PSoC4/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
 873:.\Generated_Source\PSoC4/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
 874:.\Generated_Source\PSoC4/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
 875:.\Generated_Source\PSoC4/CapSense.c ****     *
 876:.\Generated_Source\PSoC4/CapSense.c ****     * Parameters:
 877:.\Generated_Source\PSoC4/CapSense.c ****     *  slot:  Slot number.
 878:.\Generated_Source\PSoC4/CapSense.c ****     *
 879:.\Generated_Source\PSoC4/CapSense.c ****     * Return:
 880:.\Generated_Source\PSoC4/CapSense.c ****     *  None
 881:.\Generated_Source\PSoC4/CapSense.c ****     *
 882:.\Generated_Source\PSoC4/CapSense.c ****     * Global Constants:
 883:.\Generated_Source\PSoC4/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
 884:.\Generated_Source\PSoC4/CapSense.c ****     *  belongs to for each sensor.
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 35


 885:.\Generated_Source\PSoC4/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
 886:.\Generated_Source\PSoC4/CapSense.c ****     *  each sensor.
 887:.\Generated_Source\PSoC4/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
 888:.\Generated_Source\PSoC4/CapSense.c ****     *  The offset and position in this array are stored in a port and mask table for 
 889:.\Generated_Source\PSoC4/CapSense.c ****     *  complex sensors.
 890:.\Generated_Source\PSoC4/CapSense.c ****     *  Bit 7 (msb) is used to define the sensor type: single or complex.
 891:.\Generated_Source\PSoC4/CapSense.c ****     *
 892:.\Generated_Source\PSoC4/CapSense.c **** 	* Side Effects: 
 893:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
 894:.\Generated_Source\PSoC4/CapSense.c **** 	*
 895:.\Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
 896:.\Generated_Source\PSoC4/CapSense.c ****     void CapSense_EnableScanSlot(uint32 slot)
 897:.\Generated_Source\PSoC4/CapSense.c ****     {
 898:.\Generated_Source\PSoC4/CapSense.c ****         uint8 j;
 899:.\Generated_Source\PSoC4/CapSense.c ****         uint8 snsNumber;
 900:.\Generated_Source\PSoC4/CapSense.c ****         const uint8 *index;
 901:.\Generated_Source\PSoC4/CapSense.c ****         /* Read sensor type: single or complex */
 902:.\Generated_Source\PSoC4/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
 903:.\Generated_Source\PSoC4/CapSense.c **** 
 904:.\Generated_Source\PSoC4/CapSense.c ****         /* Check if sensor is complex */
 905:.\Generated_Source\PSoC4/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
 906:.\Generated_Source\PSoC4/CapSense.c ****         {
 907:.\Generated_Source\PSoC4/CapSense.c ****             /* Enable sensor (single) */
 908:.\Generated_Source\PSoC4/CapSense.c ****             CapSense_EnableSensor(slot);
 909:.\Generated_Source\PSoC4/CapSense.c ****         }
 910:.\Generated_Source\PSoC4/CapSense.c ****         else
 911:.\Generated_Source\PSoC4/CapSense.c ****         {
 912:.\Generated_Source\PSoC4/CapSense.c ****             /* Enable complex sensor */
 913:.\Generated_Source\PSoC4/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
 914:.\Generated_Source\PSoC4/CapSense.c ****             index = &CapSense_indexTable[snsType];
 915:.\Generated_Source\PSoC4/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
 916:.\Generated_Source\PSoC4/CapSense.c ****                         
 917:.\Generated_Source\PSoC4/CapSense.c ****             for (j = 0u; j < snsNumber; j++)
 918:.\Generated_Source\PSoC4/CapSense.c ****             {
 919:.\Generated_Source\PSoC4/CapSense.c ****                 CapSense_EnableSensor(index[j]);
 920:.\Generated_Source\PSoC4/CapSense.c ****             }
 921:.\Generated_Source\PSoC4/CapSense.c ****         }
 922:.\Generated_Source\PSoC4/CapSense.c ****     }
 923:.\Generated_Source\PSoC4/CapSense.c ****     
 924:.\Generated_Source\PSoC4/CapSense.c ****     
 925:.\Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
 926:.\Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
 927:.\Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
 928:.\Generated_Source\PSoC4/CapSense.c ****     *
 929:.\Generated_Source\PSoC4/CapSense.c ****     * Summary:
 930:.\Generated_Source\PSoC4/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pins is/are disconnected 
 931:.\Generated_Source\PSoC4/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
 932:.\Generated_Source\PSoC4/CapSense.c ****     *
 933:.\Generated_Source\PSoC4/CapSense.c ****     * Parameters:
 934:.\Generated_Source\PSoC4/CapSense.c ****     *  slot:  Slot number.
 935:.\Generated_Source\PSoC4/CapSense.c ****     *
 936:.\Generated_Source\PSoC4/CapSense.c ****     * Return:
 937:.\Generated_Source\PSoC4/CapSense.c ****     *  None
 938:.\Generated_Source\PSoC4/CapSense.c ****     *
 939:.\Generated_Source\PSoC4/CapSense.c ****     * Global Variables:
 940:.\Generated_Source\PSoC4/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
 941:.\Generated_Source\PSoC4/CapSense.c ****     *  belongs to for each sensor.
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 36


 942:.\Generated_Source\PSoC4/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
 943:.\Generated_Source\PSoC4/CapSense.c ****     *  each sensor.
 944:.\Generated_Source\PSoC4/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
 945:.\Generated_Source\PSoC4/CapSense.c ****     *  The offset and position in this array are stored in a port and mask table for 
 946:.\Generated_Source\PSoC4/CapSense.c ****     *  complex sensors.
 947:.\Generated_Source\PSoC4/CapSense.c ****     *  7bit(msb) is used to define the sensor type: single or complex.
 948:.\Generated_Source\PSoC4/CapSense.c ****     *
 949:.\Generated_Source\PSoC4/CapSense.c **** 	* Side Effects: 
 950:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
 951:.\Generated_Source\PSoC4/CapSense.c **** 	*
 952:.\Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
 953:.\Generated_Source\PSoC4/CapSense.c ****     void CapSense_DisableScanSlot(uint32 slot)
 954:.\Generated_Source\PSoC4/CapSense.c ****     {
 955:.\Generated_Source\PSoC4/CapSense.c ****         uint8 j;
 956:.\Generated_Source\PSoC4/CapSense.c ****         uint8 snsNumber;
 957:.\Generated_Source\PSoC4/CapSense.c ****         const uint8 *index;
 958:.\Generated_Source\PSoC4/CapSense.c **** 
 959:.\Generated_Source\PSoC4/CapSense.c ****         /* Read sensor type: single or complex */
 960:.\Generated_Source\PSoC4/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
 961:.\Generated_Source\PSoC4/CapSense.c ****         
 962:.\Generated_Source\PSoC4/CapSense.c ****         /* Check if sensor is complex */
 963:.\Generated_Source\PSoC4/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
 964:.\Generated_Source\PSoC4/CapSense.c ****         {
 965:.\Generated_Source\PSoC4/CapSense.c ****             /* Disable sensor (single) */
 966:.\Generated_Source\PSoC4/CapSense.c ****             CapSense_DisableSensor(slot);
 967:.\Generated_Source\PSoC4/CapSense.c ****         }
 968:.\Generated_Source\PSoC4/CapSense.c ****         else
 969:.\Generated_Source\PSoC4/CapSense.c ****         {
 970:.\Generated_Source\PSoC4/CapSense.c ****             /* Disable complex sensor */
 971:.\Generated_Source\PSoC4/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
 972:.\Generated_Source\PSoC4/CapSense.c ****             index = &CapSense_indexTable[snsType];
 973:.\Generated_Source\PSoC4/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
 974:.\Generated_Source\PSoC4/CapSense.c ****                         
 975:.\Generated_Source\PSoC4/CapSense.c ****             for (j=0; j < snsNumber; j++)
 976:.\Generated_Source\PSoC4/CapSense.c ****             {
 977:.\Generated_Source\PSoC4/CapSense.c ****                 CapSense_DisableSensor(index[j]);
 978:.\Generated_Source\PSoC4/CapSense.c ****             }
 979:.\Generated_Source\PSoC4/CapSense.c ****         } 
 980:.\Generated_Source\PSoC4/CapSense.c ****     }
 981:.\Generated_Source\PSoC4/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
 982:.\Generated_Source\PSoC4/CapSense.c **** 
 983:.\Generated_Source\PSoC4/CapSense.c **** 
 984:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 985:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_EnableSensor
 986:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 987:.\Generated_Source\PSoC4/CapSense.c **** *
 988:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
 989:.\Generated_Source\PSoC4/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
 990:.\Generated_Source\PSoC4/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
 991:.\Generated_Source\PSoC4/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
 992:.\Generated_Source\PSoC4/CapSense.c **** *
 993:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
 994:.\Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
 995:.\Generated_Source\PSoC4/CapSense.c **** *
 996:.\Generated_Source\PSoC4/CapSense.c **** * Return:
 997:.\Generated_Source\PSoC4/CapSense.c **** *  None
 998:.\Generated_Source\PSoC4/CapSense.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 37


 999:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1000:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1001:.\Generated_Source\PSoC4/CapSense.c **** *  belongs to for each sensor.
1002:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_pinShiftTbl[] - used to store position of pin that 
1003:.\Generated_Source\PSoC4/CapSense.c **** *  configured as sensor in port. 
1004:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtSelTbl[] - Contains pointers to the HSIOM 
1005:.\Generated_Source\PSoC4/CapSense.c **** *  registers for each port. 
1006:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_PrtCfgTb[] - Contains pointers to the port config 
1007:.\Generated_Source\PSoC4/CapSense.c **** *  registers for each port.
1008:.\Generated_Source\PSoC4/CapSense.c **** *
1009:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
1010:.\Generated_Source\PSoC4/CapSense.c **** *  None
1011:.\Generated_Source\PSoC4/CapSense.c **** *
1012:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1013:.\Generated_Source\PSoC4/CapSense.c **** __INLINE void CapSense_EnableSensor(uint32 sensor)
1014:.\Generated_Source\PSoC4/CapSense.c **** {
 1047              		.loc 1 1014 0
 1048              		.cfi_startproc
 1049 0000 90B5     		push	{r4, r7, lr}
 1050              		.cfi_def_cfa_offset 12
 1051              		.cfi_offset 4, -12
 1052              		.cfi_offset 7, -8
 1053              		.cfi_offset 14, -4
 1054 0002 87B0     		sub	sp, sp, #28
 1055              		.cfi_def_cfa_offset 40
 1056 0004 00AF     		add	r7, sp, #0
 1057              		.cfi_def_cfa_register 7
 1058 0006 7860     		str	r0, [r7, #4]
1015:.\Generated_Source\PSoC4/CapSense.c **** 	uint8  pinModeShift;
1016:.\Generated_Source\PSoC4/CapSense.c ****     uint8  pinHSIOMShift;
1017:.\Generated_Source\PSoC4/CapSense.c **** 	uint8 interruptState;
1018:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 newRegisterValue;
1019:.\Generated_Source\PSoC4/CapSense.c ****     uint32 port;
1020:.\Generated_Source\PSoC4/CapSense.c **** 	
1021:.\Generated_Source\PSoC4/CapSense.c **** 	port = (uint32) CapSense_portTable[sensor];
 1059              		.loc 1 1021 0
 1060 0008 0323     		mov	r3, #3
 1061 000a 7B61     		str	r3, [r7, #20]
1022:.\Generated_Source\PSoC4/CapSense.c ****     pinModeShift = CapSense_pinShiftTbl[sensor]  * CapSense_PC_PIN_CFG_SIZE;
 1062              		.loc 1 1022 0
 1063 000c 0123     		mov	r3, #1
 1064 000e 391C     		mov	r1, r7
 1065 0010 1331     		add	r1, r1, #19
 1066 0012 1A1C     		add	r2, r3, #0
 1067 0014 9218     		add	r2, r2, r2
 1068 0016 D318     		add	r3, r2, r3
 1069 0018 0B70     		strb	r3, [r1]
1023:.\Generated_Source\PSoC4/CapSense.c ****     pinHSIOMShift = CapSense_pinShiftTbl[sensor] * CapSense_HSIOM_PIN_CFG_SIZE;
 1070              		.loc 1 1023 0
 1071 001a 0122     		mov	r2, #1
 1072 001c 3B1C     		mov	r3, r7
 1073 001e 1233     		add	r3, r3, #18
 1074 0020 9200     		lsl	r2, r2, #2
 1075 0022 1A70     		strb	r2, [r3]
1024:.\Generated_Source\PSoC4/CapSense.c **** 
1025:.\Generated_Source\PSoC4/CapSense.c **** 	interruptState = CyEnterCriticalSection();
 1076              		.loc 1 1025 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 38


 1077 0024 3C1C     		mov	r4, r7
 1078 0026 1134     		add	r4, r4, #17
 1079 0028 FFF7FEFF 		bl	CyEnterCriticalSection
 1080 002c 031C     		mov	r3, r0
 1081 002e 2370     		strb	r3, [r4]
1026:.\Generated_Source\PSoC4/CapSense.c **** 	
1027:.\Generated_Source\PSoC4/CapSense.c **** 	newRegisterValue = *CapSense_prtSelTbl[port];
 1082              		.loc 1 1027 0
 1083 0030 1E4B     		ldr	r3, .L66
 1084 0032 7A69     		ldr	r2, [r7, #20]
 1085 0034 9200     		lsl	r2, r2, #2
 1086 0036 D358     		ldr	r3, [r2, r3]
 1087 0038 1B68     		ldr	r3, [r3]
 1088 003a FB60     		str	r3, [r7, #12]
1028:.\Generated_Source\PSoC4/CapSense.c **** 	newRegisterValue &= ~(CapSense_CSD_HSIOM_MASK << pinHSIOMShift);
 1089              		.loc 1 1028 0
 1090 003c 3B1C     		mov	r3, r7
 1091 003e 1233     		add	r3, r3, #18
 1092 0040 1B78     		ldrb	r3, [r3]
 1093 0042 0F22     		mov	r2, #15
 1094 0044 111C     		mov	r1, r2
 1095 0046 9940     		lsl	r1, r1, r3
 1096 0048 0B1C     		mov	r3, r1
 1097 004a DA43     		mvn	r2, r3
 1098 004c FB68     		ldr	r3, [r7, #12]
 1099 004e 1340     		and	r3, r2
 1100 0050 FB60     		str	r3, [r7, #12]
1029:.\Generated_Source\PSoC4/CapSense.c **** 	newRegisterValue |= (uint32)((uint32)CapSense_CSD_SENSE_PORT_MODE << pinHSIOMShift);
 1101              		.loc 1 1029 0
 1102 0052 3B1C     		mov	r3, r7
 1103 0054 1233     		add	r3, r3, #18
 1104 0056 1B78     		ldrb	r3, [r3]
 1105 0058 0422     		mov	r2, #4
 1106 005a 141C     		mov	r4, r2
 1107 005c 9C40     		lsl	r4, r4, r3
 1108 005e 231C     		mov	r3, r4
 1109 0060 FA68     		ldr	r2, [r7, #12]
 1110 0062 1343     		orr	r3, r2
 1111 0064 FB60     		str	r3, [r7, #12]
1030:.\Generated_Source\PSoC4/CapSense.c ****    
1031:.\Generated_Source\PSoC4/CapSense.c ****     *CapSense_prtCfgTbl[port] &= (uint32)~((uint32)CapSense_CSD_PIN_MODE_MASK << pinModeShift);
 1112              		.loc 1 1031 0
 1113 0066 124B     		ldr	r3, .L66+4
 1114 0068 7A69     		ldr	r2, [r7, #20]
 1115 006a 9200     		lsl	r2, r2, #2
 1116 006c D358     		ldr	r3, [r2, r3]
 1117 006e 104A     		ldr	r2, .L66+4
 1118 0070 7969     		ldr	r1, [r7, #20]
 1119 0072 8900     		lsl	r1, r1, #2
 1120 0074 8A58     		ldr	r2, [r1, r2]
 1121 0076 1268     		ldr	r2, [r2]
 1122 0078 391C     		mov	r1, r7
 1123 007a 1331     		add	r1, r1, #19
 1124 007c 0978     		ldrb	r1, [r1]
 1125 007e 0720     		mov	r0, #7
 1126 0080 041C     		mov	r4, r0
 1127 0082 8C40     		lsl	r4, r4, r1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 39


 1128 0084 211C     		mov	r1, r4
 1129 0086 C943     		mvn	r1, r1
 1130 0088 0A40     		and	r2, r1
 1131 008a 1A60     		str	r2, [r3]
1032:.\Generated_Source\PSoC4/CapSense.c ****     *CapSense_prtSelTbl[port] = newRegisterValue;
 1132              		.loc 1 1032 0
 1133 008c 074B     		ldr	r3, .L66
 1134 008e 7A69     		ldr	r2, [r7, #20]
 1135 0090 9200     		lsl	r2, r2, #2
 1136 0092 D358     		ldr	r3, [r2, r3]
 1137 0094 FA68     		ldr	r2, [r7, #12]
 1138 0096 1A60     		str	r2, [r3]
1033:.\Generated_Source\PSoC4/CapSense.c **** 	
1034:.\Generated_Source\PSoC4/CapSense.c **** 	CyExitCriticalSection(interruptState);
 1139              		.loc 1 1034 0
 1140 0098 3B1C     		mov	r3, r7
 1141 009a 1133     		add	r3, r3, #17
 1142 009c 1B78     		ldrb	r3, [r3]
 1143 009e 181C     		mov	r0, r3
 1144 00a0 FFF7FEFF 		bl	CyExitCriticalSection
1035:.\Generated_Source\PSoC4/CapSense.c **** }
 1145              		.loc 1 1035 0
 1146 00a4 BD46     		mov	sp, r7
 1147 00a6 07B0     		add	sp, sp, #28
 1148              		@ sp needed
 1149 00a8 90BD     		pop	{r4, r7, pc}
 1150              	.L67:
 1151 00aa C046     		.align	2
 1152              	.L66:
 1153 00ac 00000000 		.word	CapSense_prtSelTbl
 1154 00b0 00000000 		.word	CapSense_prtCfgTbl
 1155              		.cfi_endproc
 1156              	.LFE48:
 1157              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 1158              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 1159              		.align	2
 1160              		.global	CapSense_DisableSensor
 1161              		.code	16
 1162              		.thumb_func
 1163              		.type	CapSense_DisableSensor, %function
 1164              	CapSense_DisableSensor:
 1165              	.LFB49:
1036:.\Generated_Source\PSoC4/CapSense.c **** 
1037:.\Generated_Source\PSoC4/CapSense.c **** 
1038:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_DisableSensor
1040:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/CapSense.c **** *
1042:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1043:.\Generated_Source\PSoC4/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1044:.\Generated_Source\PSoC4/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1045:.\Generated_Source\PSoC4/CapSense.c **** *
1046:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1047:.\Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number
1048:.\Generated_Source\PSoC4/CapSense.c **** *
1049:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1050:.\Generated_Source\PSoC4/CapSense.c **** *  None
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 40


1051:.\Generated_Source\PSoC4/CapSense.c **** *
1052:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1053:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1054:.\Generated_Source\PSoC4/CapSense.c **** *  belongs to for each sensor.
1055:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_pinShiftTbl[] - used to store position of pin that 
1056:.\Generated_Source\PSoC4/CapSense.c **** *  configured as a sensor in the port. 
1057:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtSelTbl[] - Contains pointers to the HSIOM 
1058:.\Generated_Source\PSoC4/CapSense.c **** *  registers for each port. 
1059:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_PrtCfgTb[] - Contains pointers to the port config 
1060:.\Generated_Source\PSoC4/CapSense.c **** *  registers for each port.
1061:.\Generated_Source\PSoC4/CapSense.c **** *
1062:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
1063:.\Generated_Source\PSoC4/CapSense.c **** *  None
1064:.\Generated_Source\PSoC4/CapSense.c **** *
1065:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1066:.\Generated_Source\PSoC4/CapSense.c **** __INLINE void CapSense_DisableSensor(uint32 sensor)
1067:.\Generated_Source\PSoC4/CapSense.c **** {
 1166              		.loc 1 1067 0
 1167              		.cfi_startproc
 1168 0000 90B5     		push	{r4, r7, lr}
 1169              		.cfi_def_cfa_offset 12
 1170              		.cfi_offset 4, -12
 1171              		.cfi_offset 7, -8
 1172              		.cfi_offset 14, -4
 1173 0002 89B0     		sub	sp, sp, #36
 1174              		.cfi_def_cfa_offset 48
 1175 0004 00AF     		add	r7, sp, #0
 1176              		.cfi_def_cfa_register 7
 1177 0006 7860     		str	r0, [r7, #4]
1068:.\Generated_Source\PSoC4/CapSense.c ****     uint8 interruptState;
1069:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 newRegisterValue;
1070:.\Generated_Source\PSoC4/CapSense.c **** 	
1071:.\Generated_Source\PSoC4/CapSense.c ****     uint32 port = (uint32) CapSense_portTable[sensor];
 1178              		.loc 1 1071 0
 1179 0008 0323     		mov	r3, #3
 1180 000a 7B61     		str	r3, [r7, #20]
1072:.\Generated_Source\PSoC4/CapSense.c ****     uint8  pinHSIOMShift = CapSense_pinShiftTbl[sensor] * CapSense_HSIOM_PIN_CFG_SIZE;
 1181              		.loc 1 1072 0
 1182 000c 0122     		mov	r2, #1
 1183 000e 3B1C     		mov	r3, r7
 1184 0010 1333     		add	r3, r3, #19
 1185 0012 9200     		lsl	r2, r2, #2
 1186 0014 1A70     		strb	r2, [r3]
1073:.\Generated_Source\PSoC4/CapSense.c ****     uint8  pinModeShift = CapSense_pinShiftTbl[sensor]  * CapSense_PC_PIN_CFG_SIZE;
 1187              		.loc 1 1073 0
 1188 0016 0123     		mov	r3, #1
 1189 0018 391C     		mov	r1, r7
 1190 001a 1231     		add	r1, r1, #18
 1191 001c 1A1C     		add	r2, r3, #0
 1192 001e 9218     		add	r2, r2, r2
 1193 0020 D318     		add	r3, r2, r3
 1194 0022 0B70     		strb	r3, [r1]
1074:.\Generated_Source\PSoC4/CapSense.c **** 
1075:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 inactiveConnect = CapSense_SNS_HIZANALOG_CONNECT;
 1195              		.loc 1 1075 0
 1196 0024 0023     		mov	r3, #0
 1197 0026 FB61     		str	r3, [r7, #28]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 41


1076:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 sensorState = CapSense_unscannedSnsDriveMode[sensor];
 1198              		.loc 1 1076 0
 1199 0028 324A     		ldr	r2, .L72
 1200 002a 7B68     		ldr	r3, [r7, #4]
 1201 002c D318     		add	r3, r2, r3
 1202 002e 1B78     		ldrb	r3, [r3]
 1203 0030 BB61     		str	r3, [r7, #24]
1077:.\Generated_Source\PSoC4/CapSense.c **** 
1078:.\Generated_Source\PSoC4/CapSense.c ****     *CapSense_prtSelTbl[port] &= ~(CapSense_CSD_HSIOM_MASK << pinHSIOMShift);
 1204              		.loc 1 1078 0
 1205 0032 314B     		ldr	r3, .L72+4
 1206 0034 7A69     		ldr	r2, [r7, #20]
 1207 0036 9200     		lsl	r2, r2, #2
 1208 0038 D358     		ldr	r3, [r2, r3]
 1209 003a 2F4A     		ldr	r2, .L72+4
 1210 003c 7969     		ldr	r1, [r7, #20]
 1211 003e 8900     		lsl	r1, r1, #2
 1212 0040 8A58     		ldr	r2, [r1, r2]
 1213 0042 1268     		ldr	r2, [r2]
 1214 0044 391C     		mov	r1, r7
 1215 0046 1331     		add	r1, r1, #19
 1216 0048 0978     		ldrb	r1, [r1]
 1217 004a 0F20     		mov	r0, #15
 1218 004c 041C     		mov	r4, r0
 1219 004e 8C40     		lsl	r4, r4, r1
 1220 0050 211C     		mov	r1, r4
 1221 0052 C943     		mvn	r1, r1
 1222 0054 0A40     		and	r2, r1
 1223 0056 1A60     		str	r2, [r3]
1079:.\Generated_Source\PSoC4/CapSense.c **** 
1080:.\Generated_Source\PSoC4/CapSense.c **** 	#if(CapSense_IS_SHIELD_ENABLE == 0)
1081:.\Generated_Source\PSoC4/CapSense.c **** 	    /* Connected to Ground if shield is disabled */
1082:.\Generated_Source\PSoC4/CapSense.c **** 	    if(sensorState == CapSense__SHIELD)
 1224              		.loc 1 1082 0
 1225 0058 BB69     		ldr	r3, [r7, #24]
 1226 005a 022B     		cmp	r3, #2
 1227 005c 01D1     		bne	.L69
1083:.\Generated_Source\PSoC4/CapSense.c **** 		{
1084:.\Generated_Source\PSoC4/CapSense.c **** 			sensorState = CapSense__GROUND;
 1228              		.loc 1 1084 0
 1229 005e 0023     		mov	r3, #0
 1230 0060 BB61     		str	r3, [r7, #24]
 1231              	.L69:
1085:.\Generated_Source\PSoC4/CapSense.c **** 		}
1086:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (CapSense_IS_SHIELD_ENABLE == 0) */
1087:.\Generated_Source\PSoC4/CapSense.c **** 
1088:.\Generated_Source\PSoC4/CapSense.c **** 	if(sensorState != (uint32)CapSense__SHIELD)
 1232              		.loc 1 1088 0
 1233 0062 BB69     		ldr	r3, [r7, #24]
 1234 0064 022B     		cmp	r3, #2
 1235 0066 42D0     		beq	.L68
1089:.\Generated_Source\PSoC4/CapSense.c **** 	{
1090:.\Generated_Source\PSoC4/CapSense.c **** 	    if(sensorState != (uint32)CapSense__HIZ_ANALOG)
 1236              		.loc 1 1090 0
 1237 0068 BB69     		ldr	r3, [r7, #24]
 1238 006a 012B     		cmp	r3, #1
 1239 006c 01D0     		beq	.L71
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 42


1091:.\Generated_Source\PSoC4/CapSense.c **** 		{   
1092:.\Generated_Source\PSoC4/CapSense.c **** 		    /* Connected to Ground */
1093:.\Generated_Source\PSoC4/CapSense.c **** 		    inactiveConnect = CapSense_SNS_GROUND_CONNECT;
 1240              		.loc 1 1093 0
 1241 006e 0623     		mov	r3, #6
 1242 0070 FB61     		str	r3, [r7, #28]
 1243              	.L71:
1094:.\Generated_Source\PSoC4/CapSense.c **** 		}
1095:.\Generated_Source\PSoC4/CapSense.c **** 		
1096:.\Generated_Source\PSoC4/CapSense.c ****         interruptState = CyEnterCriticalSection();
 1244              		.loc 1 1096 0
 1245 0072 3C1C     		mov	r4, r7
 1246 0074 1134     		add	r4, r4, #17
 1247 0076 FFF7FEFF 		bl	CyEnterCriticalSection
 1248 007a 031C     		mov	r3, r0
 1249 007c 2370     		strb	r3, [r4]
1097:.\Generated_Source\PSoC4/CapSense.c **** 
1098:.\Generated_Source\PSoC4/CapSense.c ****         /* Set drive mode */
1099:.\Generated_Source\PSoC4/CapSense.c ****     	newRegisterValue = *CapSense_prtCfgTbl[port];
 1250              		.loc 1 1099 0
 1251 007e 1F4B     		ldr	r3, .L72+8
 1252 0080 7A69     		ldr	r2, [r7, #20]
 1253 0082 9200     		lsl	r2, r2, #2
 1254 0084 D358     		ldr	r3, [r2, r3]
 1255 0086 1B68     		ldr	r3, [r3]
 1256 0088 FB60     		str	r3, [r7, #12]
1100:.\Generated_Source\PSoC4/CapSense.c ****     	newRegisterValue &= ~(CapSense_CSD_PIN_MODE_MASK << pinModeShift);
 1257              		.loc 1 1100 0
 1258 008a 3B1C     		mov	r3, r7
 1259 008c 1233     		add	r3, r3, #18
 1260 008e 1B78     		ldrb	r3, [r3]
 1261 0090 0722     		mov	r2, #7
 1262 0092 111C     		mov	r1, r2
 1263 0094 9940     		lsl	r1, r1, r3
 1264 0096 0B1C     		mov	r3, r1
 1265 0098 DA43     		mvn	r2, r3
 1266 009a FB68     		ldr	r3, [r7, #12]
 1267 009c 1340     		and	r3, r2
 1268 009e FB60     		str	r3, [r7, #12]
1101:.\Generated_Source\PSoC4/CapSense.c ****     	newRegisterValue |=  (uint32)(inactiveConnect << pinModeShift);
 1269              		.loc 1 1101 0
 1270 00a0 3B1C     		mov	r3, r7
 1271 00a2 1233     		add	r3, r3, #18
 1272 00a4 1B78     		ldrb	r3, [r3]
 1273 00a6 FA69     		ldr	r2, [r7, #28]
 1274 00a8 141C     		mov	r4, r2
 1275 00aa 9C40     		lsl	r4, r4, r3
 1276 00ac 231C     		mov	r3, r4
 1277 00ae FA68     		ldr	r2, [r7, #12]
 1278 00b0 1343     		orr	r3, r2
 1279 00b2 FB60     		str	r3, [r7, #12]
1102:.\Generated_Source\PSoC4/CapSense.c ****         *CapSense_prtCfgTbl[port] =  newRegisterValue;
 1280              		.loc 1 1102 0
 1281 00b4 114B     		ldr	r3, .L72+8
 1282 00b6 7A69     		ldr	r2, [r7, #20]
 1283 00b8 9200     		lsl	r2, r2, #2
 1284 00ba D358     		ldr	r3, [r2, r3]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 43


 1285 00bc FA68     		ldr	r2, [r7, #12]
 1286 00be 1A60     		str	r2, [r3]
1103:.\Generated_Source\PSoC4/CapSense.c ****         
1104:.\Generated_Source\PSoC4/CapSense.c ****         CyExitCriticalSection(interruptState);
 1287              		.loc 1 1104 0
 1288 00c0 3B1C     		mov	r3, r7
 1289 00c2 1133     		add	r3, r3, #17
 1290 00c4 1B78     		ldrb	r3, [r3]
 1291 00c6 181C     		mov	r0, r3
 1292 00c8 FFF7FEFF 		bl	CyExitCriticalSection
1105:.\Generated_Source\PSoC4/CapSense.c **** 
1106:.\Generated_Source\PSoC4/CapSense.c ****     	*CapSense_prtDRTbl[port]  &=  (uint32)~(uint32)((uint32)1u << CapSense_pinShiftTbl[sensor]); 
 1293              		.loc 1 1106 0
 1294 00cc 0C4B     		ldr	r3, .L72+12
 1295 00ce 7A69     		ldr	r2, [r7, #20]
 1296 00d0 9200     		lsl	r2, r2, #2
 1297 00d2 D358     		ldr	r3, [r2, r3]
 1298 00d4 0A4A     		ldr	r2, .L72+12
 1299 00d6 7969     		ldr	r1, [r7, #20]
 1300 00d8 8900     		lsl	r1, r1, #2
 1301 00da 8A58     		ldr	r2, [r1, r2]
 1302 00dc 1268     		ldr	r2, [r2]
 1303 00de 0121     		mov	r1, #1
 1304 00e0 0120     		mov	r0, #1
 1305 00e2 041C     		mov	r4, r0
 1306 00e4 8C40     		lsl	r4, r4, r1
 1307 00e6 211C     		mov	r1, r4
 1308 00e8 C943     		mvn	r1, r1
 1309 00ea 0A40     		and	r2, r1
 1310 00ec 1A60     		str	r2, [r3]
 1311              	.L68:
1107:.\Generated_Source\PSoC4/CapSense.c ****     }
1108:.\Generated_Source\PSoC4/CapSense.c **** 	#if(CapSense_IS_SHIELD_ENABLE != 0)
1109:.\Generated_Source\PSoC4/CapSense.c **** 	else
1110:.\Generated_Source\PSoC4/CapSense.c **** 	{
1111:.\Generated_Source\PSoC4/CapSense.c **** 		/* Connect to Shield */
1112:.\Generated_Source\PSoC4/CapSense.c **** 		*CapSense_prtSelTbl[port] |= (CapSense_CSD_SHIELD_PORT_MODE << pinHSIOMShift);
1113:.\Generated_Source\PSoC4/CapSense.c **** 	}
1114:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (CapSense_IS_SHIELD_ENABLE) */
1115:.\Generated_Source\PSoC4/CapSense.c **** }
 1312              		.loc 1 1115 0
 1313 00ee BD46     		mov	sp, r7
 1314 00f0 09B0     		add	sp, sp, #36
 1315              		@ sp needed
 1316 00f2 90BD     		pop	{r4, r7, pc}
 1317              	.L73:
 1318              		.align	2
 1319              	.L72:
 1320 00f4 00000000 		.word	CapSense_unscannedSnsDriveMode
 1321 00f8 00000000 		.word	CapSense_prtSelTbl
 1322 00fc 00000000 		.word	CapSense_prtCfgTbl
 1323 0100 00000000 		.word	CapSense_prtDRTbl
 1324              		.cfi_endproc
 1325              	.LFE49:
 1326              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 1327              		.section	.text.CapSense_SetDriveModeAllPins,"ax",%progbits
 1328              		.align	2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 44


 1329              		.global	CapSense_SetDriveModeAllPins
 1330              		.code	16
 1331              		.thumb_func
 1332              		.type	CapSense_SetDriveModeAllPins, %function
 1333              	CapSense_SetDriveModeAllPins:
 1334              	.LFB50:
1116:.\Generated_Source\PSoC4/CapSense.c **** 
1117:.\Generated_Source\PSoC4/CapSense.c **** 
1118:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1119:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_SetDriveModeAllPins
1120:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1121:.\Generated_Source\PSoC4/CapSense.c **** *
1122:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1123:.\Generated_Source\PSoC4/CapSense.c **** * This API sets the drive mode of port pins used by the CapSense
1124:.\Generated_Source\PSoC4/CapSense.c **** * component (sensors, guard, shield, shield tank and Cmod) to drive the 
1125:.\Generated_Source\PSoC4/CapSense.c **** * mode specified by the argument.
1126:.\Generated_Source\PSoC4/CapSense.c **** *
1127:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1128:.\Generated_Source\PSoC4/CapSense.c **** *  driveMode:  Drive mode definition.
1129:.\Generated_Source\PSoC4/CapSense.c **** *
1130:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1131:.\Generated_Source\PSoC4/CapSense.c **** *  None
1132:.\Generated_Source\PSoC4/CapSense.c **** *
1133:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1134:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1135:.\Generated_Source\PSoC4/CapSense.c **** *  belongs to for each sensor.
1136:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_pinShiftTbl[] - used to store position of pin that 
1137:.\Generated_Source\PSoC4/CapSense.c **** *  configured as a sensor in the port. 
1138:.\Generated_Source\PSoC4/CapSense.c **** *
1139:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
1140:.\Generated_Source\PSoC4/CapSense.c **** *  This API shall be called only after CapSense component is stopped.
1141:.\Generated_Source\PSoC4/CapSense.c **** *
1142:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1143:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_SetDriveModeAllPins(uint32 driveMode)
1144:.\Generated_Source\PSoC4/CapSense.c **** {
 1335              		.loc 1 1144 0
 1336              		.cfi_startproc
 1337 0000 80B5     		push	{r7, lr}
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 0002 86B0     		sub	sp, sp, #24
 1342              		.cfi_def_cfa_offset 32
 1343 0004 00AF     		add	r7, sp, #0
 1344              		.cfi_def_cfa_register 7
 1345 0006 7860     		str	r0, [r7, #4]
1145:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 curSensor;
1146:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 prtNumberTmp;
1147:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 pinNumberTmp;
1148:.\Generated_Source\PSoC4/CapSense.c **** 	
1149:.\Generated_Source\PSoC4/CapSense.c **** 	for(curSensor = 0u; curSensor < CapSense_TOTAL_SENSOR_COUNT; curSensor++)
 1346              		.loc 1 1149 0
 1347 0008 0023     		mov	r3, #0
 1348 000a 7B61     		str	r3, [r7, #20]
 1349 000c 0EE0     		b	.L75
 1350              	.L76:
1150:.\Generated_Source\PSoC4/CapSense.c **** 	{
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 45


1151:.\Generated_Source\PSoC4/CapSense.c **** 		prtNumberTmp = CapSense_portTable[curSensor];
 1351              		.loc 1 1151 0 discriminator 2
 1352 000e 0323     		mov	r3, #3
 1353 0010 3B61     		str	r3, [r7, #16]
1152:.\Generated_Source\PSoC4/CapSense.c **** 		pinNumberTmp = CapSense_pinShiftTbl[curSensor];
 1354              		.loc 1 1152 0 discriminator 2
 1355 0012 0123     		mov	r3, #1
 1356 0014 FB60     		str	r3, [r7, #12]
1153:.\Generated_Source\PSoC4/CapSense.c **** 		
1154:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SetPinDriveMode(driveMode, pinNumberTmp, prtNumberTmp);
 1357              		.loc 1 1154 0 discriminator 2
 1358 0016 7968     		ldr	r1, [r7, #4]
 1359 0018 FA68     		ldr	r2, [r7, #12]
 1360 001a 3B69     		ldr	r3, [r7, #16]
 1361 001c 081C     		mov	r0, r1
 1362 001e 111C     		mov	r1, r2
 1363 0020 1A1C     		mov	r2, r3
 1364 0022 FFF7FEFF 		bl	CapSense_SetPinDriveMode
1149:.\Generated_Source\PSoC4/CapSense.c **** 	for(curSensor = 0u; curSensor < CapSense_TOTAL_SENSOR_COUNT; curSensor++)
 1365              		.loc 1 1149 0 discriminator 2
 1366 0026 7B69     		ldr	r3, [r7, #20]
 1367 0028 0133     		add	r3, r3, #1
 1368 002a 7B61     		str	r3, [r7, #20]
 1369              	.L75:
1149:.\Generated_Source\PSoC4/CapSense.c **** 	for(curSensor = 0u; curSensor < CapSense_TOTAL_SENSOR_COUNT; curSensor++)
 1370              		.loc 1 1149 0 is_stmt 0 discriminator 1
 1371 002c 7B69     		ldr	r3, [r7, #20]
 1372 002e 002B     		cmp	r3, #0
 1373 0030 EDD0     		beq	.L76
1155:.\Generated_Source\PSoC4/CapSense.c **** 	}
1156:.\Generated_Source\PSoC4/CapSense.c **** 	
1157:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_SetPinDriveMode(driveMode, (uint32)CapSense_CMOD_PIN_NUMBER, (uint32)CapSense_CMOD_PRT_NU
 1374              		.loc 1 1157 0 is_stmt 1
 1375 0032 7B68     		ldr	r3, [r7, #4]
 1376 0034 181C     		mov	r0, r3
 1377 0036 0221     		mov	r1, #2
 1378 0038 0422     		mov	r2, #4
 1379 003a FFF7FEFF 		bl	CapSense_SetPinDriveMode
1158:.\Generated_Source\PSoC4/CapSense.c **** 	
1159:.\Generated_Source\PSoC4/CapSense.c **** 	#if(0u != CapSense_CSH_TANK_ENABLE)
1160:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SetPinDriveMode(driveMode, (uint32)CapSense_CTANK_PIN_NUMBER, (uint32)CapSense_CTANK_PRT
1161:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (0u != CapSense_CSH_TANK_ENABLE) */	
1162:.\Generated_Source\PSoC4/CapSense.c **** 	
1163:.\Generated_Source\PSoC4/CapSense.c **** 	#if(0u != CapSense_IS_SHIELD_ENABLE)
1164:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SetPinDriveMode(driveMode, (uint32)CapSense_SHIELD_PIN_NUMBER, (uint32)CapSense_SHIELD_P
1165:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (0u != CapSense_IS_SHIELD_ENABLE) */	
1166:.\Generated_Source\PSoC4/CapSense.c **** }
 1380              		.loc 1 1166 0
 1381 003e BD46     		mov	sp, r7
 1382 0040 06B0     		add	sp, sp, #24
 1383              		@ sp needed
 1384 0042 80BD     		pop	{r7, pc}
 1385              		.cfi_endproc
 1386              	.LFE50:
 1387              		.size	CapSense_SetDriveModeAllPins, .-CapSense_SetDriveModeAllPins
 1388              		.section	.text.CapSense_RestoreDriveModeAllPins,"ax",%progbits
 1389              		.align	2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 46


 1390              		.global	CapSense_RestoreDriveModeAllPins
 1391              		.code	16
 1392              		.thumb_func
 1393              		.type	CapSense_RestoreDriveModeAllPins, %function
 1394              	CapSense_RestoreDriveModeAllPins:
 1395              	.LFB51:
1167:.\Generated_Source\PSoC4/CapSense.c **** 
1168:.\Generated_Source\PSoC4/CapSense.c **** 
1169:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1170:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_RestoreDriveModeAllPins
1171:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1172:.\Generated_Source\PSoC4/CapSense.c **** *
1173:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1174:.\Generated_Source\PSoC4/CapSense.c **** *  This API restores the drive for all the CapSense port pins to the original
1175:.\Generated_Source\PSoC4/CapSense.c **** *  state.
1176:.\Generated_Source\PSoC4/CapSense.c **** *
1177:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1178:.\Generated_Source\PSoC4/CapSense.c **** *  None
1179:.\Generated_Source\PSoC4/CapSense.c **** *
1180:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1181:.\Generated_Source\PSoC4/CapSense.c **** *  None
1182:.\Generated_Source\PSoC4/CapSense.c **** *
1183:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1184:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtSelTbl[] - Contains pointers to the HSIOM 
1185:.\Generated_Source\PSoC4/CapSense.c **** *  registers for each port. 
1186:.\Generated_Source\PSoC4/CapSense.c **** *
1187:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
1188:.\Generated_Source\PSoC4/CapSense.c **** *  This API is called only after the CapSense component is stopped.
1189:.\Generated_Source\PSoC4/CapSense.c **** *
1190:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_RestoreDriveModeAllPins(void)
1192:.\Generated_Source\PSoC4/CapSense.c **** {
 1396              		.loc 1 1192 0
 1397              		.cfi_startproc
 1398 0000 80B5     		push	{r7, lr}
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 7, -8
 1401              		.cfi_offset 14, -4
 1402 0002 82B0     		sub	sp, sp, #8
 1403              		.cfi_def_cfa_offset 16
 1404 0004 00AF     		add	r7, sp, #0
 1405              		.cfi_def_cfa_register 7
1193:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 newRegisterValue;
1194:.\Generated_Source\PSoC4/CapSense.c **** 	
1195:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_SetDriveModeAllPins(CY_SYS_PINS_DM_ALG_HIZ);
 1406              		.loc 1 1195 0
 1407 0006 0020     		mov	r0, #0
 1408 0008 FFF7FEFF 		bl	CapSense_SetDriveModeAllPins
1196:.\Generated_Source\PSoC4/CapSense.c **** 	
1197:.\Generated_Source\PSoC4/CapSense.c **** 	newRegisterValue = CapSense_CMOD_CONNECTION_REG; 
 1409              		.loc 1 1197 0
 1410 000c 084B     		ldr	r3, .L78
 1411 000e 1B68     		ldr	r3, [r3]
 1412 0010 7B60     		str	r3, [r7, #4]
1198:.\Generated_Source\PSoC4/CapSense.c ****     newRegisterValue &= ~(CapSense_CSD_CMOD_CONNECTION_MASK);
 1413              		.loc 1 1198 0
 1414 0012 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 47


 1415 0014 074B     		ldr	r3, .L78+4
 1416 0016 1340     		and	r3, r2
 1417 0018 7B60     		str	r3, [r7, #4]
1199:.\Generated_Source\PSoC4/CapSense.c ****     newRegisterValue |= CapSense_CSD_CMOD_TO_AMUXBUS_A;
 1418              		.loc 1 1199 0
 1419 001a 7B68     		ldr	r3, [r7, #4]
 1420 001c C022     		mov	r2, #192
 1421 001e D200     		lsl	r2, r2, #3
 1422 0020 1343     		orr	r3, r2
 1423 0022 7B60     		str	r3, [r7, #4]
1200:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_CMOD_CONNECTION_REG = newRegisterValue;
 1424              		.loc 1 1200 0
 1425 0024 024B     		ldr	r3, .L78
 1426 0026 7A68     		ldr	r2, [r7, #4]
 1427 0028 1A60     		str	r2, [r3]
1201:.\Generated_Source\PSoC4/CapSense.c **** 	
1202:.\Generated_Source\PSoC4/CapSense.c **** 	#if(0u != CapSense_CSH_TANK_ENABLE)
1203:.\Generated_Source\PSoC4/CapSense.c **** 		newRegisterValue = CapSense_CTANK_CONNECTION_REG;
1204:.\Generated_Source\PSoC4/CapSense.c ****         newRegisterValue &= ~(CapSense_CSD_CTANK_CONNECTION_MASK);
1205:.\Generated_Source\PSoC4/CapSense.c **** 		newRegisterValue |= CapSense_CSD_CTANK_TO_AMUXBUS_B;
1206:.\Generated_Source\PSoC4/CapSense.c ****         CapSense_CTANK_CONNECTION_REG = newRegisterValue;
1207:.\Generated_Source\PSoC4/CapSense.c **** 	#endif/* (0u != CapSense_CSH_TANK_ENABLE) */
1208:.\Generated_Source\PSoC4/CapSense.c **** 	
1209:.\Generated_Source\PSoC4/CapSense.c **** 	#if(0u != CapSense_IS_SHIELD_ENABLE)
1210:.\Generated_Source\PSoC4/CapSense.c **** 		newRegisterValue = *CapSense_prtSelTbl[CapSense_SHIELD_PORT_NUMBER];
1211:.\Generated_Source\PSoC4/CapSense.c ****         newRegisterValue &= ~(CapSense_CSD_HSIOM_MASK << ((uint32)CapSense_SHIELD_PIN_NUMBER * CapS
1212:.\Generated_Source\PSoC4/CapSense.c ****         newRegisterValue |= (CapSense_CSD_SHIELD_PORT_MODE << ((uint32)CapSense_SHIELD_PIN_NUMBER *
1213:.\Generated_Source\PSoC4/CapSense.c ****         *CapSense_prtSelTbl[CapSense_SHIELD_PORT_NUMBER] = newRegisterValue;
1214:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (0u != CapSense_IS_SHIELD_ENABLE) */	
1215:.\Generated_Source\PSoC4/CapSense.c **** }
 1428              		.loc 1 1215 0
 1429 002a BD46     		mov	sp, r7
 1430 002c 02B0     		add	sp, sp, #8
 1431              		@ sp needed
 1432 002e 80BD     		pop	{r7, pc}
 1433              	.L79:
 1434              		.align	2
 1435              	.L78:
 1436 0030 10000140 		.word	1073807376
 1437 0034 FFF0FFFF 		.word	-3841
 1438              		.cfi_endproc
 1439              	.LFE51:
 1440              		.size	CapSense_RestoreDriveModeAllPins, .-CapSense_RestoreDriveModeAllPins
 1441              		.section	.text.CapSense_SetPinDriveMode,"ax",%progbits
 1442              		.align	2
 1443              		.global	CapSense_SetPinDriveMode
 1444              		.code	16
 1445              		.thumb_func
 1446              		.type	CapSense_SetPinDriveMode, %function
 1447              	CapSense_SetPinDriveMode:
 1448              	.LFB52:
1216:.\Generated_Source\PSoC4/CapSense.c **** 
1217:.\Generated_Source\PSoC4/CapSense.c **** 
1218:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1219:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_SetPinDriveMode
1220:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1221:.\Generated_Source\PSoC4/CapSense.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 48


1222:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1223:.\Generated_Source\PSoC4/CapSense.c **** * This API sets the drive mode for the appropriate port/pin.
1224:.\Generated_Source\PSoC4/CapSense.c **** *
1225:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1226:.\Generated_Source\PSoC4/CapSense.c **** *  driveMode:  Drive mode definition.
1227:.\Generated_Source\PSoC4/CapSense.c **** *  portNumber: contains port number (0, 1, 2).
1228:.\Generated_Source\PSoC4/CapSense.c **** *  pinNumber: contains pin number (0, 1, 2, ... , 7).
1229:.\Generated_Source\PSoC4/CapSense.c **** *
1230:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1231:.\Generated_Source\PSoC4/CapSense.c **** *  None
1232:.\Generated_Source\PSoC4/CapSense.c **** *
1233:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1234:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtSelTbl[] - Contains pointers to the HSIOM 
1235:.\Generated_Source\PSoC4/CapSense.c **** *  registers for each port. 
1236:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtCfgTb[] - Contains pointers to the port config 
1237:.\Generated_Source\PSoC4/CapSense.c **** *  registers for each port.
1238:.\Generated_Source\PSoC4/CapSense.c **** *
1239:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
1240:.\Generated_Source\PSoC4/CapSense.c **** *  This API is called only after CapSense component is stopped.
1241:.\Generated_Source\PSoC4/CapSense.c **** *
1242:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1243:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_SetPinDriveMode(uint32 driveMode, uint32 pinNumber, uint32 portNumber)
1244:.\Generated_Source\PSoC4/CapSense.c **** {	
 1449              		.loc 1 1244 0
 1450              		.cfi_startproc
 1451 0000 80B5     		push	{r7, lr}
 1452              		.cfi_def_cfa_offset 8
 1453              		.cfi_offset 7, -8
 1454              		.cfi_offset 14, -4
 1455 0002 86B0     		sub	sp, sp, #24
 1456              		.cfi_def_cfa_offset 32
 1457 0004 00AF     		add	r7, sp, #0
 1458              		.cfi_def_cfa_register 7
 1459 0006 F860     		str	r0, [r7, #12]
 1460 0008 B960     		str	r1, [r7, #8]
 1461 000a 7A60     		str	r2, [r7, #4]
1245:.\Generated_Source\PSoC4/CapSense.c **** 	uint32  pinModeShift;
1246:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 newRegisterValue;
1247:.\Generated_Source\PSoC4/CapSense.c **** 	
1248:.\Generated_Source\PSoC4/CapSense.c **** 	pinModeShift  = pinNumber * CapSense_PC_PIN_CFG_SIZE;
 1462              		.loc 1 1248 0
 1463 000c BA68     		ldr	r2, [r7, #8]
 1464 000e 131C     		mov	r3, r2
 1465 0010 5B00     		lsl	r3, r3, #1
 1466 0012 9B18     		add	r3, r3, r2
 1467 0014 7B61     		str	r3, [r7, #20]
1249:.\Generated_Source\PSoC4/CapSense.c **** 	
1250:.\Generated_Source\PSoC4/CapSense.c **** 	newRegisterValue = *CapSense_prtCfgTbl[portNumber];
 1468              		.loc 1 1250 0
 1469 0016 104B     		ldr	r3, .L81
 1470 0018 7A68     		ldr	r2, [r7, #4]
 1471 001a 9200     		lsl	r2, r2, #2
 1472 001c D358     		ldr	r3, [r2, r3]
 1473 001e 1B68     		ldr	r3, [r3]
 1474 0020 3B61     		str	r3, [r7, #16]
1251:.\Generated_Source\PSoC4/CapSense.c **** 	newRegisterValue &= ~(CapSense_CSD_PIN_MODE_MASK << pinModeShift);
 1475              		.loc 1 1251 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 49


 1476 0022 7B69     		ldr	r3, [r7, #20]
 1477 0024 0722     		mov	r2, #7
 1478 0026 111C     		mov	r1, r2
 1479 0028 9940     		lsl	r1, r1, r3
 1480 002a 0B1C     		mov	r3, r1
 1481 002c DA43     		mvn	r2, r3
 1482 002e 3B69     		ldr	r3, [r7, #16]
 1483 0030 1340     		and	r3, r2
 1484 0032 3B61     		str	r3, [r7, #16]
1252:.\Generated_Source\PSoC4/CapSense.c **** 	newRegisterValue |=  (uint32)((uint32)driveMode << pinModeShift);
 1485              		.loc 1 1252 0
 1486 0034 7B69     		ldr	r3, [r7, #20]
 1487 0036 FA68     		ldr	r2, [r7, #12]
 1488 0038 111C     		mov	r1, r2
 1489 003a 9940     		lsl	r1, r1, r3
 1490 003c 0B1C     		mov	r3, r1
 1491 003e 3A69     		ldr	r2, [r7, #16]
 1492 0040 1343     		orr	r3, r2
 1493 0042 3B61     		str	r3, [r7, #16]
1253:.\Generated_Source\PSoC4/CapSense.c ****     *CapSense_prtCfgTbl[portNumber] =  newRegisterValue;
 1494              		.loc 1 1253 0
 1495 0044 044B     		ldr	r3, .L81
 1496 0046 7A68     		ldr	r2, [r7, #4]
 1497 0048 9200     		lsl	r2, r2, #2
 1498 004a D358     		ldr	r3, [r2, r3]
 1499 004c 3A69     		ldr	r2, [r7, #16]
 1500 004e 1A60     		str	r2, [r3]
1254:.\Generated_Source\PSoC4/CapSense.c **** }
 1501              		.loc 1 1254 0
 1502 0050 BD46     		mov	sp, r7
 1503 0052 06B0     		add	sp, sp, #24
 1504              		@ sp needed
 1505 0054 80BD     		pop	{r7, pc}
 1506              	.L82:
 1507 0056 C046     		.align	2
 1508              	.L81:
 1509 0058 00000000 		.word	CapSense_prtCfgTbl
 1510              		.cfi_endproc
 1511              	.LFE52:
 1512              		.size	CapSense_SetPinDriveMode, .-CapSense_SetPinDriveMode
 1513              		.section	.text.CapSense_PreScan,"ax",%progbits
 1514              		.align	2
 1515              		.global	CapSense_PreScan
 1516              		.code	16
 1517              		.thumb_func
 1518              		.type	CapSense_PreScan, %function
 1519              	CapSense_PreScan:
 1520              	.LFB53:
1255:.\Generated_Source\PSoC4/CapSense.c **** 
1256:.\Generated_Source\PSoC4/CapSense.c **** 
1257:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1258:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_PreScan
1259:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1260:.\Generated_Source\PSoC4/CapSense.c **** *
1261:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1262:.\Generated_Source\PSoC4/CapSense.c **** *  Sets required settings, enables a sensor, removes Vref from AMUX and starts the 
1263:.\Generated_Source\PSoC4/CapSense.c **** *  scanning process of the sensor.
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 50


1264:.\Generated_Source\PSoC4/CapSense.c **** *
1265:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1266:.\Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
1267:.\Generated_Source\PSoC4/CapSense.c **** *
1268:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1269:.\Generated_Source\PSoC4/CapSense.c **** *  None
1270:.\Generated_Source\PSoC4/CapSense.c **** *
1271:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1272:.\Generated_Source\PSoC4/CapSense.c **** * CapSense_widgetNumber[] - This array contains numbers of widgets for each sensor.
1273:.\Generated_Source\PSoC4/CapSense.c **** * CapSense_widgetResolution[] - Contains the widget resolution.
1274:.\Generated_Source\PSoC4/CapSense.c **** *
1275:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
1276:.\Generated_Source\PSoC4/CapSense.c **** *  None
1277:.\Generated_Source\PSoC4/CapSense.c **** *
1278:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1279:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_PreScan(uint32 sensor)
1280:.\Generated_Source\PSoC4/CapSense.c **** {
 1521              		.loc 1 1280 0
 1522              		.cfi_startproc
 1523 0000 90B5     		push	{r4, r7, lr}
 1524              		.cfi_def_cfa_offset 12
 1525              		.cfi_offset 4, -12
 1526              		.cfi_offset 7, -8
 1527              		.cfi_offset 14, -4
 1528 0002 89B0     		sub	sp, sp, #36
 1529              		.cfi_def_cfa_offset 48
 1530 0004 00AF     		add	r7, sp, #0
 1531              		.cfi_def_cfa_register 7
 1532 0006 7860     		str	r0, [r7, #4]
1281:.\Generated_Source\PSoC4/CapSense.c ****     uint8 widget;
1282:.\Generated_Source\PSoC4/CapSense.c ****     uint8 interruptState;
1283:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 newRegValue;
1284:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 counterResolution;
1285:.\Generated_Source\PSoC4/CapSense.c **** 	
1286:.\Generated_Source\PSoC4/CapSense.c **** 	#if(CapSense_PRS_OPTIONS == CapSense__PRS_AUTO)
1287:.\Generated_Source\PSoC4/CapSense.c **** 		uint8 senseClkDivMath;
1288:.\Generated_Source\PSoC4/CapSense.c **** 		uint8 sampleClkDivMath;
1289:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (CapSense_PRS_OPTIONS == CapSense__PRS_AUTO) */	
1290:.\Generated_Source\PSoC4/CapSense.c **** 	
1291:.\Generated_Source\PSoC4/CapSense.c **** 	#if ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1292:.\Generated_Source\PSoC4/CapSense.c **** 		 (0 != CapSense_IS_OVERSAMPLING_EN))
1293:.\Generated_Source\PSoC4/CapSense.c **** 		uint32 oversamplingFactor;
1294:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1295:.\Generated_Source\PSoC4/CapSense.c **** 	           (0 != CapSense_IS_OVERSAMPLING_EN)) */
1296:.\Generated_Source\PSoC4/CapSense.c **** 
1297:.\Generated_Source\PSoC4/CapSense.c ****     /* Define widget sensor belongs to */
1298:.\Generated_Source\PSoC4/CapSense.c ****     widget = CapSense_widgetNumber[sensor];
 1533              		.loc 1 1298 0
 1534 0008 3B1C     		mov	r3, r7
 1535 000a 1B33     		add	r3, r3, #27
 1536 000c 0022     		mov	r2, #0
 1537 000e 1A70     		strb	r2, [r3]
1299:.\Generated_Source\PSoC4/CapSense.c **** 
1300:.\Generated_Source\PSoC4/CapSense.c **** 	/* Recalculate Counter Resolution to MSB 16 bits */
1301:.\Generated_Source\PSoC4/CapSense.c **** 	counterResolution = CapSense_widgetResolution[widget];
 1538              		.loc 1 1301 0
 1539 0010 3B1C     		mov	r3, r7
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 51


 1540 0012 1B33     		add	r3, r3, #27
 1541 0014 1A78     		ldrb	r2, [r3]
 1542 0016 3A4B     		ldr	r3, .L85
 1543 0018 9200     		lsl	r2, r2, #2
 1544 001a D358     		ldr	r3, [r2, r3]
 1545 001c FB61     		str	r3, [r7, #28]
1302:.\Generated_Source\PSoC4/CapSense.c **** 	
1303:.\Generated_Source\PSoC4/CapSense.c **** 	#if ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1304:.\Generated_Source\PSoC4/CapSense.c **** 		 (0 != CapSense_IS_OVERSAMPLING_EN))
1305:.\Generated_Source\PSoC4/CapSense.c **** 	    oversamplingFactor = CapSense_GetBitValue(scanSpeedTbl, sensor);
 1546              		.loc 1 1305 0
 1547 001e 394A     		ldr	r2, .L85+4
 1548 0020 7B68     		ldr	r3, [r7, #4]
 1549 0022 101C     		mov	r0, r2
 1550 0024 191C     		mov	r1, r3
 1551 0026 FFF7FEFF 		bl	CapSense_GetBitValue
 1552 002a 031C     		mov	r3, r0
 1553 002c 7B61     		str	r3, [r7, #20]
1306:.\Generated_Source\PSoC4/CapSense.c **** 
1307:.\Generated_Source\PSoC4/CapSense.c **** 		if(counterResolution < CapSense_RESOLUTION_16_BITS)
 1554              		.loc 1 1307 0
 1555 002e FA69     		ldr	r2, [r7, #28]
 1556 0030 354B     		ldr	r3, .L85+8
 1557 0032 9A42     		cmp	r2, r3
 1558 0034 0AD8     		bhi	.L84
1308:.\Generated_Source\PSoC4/CapSense.c **** 		{
1309:.\Generated_Source\PSoC4/CapSense.c **** 			counterResolution <<= oversamplingFactor;
 1559              		.loc 1 1309 0
 1560 0036 7B69     		ldr	r3, [r7, #20]
 1561 0038 FA69     		ldr	r2, [r7, #28]
 1562 003a 111C     		mov	r1, r2
 1563 003c 9940     		lsl	r1, r1, r3
 1564 003e 0B1C     		mov	r3, r1
 1565 0040 FB61     		str	r3, [r7, #28]
1310:.\Generated_Source\PSoC4/CapSense.c **** 			counterResolution |= (uint32)(CapSense_RESOLUTION_8_BITS);
 1566              		.loc 1 1310 0
 1567 0042 FB69     		ldr	r3, [r7, #28]
 1568 0044 FF22     		mov	r2, #255
 1569 0046 1204     		lsl	r2, r2, #16
 1570 0048 1343     		orr	r3, r2
 1571 004a FB61     		str	r3, [r7, #28]
 1572              	.L84:
1311:.\Generated_Source\PSoC4/CapSense.c **** 		}
1312:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1313:.\Generated_Source\PSoC4/CapSense.c **** 	           (0 != CapSense_IS_OVERSAMPLING_EN)) */
1314:.\Generated_Source\PSoC4/CapSense.c **** 	
1315:.\Generated_Source\PSoC4/CapSense.c **** 	#if (0u != CapSense_IS_M0S8PERI_BLOCK)
1316:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SenseClk_Stop();
1317:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SampleClk_Stop();
1318:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (0u != CapSense_IS_M0S8PERI_BLOCK) */
1319:.\Generated_Source\PSoC4/CapSense.c **** 
1320:.\Generated_Source\PSoC4/CapSense.c **** 	#if (0u != CapSense_MULTIPLE_FREQUENCY_SET)
1321:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SampleClk_SetDividerValue((uint16)CapSense_sampleClkDividerVal[sensor]);
 1573              		.loc 1 1321 0
 1574 004c 2F4A     		ldr	r2, .L85+12
 1575 004e 7B68     		ldr	r3, [r7, #4]
 1576 0050 D318     		add	r3, r2, r3
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 52


 1577 0052 1B78     		ldrb	r3, [r3]
 1578 0054 013B     		sub	r3, r3, #1
 1579 0056 9BB2     		uxth	r3, r3
 1580 0058 181C     		mov	r0, r3
 1581 005a 0021     		mov	r1, #0
 1582 005c FFF7FEFF 		bl	CapSense_SampleClk_SetFractionalDividerRegister
1322:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SenseClk_SetDividerValue((uint16)CapSense_senseClkDividerVal[sensor]);
 1583              		.loc 1 1322 0
 1584 0060 2B4A     		ldr	r2, .L85+16
 1585 0062 7B68     		ldr	r3, [r7, #4]
 1586 0064 D318     		add	r3, r2, r3
 1587 0066 1B78     		ldrb	r3, [r3]
 1588 0068 013B     		sub	r3, r3, #1
 1589 006a 9BB2     		uxth	r3, r3
 1590 006c 181C     		mov	r0, r3
 1591 006e 0021     		mov	r1, #0
 1592 0070 FFF7FEFF 		bl	CapSense_SenseClk_SetFractionalDividerRegister
1323:.\Generated_Source\PSoC4/CapSense.c **** 	#else
1324:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SampleClk_SetDividerValue((uint16)CapSense_sampleClkDividerVal);
1325:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SenseClk_SetDividerValue((uint16)CapSense_senseClkDividerVal);
1326:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (0u != CapSense_MULTIPLE_FREQUENCY_SET) */
1327:.\Generated_Source\PSoC4/CapSense.c **** 
1328:.\Generated_Source\PSoC4/CapSense.c **** 	#if (0u != CapSense_IS_M0S8PERI_BLOCK)
1329:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SampleClk_Start();
1330:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_SenseClk_StartEx(CapSense_SampleClk__DIV_ID);
1331:.\Generated_Source\PSoC4/CapSense.c **** 		
1332:.\Generated_Source\PSoC4/CapSense.c **** 		#if(CapSense_PRS_OPTIONS == CapSense__PRS_NONE)
1333:.\Generated_Source\PSoC4/CapSense.c **** 			CyIntDisable(CapSense_ISR_NUMBER);
1334:.\Generated_Source\PSoC4/CapSense.c **** 			CapSense_CSD_CNT_REG = CapSense_ONE_CYCLE;
1335:.\Generated_Source\PSoC4/CapSense.c **** 			while(0u != (CapSense_CSD_CNT_REG & CapSense_RESOLUTION_16_BITS))
1336:.\Generated_Source\PSoC4/CapSense.c **** 			{
1337:.\Generated_Source\PSoC4/CapSense.c **** 			/* Wait until scanning is complete */ 
1338:.\Generated_Source\PSoC4/CapSense.c **** 			}
1339:.\Generated_Source\PSoC4/CapSense.c **** 			CapSense_CSD_INTR_REG = 1u;
1340:.\Generated_Source\PSoC4/CapSense.c **** 			CyIntClearPending(CapSense_ISR_NUMBER);
1341:.\Generated_Source\PSoC4/CapSense.c **** 			CyIntEnable(CapSense_ISR_NUMBER); 
1342:.\Generated_Source\PSoC4/CapSense.c **** 		#endif /* CapSense_PRS_OPTIONS == CapSense__PRS_NONE */
1343:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (0u != CapSense_IS_M0S8PERI_BLOCK) */
1344:.\Generated_Source\PSoC4/CapSense.c **** 
1345:.\Generated_Source\PSoC4/CapSense.c **** #if(CapSense_PRS_OPTIONS != CapSense__PRS_NONE)
1346:.\Generated_Source\PSoC4/CapSense.c **** 
1347:.\Generated_Source\PSoC4/CapSense.c **** 	#if(CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
1348:.\Generated_Source\PSoC4/CapSense.c **** 		if(CapSense_prescalersTuningDone != 0u)
1349:.\Generated_Source\PSoC4/CapSense.c **** 		{
1350:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
1351:.\Generated_Source\PSoC4/CapSense.c **** 			
1352:.\Generated_Source\PSoC4/CapSense.c **** 			CyIntDisable(CapSense_ISR_NUMBER);
1353:.\Generated_Source\PSoC4/CapSense.c **** 			
1354:.\Generated_Source\PSoC4/CapSense.c **** 			newRegValue = CapSense_CSD_CFG_REG;
1355:.\Generated_Source\PSoC4/CapSense.c **** 			newRegValue |= CapSense_CSD_CFG_PRS_SELECT;
1356:.\Generated_Source\PSoC4/CapSense.c **** 			
1357:.\Generated_Source\PSoC4/CapSense.c **** 			#if(CapSense_PRS_OPTIONS == CapSense__PRS_AUTO)
1358:.\Generated_Source\PSoC4/CapSense.c **** 				
1359:.\Generated_Source\PSoC4/CapSense.c **** 				newRegValue &= ~(CapSense_PRS_MODE_MASK);
1360:.\Generated_Source\PSoC4/CapSense.c **** 				
1361:.\Generated_Source\PSoC4/CapSense.c **** 				#if (0u != CapSense_MULTIPLE_FREQUENCY_SET)
1362:.\Generated_Source\PSoC4/CapSense.c **** 					senseClkDivMath = CapSense_senseClkDividerVal[sensor];
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 53


1363:.\Generated_Source\PSoC4/CapSense.c **** 					sampleClkDivMath = CapSense_sampleClkDividerVal[sensor];
1364:.\Generated_Source\PSoC4/CapSense.c **** 				#else
1365:.\Generated_Source\PSoC4/CapSense.c **** 					senseClkDivMath = CapSense_senseClkDividerVal;
1366:.\Generated_Source\PSoC4/CapSense.c **** 					sampleClkDivMath = CapSense_sampleClkDividerVal;
1367:.\Generated_Source\PSoC4/CapSense.c **** 				#endif /* ( CapSense_MULTIPLE_FREQUENCY_SET) */
1368:.\Generated_Source\PSoC4/CapSense.c **** 				
1369:.\Generated_Source\PSoC4/CapSense.c **** 				#if(0u == CapSense_IS_M0S8PERI_BLOCK)
1370:.\Generated_Source\PSoC4/CapSense.c **** 					senseClkDivMath *= sampleClkDivMath;
1371:.\Generated_Source\PSoC4/CapSense.c **** 				#endif /* (0u == CapSense_IS_M0S8PERI_BLOCK) */	
1372:.\Generated_Source\PSoC4/CapSense.c **** 				
1373:.\Generated_Source\PSoC4/CapSense.c **** 				if((senseClkDivMath * CapSense_RESOLUTION_12_BITS) <\
1374:.\Generated_Source\PSoC4/CapSense.c **** 				   (sampleClkDivMath * CapSense_widgetResolution[widget]))
1375:.\Generated_Source\PSoC4/CapSense.c **** 				{
1376:.\Generated_Source\PSoC4/CapSense.c **** 					newRegValue |= CapSense_CSD_PRS_12_BIT;
1377:.\Generated_Source\PSoC4/CapSense.c **** 				}
1378:.\Generated_Source\PSoC4/CapSense.c **** 			#endif /* (CapSense_PRS_OPTIONS == CapSense__PRS_AUTO) */
1379:.\Generated_Source\PSoC4/CapSense.c **** 			
1380:.\Generated_Source\PSoC4/CapSense.c **** 			CapSense_CSD_CFG_REG = newRegValue;
1381:.\Generated_Source\PSoC4/CapSense.c **** 			
1382:.\Generated_Source\PSoC4/CapSense.c **** 			CyIntEnable(CapSense_ISR_NUMBER);
1383:.\Generated_Source\PSoC4/CapSense.c **** 			
1384:.\Generated_Source\PSoC4/CapSense.c **** 	#if(CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)	
1385:.\Generated_Source\PSoC4/CapSense.c **** 		}
1386:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (CapSense_PRS_OPTIONS != CapSense__PRS_NONE) */
1387:.\Generated_Source\PSoC4/CapSense.c **** 
1388:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_PRS_OPTIONS == CapSense__PRS_NONE) */
1389:.\Generated_Source\PSoC4/CapSense.c **** 	
1390:.\Generated_Source\PSoC4/CapSense.c **** 	/* Set Idac Value */
1391:.\Generated_Source\PSoC4/CapSense.c **** 	CyIntDisable(CapSense_ISR_NUMBER);
 1593              		.loc 1 1391 0
 1594 0074 0F20     		mov	r0, #15
 1595 0076 FFF7FEFF 		bl	CyIntDisable
1392:.\Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CSD_IDAC_REG;
 1596              		.loc 1 1392 0
 1597 007a 264B     		ldr	r3, .L85+20
 1598 007c 1B68     		ldr	r3, [r3]
 1599 007e 3B61     		str	r3, [r7, #16]
1393:.\Generated_Source\PSoC4/CapSense.c ****  
1394:.\Generated_Source\PSoC4/CapSense.c **** #if (CapSense_IDAC_CNT == 1u)    
1395:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue &= ~(CapSense_CSD_IDAC1_DATA_MASK);
1396:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue |= CapSense_modulationIDAC[sensor];
1397:.\Generated_Source\PSoC4/CapSense.c **** #else
1398:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue &= ~(CapSense_CSD_IDAC1_DATA_MASK | CapSense_CSD_IDAC2_DATA_MASK);
 1600              		.loc 1 1398 0
 1601 0080 3A69     		ldr	r2, [r7, #16]
 1602 0082 254B     		ldr	r3, .L85+24
 1603 0084 1340     		and	r3, r2
 1604 0086 3B61     		str	r3, [r7, #16]
1399:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue |= (CapSense_modulationIDAC[sensor] | 
 1605              		.loc 1 1399 0
 1606 0088 244A     		ldr	r2, .L85+28
 1607 008a 7B68     		ldr	r3, [r7, #4]
 1608 008c D318     		add	r3, r2, r3
 1609 008e 1B78     		ldrb	r3, [r3]
 1610 0090 1A1C     		mov	r2, r3
1400:.\Generated_Source\PSoC4/CapSense.c **** 							(uint32)((uint32)CapSense_compensationIDAC[sensor] <<
 1611              		.loc 1 1400 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 54


 1612 0092 2349     		ldr	r1, .L85+32
 1613 0094 7B68     		ldr	r3, [r7, #4]
 1614 0096 CB18     		add	r3, r1, r3
 1615 0098 1B78     		ldrb	r3, [r3]
 1616 009a 1B04     		lsl	r3, r3, #16
1399:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue |= (CapSense_modulationIDAC[sensor] | 
 1617              		.loc 1 1399 0
 1618 009c 1343     		orr	r3, r2
 1619 009e 3A69     		ldr	r2, [r7, #16]
 1620 00a0 1343     		orr	r3, r2
 1621 00a2 3B61     		str	r3, [r7, #16]
1401:.\Generated_Source\PSoC4/CapSense.c **** 							CapSense_CSD_IDAC2_DATA_OFFSET));                               
1402:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_IDAC_CNT == 1u) */
1403:.\Generated_Source\PSoC4/CapSense.c **** 	
1404:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CSD_IDAC_REG = newRegValue;
 1622              		.loc 1 1404 0
 1623 00a4 1B4B     		ldr	r3, .L85+20
 1624 00a6 3A69     		ldr	r2, [r7, #16]
 1625 00a8 1A60     		str	r2, [r3]
1405:.\Generated_Source\PSoC4/CapSense.c **** 
1406:.\Generated_Source\PSoC4/CapSense.c **** #if(CapSense_CMOD_PREGARGE_OPTION == CapSense__CAPPRIOBUF)
1407:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue = CapSense_CMOD_CONNECTION_REG;
1408:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue &= ~(CapSense_CSD_CMOD_CONNECTION_MASK);
1409:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue |= CapSense_CSD_CMOD_TO_AMUXBUS_A;
1410:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CMOD_CONNECTION_REG = newRegValue;
1411:.\Generated_Source\PSoC4/CapSense.c **** 	
1412:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue = CapSense_CMOD_PORT_PC_REG;
1413:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue &= ~(CapSense_CSD_CMOD_PC_MASK);
1414:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue |= CapSense_CMOD_PC_HIGH_Z_MODE;
1415:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CMOD_PORT_PC_REG = newRegValue;
1416:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_CMOD_PREGARGE_OPTION == CapSense__CAPPRIOBUF) */
1417:.\Generated_Source\PSoC4/CapSense.c **** 
1418:.\Generated_Source\PSoC4/CapSense.c ****     /* Disconnect Vref Buffer from AMUX */
1419:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue = CapSense_CSD_CFG_REG;
 1626              		.loc 1 1419 0
 1627 00aa 1E4B     		ldr	r3, .L85+36
 1628 00ac 1B68     		ldr	r3, [r3]
 1629 00ae 3B61     		str	r3, [r7, #16]
1420:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue &= ~(CapSense_PRECHARGE_CONFIG_MASK);
 1630              		.loc 1 1420 0
 1631 00b0 3A69     		ldr	r2, [r7, #16]
 1632 00b2 1D4B     		ldr	r3, .L85+40
 1633 00b4 1340     		and	r3, r2
 1634 00b6 3B61     		str	r3, [r7, #16]
1421:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue |= CapSense_CTANK_PRECHARGE_CONFIG;
 1635              		.loc 1 1421 0
 1636 00b8 3B69     		ldr	r3, [r7, #16]
 1637 00ba 1C4A     		ldr	r2, .L85+44
 1638 00bc 1343     		orr	r3, r2
 1639 00be 3B61     		str	r3, [r7, #16]
1422:.\Generated_Source\PSoC4/CapSense.c **** 	
1423:.\Generated_Source\PSoC4/CapSense.c **** 	CyIntEnable(CapSense_ISR_NUMBER);
 1640              		.loc 1 1423 0
 1641 00c0 0F20     		mov	r0, #15
 1642 00c2 FFF7FEFF 		bl	CyIntEnable
1424:.\Generated_Source\PSoC4/CapSense.c **** 	
1425:.\Generated_Source\PSoC4/CapSense.c ****     /* Enable Sensor */
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 55


1426:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_EnableScanSlot(sensor);
 1643              		.loc 1 1426 0
 1644 00c6 7B68     		ldr	r3, [r7, #4]
 1645 00c8 181C     		mov	r0, r3
 1646 00ca FFF7FEFF 		bl	CapSense_EnableSensor
1427:.\Generated_Source\PSoC4/CapSense.c ****     
1428:.\Generated_Source\PSoC4/CapSense.c **** 	interruptState = CyEnterCriticalSection();
 1647              		.loc 1 1428 0
 1648 00ce 3C1C     		mov	r4, r7
 1649 00d0 0F34     		add	r4, r4, #15
 1650 00d2 FFF7FEFF 		bl	CyEnterCriticalSection
 1651 00d6 031C     		mov	r3, r0
 1652 00d8 2370     		strb	r3, [r4]
1429:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CSD_CFG_REG = newRegValue;
 1653              		.loc 1 1429 0
 1654 00da 124B     		ldr	r3, .L85+36
 1655 00dc 3A69     		ldr	r2, [r7, #16]
 1656 00de 1A60     		str	r2, [r3]
1430:.\Generated_Source\PSoC4/CapSense.c **** 	CyDelayCycles(CapSense_GLITCH_ELIMINATION_CYCLES);
 1657              		.loc 1 1430 0
 1658 00e0 6F20     		mov	r0, #111
 1659 00e2 FFF7FEFF 		bl	CyDelayCycles
1431:.\Generated_Source\PSoC4/CapSense.c **** 	
1432:.\Generated_Source\PSoC4/CapSense.c **** 	/* `#START CapSense_PreScan_Debug` */
1433:.\Generated_Source\PSoC4/CapSense.c **** 
1434:.\Generated_Source\PSoC4/CapSense.c **** 	/* `#END` */
1435:.\Generated_Source\PSoC4/CapSense.c **** 	
1436:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_CNT_REG = counterResolution;
 1660              		.loc 1 1436 0
 1661 00e6 124B     		ldr	r3, .L85+48
 1662 00e8 FA69     		ldr	r2, [r7, #28]
 1663 00ea 1A60     		str	r2, [r3]
1437:.\Generated_Source\PSoC4/CapSense.c ****     CyExitCriticalSection(interruptState);
 1664              		.loc 1 1437 0
 1665 00ec 3B1C     		mov	r3, r7
 1666 00ee 0F33     		add	r3, r3, #15
 1667 00f0 1B78     		ldrb	r3, [r3]
 1668 00f2 181C     		mov	r0, r3
 1669 00f4 FFF7FEFF 		bl	CyExitCriticalSection
1438:.\Generated_Source\PSoC4/CapSense.c **** }
 1670              		.loc 1 1438 0
 1671 00f8 BD46     		mov	sp, r7
 1672 00fa 09B0     		add	sp, sp, #36
 1673              		@ sp needed
 1674 00fc 90BD     		pop	{r4, r7, pc}
 1675              	.L86:
 1676 00fe C046     		.align	2
 1677              	.L85:
 1678 0100 00000000 		.word	CapSense_widgetResolution
 1679 0104 00000000 		.word	scanSpeedTbl
 1680 0108 FFFFFEFF 		.word	-65537
 1681 010c 00000000 		.word	CapSense_sampleClkDividerVal
 1682 0110 00000000 		.word	CapSense_senseClkDividerVal
 1683 0114 08000840 		.word	1074266120
 1684 0118 00FF80FF 		.word	-8323328
 1685 011c 00000000 		.word	CapSense_modulationIDAC
 1686 0120 00000000 		.word	CapSense_compensationIDAC
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 56


 1687 0124 04000840 		.word	1074266116
 1688 0128 FF1FDFFF 		.word	-2154497
 1689 012c 20002000 		.word	2097184
 1690 0130 0C000840 		.word	1074266124
 1691              		.cfi_endproc
 1692              	.LFE53:
 1693              		.size	CapSense_PreScan, .-CapSense_PreScan
 1694              		.section	.text.CapSense_PostScan,"ax",%progbits
 1695              		.align	2
 1696              		.global	CapSense_PostScan
 1697              		.code	16
 1698              		.thumb_func
 1699              		.type	CapSense_PostScan, %function
 1700              	CapSense_PostScan:
 1701              	.LFB54:
1439:.\Generated_Source\PSoC4/CapSense.c **** 
1440:.\Generated_Source\PSoC4/CapSense.c **** 
1441:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1442:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_PostScan
1443:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1444:.\Generated_Source\PSoC4/CapSense.c **** *
1445:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1446:.\Generated_Source\PSoC4/CapSense.c **** *  Stores the results of measurement in the CapSense_sensorRaw[] array,
1447:.\Generated_Source\PSoC4/CapSense.c **** *  sets the scanning sensor in the non-sampling state, turns off Idac(Current Source IDAC),
1448:.\Generated_Source\PSoC4/CapSense.c **** *  disconnects the IDAC(Sink mode), and applies Vref on AMUX.
1449:.\Generated_Source\PSoC4/CapSense.c **** *
1450:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1451:.\Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
1452:.\Generated_Source\PSoC4/CapSense.c **** *
1453:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1454:.\Generated_Source\PSoC4/CapSense.c **** *  None
1455:.\Generated_Source\PSoC4/CapSense.c **** *
1456:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1457:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1458:.\Generated_Source\PSoC4/CapSense.c **** *
1459:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
1460:.\Generated_Source\PSoC4/CapSense.c **** *  None
1461:.\Generated_Source\PSoC4/CapSense.c **** *
1462:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1463:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_PostScan(uint32 sensor)
1464:.\Generated_Source\PSoC4/CapSense.c **** {	
 1702              		.loc 1 1464 0
 1703              		.cfi_startproc
 1704 0000 80B5     		push	{r7, lr}
 1705              		.cfi_def_cfa_offset 8
 1706              		.cfi_offset 7, -8
 1707              		.cfi_offset 14, -4
 1708 0002 86B0     		sub	sp, sp, #24
 1709              		.cfi_def_cfa_offset 32
 1710 0004 00AF     		add	r7, sp, #0
 1711              		.cfi_def_cfa_register 7
 1712 0006 7860     		str	r0, [r7, #4]
1465:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 newRegValue;
1466:.\Generated_Source\PSoC4/CapSense.c **** #if ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1467:.\Generated_Source\PSoC4/CapSense.c **** 	 (0 != CapSense_IS_OVERSAMPLING_EN))
1468:.\Generated_Source\PSoC4/CapSense.c ****     uint32 oversamplingFactor;
1469:.\Generated_Source\PSoC4/CapSense.c ****     uint32 widget;
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 57


1470:.\Generated_Source\PSoC4/CapSense.c **** #endif /* ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1471:.\Generated_Source\PSoC4/CapSense.c **** 		   (0 != CapSense_IS_OVERSAMPLING_EN)) */	
1472:.\Generated_Source\PSoC4/CapSense.c **** 
1473:.\Generated_Source\PSoC4/CapSense.c **** 	/* `#START CapSense_PostScan_Debug` */
1474:.\Generated_Source\PSoC4/CapSense.c **** 
1475:.\Generated_Source\PSoC4/CapSense.c **** 	/* `#END` */
1476:.\Generated_Source\PSoC4/CapSense.c **** 
1477:.\Generated_Source\PSoC4/CapSense.c **** 
1478:.\Generated_Source\PSoC4/CapSense.c ****     /* Read SlotResult from Raw Counter */
1479:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_sensorRaw[sensor]  = (uint16)CapSense_CSD_CNT_REG;
 1713              		.loc 1 1479 0
 1714 0008 234B     		ldr	r3, .L89
 1715 000a 1B68     		ldr	r3, [r3]
 1716 000c 99B2     		uxth	r1, r3
 1717 000e 234B     		ldr	r3, .L89+4
 1718 0010 7A68     		ldr	r2, [r7, #4]
 1719 0012 5200     		lsl	r2, r2, #1
 1720 0014 D152     		strh	r1, [r2, r3]
1480:.\Generated_Source\PSoC4/CapSense.c **** 	
1481:.\Generated_Source\PSoC4/CapSense.c **** #if ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1482:.\Generated_Source\PSoC4/CapSense.c **** 	 (0 != CapSense_IS_OVERSAMPLING_EN))
1483:.\Generated_Source\PSoC4/CapSense.c **** 	widget = CapSense_widgetNumber[sensor];
 1721              		.loc 1 1483 0
 1722 0016 0023     		mov	r3, #0
 1723 0018 7B61     		str	r3, [r7, #20]
1484:.\Generated_Source\PSoC4/CapSense.c **** 	if(CapSense_widgetResolution[widget] < CapSense_RESOLUTION_16_BITS)
 1724              		.loc 1 1484 0
 1725 001a 214B     		ldr	r3, .L89+8
 1726 001c 7A69     		ldr	r2, [r7, #20]
 1727 001e 9200     		lsl	r2, r2, #2
 1728 0020 D258     		ldr	r2, [r2, r3]
 1729 0022 204B     		ldr	r3, .L89+12
 1730 0024 9A42     		cmp	r2, r3
 1731 0026 15D8     		bhi	.L88
1485:.\Generated_Source\PSoC4/CapSense.c **** 	{
1486:.\Generated_Source\PSoC4/CapSense.c **** 		oversamplingFactor = CapSense_GetBitValue(scanSpeedTbl, sensor);
 1732              		.loc 1 1486 0
 1733 0028 1F4A     		ldr	r2, .L89+16
 1734 002a 7B68     		ldr	r3, [r7, #4]
 1735 002c 101C     		mov	r0, r2
 1736 002e 191C     		mov	r1, r3
 1737 0030 FFF7FEFF 		bl	CapSense_GetBitValue
 1738 0034 031C     		mov	r3, r0
 1739 0036 3B61     		str	r3, [r7, #16]
1487:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_sensorRaw[sensor] >>= oversamplingFactor;
 1740              		.loc 1 1487 0
 1741 0038 184B     		ldr	r3, .L89+4
 1742 003a 7A68     		ldr	r2, [r7, #4]
 1743 003c 5200     		lsl	r2, r2, #1
 1744 003e D35A     		ldrh	r3, [r2, r3]
 1745 0040 1A1C     		mov	r2, r3
 1746 0042 3B69     		ldr	r3, [r7, #16]
 1747 0044 111C     		mov	r1, r2
 1748 0046 1941     		asr	r1, r1, r3
 1749 0048 0B1C     		mov	r3, r1
 1750 004a 99B2     		uxth	r1, r3
 1751 004c 134B     		ldr	r3, .L89+4
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 58


 1752 004e 7A68     		ldr	r2, [r7, #4]
 1753 0050 5200     		lsl	r2, r2, #1
 1754 0052 D152     		strh	r1, [r2, r3]
 1755              	.L88:
1488:.\Generated_Source\PSoC4/CapSense.c **** 	}
1489:.\Generated_Source\PSoC4/CapSense.c **** #endif /* ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1490:.\Generated_Source\PSoC4/CapSense.c **** 		   (0 != CapSense_IS_OVERSAMPLING_EN)) */
1491:.\Generated_Source\PSoC4/CapSense.c **** 
1492:.\Generated_Source\PSoC4/CapSense.c ****     /* Disable Sensor */
1493:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_DisableScanSlot(sensor);
 1756              		.loc 1 1493 0
 1757 0054 7B68     		ldr	r3, [r7, #4]
 1758 0056 181C     		mov	r0, r3
 1759 0058 FFF7FEFF 		bl	CapSense_DisableSensor
1494:.\Generated_Source\PSoC4/CapSense.c **** 
1495:.\Generated_Source\PSoC4/CapSense.c **** 	CyIntDisable(CapSense_ISR_NUMBER);
 1760              		.loc 1 1495 0
 1761 005c 0F20     		mov	r0, #15
 1762 005e FFF7FEFF 		bl	CyIntDisable
1496:.\Generated_Source\PSoC4/CapSense.c **** 	
1497:.\Generated_Source\PSoC4/CapSense.c **** #if(CapSense_CMOD_PREGARGE_OPTION == CapSense__CAPPRIOBUF)
1498:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue = CapSense_CMOD_CONNECTION_REG;
1499:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue &= ~(CapSense_CSD_CMOD_CONNECTION_MASK);
1500:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue |= CapSense_CSD_CMOD_TO_AMUXBUS_B;
1501:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CMOD_CONNECTION_REG = newRegValue;
1502:.\Generated_Source\PSoC4/CapSense.c **** 	
1503:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue = CapSense_CMOD_PORT_PC_REG;
1504:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue &= ~(CapSense_CSD_CMOD_PC_MASK);
1505:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue |= CapSense_CMOD_PC_STRONG_MODE;
1506:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CMOD_PORT_PC_REG = newRegValue;
1507:.\Generated_Source\PSoC4/CapSense.c **** 		
1508:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue = CapSense_CMOD_PORT_DR_REG;
1509:.\Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CMOD_DR_MASK);
1510:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue |= CapSense_CMOD_DR_CONFIG;
1511:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_CMOD_PORT_DR_REG = newRegValue;    
1512:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_CMOD_PREGARGE_OPTION == CapSense__CAPPRIOBUF) */
1513:.\Generated_Source\PSoC4/CapSense.c **** 	
1514:.\Generated_Source\PSoC4/CapSense.c **** 	/* Connect Vref Buffer to AMUX bus  */
1515:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue = CapSense_CSD_CFG_REG;
 1763              		.loc 1 1515 0
 1764 0062 124B     		ldr	r3, .L89+20
 1765 0064 1B68     		ldr	r3, [r3]
 1766 0066 FB60     		str	r3, [r7, #12]
1516:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue &= ~(CapSense_PRECHARGE_CONFIG_MASK);
 1767              		.loc 1 1516 0
 1768 0068 FA68     		ldr	r2, [r7, #12]
 1769 006a 114B     		ldr	r3, .L89+24
 1770 006c 1340     		and	r3, r2
 1771 006e FB60     		str	r3, [r7, #12]
1517:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue |= CapSense_CMOD_PRECHARGE_CONFIG;
 1772              		.loc 1 1517 0
 1773 0070 FB68     		ldr	r3, [r7, #12]
 1774 0072 A022     		mov	r2, #160
 1775 0074 1202     		lsl	r2, r2, #8
 1776 0076 1343     		orr	r3, r2
 1777 0078 FB60     		str	r3, [r7, #12]
1518:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CSD_CFG_REG = newRegValue;
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 59


 1778              		.loc 1 1518 0
 1779 007a 0C4B     		ldr	r3, .L89+20
 1780 007c FA68     		ldr	r2, [r7, #12]
 1781 007e 1A60     		str	r2, [r3]
1519:.\Generated_Source\PSoC4/CapSense.c **** 
1520:.\Generated_Source\PSoC4/CapSense.c **** 	/* Set Idac Value = 0 */
1521:.\Generated_Source\PSoC4/CapSense.c **** #if (CapSense_IDAC_CNT == 1u)   
1522:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CSD_IDAC_REG &= ~(CapSense_CSD_IDAC1_DATA_MASK);
1523:.\Generated_Source\PSoC4/CapSense.c **** #else
1524:.\Generated_Source\PSoC4/CapSense.c **** 	CapSense_CSD_IDAC_REG &= ~(CapSense_CSD_IDAC1_DATA_MASK | CapSense_CSD_IDAC2_DATA_MASK);          
 1782              		.loc 1 1524 0
 1783 0080 0C4B     		ldr	r3, .L89+28
 1784 0082 0C4A     		ldr	r2, .L89+28
 1785 0084 1168     		ldr	r1, [r2]
 1786 0086 0C4A     		ldr	r2, .L89+32
 1787 0088 0A40     		and	r2, r1
 1788 008a 1A60     		str	r2, [r3]
1525:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_IDAC_CNT == 1u) */
1526:.\Generated_Source\PSoC4/CapSense.c **** 
1527:.\Generated_Source\PSoC4/CapSense.c **** 	CyIntEnable(CapSense_ISR_NUMBER);
 1789              		.loc 1 1527 0
 1790 008c 0F20     		mov	r0, #15
 1791 008e FFF7FEFF 		bl	CyIntEnable
1528:.\Generated_Source\PSoC4/CapSense.c **** }
 1792              		.loc 1 1528 0
 1793 0092 BD46     		mov	sp, r7
 1794 0094 06B0     		add	sp, sp, #24
 1795              		@ sp needed
 1796 0096 80BD     		pop	{r7, pc}
 1797              	.L90:
 1798              		.align	2
 1799              	.L89:
 1800 0098 0C000840 		.word	1074266124
 1801 009c 00000000 		.word	CapSense_sensorRaw
 1802 00a0 00000000 		.word	CapSense_widgetResolution
 1803 00a4 FFFFFEFF 		.word	-65537
 1804 00a8 00000000 		.word	scanSpeedTbl
 1805 00ac 04000840 		.word	1074266116
 1806 00b0 FF1FDFFF 		.word	-2154497
 1807 00b4 08000840 		.word	1074266120
 1808 00b8 00FF80FF 		.word	-8323328
 1809              		.cfi_endproc
 1810              	.LFE54:
 1811              		.size	CapSense_PostScan, .-CapSense_PostScan
 1812              		.section	.text.CapSense_EnableShieldElectrode,"ax",%progbits
 1813              		.align	2
 1814              		.global	CapSense_EnableShieldElectrode
 1815              		.code	16
 1816              		.thumb_func
 1817              		.type	CapSense_EnableShieldElectrode, %function
 1818              	CapSense_EnableShieldElectrode:
 1819              	.LFB55:
1529:.\Generated_Source\PSoC4/CapSense.c **** 
1530:.\Generated_Source\PSoC4/CapSense.c **** 
1531:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1532:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_EnableShieldElectrode
1533:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 60


1534:.\Generated_Source\PSoC4/CapSense.c **** *
1535:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1536:.\Generated_Source\PSoC4/CapSense.c **** *  This API enables or disables the shield electrode on a specified port pin.
1537:.\Generated_Source\PSoC4/CapSense.c **** *
1538:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1539:.\Generated_Source\PSoC4/CapSense.c **** *  portNumber: contains the shield electrode port number (0, 1, 2).
1540:.\Generated_Source\PSoC4/CapSense.c **** *  pinNumber: contains the shield electrode pin number (0, 1, 2, ... , 7).
1541:.\Generated_Source\PSoC4/CapSense.c **** *
1542:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1543:.\Generated_Source\PSoC4/CapSense.c **** *  None
1544:.\Generated_Source\PSoC4/CapSense.c **** *
1545:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1546:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtCfgTbl[] - Contains pointers to the port config registers for each port.
1547:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtSelTbl[] - Contains pointers to the HSIOM registers for each port.
1548:.\Generated_Source\PSoC4/CapSense.c **** *
1549:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
1550:.\Generated_Source\PSoC4/CapSense.c **** *  None
1551:.\Generated_Source\PSoC4/CapSense.c **** *
1552:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1553:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_EnableShieldElectrode(uint32 pinNumber, uint32 portNumber)
1554:.\Generated_Source\PSoC4/CapSense.c **** {
 1820              		.loc 1 1554 0
 1821              		.cfi_startproc
 1822 0000 90B5     		push	{r4, r7, lr}
 1823              		.cfi_def_cfa_offset 12
 1824              		.cfi_offset 4, -12
 1825              		.cfi_offset 7, -8
 1826              		.cfi_offset 14, -4
 1827 0002 85B0     		sub	sp, sp, #20
 1828              		.cfi_def_cfa_offset 32
 1829 0004 00AF     		add	r7, sp, #0
 1830              		.cfi_def_cfa_register 7
 1831 0006 7860     		str	r0, [r7, #4]
 1832 0008 3960     		str	r1, [r7]
1555:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 newRegValue;
1556:.\Generated_Source\PSoC4/CapSense.c **** 	
1557:.\Generated_Source\PSoC4/CapSense.c **** 	*CapSense_prtCfgTbl[portNumber] &= ~(CapSense_CSD_PIN_MODE_MASK << (pinNumber * CapSense_PC_PIN_CF
 1833              		.loc 1 1557 0
 1834 000a 1B4B     		ldr	r3, .L92
 1835 000c 3A68     		ldr	r2, [r7]
 1836 000e 9200     		lsl	r2, r2, #2
 1837 0010 D258     		ldr	r2, [r2, r3]
 1838 0012 194B     		ldr	r3, .L92
 1839 0014 3968     		ldr	r1, [r7]
 1840 0016 8900     		lsl	r1, r1, #2
 1841 0018 CB58     		ldr	r3, [r1, r3]
 1842 001a 1868     		ldr	r0, [r3]
 1843 001c 7968     		ldr	r1, [r7, #4]
 1844 001e 0B1C     		mov	r3, r1
 1845 0020 5B00     		lsl	r3, r3, #1
 1846 0022 5B18     		add	r3, r3, r1
 1847 0024 0721     		mov	r1, #7
 1848 0026 0C1C     		mov	r4, r1
 1849 0028 9C40     		lsl	r4, r4, r3
 1850 002a 231C     		mov	r3, r4
 1851 002c DB43     		mvn	r3, r3
 1852 002e 0340     		and	r3, r0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 61


 1853 0030 1360     		str	r3, [r2]
1558:.\Generated_Source\PSoC4/CapSense.c **** 	newRegValue = *CapSense_prtSelTbl[portNumber];
 1854              		.loc 1 1558 0
 1855 0032 124B     		ldr	r3, .L92+4
 1856 0034 3A68     		ldr	r2, [r7]
 1857 0036 9200     		lsl	r2, r2, #2
 1858 0038 D358     		ldr	r3, [r2, r3]
 1859 003a 1B68     		ldr	r3, [r3]
 1860 003c FB60     		str	r3, [r7, #12]
1559:.\Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CSD_HSIOM_MASK << (pinNumber * CapSense_HSIOM_PIN_CFG_SIZE));
 1861              		.loc 1 1559 0
 1862 003e 7B68     		ldr	r3, [r7, #4]
 1863 0040 9B00     		lsl	r3, r3, #2
 1864 0042 0F22     		mov	r2, #15
 1865 0044 111C     		mov	r1, r2
 1866 0046 9940     		lsl	r1, r1, r3
 1867 0048 0B1C     		mov	r3, r1
 1868 004a DA43     		mvn	r2, r3
 1869 004c FB68     		ldr	r3, [r7, #12]
 1870 004e 1340     		and	r3, r2
 1871 0050 FB60     		str	r3, [r7, #12]
1560:.\Generated_Source\PSoC4/CapSense.c ****     newRegValue |= (CapSense_CSD_SHIELD_PORT_MODE << (pinNumber * CapSense_HSIOM_PIN_CFG_SIZE));
 1872              		.loc 1 1560 0
 1873 0052 7B68     		ldr	r3, [r7, #4]
 1874 0054 9B00     		lsl	r3, r3, #2
 1875 0056 0522     		mov	r2, #5
 1876 0058 141C     		mov	r4, r2
 1877 005a 9C40     		lsl	r4, r4, r3
 1878 005c 231C     		mov	r3, r4
 1879 005e FA68     		ldr	r2, [r7, #12]
 1880 0060 1343     		orr	r3, r2
 1881 0062 FB60     		str	r3, [r7, #12]
1561:.\Generated_Source\PSoC4/CapSense.c ****     *CapSense_prtSelTbl[portNumber] = newRegValue;
 1882              		.loc 1 1561 0
 1883 0064 054B     		ldr	r3, .L92+4
 1884 0066 3A68     		ldr	r2, [r7]
 1885 0068 9200     		lsl	r2, r2, #2
 1886 006a D358     		ldr	r3, [r2, r3]
 1887 006c FA68     		ldr	r2, [r7, #12]
 1888 006e 1A60     		str	r2, [r3]
1562:.\Generated_Source\PSoC4/CapSense.c **** }
 1889              		.loc 1 1562 0
 1890 0070 BD46     		mov	sp, r7
 1891 0072 05B0     		add	sp, sp, #20
 1892              		@ sp needed
 1893 0074 90BD     		pop	{r4, r7, pc}
 1894              	.L93:
 1895 0076 C046     		.align	2
 1896              	.L92:
 1897 0078 00000000 		.word	CapSense_prtCfgTbl
 1898 007c 00000000 		.word	CapSense_prtSelTbl
 1899              		.cfi_endproc
 1900              	.LFE55:
 1901              		.size	CapSense_EnableShieldElectrode, .-CapSense_EnableShieldElectrode
 1902              		.section	.text.CapSense_SetShieldDelay,"ax",%progbits
 1903              		.align	2
 1904              		.global	CapSense_SetShieldDelay
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 62


 1905              		.code	16
 1906              		.thumb_func
 1907              		.type	CapSense_SetShieldDelay, %function
 1908              	CapSense_SetShieldDelay:
 1909              	.LFB56:
1563:.\Generated_Source\PSoC4/CapSense.c **** 
1564:.\Generated_Source\PSoC4/CapSense.c **** 
1565:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1566:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_SetShieldDelay
1567:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1568:.\Generated_Source\PSoC4/CapSense.c **** *
1569:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1570:.\Generated_Source\PSoC4/CapSense.c **** *  This API sets a shield delay.
1571:.\Generated_Source\PSoC4/CapSense.c **** *
1572:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1573:.\Generated_Source\PSoC4/CapSense.c **** *  delay:  shield delay value:
1574:.\Generated_Source\PSoC4/CapSense.c **** *                               0 - no delay
1575:.\Generated_Source\PSoC4/CapSense.c **** *                               1 - 1 cycle delay
1576:.\Generated_Source\PSoC4/CapSense.c **** *                               2 - 2 cycles delay
1577:.\Generated_Source\PSoC4/CapSense.c **** *
1578:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1579:.\Generated_Source\PSoC4/CapSense.c **** *  None
1580:.\Generated_Source\PSoC4/CapSense.c **** *
1581:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1582:.\Generated_Source\PSoC4/CapSense.c **** *  None
1583:.\Generated_Source\PSoC4/CapSense.c **** *
1584:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
1585:.\Generated_Source\PSoC4/CapSense.c **** *  None
1586:.\Generated_Source\PSoC4/CapSense.c **** *
1587:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1588:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_SetShieldDelay(uint32 delay)
1589:.\Generated_Source\PSoC4/CapSense.c **** {
 1910              		.loc 1 1589 0
 1911              		.cfi_startproc
 1912 0000 80B5     		push	{r7, lr}
 1913              		.cfi_def_cfa_offset 8
 1914              		.cfi_offset 7, -8
 1915              		.cfi_offset 14, -4
 1916 0002 84B0     		sub	sp, sp, #16
 1917              		.cfi_def_cfa_offset 24
 1918 0004 00AF     		add	r7, sp, #0
 1919              		.cfi_def_cfa_register 7
 1920 0006 7860     		str	r0, [r7, #4]
1590:.\Generated_Source\PSoC4/CapSense.c ****     uint32 newRegValue;
1591:.\Generated_Source\PSoC4/CapSense.c ****     
1592:.\Generated_Source\PSoC4/CapSense.c ****     delay &= 0x03u;
 1921              		.loc 1 1592 0
 1922 0008 7A68     		ldr	r2, [r7, #4]
 1923 000a 0323     		mov	r3, #3
 1924 000c 1340     		and	r3, r2
 1925 000e 7B60     		str	r3, [r7, #4]
1593:.\Generated_Source\PSoC4/CapSense.c ****     
1594:.\Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CSD_CFG_REG;
 1926              		.loc 1 1594 0
 1927 0010 064B     		ldr	r3, .L95
 1928 0012 1B68     		ldr	r3, [r3]
 1929 0014 FB60     		str	r3, [r7, #12]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 63


1595:.\Generated_Source\PSoC4/CapSense.c ****     newRegValue &= (uint32)(~(uint32)CapSense_SHIELD_DELAY);    
1596:.\Generated_Source\PSoC4/CapSense.c ****     newRegValue |= (delay << CapSense_CSD_CFG_SHIELD_DELAY_POS);    
 1930              		.loc 1 1596 0
 1931 0016 7B68     		ldr	r3, [r7, #4]
 1932 0018 5B02     		lsl	r3, r3, #9
 1933 001a FA68     		ldr	r2, [r7, #12]
 1934 001c 1343     		orr	r3, r2
 1935 001e FB60     		str	r3, [r7, #12]
1597:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_CFG_REG = newRegValue;
 1936              		.loc 1 1597 0
 1937 0020 024B     		ldr	r3, .L95
 1938 0022 FA68     		ldr	r2, [r7, #12]
 1939 0024 1A60     		str	r2, [r3]
1598:.\Generated_Source\PSoC4/CapSense.c **** }
 1940              		.loc 1 1598 0
 1941 0026 BD46     		mov	sp, r7
 1942 0028 04B0     		add	sp, sp, #16
 1943              		@ sp needed
 1944 002a 80BD     		pop	{r7, pc}
 1945              	.L96:
 1946              		.align	2
 1947              	.L95:
 1948 002c 04000840 		.word	1074266116
 1949              		.cfi_endproc
 1950              	.LFE56:
 1951              		.size	CapSense_SetShieldDelay, .-CapSense_SetShieldDelay
 1952              		.section	.text.CapSense_ReadCurrentScanningSensor,"ax",%progbits
 1953              		.align	2
 1954              		.global	CapSense_ReadCurrentScanningSensor
 1955              		.code	16
 1956              		.thumb_func
 1957              		.type	CapSense_ReadCurrentScanningSensor, %function
 1958              	CapSense_ReadCurrentScanningSensor:
 1959              	.LFB57:
1599:.\Generated_Source\PSoC4/CapSense.c **** 
1600:.\Generated_Source\PSoC4/CapSense.c **** 
1601:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1602:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ReadCurrentScanningSensor
1603:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1604:.\Generated_Source\PSoC4/CapSense.c **** *
1605:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1606:.\Generated_Source\PSoC4/CapSense.c **** *  This API returns scanning sensor number when sensor scan is in progress. 
1607:.\Generated_Source\PSoC4/CapSense.c **** *  When sensor scan is completed the API returns 
1608:.\Generated_Source\PSoC4/CapSense.c **** *  $INSTANCE_NAME`_NOT_SENSOR (0xFFFFFFFF) (when no sensor is scanned).
1609:.\Generated_Source\PSoC4/CapSense.c **** *
1610:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1611:.\Generated_Source\PSoC4/CapSense.c **** *	None.
1612:.\Generated_Source\PSoC4/CapSense.c **** *
1613:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1614:.\Generated_Source\PSoC4/CapSense.c **** *  Returns Sensor number if sensor is being scanned and 
1615:.\Generated_Source\PSoC4/CapSense.c **** *  $INSTANCE_NAME`_NOT_SENSOR (0xFFFFFFFF) if scanning is complete.
1616:.\Generated_Source\PSoC4/CapSense.c **** *
1617:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1618:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorIndex - the sensor number is being scanned.
1619:.\Generated_Source\PSoC4/CapSense.c **** *
1620:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects: 
1621:.\Generated_Source\PSoC4/CapSense.c **** *  None
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 64


1622:.\Generated_Source\PSoC4/CapSense.c **** *
1623:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1624:.\Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_ReadCurrentScanningSensor(void)
1625:.\Generated_Source\PSoC4/CapSense.c **** {
 1960              		.loc 1 1625 0
 1961              		.cfi_startproc
 1962 0000 80B5     		push	{r7, lr}
 1963              		.cfi_def_cfa_offset 8
 1964              		.cfi_offset 7, -8
 1965              		.cfi_offset 14, -4
 1966 0002 00AF     		add	r7, sp, #0
 1967              		.cfi_def_cfa_register 7
1626:.\Generated_Source\PSoC4/CapSense.c ****     return ((uint32)(( 0u != (CapSense_csdStatusVar & CapSense_SW_STS_BUSY)) ? 
 1968              		.loc 1 1626 0
 1969 0004 074B     		ldr	r3, .L101
 1970 0006 1B78     		ldrb	r3, [r3]
 1971 0008 DBB2     		uxtb	r3, r3
 1972 000a 1A1C     		mov	r2, r3
 1973 000c 0123     		mov	r3, #1
 1974 000e 1340     		and	r3, r2
 1975 0010 03D0     		beq	.L98
 1976              		.loc 1 1626 0 is_stmt 0 discriminator 1
 1977 0012 054B     		ldr	r3, .L101+4
 1978 0014 1B78     		ldrb	r3, [r3]
 1979 0016 DBB2     		uxtb	r3, r3
 1980 0018 01E0     		b	.L99
 1981              	.L98:
 1982              		.loc 1 1626 0 discriminator 2
 1983 001a 0123     		mov	r3, #1
 1984 001c 5B42     		neg	r3, r3
 1985              	.L99:
1627:.\Generated_Source\PSoC4/CapSense.c ****                      CapSense_sensorIndex : CapSense_NOT_SENSOR));
1628:.\Generated_Source\PSoC4/CapSense.c **** }
 1986              		.loc 1 1628 0 is_stmt 1 discriminator 3
 1987 001e 181C     		mov	r0, r3
 1988 0020 BD46     		mov	sp, r7
 1989              		@ sp needed
 1990 0022 80BD     		pop	{r7, pc}
 1991              	.L102:
 1992              		.align	2
 1993              	.L101:
 1994 0024 00000000 		.word	CapSense_csdStatusVar
 1995 0028 00000000 		.word	CapSense_sensorIndex
 1996              		.cfi_endproc
 1997              	.LFE57:
 1998              		.size	CapSense_ReadCurrentScanningSensor, .-CapSense_ReadCurrentScanningSensor
 1999              		.section	.text.CapSense_GetBitValue,"ax",%progbits
 2000              		.align	2
 2001              		.global	CapSense_GetBitValue
 2002              		.code	16
 2003              		.thumb_func
 2004              		.type	CapSense_GetBitValue, %function
 2005              	CapSense_GetBitValue:
 2006              	.LFB58:
1629:.\Generated_Source\PSoC4/CapSense.c **** 
1630:.\Generated_Source\PSoC4/CapSense.c **** 
1631:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 65


1632:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetBitValue
1633:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1634:.\Generated_Source\PSoC4/CapSense.c **** *
1635:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1636:.\Generated_Source\PSoC4/CapSense.c **** *  The API returns a bit status of the bit in the table array which contains the masks.
1637:.\Generated_Source\PSoC4/CapSense.c **** * 
1638:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1639:.\Generated_Source\PSoC4/CapSense.c **** *  table[] - array with bit masks.
1640:.\Generated_Source\PSoC4/CapSense.c **** *  position - position of bit in the table[] array.
1641:.\Generated_Source\PSoC4/CapSense.c **** *
1642:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1643:.\Generated_Source\PSoC4/CapSense.c **** *  0 - bit is not set; 1 - bit is set.
1644:.\Generated_Source\PSoC4/CapSense.c **** *
1645:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1646:.\Generated_Source\PSoC4/CapSense.c **** *  None
1647:.\Generated_Source\PSoC4/CapSense.c **** *
1648:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1649:.\Generated_Source\PSoC4/CapSense.c **** *  None
1650:.\Generated_Source\PSoC4/CapSense.c **** *
1651:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1652:.\Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetBitValue(const uint8 table[], uint32 position)
1653:.\Generated_Source\PSoC4/CapSense.c **** {
 2007              		.loc 1 1653 0
 2008              		.cfi_startproc
 2009 0000 80B5     		push	{r7, lr}
 2010              		.cfi_def_cfa_offset 8
 2011              		.cfi_offset 7, -8
 2012              		.cfi_offset 14, -4
 2013 0002 84B0     		sub	sp, sp, #16
 2014              		.cfi_def_cfa_offset 24
 2015 0004 00AF     		add	r7, sp, #0
 2016              		.cfi_def_cfa_register 7
 2017 0006 7860     		str	r0, [r7, #4]
 2018 0008 3960     		str	r1, [r7]
1654:.\Generated_Source\PSoC4/CapSense.c ****     uint32 offset;
1655:.\Generated_Source\PSoC4/CapSense.c **** 	uint8 enMask;
1656:.\Generated_Source\PSoC4/CapSense.c **** 	
1657:.\Generated_Source\PSoC4/CapSense.c **** 	/* position is divided by 8 to calculate the element of the 
1658:.\Generated_Source\PSoC4/CapSense.c **** 	   table[] array that contains the enable bit 
1659:.\Generated_Source\PSoC4/CapSense.c **** 	   for an appropriate sensor.
1660:.\Generated_Source\PSoC4/CapSense.c **** 	*/
1661:.\Generated_Source\PSoC4/CapSense.c **** 	offset = (position >> 3u);
 2019              		.loc 1 1661 0
 2020 000a 3B68     		ldr	r3, [r7]
 2021 000c DB08     		lsr	r3, r3, #3
 2022 000e FB60     		str	r3, [r7, #12]
1662:.\Generated_Source\PSoC4/CapSense.c **** 	
1663:.\Generated_Source\PSoC4/CapSense.c **** 	/* The enMask calculation for the appropriate sensor. Operation (position & 0x07u) 
1664:.\Generated_Source\PSoC4/CapSense.c **** 	   intends to calculate the enable bit offset for the 8-bit element of the 
1665:.\Generated_Source\PSoC4/CapSense.c **** 	   table[] array.
1666:.\Generated_Source\PSoC4/CapSense.c **** 	*/
1667:.\Generated_Source\PSoC4/CapSense.c **** 	enMask = 0x01u << (position & 0x07u);
 2023              		.loc 1 1667 0
 2024 0010 3A68     		ldr	r2, [r7]
 2025 0012 0723     		mov	r3, #7
 2026 0014 1340     		and	r3, r2
 2027 0016 0122     		mov	r2, #1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 66


 2028 0018 9A40     		lsl	r2, r2, r3
 2029 001a 3B1C     		mov	r3, r7
 2030 001c 0B33     		add	r3, r3, #11
 2031 001e 1A70     		strb	r2, [r3]
1668:.\Generated_Source\PSoC4/CapSense.c ****     
1669:.\Generated_Source\PSoC4/CapSense.c ****     return ((0u !=(table[offset] & enMask)) ? 1Lu : 0Lu);
 2032              		.loc 1 1669 0
 2033 0020 7A68     		ldr	r2, [r7, #4]
 2034 0022 FB68     		ldr	r3, [r7, #12]
 2035 0024 D318     		add	r3, r2, r3
 2036 0026 1B78     		ldrb	r3, [r3]
 2037 0028 3A1C     		mov	r2, r7
 2038 002a 0B32     		add	r2, r2, #11
 2039 002c 1278     		ldrb	r2, [r2]
 2040 002e 1340     		and	r3, r2
 2041 0030 DBB2     		uxtb	r3, r3
 2042 0032 002B     		cmp	r3, #0
 2043 0034 01D0     		beq	.L104
 2044              		.loc 1 1669 0 is_stmt 0 discriminator 1
 2045 0036 0123     		mov	r3, #1
 2046 0038 00E0     		b	.L105
 2047              	.L104:
 2048              		.loc 1 1669 0 discriminator 2
 2049 003a 0023     		mov	r3, #0
 2050              	.L105:
1670:.\Generated_Source\PSoC4/CapSense.c **** }
 2051              		.loc 1 1670 0 is_stmt 1 discriminator 3
 2052 003c 181C     		mov	r0, r3
 2053 003e BD46     		mov	sp, r7
 2054 0040 04B0     		add	sp, sp, #16
 2055              		@ sp needed
 2056 0042 80BD     		pop	{r7, pc}
 2057              		.cfi_endproc
 2058              	.LFE58:
 2059              		.size	CapSense_GetBitValue, .-CapSense_GetBitValue
 2060              		.section	.text.CapSense_SetBitValue,"ax",%progbits
 2061              		.align	2
 2062              		.global	CapSense_SetBitValue
 2063              		.code	16
 2064              		.thumb_func
 2065              		.type	CapSense_SetBitValue, %function
 2066              	CapSense_SetBitValue:
 2067              	.LFB59:
1671:.\Generated_Source\PSoC4/CapSense.c **** 
1672:.\Generated_Source\PSoC4/CapSense.c **** 
1673:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1674:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_SetBitValue
1675:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1676:.\Generated_Source\PSoC4/CapSense.c **** *
1677:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1678:.\Generated_Source\PSoC4/CapSense.c **** *  The API sets a bit status of the bit in the table array which contains masks.
1679:.\Generated_Source\PSoC4/CapSense.c **** * 
1680:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1681:.\Generated_Source\PSoC4/CapSense.c **** *  table[] - array with bit masks.
1682:.\Generated_Source\PSoC4/CapSense.c **** *  position - position of bit in the table[] array.
1683:.\Generated_Source\PSoC4/CapSense.c **** *  value: 0 - bit is not set; 1 - bit is set.
1684:.\Generated_Source\PSoC4/CapSense.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 67


1685:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1686:.\Generated_Source\PSoC4/CapSense.c **** *  None
1687:.\Generated_Source\PSoC4/CapSense.c **** *
1688:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1689:.\Generated_Source\PSoC4/CapSense.c **** *  None
1690:.\Generated_Source\PSoC4/CapSense.c **** *
1691:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1692:.\Generated_Source\PSoC4/CapSense.c **** *  None
1693:.\Generated_Source\PSoC4/CapSense.c **** *
1694:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1695:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_SetBitValue(uint8 table[], uint32 position, uint32 value)
1696:.\Generated_Source\PSoC4/CapSense.c **** {
 2068              		.loc 1 1696 0
 2069              		.cfi_startproc
 2070 0000 80B5     		push	{r7, lr}
 2071              		.cfi_def_cfa_offset 8
 2072              		.cfi_offset 7, -8
 2073              		.cfi_offset 14, -4
 2074 0002 86B0     		sub	sp, sp, #24
 2075              		.cfi_def_cfa_offset 32
 2076 0004 00AF     		add	r7, sp, #0
 2077              		.cfi_def_cfa_register 7
 2078 0006 F860     		str	r0, [r7, #12]
 2079 0008 B960     		str	r1, [r7, #8]
 2080 000a 7A60     		str	r2, [r7, #4]
1697:.\Generated_Source\PSoC4/CapSense.c ****     uint32 offset;
1698:.\Generated_Source\PSoC4/CapSense.c **** 	uint8 enMask;
1699:.\Generated_Source\PSoC4/CapSense.c **** 	
1700:.\Generated_Source\PSoC4/CapSense.c **** 	/* position is divided by 8 to calculate the element of the 
1701:.\Generated_Source\PSoC4/CapSense.c **** 	   table[] array that contains the enable bit 
1702:.\Generated_Source\PSoC4/CapSense.c **** 	   for an appropriate sensor.
1703:.\Generated_Source\PSoC4/CapSense.c **** 	*/
1704:.\Generated_Source\PSoC4/CapSense.c **** 	offset = (position >> 3u);
 2081              		.loc 1 1704 0
 2082 000c BB68     		ldr	r3, [r7, #8]
 2083 000e DB08     		lsr	r3, r3, #3
 2084 0010 7B61     		str	r3, [r7, #20]
1705:.\Generated_Source\PSoC4/CapSense.c **** 	
1706:.\Generated_Source\PSoC4/CapSense.c **** 	/* The enMask calculation for the appropriate sensor. Operation (position & 0x07u) 
1707:.\Generated_Source\PSoC4/CapSense.c **** 	   intends to calculate the enable bit offset for the 8-bit element of the 
1708:.\Generated_Source\PSoC4/CapSense.c **** 	   table[] array.
1709:.\Generated_Source\PSoC4/CapSense.c **** 	*/
1710:.\Generated_Source\PSoC4/CapSense.c **** 	enMask = 0x01u << (position & 0x07u);
 2085              		.loc 1 1710 0
 2086 0012 BA68     		ldr	r2, [r7, #8]
 2087 0014 0723     		mov	r3, #7
 2088 0016 1340     		and	r3, r2
 2089 0018 0122     		mov	r2, #1
 2090 001a 9A40     		lsl	r2, r2, r3
 2091 001c 3B1C     		mov	r3, r7
 2092 001e 1333     		add	r3, r3, #19
 2093 0020 1A70     		strb	r2, [r3]
1711:.\Generated_Source\PSoC4/CapSense.c **** 	
1712:.\Generated_Source\PSoC4/CapSense.c **** 	if(0u != value)
 2094              		.loc 1 1712 0
 2095 0022 7B68     		ldr	r3, [r7, #4]
 2096 0024 002B     		cmp	r3, #0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 68


 2097 0026 0DD0     		beq	.L108
1713:.\Generated_Source\PSoC4/CapSense.c **** 	{
1714:.\Generated_Source\PSoC4/CapSense.c **** 		table[offset] |= enMask;
 2098              		.loc 1 1714 0
 2099 0028 FA68     		ldr	r2, [r7, #12]
 2100 002a 7B69     		ldr	r3, [r7, #20]
 2101 002c D318     		add	r3, r2, r3
 2102 002e F968     		ldr	r1, [r7, #12]
 2103 0030 7A69     		ldr	r2, [r7, #20]
 2104 0032 8A18     		add	r2, r1, r2
 2105 0034 1178     		ldrb	r1, [r2]
 2106 0036 3A1C     		mov	r2, r7
 2107 0038 1332     		add	r2, r2, #19
 2108 003a 1278     		ldrb	r2, [r2]
 2109 003c 0A43     		orr	r2, r1
 2110 003e D2B2     		uxtb	r2, r2
 2111 0040 1A70     		strb	r2, [r3]
 2112 0042 0EE0     		b	.L107
 2113              	.L108:
1715:.\Generated_Source\PSoC4/CapSense.c **** 	}
1716:.\Generated_Source\PSoC4/CapSense.c **** 	else
1717:.\Generated_Source\PSoC4/CapSense.c **** 	{
1718:.\Generated_Source\PSoC4/CapSense.c **** 		table[offset] &= (uint8)~(enMask);
 2114              		.loc 1 1718 0
 2115 0044 FA68     		ldr	r2, [r7, #12]
 2116 0046 7B69     		ldr	r3, [r7, #20]
 2117 0048 D318     		add	r3, r2, r3
 2118 004a F968     		ldr	r1, [r7, #12]
 2119 004c 7A69     		ldr	r2, [r7, #20]
 2120 004e 8A18     		add	r2, r1, r2
 2121 0050 1278     		ldrb	r2, [r2]
 2122 0052 391C     		mov	r1, r7
 2123 0054 1331     		add	r1, r1, #19
 2124 0056 0978     		ldrb	r1, [r1]
 2125 0058 C943     		mvn	r1, r1
 2126 005a C9B2     		uxtb	r1, r1
 2127 005c 0A40     		and	r2, r1
 2128 005e D2B2     		uxtb	r2, r2
 2129 0060 1A70     		strb	r2, [r3]
 2130              	.L107:
1719:.\Generated_Source\PSoC4/CapSense.c **** 	}
1720:.\Generated_Source\PSoC4/CapSense.c **** }
 2131              		.loc 1 1720 0
 2132 0062 BD46     		mov	sp, r7
 2133 0064 06B0     		add	sp, sp, #24
 2134              		@ sp needed
 2135 0066 80BD     		pop	{r7, pc}
 2136              		.cfi_endproc
 2137              	.LFE59:
 2138              		.size	CapSense_SetBitValue, .-CapSense_SetBitValue
 2139              		.section	.text.CapSense_GetSenseClkDivider,"ax",%progbits
 2140              		.align	2
 2141              		.global	CapSense_GetSenseClkDivider
 2142              		.code	16
 2143              		.thumb_func
 2144              		.type	CapSense_GetSenseClkDivider, %function
 2145              	CapSense_GetSenseClkDivider:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 69


 2146              	.LFB60:
1721:.\Generated_Source\PSoC4/CapSense.c **** 
1722:.\Generated_Source\PSoC4/CapSense.c **** 
1723:.\Generated_Source\PSoC4/CapSense.c **** 
1724:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1725:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetSenseClkDivider
1726:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1727:.\Generated_Source\PSoC4/CapSense.c **** *
1728:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1729:.\Generated_Source\PSoC4/CapSense.c **** *  This API returns a value of the sense clock divider for the  sensor.
1730:.\Generated_Source\PSoC4/CapSense.c **** *
1731:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1732:.\Generated_Source\PSoC4/CapSense.c **** *  sensor: sensor index. The index value can be 
1733:.\Generated_Source\PSoC4/CapSense.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
1734:.\Generated_Source\PSoC4/CapSense.c **** *
1735:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1736:.\Generated_Source\PSoC4/CapSense.c **** *  This API returns the sense clock divider of the sensor. 
1737:.\Generated_Source\PSoC4/CapSense.c **** *
1738:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1739:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_senseClkDividerVal[] - stores the sense clock divider values.
1740:.\Generated_Source\PSoC4/CapSense.c **** * 
1741:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1742:.\Generated_Source\PSoC4/CapSense.c **** *  None
1743:.\Generated_Source\PSoC4/CapSense.c **** *
1744:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1745:.\Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetSenseClkDivider(uint32 sensor)
1746:.\Generated_Source\PSoC4/CapSense.c **** {
 2147              		.loc 1 1746 0
 2148              		.cfi_startproc
 2149 0000 80B5     		push	{r7, lr}
 2150              		.cfi_def_cfa_offset 8
 2151              		.cfi_offset 7, -8
 2152              		.cfi_offset 14, -4
 2153 0002 82B0     		sub	sp, sp, #8
 2154              		.cfi_def_cfa_offset 16
 2155 0004 00AF     		add	r7, sp, #0
 2156              		.cfi_def_cfa_register 7
 2157 0006 7860     		str	r0, [r7, #4]
1747:.\Generated_Source\PSoC4/CapSense.c **** 	#if(0u != CapSense_MULTIPLE_FREQUENCY_SET)
1748:.\Generated_Source\PSoC4/CapSense.c **** 		return((uint32)CapSense_senseClkDividerVal[sensor]);
 2158              		.loc 1 1748 0
 2159 0008 034A     		ldr	r2, .L112
 2160 000a 7B68     		ldr	r3, [r7, #4]
 2161 000c D318     		add	r3, r2, r3
 2162 000e 1B78     		ldrb	r3, [r3]
1749:.\Generated_Source\PSoC4/CapSense.c **** 	#else
1750:.\Generated_Source\PSoC4/CapSense.c **** 		return((uint32)CapSense_senseClkDividerVal);
1751:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (0u != CapSense_MULTIPLE_FREQUENCY_SET) */
1752:.\Generated_Source\PSoC4/CapSense.c **** }
 2163              		.loc 1 1752 0
 2164 0010 181C     		mov	r0, r3
 2165 0012 BD46     		mov	sp, r7
 2166 0014 02B0     		add	sp, sp, #8
 2167              		@ sp needed
 2168 0016 80BD     		pop	{r7, pc}
 2169              	.L113:
 2170              		.align	2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 70


 2171              	.L112:
 2172 0018 00000000 		.word	CapSense_senseClkDividerVal
 2173              		.cfi_endproc
 2174              	.LFE60:
 2175              		.size	CapSense_GetSenseClkDivider, .-CapSense_GetSenseClkDivider
 2176              		.section	.text.CapSense_SetSenseClkDivider,"ax",%progbits
 2177              		.align	2
 2178              		.global	CapSense_SetSenseClkDivider
 2179              		.code	16
 2180              		.thumb_func
 2181              		.type	CapSense_SetSenseClkDivider, %function
 2182              	CapSense_SetSenseClkDivider:
 2183              	.LFB61:
1753:.\Generated_Source\PSoC4/CapSense.c **** 
1754:.\Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
1755:.\Generated_Source\PSoC4/CapSense.c **** 	/*******************************************************************************
1756:.\Generated_Source\PSoC4/CapSense.c **** 	* Function Name: CapSense_SetSenseClkDivider
1757:.\Generated_Source\PSoC4/CapSense.c **** 	********************************************************************************
1758:.\Generated_Source\PSoC4/CapSense.c **** 	*
1759:.\Generated_Source\PSoC4/CapSense.c **** 	* Summary:
1760:.\Generated_Source\PSoC4/CapSense.c **** 	*  This API sets a value of the sense clock divider for the  sensor. 
1761:.\Generated_Source\PSoC4/CapSense.c **** 	*
1762:.\Generated_Source\PSoC4/CapSense.c **** 	* Parameters:
1763:.\Generated_Source\PSoC4/CapSense.c **** 	*  sensor:  Sensor index.
1764:.\Generated_Source\PSoC4/CapSense.c **** 	*  senseClk: represents the sense clock value.
1765:.\Generated_Source\PSoC4/CapSense.c **** 	*
1766:.\Generated_Source\PSoC4/CapSense.c **** 	* Return:
1767:.\Generated_Source\PSoC4/CapSense.c **** 	*  None.
1768:.\Generated_Source\PSoC4/CapSense.c **** 	*
1769:.\Generated_Source\PSoC4/CapSense.c **** 	* Global Variables:
1770:.\Generated_Source\PSoC4/CapSense.c **** 	*  CapSense_senseClkDividerVal[] - stores the sense clock divider values.
1771:.\Generated_Source\PSoC4/CapSense.c **** 	* 
1772:.\Generated_Source\PSoC4/CapSense.c **** 	* Side Effects:
1773:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
1774:.\Generated_Source\PSoC4/CapSense.c **** 	*
1775:.\Generated_Source\PSoC4/CapSense.c **** 	*******************************************************************************/
1776:.\Generated_Source\PSoC4/CapSense.c **** 	void CapSense_SetSenseClkDivider(uint32 sensor, uint32 senseClk)
1777:.\Generated_Source\PSoC4/CapSense.c **** 	{
 2184              		.loc 1 1777 0
 2185              		.cfi_startproc
 2186 0000 80B5     		push	{r7, lr}
 2187              		.cfi_def_cfa_offset 8
 2188              		.cfi_offset 7, -8
 2189              		.cfi_offset 14, -4
 2190 0002 82B0     		sub	sp, sp, #8
 2191              		.cfi_def_cfa_offset 16
 2192 0004 00AF     		add	r7, sp, #0
 2193              		.cfi_def_cfa_register 7
 2194 0006 7860     		str	r0, [r7, #4]
 2195 0008 3960     		str	r1, [r7]
1778:.\Generated_Source\PSoC4/CapSense.c **** 		#if(0u != CapSense_MULTIPLE_FREQUENCY_SET)
1779:.\Generated_Source\PSoC4/CapSense.c **** 			CapSense_senseClkDividerVal[sensor] = (uint8)senseClk;
 2196              		.loc 1 1779 0
 2197 000a 3B68     		ldr	r3, [r7]
 2198 000c DAB2     		uxtb	r2, r3
 2199 000e 0349     		ldr	r1, .L115
 2200 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 71


 2201 0012 CB18     		add	r3, r1, r3
 2202 0014 1A70     		strb	r2, [r3]
1780:.\Generated_Source\PSoC4/CapSense.c **** 		#else
1781:.\Generated_Source\PSoC4/CapSense.c **** 			CapSense_senseClkDividerVal = (uint8)senseClk;
1782:.\Generated_Source\PSoC4/CapSense.c **** 		#endif /* (0u != CapSense_MULTIPLE_FREQUENCY_SET) */
1783:.\Generated_Source\PSoC4/CapSense.c **** 	}
 2203              		.loc 1 1783 0
 2204 0016 BD46     		mov	sp, r7
 2205 0018 02B0     		add	sp, sp, #8
 2206              		@ sp needed
 2207 001a 80BD     		pop	{r7, pc}
 2208              	.L116:
 2209              		.align	2
 2210              	.L115:
 2211 001c 00000000 		.word	CapSense_senseClkDividerVal
 2212              		.cfi_endproc
 2213              	.LFE61:
 2214              		.size	CapSense_SetSenseClkDivider, .-CapSense_SetSenseClkDivider
 2215              		.section	.text.CapSense_GetModulatorClkDivider,"ax",%progbits
 2216              		.align	2
 2217              		.global	CapSense_GetModulatorClkDivider
 2218              		.code	16
 2219              		.thumb_func
 2220              		.type	CapSense_GetModulatorClkDivider, %function
 2221              	CapSense_GetModulatorClkDivider:
 2222              	.LFB62:
1784:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1785:.\Generated_Source\PSoC4/CapSense.c **** 
1786:.\Generated_Source\PSoC4/CapSense.c **** 
1787:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1788:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetModulatorClkDivider
1789:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1790:.\Generated_Source\PSoC4/CapSense.c **** *
1791:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1792:.\Generated_Source\PSoC4/CapSense.c **** *  This API returns a value of the modulator sample clock divider for the  sensor.
1793:.\Generated_Source\PSoC4/CapSense.c **** *
1794:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1795:.\Generated_Source\PSoC4/CapSense.c **** *  sensor: sensor index. The value of index can be 
1796:.\Generated_Source\PSoC4/CapSense.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
1797:.\Generated_Source\PSoC4/CapSense.c **** *
1798:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1799:.\Generated_Source\PSoC4/CapSense.c **** *  This API returns the modulator sample clock divider for the  sensor.
1800:.\Generated_Source\PSoC4/CapSense.c **** *
1801:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1802:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_sampleClkDividerVal[] - stores the modulator sample divider values.
1803:.\Generated_Source\PSoC4/CapSense.c **** * 
1804:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1805:.\Generated_Source\PSoC4/CapSense.c **** *  None
1806:.\Generated_Source\PSoC4/CapSense.c **** *
1807:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1808:.\Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetModulatorClkDivider(uint32 sensor)
1809:.\Generated_Source\PSoC4/CapSense.c **** {
 2223              		.loc 1 1809 0
 2224              		.cfi_startproc
 2225 0000 80B5     		push	{r7, lr}
 2226              		.cfi_def_cfa_offset 8
 2227              		.cfi_offset 7, -8
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 72


 2228              		.cfi_offset 14, -4
 2229 0002 82B0     		sub	sp, sp, #8
 2230              		.cfi_def_cfa_offset 16
 2231 0004 00AF     		add	r7, sp, #0
 2232              		.cfi_def_cfa_register 7
 2233 0006 7860     		str	r0, [r7, #4]
1810:.\Generated_Source\PSoC4/CapSense.c **** 	#if(0u != CapSense_MULTIPLE_FREQUENCY_SET)
1811:.\Generated_Source\PSoC4/CapSense.c **** 		return((uint32)CapSense_sampleClkDividerVal[sensor]);
 2234              		.loc 1 1811 0
 2235 0008 034A     		ldr	r2, .L119
 2236 000a 7B68     		ldr	r3, [r7, #4]
 2237 000c D318     		add	r3, r2, r3
 2238 000e 1B78     		ldrb	r3, [r3]
1812:.\Generated_Source\PSoC4/CapSense.c **** 	#else
1813:.\Generated_Source\PSoC4/CapSense.c **** 		return((uint32)CapSense_sampleClkDividerVal);
1814:.\Generated_Source\PSoC4/CapSense.c **** 	#endif /* (0u != CapSense_MULTIPLE_FREQUENCY_SET) */
1815:.\Generated_Source\PSoC4/CapSense.c **** }
 2239              		.loc 1 1815 0
 2240 0010 181C     		mov	r0, r3
 2241 0012 BD46     		mov	sp, r7
 2242 0014 02B0     		add	sp, sp, #8
 2243              		@ sp needed
 2244 0016 80BD     		pop	{r7, pc}
 2245              	.L120:
 2246              		.align	2
 2247              	.L119:
 2248 0018 00000000 		.word	CapSense_sampleClkDividerVal
 2249              		.cfi_endproc
 2250              	.LFE62:
 2251              		.size	CapSense_GetModulatorClkDivider, .-CapSense_GetModulatorClkDivider
 2252              		.section	.text.CapSense_SetModulatorClkDivider,"ax",%progbits
 2253              		.align	2
 2254              		.global	CapSense_SetModulatorClkDivider
 2255              		.code	16
 2256              		.thumb_func
 2257              		.type	CapSense_SetModulatorClkDivider, %function
 2258              	CapSense_SetModulatorClkDivider:
 2259              	.LFB63:
1816:.\Generated_Source\PSoC4/CapSense.c **** 
1817:.\Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
1818:.\Generated_Source\PSoC4/CapSense.c **** 	/*******************************************************************************
1819:.\Generated_Source\PSoC4/CapSense.c **** 	* Function Name: CapSense_SetModulatorClkDivider
1820:.\Generated_Source\PSoC4/CapSense.c **** 	********************************************************************************
1821:.\Generated_Source\PSoC4/CapSense.c **** 	*
1822:.\Generated_Source\PSoC4/CapSense.c **** 	* Summary:
1823:.\Generated_Source\PSoC4/CapSense.c **** 	*  This API sets a value of the modulator sample clock divider for the  sensor.
1824:.\Generated_Source\PSoC4/CapSense.c **** 	*
1825:.\Generated_Source\PSoC4/CapSense.c **** 	* Parameters:
1826:.\Generated_Source\PSoC4/CapSense.c **** 	*  sensor:  Sensor index.
1827:.\Generated_Source\PSoC4/CapSense.c **** 	*  modulatorClk: represents the modulator sample clock value.
1828:.\Generated_Source\PSoC4/CapSense.c **** 	*
1829:.\Generated_Source\PSoC4/CapSense.c **** 	* Return:
1830:.\Generated_Source\PSoC4/CapSense.c **** 	*  None.
1831:.\Generated_Source\PSoC4/CapSense.c **** 	*
1832:.\Generated_Source\PSoC4/CapSense.c **** 	* Global Variables:
1833:.\Generated_Source\PSoC4/CapSense.c **** 	*  CapSense_sampleClkDividerVal[] - stores the modulator sample divider values.
1834:.\Generated_Source\PSoC4/CapSense.c **** 	* 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 73


1835:.\Generated_Source\PSoC4/CapSense.c **** 	* Side Effects:
1836:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
1837:.\Generated_Source\PSoC4/CapSense.c **** 	*
1838:.\Generated_Source\PSoC4/CapSense.c **** 	*******************************************************************************/
1839:.\Generated_Source\PSoC4/CapSense.c **** 	void CapSense_SetModulatorClkDivider(uint32 sensor, uint32 modulatorClk)
1840:.\Generated_Source\PSoC4/CapSense.c **** 	{
 2260              		.loc 1 1840 0
 2261              		.cfi_startproc
 2262 0000 80B5     		push	{r7, lr}
 2263              		.cfi_def_cfa_offset 8
 2264              		.cfi_offset 7, -8
 2265              		.cfi_offset 14, -4
 2266 0002 82B0     		sub	sp, sp, #8
 2267              		.cfi_def_cfa_offset 16
 2268 0004 00AF     		add	r7, sp, #0
 2269              		.cfi_def_cfa_register 7
 2270 0006 7860     		str	r0, [r7, #4]
 2271 0008 3960     		str	r1, [r7]
1841:.\Generated_Source\PSoC4/CapSense.c **** 		#if(0u != CapSense_MULTIPLE_FREQUENCY_SET)
1842:.\Generated_Source\PSoC4/CapSense.c **** 			CapSense_sampleClkDividerVal[sensor] = (uint8)modulatorClk;
 2272              		.loc 1 1842 0
 2273 000a 3B68     		ldr	r3, [r7]
 2274 000c DAB2     		uxtb	r2, r3
 2275 000e 0349     		ldr	r1, .L122
 2276 0010 7B68     		ldr	r3, [r7, #4]
 2277 0012 CB18     		add	r3, r1, r3
 2278 0014 1A70     		strb	r2, [r3]
1843:.\Generated_Source\PSoC4/CapSense.c **** 		#else
1844:.\Generated_Source\PSoC4/CapSense.c **** 			CapSense_sampleClkDividerVal = (uint8)modulatorClk;
1845:.\Generated_Source\PSoC4/CapSense.c **** 		#endif /* (0u != CapSense_MULTIPLE_FREQUENCY_SET) */
1846:.\Generated_Source\PSoC4/CapSense.c **** 	}
 2279              		.loc 1 1846 0
 2280 0016 BD46     		mov	sp, r7
 2281 0018 02B0     		add	sp, sp, #8
 2282              		@ sp needed
 2283 001a 80BD     		pop	{r7, pc}
 2284              	.L123:
 2285              		.align	2
 2286              	.L122:
 2287 001c 00000000 		.word	CapSense_sampleClkDividerVal
 2288              		.cfi_endproc
 2289              	.LFE63:
 2290              		.size	CapSense_SetModulatorClkDivider, .-CapSense_SetModulatorClkDivider
 2291              		.section	.text.CapSense_GetModulationIDAC,"ax",%progbits
 2292              		.align	2
 2293              		.global	CapSense_GetModulationIDAC
 2294              		.code	16
 2295              		.thumb_func
 2296              		.type	CapSense_GetModulationIDAC, %function
 2297              	CapSense_GetModulationIDAC:
 2298              	.LFB64:
1847:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1848:.\Generated_Source\PSoC4/CapSense.c **** 
1849:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1850:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetModulationIDAC
1851:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1852:.\Generated_Source\PSoC4/CapSense.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 74


1853:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1854:.\Generated_Source\PSoC4/CapSense.c **** *  This API returns a value of the modulation IDAC for the  sensor.
1855:.\Generated_Source\PSoC4/CapSense.c **** *
1856:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1857:.\Generated_Source\PSoC4/CapSense.c **** *  sensor: sensor index. The index value can be 
1858:.\Generated_Source\PSoC4/CapSense.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
1859:.\Generated_Source\PSoC4/CapSense.c **** *
1860:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1861:.\Generated_Source\PSoC4/CapSense.c **** *  This API returns the modulation IDAC of the sensor. 
1862:.\Generated_Source\PSoC4/CapSense.c **** *
1863:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1864:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_modulationIDAC[] - stores modulation IDAC values.
1865:.\Generated_Source\PSoC4/CapSense.c **** * 
1866:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1867:.\Generated_Source\PSoC4/CapSense.c **** *  None
1868:.\Generated_Source\PSoC4/CapSense.c **** *
1869:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1870:.\Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetModulationIDAC(uint32 sensor)
1871:.\Generated_Source\PSoC4/CapSense.c **** {
 2299              		.loc 1 1871 0
 2300              		.cfi_startproc
 2301 0000 80B5     		push	{r7, lr}
 2302              		.cfi_def_cfa_offset 8
 2303              		.cfi_offset 7, -8
 2304              		.cfi_offset 14, -4
 2305 0002 82B0     		sub	sp, sp, #8
 2306              		.cfi_def_cfa_offset 16
 2307 0004 00AF     		add	r7, sp, #0
 2308              		.cfi_def_cfa_register 7
 2309 0006 7860     		str	r0, [r7, #4]
1872:.\Generated_Source\PSoC4/CapSense.c **** 		return((uint32)CapSense_modulationIDAC[sensor]);
 2310              		.loc 1 1872 0
 2311 0008 034A     		ldr	r2, .L126
 2312 000a 7B68     		ldr	r3, [r7, #4]
 2313 000c D318     		add	r3, r2, r3
 2314 000e 1B78     		ldrb	r3, [r3]
1873:.\Generated_Source\PSoC4/CapSense.c **** }
 2315              		.loc 1 1873 0
 2316 0010 181C     		mov	r0, r3
 2317 0012 BD46     		mov	sp, r7
 2318 0014 02B0     		add	sp, sp, #8
 2319              		@ sp needed
 2320 0016 80BD     		pop	{r7, pc}
 2321              	.L127:
 2322              		.align	2
 2323              	.L126:
 2324 0018 00000000 		.word	CapSense_modulationIDAC
 2325              		.cfi_endproc
 2326              	.LFE64:
 2327              		.size	CapSense_GetModulationIDAC, .-CapSense_GetModulationIDAC
 2328              		.section	.text.CapSense_SetModulationIDAC,"ax",%progbits
 2329              		.align	2
 2330              		.global	CapSense_SetModulationIDAC
 2331              		.code	16
 2332              		.thumb_func
 2333              		.type	CapSense_SetModulationIDAC, %function
 2334              	CapSense_SetModulationIDAC:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 75


 2335              	.LFB65:
1874:.\Generated_Source\PSoC4/CapSense.c **** 
1875:.\Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
1876:.\Generated_Source\PSoC4/CapSense.c **** 	/*******************************************************************************
1877:.\Generated_Source\PSoC4/CapSense.c **** 	* Function Name: CapSense_SetModulationIDAC
1878:.\Generated_Source\PSoC4/CapSense.c **** 	********************************************************************************
1879:.\Generated_Source\PSoC4/CapSense.c **** 	*
1880:.\Generated_Source\PSoC4/CapSense.c **** 	* Summary:
1881:.\Generated_Source\PSoC4/CapSense.c **** 	*  This API sets a value of the modulation IDAC for the  sensor.
1882:.\Generated_Source\PSoC4/CapSense.c **** 	*
1883:.\Generated_Source\PSoC4/CapSense.c **** 	* Parameters:
1884:.\Generated_Source\PSoC4/CapSense.c **** 	*  sensor:  Sensor index.
1885:.\Generated_Source\PSoC4/CapSense.c **** 	*  compIdacValue: represents the modulation IDAC data register value.
1886:.\Generated_Source\PSoC4/CapSense.c **** 	*
1887:.\Generated_Source\PSoC4/CapSense.c **** 	* Return:
1888:.\Generated_Source\PSoC4/CapSense.c **** 	*  None.
1889:.\Generated_Source\PSoC4/CapSense.c **** 	*
1890:.\Generated_Source\PSoC4/CapSense.c **** 	* Global Variables:
1891:.\Generated_Source\PSoC4/CapSense.c **** 	*  CapSense_modulationIDAC[] - array with modulation IDAC values
1892:.\Generated_Source\PSoC4/CapSense.c **** 	* 
1893:.\Generated_Source\PSoC4/CapSense.c **** 	* Side Effects:
1894:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
1895:.\Generated_Source\PSoC4/CapSense.c **** 	*
1896:.\Generated_Source\PSoC4/CapSense.c **** 	*******************************************************************************/
1897:.\Generated_Source\PSoC4/CapSense.c **** 	void CapSense_SetModulationIDAC(uint32 sensor, uint32 modIdacValue)
1898:.\Generated_Source\PSoC4/CapSense.c **** 	{
 2336              		.loc 1 1898 0
 2337              		.cfi_startproc
 2338 0000 80B5     		push	{r7, lr}
 2339              		.cfi_def_cfa_offset 8
 2340              		.cfi_offset 7, -8
 2341              		.cfi_offset 14, -4
 2342 0002 82B0     		sub	sp, sp, #8
 2343              		.cfi_def_cfa_offset 16
 2344 0004 00AF     		add	r7, sp, #0
 2345              		.cfi_def_cfa_register 7
 2346 0006 7860     		str	r0, [r7, #4]
 2347 0008 3960     		str	r1, [r7]
1899:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_modulationIDAC[sensor] = (uint8)modIdacValue;
 2348              		.loc 1 1899 0
 2349 000a 3B68     		ldr	r3, [r7]
 2350 000c DAB2     		uxtb	r2, r3
 2351 000e 0349     		ldr	r1, .L129
 2352 0010 7B68     		ldr	r3, [r7, #4]
 2353 0012 CB18     		add	r3, r1, r3
 2354 0014 1A70     		strb	r2, [r3]
1900:.\Generated_Source\PSoC4/CapSense.c **** 	}
 2355              		.loc 1 1900 0
 2356 0016 BD46     		mov	sp, r7
 2357 0018 02B0     		add	sp, sp, #8
 2358              		@ sp needed
 2359 001a 80BD     		pop	{r7, pc}
 2360              	.L130:
 2361              		.align	2
 2362              	.L129:
 2363 001c 00000000 		.word	CapSense_modulationIDAC
 2364              		.cfi_endproc
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 76


 2365              	.LFE65:
 2366              		.size	CapSense_SetModulationIDAC, .-CapSense_SetModulationIDAC
 2367              		.section	.text.CapSense_GetCompensationIDAC,"ax",%progbits
 2368              		.align	2
 2369              		.global	CapSense_GetCompensationIDAC
 2370              		.code	16
 2371              		.thumb_func
 2372              		.type	CapSense_GetCompensationIDAC, %function
 2373              	CapSense_GetCompensationIDAC:
 2374              	.LFB66:
1901:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1902:.\Generated_Source\PSoC4/CapSense.c **** 
1903:.\Generated_Source\PSoC4/CapSense.c **** 
1904:.\Generated_Source\PSoC4/CapSense.c **** #if(CapSense_IDAC_CNT > 1u)
1905:.\Generated_Source\PSoC4/CapSense.c **** 	/*******************************************************************************
1906:.\Generated_Source\PSoC4/CapSense.c **** 	* Function Name: CapSense_GetCompensationIDAC
1907:.\Generated_Source\PSoC4/CapSense.c **** 	********************************************************************************
1908:.\Generated_Source\PSoC4/CapSense.c **** 	*
1909:.\Generated_Source\PSoC4/CapSense.c **** 	* Summary:
1910:.\Generated_Source\PSoC4/CapSense.c **** 	*  This API returns a value of the compensation IDAC for the  sensor.
1911:.\Generated_Source\PSoC4/CapSense.c **** 	*
1912:.\Generated_Source\PSoC4/CapSense.c **** 	* Parameters:
1913:.\Generated_Source\PSoC4/CapSense.c **** 	*  sensor: sensor index. The index value can be 
1914:.\Generated_Source\PSoC4/CapSense.c **** 	*  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
1915:.\Generated_Source\PSoC4/CapSense.c **** 	*
1916:.\Generated_Source\PSoC4/CapSense.c **** 	* Return:
1917:.\Generated_Source\PSoC4/CapSense.c **** 	*  This API returns the compensation IDAC of the sensor. 
1918:.\Generated_Source\PSoC4/CapSense.c **** 	*
1919:.\Generated_Source\PSoC4/CapSense.c **** 	* Global Variables:
1920:.\Generated_Source\PSoC4/CapSense.c **** 	*  CapSense_compensationIDAC[] - stores the compensation IDAC values.
1921:.\Generated_Source\PSoC4/CapSense.c **** 	* 
1922:.\Generated_Source\PSoC4/CapSense.c **** 	* Side Effects:
1923:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
1924:.\Generated_Source\PSoC4/CapSense.c **** 	*
1925:.\Generated_Source\PSoC4/CapSense.c **** 	*******************************************************************************/
1926:.\Generated_Source\PSoC4/CapSense.c **** 	uint32 CapSense_GetCompensationIDAC(uint32 sensor)
1927:.\Generated_Source\PSoC4/CapSense.c **** 	{
 2375              		.loc 1 1927 0
 2376              		.cfi_startproc
 2377 0000 80B5     		push	{r7, lr}
 2378              		.cfi_def_cfa_offset 8
 2379              		.cfi_offset 7, -8
 2380              		.cfi_offset 14, -4
 2381 0002 82B0     		sub	sp, sp, #8
 2382              		.cfi_def_cfa_offset 16
 2383 0004 00AF     		add	r7, sp, #0
 2384              		.cfi_def_cfa_register 7
 2385 0006 7860     		str	r0, [r7, #4]
1928:.\Generated_Source\PSoC4/CapSense.c **** 		return((uint32)CapSense_compensationIDAC[sensor]);
 2386              		.loc 1 1928 0
 2387 0008 034A     		ldr	r2, .L133
 2388 000a 7B68     		ldr	r3, [r7, #4]
 2389 000c D318     		add	r3, r2, r3
 2390 000e 1B78     		ldrb	r3, [r3]
1929:.\Generated_Source\PSoC4/CapSense.c **** 	}
 2391              		.loc 1 1929 0
 2392 0010 181C     		mov	r0, r3
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 77


 2393 0012 BD46     		mov	sp, r7
 2394 0014 02B0     		add	sp, sp, #8
 2395              		@ sp needed
 2396 0016 80BD     		pop	{r7, pc}
 2397              	.L134:
 2398              		.align	2
 2399              	.L133:
 2400 0018 00000000 		.word	CapSense_compensationIDAC
 2401              		.cfi_endproc
 2402              	.LFE66:
 2403              		.size	CapSense_GetCompensationIDAC, .-CapSense_GetCompensationIDAC
 2404              		.section	.text.CapSense_SetCompensationIDAC,"ax",%progbits
 2405              		.align	2
 2406              		.global	CapSense_SetCompensationIDAC
 2407              		.code	16
 2408              		.thumb_func
 2409              		.type	CapSense_SetCompensationIDAC, %function
 2410              	CapSense_SetCompensationIDAC:
 2411              	.LFB67:
1930:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_IDAC_CNT > 1u) */
1931:.\Generated_Source\PSoC4/CapSense.c **** 
1932:.\Generated_Source\PSoC4/CapSense.c **** 
1933:.\Generated_Source\PSoC4/CapSense.c **** #if((CapSense_TUNING_METHOD != CapSense__TUNING_NONE) && (CapSense_IDAC_CNT > 1u))
1934:.\Generated_Source\PSoC4/CapSense.c **** 	/*******************************************************************************
1935:.\Generated_Source\PSoC4/CapSense.c **** 	* Function Name: CapSense_SetCompensationIDAC
1936:.\Generated_Source\PSoC4/CapSense.c **** 	********************************************************************************
1937:.\Generated_Source\PSoC4/CapSense.c **** 	*
1938:.\Generated_Source\PSoC4/CapSense.c **** 	* Summary:
1939:.\Generated_Source\PSoC4/CapSense.c **** 	*  This API sets a value of compensation IDAC for the  sensor.
1940:.\Generated_Source\PSoC4/CapSense.c **** 	*
1941:.\Generated_Source\PSoC4/CapSense.c **** 	* Parameters:
1942:.\Generated_Source\PSoC4/CapSense.c **** 	*  sensor:  Sensor index.
1943:.\Generated_Source\PSoC4/CapSense.c **** 	*  compIdacValue: represents the compensation IDAC data register value.
1944:.\Generated_Source\PSoC4/CapSense.c **** 	*
1945:.\Generated_Source\PSoC4/CapSense.c **** 	* Return:
1946:.\Generated_Source\PSoC4/CapSense.c **** 	*  None.
1947:.\Generated_Source\PSoC4/CapSense.c **** 	*
1948:.\Generated_Source\PSoC4/CapSense.c **** 	* Global Variables:
1949:.\Generated_Source\PSoC4/CapSense.c **** 	*  CapSense_compensationIDAC[] - an array with compensation IDAC values
1950:.\Generated_Source\PSoC4/CapSense.c **** 	* 
1951:.\Generated_Source\PSoC4/CapSense.c **** 	* Side Effects:
1952:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
1953:.\Generated_Source\PSoC4/CapSense.c **** 	*
1954:.\Generated_Source\PSoC4/CapSense.c **** 	*******************************************************************************/
1955:.\Generated_Source\PSoC4/CapSense.c **** 	void CapSense_SetCompensationIDAC(uint32 sensor, uint32 compIdacValue)
1956:.\Generated_Source\PSoC4/CapSense.c **** 	{
 2412              		.loc 1 1956 0
 2413              		.cfi_startproc
 2414 0000 80B5     		push	{r7, lr}
 2415              		.cfi_def_cfa_offset 8
 2416              		.cfi_offset 7, -8
 2417              		.cfi_offset 14, -4
 2418 0002 82B0     		sub	sp, sp, #8
 2419              		.cfi_def_cfa_offset 16
 2420 0004 00AF     		add	r7, sp, #0
 2421              		.cfi_def_cfa_register 7
 2422 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 78


 2423 0008 3960     		str	r1, [r7]
1957:.\Generated_Source\PSoC4/CapSense.c **** 		CapSense_compensationIDAC[sensor] = (uint8)compIdacValue;
 2424              		.loc 1 1957 0
 2425 000a 3B68     		ldr	r3, [r7]
 2426 000c DAB2     		uxtb	r2, r3
 2427 000e 0349     		ldr	r1, .L136
 2428 0010 7B68     		ldr	r3, [r7, #4]
 2429 0012 CB18     		add	r3, r1, r3
 2430 0014 1A70     		strb	r2, [r3]
1958:.\Generated_Source\PSoC4/CapSense.c **** 	}
 2431              		.loc 1 1958 0
 2432 0016 BD46     		mov	sp, r7
 2433 0018 02B0     		add	sp, sp, #8
 2434              		@ sp needed
 2435 001a 80BD     		pop	{r7, pc}
 2436              	.L137:
 2437              		.align	2
 2438              	.L136:
 2439 001c 00000000 		.word	CapSense_compensationIDAC
 2440              		.cfi_endproc
 2441              	.LFE67:
 2442              		.size	CapSense_SetCompensationIDAC, .-CapSense_SetCompensationIDAC
 2443              		.section	.text.CapSense_GetIDACRange,"ax",%progbits
 2444              		.align	2
 2445              		.global	CapSense_GetIDACRange
 2446              		.code	16
 2447              		.thumb_func
 2448              		.type	CapSense_GetIDACRange, %function
 2449              	CapSense_GetIDACRange:
 2450              	.LFB68:
1959:.\Generated_Source\PSoC4/CapSense.c **** #endif /* ((CapSense_TUNING_METHOD != CapSense__TUNING_NONE) && (CapSense_IDAC_CNT > 1u)) */
1960:.\Generated_Source\PSoC4/CapSense.c **** 
1961:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1962:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetIDACRange
1963:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1964:.\Generated_Source\PSoC4/CapSense.c **** *
1965:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
1966:.\Generated_Source\PSoC4/CapSense.c **** *  This API returns a value that indicates the IDAC range used by the 
1967:.\Generated_Source\PSoC4/CapSense.c **** *  component to scan sensors. The IDAC range is common for all the sensors.
1968:.\Generated_Source\PSoC4/CapSense.c **** *
1969:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
1970:.\Generated_Source\PSoC4/CapSense.c **** *  None
1971:.\Generated_Source\PSoC4/CapSense.c **** *
1972:.\Generated_Source\PSoC4/CapSense.c **** * Return:
1973:.\Generated_Source\PSoC4/CapSense.c **** *  This API Returns a value that indicates the IDAC range:
1974:.\Generated_Source\PSoC4/CapSense.c **** *      0 - IDAC range set to 4x
1975:.\Generated_Source\PSoC4/CapSense.c **** *      1 - IDAC range set to 8x
1976:.\Generated_Source\PSoC4/CapSense.c **** *
1977:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1978:.\Generated_Source\PSoC4/CapSense.c **** *  None
1979:.\Generated_Source\PSoC4/CapSense.c **** * 
1980:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1981:.\Generated_Source\PSoC4/CapSense.c **** *  None
1982:.\Generated_Source\PSoC4/CapSense.c **** *
1983:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1984:.\Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetIDACRange(void)
1985:.\Generated_Source\PSoC4/CapSense.c **** {
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 79


 2451              		.loc 1 1985 0
 2452              		.cfi_startproc
 2453 0000 80B5     		push	{r7, lr}
 2454              		.cfi_def_cfa_offset 8
 2455              		.cfi_offset 7, -8
 2456              		.cfi_offset 14, -4
 2457 0002 00AF     		add	r7, sp, #0
 2458              		.cfi_def_cfa_register 7
1986:.\Generated_Source\PSoC4/CapSense.c **** 	return((0u != (CapSense_CSD_IDAC_REG & CapSense_CSD_IDAC1_RANGE_8X)) ? 1uL : 0uL);
 2459              		.loc 1 1986 0
 2460 0004 054B     		ldr	r3, .L142
 2461 0006 1A68     		ldr	r2, [r3]
 2462 0008 8023     		mov	r3, #128
 2463 000a DB00     		lsl	r3, r3, #3
 2464 000c 1340     		and	r3, r2
 2465 000e 01D0     		beq	.L139
 2466              		.loc 1 1986 0 is_stmt 0 discriminator 1
 2467 0010 0123     		mov	r3, #1
 2468 0012 00E0     		b	.L140
 2469              	.L139:
 2470              		.loc 1 1986 0 discriminator 2
 2471 0014 0023     		mov	r3, #0
 2472              	.L140:
1987:.\Generated_Source\PSoC4/CapSense.c **** }
 2473              		.loc 1 1987 0 is_stmt 1 discriminator 3
 2474 0016 181C     		mov	r0, r3
 2475 0018 BD46     		mov	sp, r7
 2476              		@ sp needed
 2477 001a 80BD     		pop	{r7, pc}
 2478              	.L143:
 2479              		.align	2
 2480              	.L142:
 2481 001c 08000840 		.word	1074266120
 2482              		.cfi_endproc
 2483              	.LFE68:
 2484              		.size	CapSense_GetIDACRange, .-CapSense_GetIDACRange
 2485              		.section	.text.CapSense_SetIDACRange,"ax",%progbits
 2486              		.align	2
 2487              		.global	CapSense_SetIDACRange
 2488              		.code	16
 2489              		.thumb_func
 2490              		.type	CapSense_SetIDACRange, %function
 2491              	CapSense_SetIDACRange:
 2492              	.LFB69:
1988:.\Generated_Source\PSoC4/CapSense.c **** 
1989:.\Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
1990:.\Generated_Source\PSoC4/CapSense.c **** 	/*******************************************************************************
1991:.\Generated_Source\PSoC4/CapSense.c **** 	* Function Name: CapSense_SetIDACRange
1992:.\Generated_Source\PSoC4/CapSense.c **** 	********************************************************************************
1993:.\Generated_Source\PSoC4/CapSense.c **** 	*
1994:.\Generated_Source\PSoC4/CapSense.c **** 	* Summary:
1995:.\Generated_Source\PSoC4/CapSense.c **** 	*  This API sets the IDAC range to the 4x (1.2uA/bit) or 8x (2.4uA/bit) mode.
1996:.\Generated_Source\PSoC4/CapSense.c ****     *  The IDAC range is common for all the sensors and common for the modulation and 
1997:.\Generated_Source\PSoC4/CapSense.c **** 	*  compensation IDACs.
1998:.\Generated_Source\PSoC4/CapSense.c **** 	*
1999:.\Generated_Source\PSoC4/CapSense.c **** 	* Parameters:
2000:.\Generated_Source\PSoC4/CapSense.c **** 	*  iDacRange:  represents value for IDAC range 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 80


2001:.\Generated_Source\PSoC4/CapSense.c **** 	*  0 -  IDAC range set to 4x (1.2uA/bit)
2002:.\Generated_Source\PSoC4/CapSense.c **** 	*  1 or >1 - IDAC range set to 8x (2.4uA/bit)
2003:.\Generated_Source\PSoC4/CapSense.c **** 	*
2004:.\Generated_Source\PSoC4/CapSense.c **** 	* Return:
2005:.\Generated_Source\PSoC4/CapSense.c **** 	*  None.
2006:.\Generated_Source\PSoC4/CapSense.c **** 	*
2007:.\Generated_Source\PSoC4/CapSense.c **** 	* Global Variables:
2008:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
2009:.\Generated_Source\PSoC4/CapSense.c **** 	* 
2010:.\Generated_Source\PSoC4/CapSense.c **** 	* Side Effects:
2011:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
2012:.\Generated_Source\PSoC4/CapSense.c **** 	*
2013:.\Generated_Source\PSoC4/CapSense.c **** 	*******************************************************************************/
2014:.\Generated_Source\PSoC4/CapSense.c **** 	void CapSense_SetIDACRange(uint32 iDacRange)
2015:.\Generated_Source\PSoC4/CapSense.c **** 	{
 2493              		.loc 1 2015 0
 2494              		.cfi_startproc
 2495 0000 80B5     		push	{r7, lr}
 2496              		.cfi_def_cfa_offset 8
 2497              		.cfi_offset 7, -8
 2498              		.cfi_offset 14, -4
 2499 0002 82B0     		sub	sp, sp, #8
 2500              		.cfi_def_cfa_offset 16
 2501 0004 00AF     		add	r7, sp, #0
 2502              		.cfi_def_cfa_register 7
 2503 0006 7860     		str	r0, [r7, #4]
2016:.\Generated_Source\PSoC4/CapSense.c **** 	    if(iDacRange != 0u)
 2504              		.loc 1 2016 0
 2505 0008 7B68     		ldr	r3, [r7, #4]
 2506 000a 002B     		cmp	r3, #0
 2507 000c 06D0     		beq	.L145
2017:.\Generated_Source\PSoC4/CapSense.c **** 		{
2018:.\Generated_Source\PSoC4/CapSense.c **** 		    /*  IDAC range = 8x (2.4uA/bit) */ 
2019:.\Generated_Source\PSoC4/CapSense.c **** 		    CapSense_CSD_IDAC_REG |= (CapSense_CSD_IDAC1_RANGE_8X |\
 2508              		.loc 1 2019 0
 2509 000e 084B     		ldr	r3, .L147
 2510 0010 074A     		ldr	r2, .L147
 2511 0012 1268     		ldr	r2, [r2]
 2512 0014 0749     		ldr	r1, .L147+4
 2513 0016 0A43     		orr	r2, r1
 2514 0018 1A60     		str	r2, [r3]
 2515 001a 05E0     		b	.L144
 2516              	.L145:
2020:.\Generated_Source\PSoC4/CapSense.c **** 											  CapSense_CSD_IDAC2_RANGE_8X);
2021:.\Generated_Source\PSoC4/CapSense.c **** 		}
2022:.\Generated_Source\PSoC4/CapSense.c **** 		else
2023:.\Generated_Source\PSoC4/CapSense.c **** 		{
2024:.\Generated_Source\PSoC4/CapSense.c **** 		    /*  IDAC range = 4x (1.2uA/bit) */ 
2025:.\Generated_Source\PSoC4/CapSense.c **** 		    /*  IDAC range = 8x (2.4uA/bit) */ 
2026:.\Generated_Source\PSoC4/CapSense.c **** 		    CapSense_CSD_IDAC_REG &= ~(CapSense_CSD_IDAC1_RANGE_8X |\
 2517              		.loc 1 2026 0
 2518 001c 044B     		ldr	r3, .L147
 2519 001e 044A     		ldr	r2, .L147
 2520 0020 1168     		ldr	r1, [r2]
 2521 0022 054A     		ldr	r2, .L147+8
 2522 0024 0A40     		and	r2, r1
 2523 0026 1A60     		str	r2, [r3]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 81


 2524              	.L144:
2027:.\Generated_Source\PSoC4/CapSense.c **** 											   CapSense_CSD_IDAC2_RANGE_8X);
2028:.\Generated_Source\PSoC4/CapSense.c **** 		}
2029:.\Generated_Source\PSoC4/CapSense.c **** 	}
 2525              		.loc 1 2029 0
 2526 0028 BD46     		mov	sp, r7
 2527 002a 02B0     		add	sp, sp, #8
 2528              		@ sp needed
 2529 002c 80BD     		pop	{r7, pc}
 2530              	.L148:
 2531 002e C046     		.align	2
 2532              	.L147:
 2533 0030 08000840 		.word	1074266120
 2534 0034 00040004 		.word	67109888
 2535 0038 FFFBFFFB 		.word	-67109889
 2536              		.cfi_endproc
 2537              	.LFE69:
 2538              		.size	CapSense_SetIDACRange, .-CapSense_SetIDACRange
 2539              		.section	.text.CapSense_GetSensorRaw,"ax",%progbits
 2540              		.align	2
 2541              		.global	CapSense_GetSensorRaw
 2542              		.code	16
 2543              		.thumb_func
 2544              		.type	CapSense_GetSensorRaw, %function
 2545              	CapSense_GetSensorRaw:
 2546              	.LFB70:
2030:.\Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
2031:.\Generated_Source\PSoC4/CapSense.c **** 
2032:.\Generated_Source\PSoC4/CapSense.c **** 
2033:.\Generated_Source\PSoC4/CapSense.c **** #if((0u != CapSense_AUTOCALIBRATION_ENABLE) || (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO))
2034:.\Generated_Source\PSoC4/CapSense.c **** 	/*******************************************************************************
2035:.\Generated_Source\PSoC4/CapSense.c **** 	* Function Name: CapSense_GetSensorRaw
2036:.\Generated_Source\PSoC4/CapSense.c **** 	********************************************************************************
2037:.\Generated_Source\PSoC4/CapSense.c **** 	*
2038:.\Generated_Source\PSoC4/CapSense.c **** 	* Summary:
2039:.\Generated_Source\PSoC4/CapSense.c **** 	*  The API updates and gets uprated raw data from the sensor.
2040:.\Generated_Source\PSoC4/CapSense.c **** 	*
2041:.\Generated_Source\PSoC4/CapSense.c **** 	* Parameters:
2042:.\Generated_Source\PSoC4/CapSense.c **** 	*  sensor - Sensor number.
2043:.\Generated_Source\PSoC4/CapSense.c **** 	*
2044:.\Generated_Source\PSoC4/CapSense.c **** 	* Return:
2045:.\Generated_Source\PSoC4/CapSense.c **** 	*  Returns the current raw data value for a defined sensor number.
2046:.\Generated_Source\PSoC4/CapSense.c **** 	*
2047:.\Generated_Source\PSoC4/CapSense.c **** 	* Global Variables:
2048:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
2049:.\Generated_Source\PSoC4/CapSense.c **** 	*
2050:.\Generated_Source\PSoC4/CapSense.c **** 	* Side Effects:
2051:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
2052:.\Generated_Source\PSoC4/CapSense.c **** 	*
2053:.\Generated_Source\PSoC4/CapSense.c **** 	*******************************************************************************/
2054:.\Generated_Source\PSoC4/CapSense.c **** 	uint16  CapSense_GetSensorRaw(uint32 sensor)
2055:.\Generated_Source\PSoC4/CapSense.c **** 	{
 2547              		.loc 1 2055 0
 2548              		.cfi_startproc
 2549 0000 80B5     		push	{r7, lr}
 2550              		.cfi_def_cfa_offset 8
 2551              		.cfi_offset 7, -8
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 82


 2552              		.cfi_offset 14, -4
 2553 0002 84B0     		sub	sp, sp, #16
 2554              		.cfi_def_cfa_offset 24
 2555 0004 00AF     		add	r7, sp, #0
 2556              		.cfi_def_cfa_register 7
 2557 0006 7860     		str	r0, [r7, #4]
2056:.\Generated_Source\PSoC4/CapSense.c **** 		uint32 curSample;
2057:.\Generated_Source\PSoC4/CapSense.c **** 		uint32 avgVal = 0u;
 2558              		.loc 1 2057 0
 2559 0008 0023     		mov	r3, #0
 2560 000a BB60     		str	r3, [r7, #8]
2058:.\Generated_Source\PSoC4/CapSense.c **** 		
2059:.\Generated_Source\PSoC4/CapSense.c **** 		for(curSample = 0u; curSample < CapSense_AVG_SAMPLES_NUM; curSample++)
 2561              		.loc 1 2059 0
 2562 000c 0023     		mov	r3, #0
 2563 000e FB60     		str	r3, [r7, #12]
 2564 0010 14E0     		b	.L150
 2565              	.L152:
2060:.\Generated_Source\PSoC4/CapSense.c **** 		{
2061:.\Generated_Source\PSoC4/CapSense.c **** 	    
2062:.\Generated_Source\PSoC4/CapSense.c **** 			CapSense_ScanSensor((uint32)sensor);
 2566              		.loc 1 2062 0
 2567 0012 7B68     		ldr	r3, [r7, #4]
 2568 0014 181C     		mov	r0, r3
 2569 0016 FFF7FEFF 		bl	CapSense_ScanSensor
2063:.\Generated_Source\PSoC4/CapSense.c **** 		    while(CapSense_IsBusy() == 1u)
 2570              		.loc 1 2063 0
 2571 001a C046     		mov	r8, r8
 2572              	.L151:
 2573              		.loc 1 2063 0 is_stmt 0 discriminator 1
 2574 001c FFF7FEFF 		bl	CapSense_IsBusy
 2575 0020 031C     		mov	r3, r0
 2576 0022 012B     		cmp	r3, #1
 2577 0024 FAD0     		beq	.L151
2064:.\Generated_Source\PSoC4/CapSense.c **** 			{
2065:.\Generated_Source\PSoC4/CapSense.c **** 				/* Wait while sensor is busy */
2066:.\Generated_Source\PSoC4/CapSense.c **** 			}
2067:.\Generated_Source\PSoC4/CapSense.c **** 			avgVal += CapSense_ReadSensorRaw((uint32)sensor);
 2578              		.loc 1 2067 0 is_stmt 1
 2579 0026 7B68     		ldr	r3, [r7, #4]
 2580 0028 181C     		mov	r0, r3
 2581 002a FFF7FEFF 		bl	CapSense_ReadSensorRaw
 2582 002e 031C     		mov	r3, r0
 2583 0030 BA68     		ldr	r2, [r7, #8]
 2584 0032 D318     		add	r3, r2, r3
 2585 0034 BB60     		str	r3, [r7, #8]
2059:.\Generated_Source\PSoC4/CapSense.c **** 		for(curSample = 0u; curSample < CapSense_AVG_SAMPLES_NUM; curSample++)
 2586              		.loc 1 2059 0
 2587 0036 FB68     		ldr	r3, [r7, #12]
 2588 0038 0133     		add	r3, r3, #1
 2589 003a FB60     		str	r3, [r7, #12]
 2590              	.L150:
2059:.\Generated_Source\PSoC4/CapSense.c **** 		for(curSample = 0u; curSample < CapSense_AVG_SAMPLES_NUM; curSample++)
 2591              		.loc 1 2059 0 is_stmt 0 discriminator 1
 2592 003c FB68     		ldr	r3, [r7, #12]
 2593 003e 002B     		cmp	r3, #0
 2594 0040 E7D0     		beq	.L152
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 83


2068:.\Generated_Source\PSoC4/CapSense.c **** 		}
2069:.\Generated_Source\PSoC4/CapSense.c **** 	    
2070:.\Generated_Source\PSoC4/CapSense.c **** 	    return((uint16)(avgVal / CapSense_AVG_SAMPLES_NUM));
 2595              		.loc 1 2070 0 is_stmt 1
 2596 0042 BB68     		ldr	r3, [r7, #8]
 2597 0044 9BB2     		uxth	r3, r3
2071:.\Generated_Source\PSoC4/CapSense.c **** 	}
 2598              		.loc 1 2071 0
 2599 0046 181C     		mov	r0, r3
 2600 0048 BD46     		mov	sp, r7
 2601 004a 04B0     		add	sp, sp, #16
 2602              		@ sp needed
 2603 004c 80BD     		pop	{r7, pc}
 2604              		.cfi_endproc
 2605              	.LFE70:
 2606              		.size	CapSense_GetSensorRaw, .-CapSense_GetSensorRaw
 2607 004e C046     		.section	.text.CapSense_SetUnscannedSensorState,"ax",%progbits
 2608              		.align	2
 2609              		.global	CapSense_SetUnscannedSensorState
 2610              		.code	16
 2611              		.thumb_func
 2612              		.type	CapSense_SetUnscannedSensorState, %function
 2613              	CapSense_SetUnscannedSensorState:
 2614              	.LFB71:
2072:.\Generated_Source\PSoC4/CapSense.c **** #endif /* ((0u != CapSense_AUTOCALIBRATION_ENABLE) && (CapSense_TUNING_METHOD == CapSense__TUNING_A
2073:.\Generated_Source\PSoC4/CapSense.c **** 
2074:.\Generated_Source\PSoC4/CapSense.c **** 
2075:.\Generated_Source\PSoC4/CapSense.c **** #if((0u != CapSense_AUTOCALIBRATION_ENABLE) && (CapSense_TUNING_METHOD != CapSense__TUNING_AUTO))
2076:.\Generated_Source\PSoC4/CapSense.c **** 	/*******************************************************************************
2077:.\Generated_Source\PSoC4/CapSense.c **** 	* Function Name: CapSense_CalibrateSensor
2078:.\Generated_Source\PSoC4/CapSense.c **** 	********************************************************************************
2079:.\Generated_Source\PSoC4/CapSense.c **** 	*
2080:.\Generated_Source\PSoC4/CapSense.c **** 	* Summary:
2081:.\Generated_Source\PSoC4/CapSense.c **** 	*  Computes the one sensor IDAC value, which provides the raw signal on
2082:.\Generated_Source\PSoC4/CapSense.c **** 	*  a specified level, with a specified prescaler, speed, and resolution.
2083:.\Generated_Source\PSoC4/CapSense.c **** 	*
2084:.\Generated_Source\PSoC4/CapSense.c **** 	* Parameters:
2085:.\Generated_Source\PSoC4/CapSense.c **** 	*  sensor - Sensor Number.
2086:.\Generated_Source\PSoC4/CapSense.c **** 	*
2087:.\Generated_Source\PSoC4/CapSense.c **** 	*  rawLevel -  Raw data level which should be reached during the calibration
2088:.\Generated_Source\PSoC4/CapSense.c **** 	*              procedure.
2089:.\Generated_Source\PSoC4/CapSense.c **** 	*
2090:.\Generated_Source\PSoC4/CapSense.c **** 	*  idacLevelsTbl - Pointer to the modulatorIdac data register configuration table.            
2091:.\Generated_Source\PSoC4/CapSense.c **** 	*
2092:.\Generated_Source\PSoC4/CapSense.c **** 	* Return:       
2093:.\Generated_Source\PSoC4/CapSense.c **** 	*  None
2094:.\Generated_Source\PSoC4/CapSense.c **** 	*
2095:.\Generated_Source\PSoC4/CapSense.c **** 	*******************************************************************************/
2096:.\Generated_Source\PSoC4/CapSense.c **** 	void CapSense_CalibrateSensor(uint32 sensor, uint32 rawLevel, uint8 idacLevelsTbl[])
2097:.\Generated_Source\PSoC4/CapSense.c **** 	{
2098:.\Generated_Source\PSoC4/CapSense.c **** 		uint8 mask;
2099:.\Generated_Source\PSoC4/CapSense.c **** 		uint16 rawData;
2100:.\Generated_Source\PSoC4/CapSense.c **** 		
2101:.\Generated_Source\PSoC4/CapSense.c **** 		rawData = 0u;
2102:.\Generated_Source\PSoC4/CapSense.c **** 		
2103:.\Generated_Source\PSoC4/CapSense.c **** 		mask = 0x80u;
2104:.\Generated_Source\PSoC4/CapSense.c **** 		/* Init IDAC for null Channel */
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 84


2105:.\Generated_Source\PSoC4/CapSense.c **** 		idacLevelsTbl[sensor] = 0x00u;
2106:.\Generated_Source\PSoC4/CapSense.c **** 		
2107:.\Generated_Source\PSoC4/CapSense.c **** 		do
2108:.\Generated_Source\PSoC4/CapSense.c **** 		{
2109:.\Generated_Source\PSoC4/CapSense.c **** 		    /* Set bit for null Channel */
2110:.\Generated_Source\PSoC4/CapSense.c **** 			idacLevelsTbl[sensor] |= mask;
2111:.\Generated_Source\PSoC4/CapSense.c **** 
2112:.\Generated_Source\PSoC4/CapSense.c **** 	        /* Scan null Channel and get Rawdata */
2113:.\Generated_Source\PSoC4/CapSense.c **** 			rawData = CapSense_GetSensorRaw(sensor);
2114:.\Generated_Source\PSoC4/CapSense.c **** 			
2115:.\Generated_Source\PSoC4/CapSense.c **** 			/* Decrease IDAC until Rawdata reaches rawLevel */ 
2116:.\Generated_Source\PSoC4/CapSense.c **** 			if(rawData < rawLevel)
2117:.\Generated_Source\PSoC4/CapSense.c **** 			{
2118:.\Generated_Source\PSoC4/CapSense.c **** 			    /* Reset bit for null Channel  */ 
2119:.\Generated_Source\PSoC4/CapSense.c **** 				idacLevelsTbl[sensor] &= (uint8)~mask;
2120:.\Generated_Source\PSoC4/CapSense.c **** 			}
2121:.\Generated_Source\PSoC4/CapSense.c **** 			
2122:.\Generated_Source\PSoC4/CapSense.c **** 			mask >>= 1u;
2123:.\Generated_Source\PSoC4/CapSense.c **** 		}
2124:.\Generated_Source\PSoC4/CapSense.c **** 		while(mask > 0u);
2125:.\Generated_Source\PSoC4/CapSense.c **** 		
2126:.\Generated_Source\PSoC4/CapSense.c **** 	}
2127:.\Generated_Source\PSoC4/CapSense.c **** #endif /* ((0u != CapSense_AUTOCALIBRATION_ENABLE) && (CapSense_TUNING_METHOD != CapSense__TUNING_A
2128:.\Generated_Source\PSoC4/CapSense.c **** 
2129:.\Generated_Source\PSoC4/CapSense.c **** 
2130:.\Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
2131:.\Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_SetUnscannedSensorState
2132:.\Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
2133:.\Generated_Source\PSoC4/CapSense.c **** *
2134:.\Generated_Source\PSoC4/CapSense.c **** * Summary:
2135:.\Generated_Source\PSoC4/CapSense.c **** *  This API sets a state for un-scanned sensors. 
2136:.\Generated_Source\PSoC4/CapSense.c **** *  It is possible to set the state to Ground, High-Z, or the shield electrode. 
2137:.\Generated_Source\PSoC4/CapSense.c **** *  The un-scanned sensor can be connected to a shield electrode only if the shield is 
2138:.\Generated_Source\PSoC4/CapSense.c **** *  enabled. If the shield is disabled and this API is called with the parameter which
2139:.\Generated_Source\PSoC4/CapSense.c **** *  indicates the shield state, the un-scanned sensor will be connected to Ground.
2140:.\Generated_Source\PSoC4/CapSense.c **** *
2141:.\Generated_Source\PSoC4/CapSense.c **** * Parameters:
2142:.\Generated_Source\PSoC4/CapSense.c **** *  sensor - Sensor Number.
2143:.\Generated_Source\PSoC4/CapSense.c **** *  sensorState: This parameter indicates un-scanned sensor state:
2144:.\Generated_Source\PSoC4/CapSense.c **** *
2145:.\Generated_Source\PSoC4/CapSense.c **** *     CapSense__GROUND 0
2146:.\Generated_Source\PSoC4/CapSense.c **** *     CapSense__HIZ_ANALOG 1
2147:.\Generated_Source\PSoC4/CapSense.c **** *     CapSense__SHIELD 2
2148:.\Generated_Source\PSoC4/CapSense.c **** *
2149:.\Generated_Source\PSoC4/CapSense.c **** * Return:
2150:.\Generated_Source\PSoC4/CapSense.c **** *  None.
2151:.\Generated_Source\PSoC4/CapSense.c **** *
2152:.\Generated_Source\PSoC4/CapSense.c **** * Global Variables:
2153:.\Generated_Source\PSoC4/CapSense.c **** *  CapSense_unscannedSnsDriveMode[] - used to store the state for
2154:.\Generated_Source\PSoC4/CapSense.c **** *  un-scanned sensors.
2155:.\Generated_Source\PSoC4/CapSense.c **** * 
2156:.\Generated_Source\PSoC4/CapSense.c **** * Side Effects:
2157:.\Generated_Source\PSoC4/CapSense.c **** *  None
2158:.\Generated_Source\PSoC4/CapSense.c **** *
2159:.\Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
2160:.\Generated_Source\PSoC4/CapSense.c **** void CapSense_SetUnscannedSensorState(uint32 sensor, uint32 sensorState)
2161:.\Generated_Source\PSoC4/CapSense.c **** {
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 85


 2615              		.loc 1 2161 0
 2616              		.cfi_startproc
 2617 0000 80B5     		push	{r7, lr}
 2618              		.cfi_def_cfa_offset 8
 2619              		.cfi_offset 7, -8
 2620              		.cfi_offset 14, -4
 2621 0002 82B0     		sub	sp, sp, #8
 2622              		.cfi_def_cfa_offset 16
 2623 0004 00AF     		add	r7, sp, #0
 2624              		.cfi_def_cfa_register 7
 2625 0006 7860     		str	r0, [r7, #4]
 2626 0008 3960     		str	r1, [r7]
2162:.\Generated_Source\PSoC4/CapSense.c ****     CapSense_unscannedSnsDriveMode[sensor] = (uint8)sensorState;	
 2627              		.loc 1 2162 0
 2628 000a 3B68     		ldr	r3, [r7]
 2629 000c DAB2     		uxtb	r2, r3
 2630 000e 0349     		ldr	r1, .L155
 2631 0010 7B68     		ldr	r3, [r7, #4]
 2632 0012 CB18     		add	r3, r1, r3
 2633 0014 1A70     		strb	r2, [r3]
2163:.\Generated_Source\PSoC4/CapSense.c **** }
 2634              		.loc 1 2163 0
 2635 0016 BD46     		mov	sp, r7
 2636 0018 02B0     		add	sp, sp, #8
 2637              		@ sp needed
 2638 001a 80BD     		pop	{r7, pc}
 2639              	.L156:
 2640              		.align	2
 2641              	.L155:
 2642 001c 00000000 		.word	CapSense_unscannedSnsDriveMode
 2643              		.cfi_endproc
 2644              	.LFE71:
 2645              		.size	CapSense_SetUnscannedSensorState, .-CapSense_SetUnscannedSensorState
 2646              		.text
 2647              	.Letext0:
 2648              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2649              		.section	.debug_info,"",%progbits
 2650              	.Ldebug_info0:
 2651 0000 620B0000 		.4byte	0xb62
 2652 0004 0400     		.2byte	0x4
 2653 0006 00000000 		.4byte	.Ldebug_abbrev0
 2654 000a 04       		.byte	0x4
 2655 000b 01       		.uleb128 0x1
 2656 000c 2C050000 		.4byte	.LASF118
 2657 0010 01       		.byte	0x1
 2658 0011 71030000 		.4byte	.LASF119
 2659 0015 E4080000 		.4byte	.LASF120
 2660 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2661 001d 00000000 		.4byte	0
 2662 0021 00000000 		.4byte	.Ldebug_line0
 2663 0025 02       		.uleb128 0x2
 2664 0026 01       		.byte	0x1
 2665 0027 06       		.byte	0x6
 2666 0028 B5030000 		.4byte	.LASF0
 2667 002c 02       		.uleb128 0x2
 2668 002d 01       		.byte	0x1
 2669 002e 08       		.byte	0x8
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 86


 2670 002f AD020000 		.4byte	.LASF1
 2671 0033 02       		.uleb128 0x2
 2672 0034 02       		.byte	0x2
 2673 0035 05       		.byte	0x5
 2674 0036 52000000 		.4byte	.LASF2
 2675 003a 02       		.uleb128 0x2
 2676 003b 02       		.byte	0x2
 2677 003c 07       		.byte	0x7
 2678 003d A5040000 		.4byte	.LASF3
 2679 0041 02       		.uleb128 0x2
 2680 0042 04       		.byte	0x4
 2681 0043 05       		.byte	0x5
 2682 0044 50020000 		.4byte	.LASF4
 2683 0048 02       		.uleb128 0x2
 2684 0049 04       		.byte	0x4
 2685 004a 07       		.byte	0x7
 2686 004b 14010000 		.4byte	.LASF5
 2687 004f 02       		.uleb128 0x2
 2688 0050 08       		.byte	0x8
 2689 0051 05       		.byte	0x5
 2690 0052 12020000 		.4byte	.LASF6
 2691 0056 02       		.uleb128 0x2
 2692 0057 08       		.byte	0x8
 2693 0058 07       		.byte	0x7
 2694 0059 C1030000 		.4byte	.LASF7
 2695 005d 03       		.uleb128 0x3
 2696 005e 04       		.byte	0x4
 2697 005f 05       		.byte	0x5
 2698 0060 696E7400 		.ascii	"int\000"
 2699 0064 02       		.uleb128 0x2
 2700 0065 04       		.byte	0x4
 2701 0066 07       		.byte	0x7
 2702 0067 04040000 		.4byte	.LASF8
 2703 006b 04       		.uleb128 0x4
 2704 006c 57010000 		.4byte	.LASF9
 2705 0070 02       		.byte	0x2
 2706 0071 5B       		.byte	0x5b
 2707 0072 2C000000 		.4byte	0x2c
 2708 0076 04       		.uleb128 0x4
 2709 0077 2C010000 		.4byte	.LASF10
 2710 007b 02       		.byte	0x2
 2711 007c 5C       		.byte	0x5c
 2712 007d 3A000000 		.4byte	0x3a
 2713 0081 04       		.uleb128 0x4
 2714 0082 A6060000 		.4byte	.LASF11
 2715 0086 02       		.byte	0x2
 2716 0087 5D       		.byte	0x5d
 2717 0088 48000000 		.4byte	0x48
 2718 008c 02       		.uleb128 0x2
 2719 008d 04       		.byte	0x4
 2720 008e 04       		.byte	0x4
 2721 008f 00020000 		.4byte	.LASF12
 2722 0093 02       		.uleb128 0x2
 2723 0094 08       		.byte	0x8
 2724 0095 04       		.byte	0x4
 2725 0096 35080000 		.4byte	.LASF13
 2726 009a 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 87


 2727 009b 01       		.byte	0x1
 2728 009c 08       		.byte	0x8
 2729 009d F3040000 		.4byte	.LASF14
 2730 00a1 04       		.uleb128 0x4
 2731 00a2 AD060000 		.4byte	.LASF15
 2732 00a6 02       		.byte	0x2
 2733 00a7 F0       		.byte	0xf0
 2734 00a8 AC000000 		.4byte	0xac
 2735 00ac 05       		.uleb128 0x5
 2736 00ad 6B000000 		.4byte	0x6b
 2737 00b1 04       		.uleb128 0x4
 2738 00b2 8F040000 		.4byte	.LASF16
 2739 00b6 02       		.byte	0x2
 2740 00b7 F2       		.byte	0xf2
 2741 00b8 BC000000 		.4byte	0xbc
 2742 00bc 05       		.uleb128 0x5
 2743 00bd 81000000 		.4byte	0x81
 2744 00c1 02       		.uleb128 0x2
 2745 00c2 04       		.byte	0x4
 2746 00c3 07       		.byte	0x7
 2747 00c4 B6000000 		.4byte	.LASF17
 2748 00c8 06       		.uleb128 0x6
 2749 00c9 04       		.byte	0x4
 2750 00ca 6B000000 		.4byte	0x6b
 2751 00ce 06       		.uleb128 0x6
 2752 00cf 04       		.byte	0x4
 2753 00d0 D4000000 		.4byte	0xd4
 2754 00d4 07       		.uleb128 0x7
 2755 00d5 6B000000 		.4byte	0x6b
 2756 00d9 08       		.uleb128 0x8
 2757 00da 00000000 		.4byte	.LASF18
 2758 00de 01       		.byte	0x1
 2759 00df 94       		.byte	0x94
 2760 00e0 00000000 		.4byte	.LFB33
 2761 00e4 3C000000 		.4byte	.LFE33-.LFB33
 2762 00e8 01       		.uleb128 0x1
 2763 00e9 9C       		.byte	0x9c
 2764 00ea FD000000 		.4byte	0xfd
 2765 00ee 09       		.uleb128 0x9
 2766 00ef 59020000 		.4byte	.LASF20
 2767 00f3 01       		.byte	0x1
 2768 00f4 96       		.byte	0x96
 2769 00f5 81000000 		.4byte	0x81
 2770 00f9 02       		.uleb128 0x2
 2771 00fa 91       		.byte	0x91
 2772 00fb 74       		.sleb128 -12
 2773 00fc 00       		.byte	0
 2774 00fd 08       		.uleb128 0x8
 2775 00fe 60080000 		.4byte	.LASF19
 2776 0102 01       		.byte	0x1
 2777 0103 D5       		.byte	0xd5
 2778 0104 00000000 		.4byte	.LFB34
 2779 0108 C0000000 		.4byte	.LFE34-.LFB34
 2780 010c 01       		.uleb128 0x1
 2781 010d 9C       		.byte	0x9c
 2782 010e 21010000 		.4byte	0x121
 2783 0112 09       		.uleb128 0x9
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 88


 2784 0113 1E040000 		.4byte	.LASF21
 2785 0117 01       		.byte	0x1
 2786 0118 D7       		.byte	0xd7
 2787 0119 81000000 		.4byte	0x81
 2788 011d 02       		.uleb128 0x2
 2789 011e 91       		.byte	0x91
 2790 011f 74       		.sleb128 -12
 2791 0120 00       		.byte	0
 2792 0121 0A       		.uleb128 0xa
 2793 0122 E3040000 		.4byte	.LASF22
 2794 0126 01       		.byte	0x1
 2795 0127 2A01     		.2byte	0x12a
 2796 0129 00000000 		.4byte	.LFB35
 2797 012d 50000000 		.4byte	.LFE35-.LFB35
 2798 0131 01       		.uleb128 0x1
 2799 0132 9C       		.byte	0x9c
 2800 0133 47010000 		.4byte	0x147
 2801 0137 0B       		.uleb128 0xb
 2802 0138 1E040000 		.4byte	.LASF21
 2803 013c 01       		.byte	0x1
 2804 013d 2C01     		.2byte	0x12c
 2805 013f 81000000 		.4byte	0x81
 2806 0143 02       		.uleb128 0x2
 2807 0144 91       		.byte	0x91
 2808 0145 74       		.sleb128 -12
 2809 0146 00       		.byte	0
 2810 0147 0C       		.uleb128 0xc
 2811 0148 F5030000 		.4byte	.LASF23
 2812 014c 01       		.byte	0x1
 2813 014d 6501     		.2byte	0x165
 2814 014f 00000000 		.4byte	.LFB36
 2815 0153 44000000 		.4byte	.LFE36-.LFB36
 2816 0157 01       		.uleb128 0x1
 2817 0158 9C       		.byte	0x9c
 2818 0159 0C       		.uleb128 0xc
 2819 015a 4A030000 		.4byte	.LASF24
 2820 015e 01       		.byte	0x1
 2821 015f B501     		.2byte	0x1b5
 2822 0161 00000000 		.4byte	.LFB37
 2823 0165 38000000 		.4byte	.LFE37-.LFB37
 2824 0169 01       		.uleb128 0x1
 2825 016a 9C       		.byte	0x9c
 2826 016b 0D       		.uleb128 0xd
 2827 016c FC000000 		.4byte	.LASF34
 2828 0170 01       		.byte	0x1
 2829 0171 DB01     		.2byte	0x1db
 2830 0173 6B000000 		.4byte	0x6b
 2831 0177 00000000 		.4byte	.LFB38
 2832 017b 48000000 		.4byte	.LFE38-.LFB38
 2833 017f 01       		.uleb128 0x1
 2834 0180 9C       		.byte	0x9c
 2835 0181 A4010000 		.4byte	0x1a4
 2836 0185 0E       		.uleb128 0xe
 2837 0186 CC020000 		.4byte	.LASF27
 2838 018a 01       		.byte	0x1
 2839 018b DB01     		.2byte	0x1db
 2840 018d 6B000000 		.4byte	0x6b
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 89


 2841 0191 02       		.uleb128 0x2
 2842 0192 91       		.byte	0x91
 2843 0193 6F       		.sleb128 -17
 2844 0194 0B       		.uleb128 0xb
 2845 0195 14080000 		.4byte	.LASF25
 2846 0199 01       		.byte	0x1
 2847 019a DD01     		.2byte	0x1dd
 2848 019c 81000000 		.4byte	0x81
 2849 01a0 02       		.uleb128 0x2
 2850 01a1 91       		.byte	0x91
 2851 01a2 74       		.sleb128 -12
 2852 01a3 00       		.byte	0
 2853 01a4 0A       		.uleb128 0xa
 2854 01a5 1A030000 		.4byte	.LASF26
 2855 01a9 01       		.byte	0x1
 2856 01aa 0B02     		.2byte	0x20b
 2857 01ac 00000000 		.4byte	.LFB39
 2858 01b0 34000000 		.4byte	.LFE39-.LFB39
 2859 01b4 01       		.uleb128 0x1
 2860 01b5 9C       		.byte	0x9c
 2861 01b6 CA010000 		.4byte	0x1ca
 2862 01ba 0E       		.uleb128 0xe
 2863 01bb 5C000000 		.4byte	.LASF28
 2864 01bf 01       		.byte	0x1
 2865 01c0 0B02     		.2byte	0x20b
 2866 01c2 81000000 		.4byte	0x81
 2867 01c6 02       		.uleb128 0x2
 2868 01c7 91       		.byte	0x91
 2869 01c8 74       		.sleb128 -12
 2870 01c9 00       		.byte	0
 2871 01ca 0A       		.uleb128 0xa
 2872 01cb 5E090000 		.4byte	.LASF29
 2873 01cf 01       		.byte	0x1
 2874 01d0 3202     		.2byte	0x232
 2875 01d2 00000000 		.4byte	.LFB40
 2876 01d6 DC000000 		.4byte	.LFE40-.LFB40
 2877 01da 01       		.uleb128 0x1
 2878 01db 9C       		.byte	0x9c
 2879 01dc 1D020000 		.4byte	0x21d
 2880 01e0 0E       		.uleb128 0xe
 2881 01e1 50010000 		.4byte	.LASF30
 2882 01e5 01       		.byte	0x1
 2883 01e6 3202     		.2byte	0x232
 2884 01e8 81000000 		.4byte	0x81
 2885 01ec 02       		.uleb128 0x2
 2886 01ed 91       		.byte	0x91
 2887 01ee 64       		.sleb128 -28
 2888 01ef 0B       		.uleb128 0xb
 2889 01f0 98080000 		.4byte	.LASF31
 2890 01f4 01       		.byte	0x1
 2891 01f5 3402     		.2byte	0x234
 2892 01f7 81000000 		.4byte	0x81
 2893 01fb 02       		.uleb128 0x2
 2894 01fc 91       		.byte	0x91
 2895 01fd 74       		.sleb128 -12
 2896 01fe 0B       		.uleb128 0xb
 2897 01ff 26060000 		.4byte	.LASF32
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 90


 2898 0203 01       		.byte	0x1
 2899 0204 3502     		.2byte	0x235
 2900 0206 81000000 		.4byte	0x81
 2901 020a 02       		.uleb128 0x2
 2902 020b 91       		.byte	0x91
 2903 020c 6C       		.sleb128 -20
 2904 020d 0B       		.uleb128 0xb
 2905 020e CC020000 		.4byte	.LASF27
 2906 0212 01       		.byte	0x1
 2907 0213 3602     		.2byte	0x236
 2908 0215 81000000 		.4byte	0x81
 2909 0219 02       		.uleb128 0x2
 2910 021a 91       		.byte	0x91
 2911 021b 70       		.sleb128 -16
 2912 021c 00       		.byte	0
 2913 021d 0C       		.uleb128 0xc
 2914 021e 7F010000 		.4byte	.LASF33
 2915 0222 01       		.byte	0x1
 2916 0223 8702     		.2byte	0x287
 2917 0225 00000000 		.4byte	.LFB41
 2918 0229 58000000 		.4byte	.LFE41-.LFB41
 2919 022d 01       		.uleb128 0x1
 2920 022e 9C       		.byte	0x9c
 2921 022f 0F       		.uleb128 0xf
 2922 0230 97070000 		.4byte	.LASF66
 2923 0234 01       		.byte	0x1
 2924 0235 B002     		.2byte	0x2b0
 2925 0237 81000000 		.4byte	0x81
 2926 023b 00000000 		.4byte	.LFB42
 2927 023f 1C000000 		.4byte	.LFE42-.LFB42
 2928 0243 01       		.uleb128 0x1
 2929 0244 9C       		.byte	0x9c
 2930 0245 10       		.uleb128 0x10
 2931 0246 BC080000 		.4byte	.LASF35
 2932 024a 01       		.byte	0x1
 2933 024b CE02     		.2byte	0x2ce
 2934 024d 76000000 		.4byte	0x76
 2935 0251 00000000 		.4byte	.LFB43
 2936 0255 1C000000 		.4byte	.LFE43-.LFB43
 2937 0259 01       		.uleb128 0x1
 2938 025a 9C       		.byte	0x9c
 2939 025b 6F020000 		.4byte	0x26f
 2940 025f 0E       		.uleb128 0xe
 2941 0260 5C000000 		.4byte	.LASF28
 2942 0264 01       		.byte	0x1
 2943 0265 CE02     		.2byte	0x2ce
 2944 0267 81000000 		.4byte	0x81
 2945 026b 02       		.uleb128 0x2
 2946 026c 91       		.byte	0x91
 2947 026d 74       		.sleb128 -12
 2948 026e 00       		.byte	0
 2949 026f 11       		.uleb128 0x11
 2950 0270 63000000 		.4byte	.LASF36
 2951 0274 01       		.byte	0x1
 2952 0275 E902     		.2byte	0x2e9
 2953 0277 00000000 		.4byte	.LFB44
 2954 027b 24000000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 91


 2955 027f 01       		.uleb128 0x1
 2956 0280 9C       		.byte	0x9c
 2957 0281 A4020000 		.4byte	0x2a4
 2958 0285 0E       		.uleb128 0xe
 2959 0286 5C000000 		.4byte	.LASF28
 2960 028a 01       		.byte	0x1
 2961 028b E902     		.2byte	0x2e9
 2962 028d 81000000 		.4byte	0x81
 2963 0291 02       		.uleb128 0x2
 2964 0292 91       		.byte	0x91
 2965 0293 74       		.sleb128 -12
 2966 0294 0E       		.uleb128 0xe
 2967 0295 26010000 		.4byte	.LASF37
 2968 0299 01       		.byte	0x1
 2969 029a E902     		.2byte	0x2e9
 2970 029c 76000000 		.4byte	0x76
 2971 02a0 02       		.uleb128 0x2
 2972 02a1 91       		.byte	0x91
 2973 02a2 72       		.sleb128 -14
 2974 02a3 00       		.byte	0
 2975 02a4 11       		.uleb128 0x11
 2976 02a5 3E070000 		.4byte	.LASF38
 2977 02a9 01       		.byte	0x1
 2978 02aa 1303     		.2byte	0x313
 2979 02ac 00000000 		.4byte	.LFB45
 2980 02b0 20000000 		.4byte	.LFE45-.LFB45
 2981 02b4 01       		.uleb128 0x1
 2982 02b5 9C       		.byte	0x9c
 2983 02b6 D9020000 		.4byte	0x2d9
 2984 02ba 0E       		.uleb128 0xe
 2985 02bb 50010000 		.4byte	.LASF30
 2986 02bf 01       		.byte	0x1
 2987 02c0 1303     		.2byte	0x313
 2988 02c2 81000000 		.4byte	0x81
 2989 02c6 02       		.uleb128 0x2
 2990 02c7 91       		.byte	0x91
 2991 02c8 74       		.sleb128 -12
 2992 02c9 0E       		.uleb128 0xe
 2993 02ca F5050000 		.4byte	.LASF39
 2994 02ce 01       		.byte	0x1
 2995 02cf 1303     		.2byte	0x313
 2996 02d1 81000000 		.4byte	0x81
 2997 02d5 02       		.uleb128 0x2
 2998 02d6 91       		.byte	0x91
 2999 02d7 70       		.sleb128 -16
 3000 02d8 00       		.byte	0
 3001 02d9 10       		.uleb128 0x10
 3002 02da 00070000 		.4byte	.LASF40
 3003 02de 01       		.byte	0x1
 3004 02df 3C03     		.2byte	0x33c
 3005 02e1 81000000 		.4byte	0x81
 3006 02e5 00000000 		.4byte	.LFB46
 3007 02e9 1C000000 		.4byte	.LFE46-.LFB46
 3008 02ed 01       		.uleb128 0x1
 3009 02ee 9C       		.byte	0x9c
 3010 02ef 03030000 		.4byte	0x303
 3011 02f3 0E       		.uleb128 0xe
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 92


 3012 02f4 50010000 		.4byte	.LASF30
 3013 02f8 01       		.byte	0x1
 3014 02f9 3C03     		.2byte	0x33c
 3015 02fb 81000000 		.4byte	0x81
 3016 02ff 02       		.uleb128 0x2
 3017 0300 91       		.byte	0x91
 3018 0301 74       		.sleb128 -12
 3019 0302 00       		.byte	0
 3020 0303 0A       		.uleb128 0xa
 3021 0304 4A080000 		.4byte	.LASF41
 3022 0308 01       		.byte	0x1
 3023 0309 5703     		.2byte	0x357
 3024 030b 00000000 		.4byte	.LFB47
 3025 030f 26000000 		.4byte	.LFE47-.LFB47
 3026 0313 01       		.uleb128 0x1
 3027 0314 9C       		.byte	0x9c
 3028 0315 29030000 		.4byte	0x329
 3029 0319 0B       		.uleb128 0xb
 3030 031a CC020000 		.4byte	.LASF27
 3031 031e 01       		.byte	0x1
 3032 031f 5903     		.2byte	0x359
 3033 0321 81000000 		.4byte	0x81
 3034 0325 02       		.uleb128 0x2
 3035 0326 91       		.byte	0x91
 3036 0327 74       		.sleb128 -12
 3037 0328 00       		.byte	0
 3038 0329 0A       		.uleb128 0xa
 3039 032a CD040000 		.4byte	.LASF42
 3040 032e 01       		.byte	0x1
 3041 032f F503     		.2byte	0x3f5
 3042 0331 00000000 		.4byte	.LFB48
 3043 0335 B4000000 		.4byte	.LFE48-.LFB48
 3044 0339 01       		.uleb128 0x1
 3045 033a 9C       		.byte	0x9c
 3046 033b 9A030000 		.4byte	0x39a
 3047 033f 0E       		.uleb128 0xe
 3048 0340 5C000000 		.4byte	.LASF28
 3049 0344 01       		.byte	0x1
 3050 0345 F503     		.2byte	0x3f5
 3051 0347 81000000 		.4byte	0x81
 3052 034b 02       		.uleb128 0x2
 3053 034c 91       		.byte	0x91
 3054 034d 5C       		.sleb128 -36
 3055 034e 0B       		.uleb128 0xb
 3056 034f 11040000 		.4byte	.LASF43
 3057 0353 01       		.byte	0x1
 3058 0354 F703     		.2byte	0x3f7
 3059 0356 6B000000 		.4byte	0x6b
 3060 035a 02       		.uleb128 0x2
 3061 035b 91       		.byte	0x91
 3062 035c 6B       		.sleb128 -21
 3063 035d 0B       		.uleb128 0xb
 3064 035e 3C080000 		.4byte	.LASF44
 3065 0362 01       		.byte	0x1
 3066 0363 F803     		.2byte	0x3f8
 3067 0365 6B000000 		.4byte	0x6b
 3068 0369 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 93


 3069 036a 91       		.byte	0x91
 3070 036b 6A       		.sleb128 -22
 3071 036c 0B       		.uleb128 0xb
 3072 036d 77060000 		.4byte	.LASF45
 3073 0371 01       		.byte	0x1
 3074 0372 F903     		.2byte	0x3f9
 3075 0374 6B000000 		.4byte	0x6b
 3076 0378 02       		.uleb128 0x2
 3077 0379 91       		.byte	0x91
 3078 037a 69       		.sleb128 -23
 3079 037b 0B       		.uleb128 0xb
 3080 037c D3080000 		.4byte	.LASF46
 3081 0380 01       		.byte	0x1
 3082 0381 FA03     		.2byte	0x3fa
 3083 0383 81000000 		.4byte	0x81
 3084 0387 02       		.uleb128 0x2
 3085 0388 91       		.byte	0x91
 3086 0389 64       		.sleb128 -28
 3087 038a 0B       		.uleb128 0xb
 3088 038b 72060000 		.4byte	.LASF47
 3089 038f 01       		.byte	0x1
 3090 0390 FB03     		.2byte	0x3fb
 3091 0392 81000000 		.4byte	0x81
 3092 0396 02       		.uleb128 0x2
 3093 0397 91       		.byte	0x91
 3094 0398 6C       		.sleb128 -20
 3095 0399 00       		.byte	0
 3096 039a 0A       		.uleb128 0xa
 3097 039b 62040000 		.4byte	.LASF48
 3098 039f 01       		.byte	0x1
 3099 03a0 2A04     		.2byte	0x42a
 3100 03a2 00000000 		.4byte	.LFB49
 3101 03a6 04010000 		.4byte	.LFE49-.LFB49
 3102 03aa 01       		.uleb128 0x1
 3103 03ab 9C       		.byte	0x9c
 3104 03ac 29040000 		.4byte	0x429
 3105 03b0 0E       		.uleb128 0xe
 3106 03b1 5C000000 		.4byte	.LASF28
 3107 03b5 01       		.byte	0x1
 3108 03b6 2A04     		.2byte	0x42a
 3109 03b8 81000000 		.4byte	0x81
 3110 03bc 02       		.uleb128 0x2
 3111 03bd 91       		.byte	0x91
 3112 03be 54       		.sleb128 -44
 3113 03bf 0B       		.uleb128 0xb
 3114 03c0 77060000 		.4byte	.LASF45
 3115 03c4 01       		.byte	0x1
 3116 03c5 2C04     		.2byte	0x42c
 3117 03c7 6B000000 		.4byte	0x6b
 3118 03cb 02       		.uleb128 0x2
 3119 03cc 91       		.byte	0x91
 3120 03cd 61       		.sleb128 -31
 3121 03ce 0B       		.uleb128 0xb
 3122 03cf D3080000 		.4byte	.LASF46
 3123 03d3 01       		.byte	0x1
 3124 03d4 2D04     		.2byte	0x42d
 3125 03d6 81000000 		.4byte	0x81
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 94


 3126 03da 02       		.uleb128 0x2
 3127 03db 91       		.byte	0x91
 3128 03dc 5C       		.sleb128 -36
 3129 03dd 0B       		.uleb128 0xb
 3130 03de 72060000 		.4byte	.LASF47
 3131 03e2 01       		.byte	0x1
 3132 03e3 2F04     		.2byte	0x42f
 3133 03e5 81000000 		.4byte	0x81
 3134 03e9 02       		.uleb128 0x2
 3135 03ea 91       		.byte	0x91
 3136 03eb 64       		.sleb128 -28
 3137 03ec 0B       		.uleb128 0xb
 3138 03ed 3C080000 		.4byte	.LASF44
 3139 03f1 01       		.byte	0x1
 3140 03f2 3004     		.2byte	0x430
 3141 03f4 6B000000 		.4byte	0x6b
 3142 03f8 02       		.uleb128 0x2
 3143 03f9 91       		.byte	0x91
 3144 03fa 63       		.sleb128 -29
 3145 03fb 0B       		.uleb128 0xb
 3146 03fc 11040000 		.4byte	.LASF43
 3147 0400 01       		.byte	0x1
 3148 0401 3104     		.2byte	0x431
 3149 0403 6B000000 		.4byte	0x6b
 3150 0407 02       		.uleb128 0x2
 3151 0408 91       		.byte	0x91
 3152 0409 62       		.sleb128 -30
 3153 040a 0B       		.uleb128 0xb
 3154 040b 95040000 		.4byte	.LASF49
 3155 040f 01       		.byte	0x1
 3156 0410 3304     		.2byte	0x433
 3157 0412 81000000 		.4byte	0x81
 3158 0416 02       		.uleb128 0x2
 3159 0417 91       		.byte	0x91
 3160 0418 6C       		.sleb128 -20
 3161 0419 0B       		.uleb128 0xb
 3162 041a 06020000 		.4byte	.LASF50
 3163 041e 01       		.byte	0x1
 3164 041f 3404     		.2byte	0x434
 3165 0421 81000000 		.4byte	0x81
 3166 0425 02       		.uleb128 0x2
 3167 0426 91       		.byte	0x91
 3168 0427 68       		.sleb128 -24
 3169 0428 00       		.byte	0
 3170 0429 0A       		.uleb128 0xa
 3171 042a FD020000 		.4byte	.LASF51
 3172 042e 01       		.byte	0x1
 3173 042f 7704     		.2byte	0x477
 3174 0431 00000000 		.4byte	.LFB50
 3175 0435 44000000 		.4byte	.LFE50-.LFB50
 3176 0439 01       		.uleb128 0x1
 3177 043a 9C       		.byte	0x9c
 3178 043b 7C040000 		.4byte	0x47c
 3179 043f 0E       		.uleb128 0xe
 3180 0440 1C060000 		.4byte	.LASF52
 3181 0444 01       		.byte	0x1
 3182 0445 7704     		.2byte	0x477
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 95


 3183 0447 81000000 		.4byte	0x81
 3184 044b 02       		.uleb128 0x2
 3185 044c 91       		.byte	0x91
 3186 044d 64       		.sleb128 -28
 3187 044e 0B       		.uleb128 0xb
 3188 044f 59020000 		.4byte	.LASF20
 3189 0453 01       		.byte	0x1
 3190 0454 7904     		.2byte	0x479
 3191 0456 81000000 		.4byte	0x81
 3192 045a 02       		.uleb128 0x2
 3193 045b 91       		.byte	0x91
 3194 045c 74       		.sleb128 -12
 3195 045d 0B       		.uleb128 0xb
 3196 045e D5020000 		.4byte	.LASF53
 3197 0462 01       		.byte	0x1
 3198 0463 7A04     		.2byte	0x47a
 3199 0465 81000000 		.4byte	0x81
 3200 0469 02       		.uleb128 0x2
 3201 046a 91       		.byte	0x91
 3202 046b 70       		.sleb128 -16
 3203 046c 0B       		.uleb128 0xb
 3204 046d 31070000 		.4byte	.LASF54
 3205 0471 01       		.byte	0x1
 3206 0472 7B04     		.2byte	0x47b
 3207 0474 81000000 		.4byte	0x81
 3208 0478 02       		.uleb128 0x2
 3209 0479 91       		.byte	0x91
 3210 047a 6C       		.sleb128 -20
 3211 047b 00       		.byte	0
 3212 047c 0A       		.uleb128 0xa
 3213 047d DB000000 		.4byte	.LASF55
 3214 0481 01       		.byte	0x1
 3215 0482 A704     		.2byte	0x4a7
 3216 0484 00000000 		.4byte	.LFB51
 3217 0488 38000000 		.4byte	.LFE51-.LFB51
 3218 048c 01       		.uleb128 0x1
 3219 048d 9C       		.byte	0x9c
 3220 048e A2040000 		.4byte	0x4a2
 3221 0492 0B       		.uleb128 0xb
 3222 0493 D3080000 		.4byte	.LASF46
 3223 0497 01       		.byte	0x1
 3224 0498 A904     		.2byte	0x4a9
 3225 049a 81000000 		.4byte	0x81
 3226 049e 02       		.uleb128 0x2
 3227 049f 91       		.byte	0x91
 3228 04a0 74       		.sleb128 -12
 3229 04a1 00       		.byte	0
 3230 04a2 11       		.uleb128 0x11
 3231 04a3 58030000 		.4byte	.LASF56
 3232 04a7 01       		.byte	0x1
 3233 04a8 DB04     		.2byte	0x4db
 3234 04aa 00000000 		.4byte	.LFB52
 3235 04ae 5C000000 		.4byte	.LFE52-.LFB52
 3236 04b2 01       		.uleb128 0x1
 3237 04b3 9C       		.byte	0x9c
 3238 04b4 04050000 		.4byte	0x504
 3239 04b8 0E       		.uleb128 0xe
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 96


 3240 04b9 1C060000 		.4byte	.LASF52
 3241 04bd 01       		.byte	0x1
 3242 04be DB04     		.2byte	0x4db
 3243 04c0 81000000 		.4byte	0x81
 3244 04c4 02       		.uleb128 0x2
 3245 04c5 91       		.byte	0x91
 3246 04c6 6C       		.sleb128 -20
 3247 04c7 0E       		.uleb128 0xe
 3248 04c8 68060000 		.4byte	.LASF57
 3249 04cc 01       		.byte	0x1
 3250 04cd DB04     		.2byte	0x4db
 3251 04cf 81000000 		.4byte	0x81
 3252 04d3 02       		.uleb128 0x2
 3253 04d4 91       		.byte	0x91
 3254 04d5 68       		.sleb128 -24
 3255 04d6 0E       		.uleb128 0xe
 3256 04d7 2E030000 		.4byte	.LASF58
 3257 04db 01       		.byte	0x1
 3258 04dc DB04     		.2byte	0x4db
 3259 04de 81000000 		.4byte	0x81
 3260 04e2 02       		.uleb128 0x2
 3261 04e3 91       		.byte	0x91
 3262 04e4 64       		.sleb128 -28
 3263 04e5 0B       		.uleb128 0xb
 3264 04e6 11040000 		.4byte	.LASF43
 3265 04ea 01       		.byte	0x1
 3266 04eb DD04     		.2byte	0x4dd
 3267 04ed 81000000 		.4byte	0x81
 3268 04f1 02       		.uleb128 0x2
 3269 04f2 91       		.byte	0x91
 3270 04f3 74       		.sleb128 -12
 3271 04f4 0B       		.uleb128 0xb
 3272 04f5 D3080000 		.4byte	.LASF46
 3273 04f9 01       		.byte	0x1
 3274 04fa DE04     		.2byte	0x4de
 3275 04fc 81000000 		.4byte	0x81
 3276 0500 02       		.uleb128 0x2
 3277 0501 91       		.byte	0x91
 3278 0502 70       		.sleb128 -16
 3279 0503 00       		.byte	0
 3280 0504 0A       		.uleb128 0xa
 3281 0505 BB020000 		.4byte	.LASF59
 3282 0509 01       		.byte	0x1
 3283 050a FF04     		.2byte	0x4ff
 3284 050c 00000000 		.4byte	.LFB53
 3285 0510 34010000 		.4byte	.LFE53-.LFB53
 3286 0514 01       		.uleb128 0x1
 3287 0515 9C       		.byte	0x9c
 3288 0516 75050000 		.4byte	0x575
 3289 051a 0E       		.uleb128 0xe
 3290 051b 5C000000 		.4byte	.LASF28
 3291 051f 01       		.byte	0x1
 3292 0520 FF04     		.2byte	0x4ff
 3293 0522 81000000 		.4byte	0x81
 3294 0526 02       		.uleb128 0x2
 3295 0527 91       		.byte	0x91
 3296 0528 54       		.sleb128 -44
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 97


 3297 0529 0B       		.uleb128 0xb
 3298 052a 50010000 		.4byte	.LASF30
 3299 052e 01       		.byte	0x1
 3300 052f 0105     		.2byte	0x501
 3301 0531 6B000000 		.4byte	0x6b
 3302 0535 02       		.uleb128 0x2
 3303 0536 91       		.byte	0x91
 3304 0537 6B       		.sleb128 -21
 3305 0538 0B       		.uleb128 0xb
 3306 0539 77060000 		.4byte	.LASF45
 3307 053d 01       		.byte	0x1
 3308 053e 0205     		.2byte	0x502
 3309 0540 6B000000 		.4byte	0x6b
 3310 0544 02       		.uleb128 0x2
 3311 0545 91       		.byte	0x91
 3312 0546 5F       		.sleb128 -33
 3313 0547 0B       		.uleb128 0xb
 3314 0548 1E040000 		.4byte	.LASF21
 3315 054c 01       		.byte	0x1
 3316 054d 0305     		.2byte	0x503
 3317 054f 81000000 		.4byte	0x81
 3318 0553 02       		.uleb128 0x2
 3319 0554 91       		.byte	0x91
 3320 0555 60       		.sleb128 -32
 3321 0556 0B       		.uleb128 0xb
 3322 0557 E2020000 		.4byte	.LASF60
 3323 055b 01       		.byte	0x1
 3324 055c 0405     		.2byte	0x504
 3325 055e 81000000 		.4byte	0x81
 3326 0562 02       		.uleb128 0x2
 3327 0563 91       		.byte	0x91
 3328 0564 6C       		.sleb128 -20
 3329 0565 0B       		.uleb128 0xb
 3330 0566 71070000 		.4byte	.LASF61
 3331 056a 01       		.byte	0x1
 3332 056b 0D05     		.2byte	0x50d
 3333 056d 81000000 		.4byte	0x81
 3334 0571 02       		.uleb128 0x2
 3335 0572 91       		.byte	0x91
 3336 0573 64       		.sleb128 -28
 3337 0574 00       		.byte	0
 3338 0575 0A       		.uleb128 0xa
 3339 0576 A7070000 		.4byte	.LASF62
 3340 057a 01       		.byte	0x1
 3341 057b B705     		.2byte	0x5b7
 3342 057d 00000000 		.4byte	.LFB54
 3343 0581 BC000000 		.4byte	.LFE54-.LFB54
 3344 0585 01       		.uleb128 0x1
 3345 0586 9C       		.byte	0x9c
 3346 0587 C8050000 		.4byte	0x5c8
 3347 058b 0E       		.uleb128 0xe
 3348 058c 5C000000 		.4byte	.LASF28
 3349 0590 01       		.byte	0x1
 3350 0591 B705     		.2byte	0x5b7
 3351 0593 81000000 		.4byte	0x81
 3352 0597 02       		.uleb128 0x2
 3353 0598 91       		.byte	0x91
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 98


 3354 0599 64       		.sleb128 -28
 3355 059a 0B       		.uleb128 0xb
 3356 059b 1E040000 		.4byte	.LASF21
 3357 059f 01       		.byte	0x1
 3358 05a0 B905     		.2byte	0x5b9
 3359 05a2 81000000 		.4byte	0x81
 3360 05a6 02       		.uleb128 0x2
 3361 05a7 91       		.byte	0x91
 3362 05a8 6C       		.sleb128 -20
 3363 05a9 0B       		.uleb128 0xb
 3364 05aa 71070000 		.4byte	.LASF61
 3365 05ae 01       		.byte	0x1
 3366 05af BC05     		.2byte	0x5bc
 3367 05b1 81000000 		.4byte	0x81
 3368 05b5 02       		.uleb128 0x2
 3369 05b6 91       		.byte	0x91
 3370 05b7 70       		.sleb128 -16
 3371 05b8 0B       		.uleb128 0xb
 3372 05b9 50010000 		.4byte	.LASF30
 3373 05bd 01       		.byte	0x1
 3374 05be BD05     		.2byte	0x5bd
 3375 05c0 81000000 		.4byte	0x81
 3376 05c4 02       		.uleb128 0x2
 3377 05c5 91       		.byte	0x91
 3378 05c6 74       		.sleb128 -12
 3379 05c7 00       		.byte	0
 3380 05c8 11       		.uleb128 0x11
 3381 05c9 97000000 		.4byte	.LASF63
 3382 05cd 01       		.byte	0x1
 3383 05ce 1106     		.2byte	0x611
 3384 05d0 00000000 		.4byte	.LFB55
 3385 05d4 80000000 		.4byte	.LFE55-.LFB55
 3386 05d8 01       		.uleb128 0x1
 3387 05d9 9C       		.byte	0x9c
 3388 05da 0C060000 		.4byte	0x60c
 3389 05de 0E       		.uleb128 0xe
 3390 05df 68060000 		.4byte	.LASF57
 3391 05e3 01       		.byte	0x1
 3392 05e4 1106     		.2byte	0x611
 3393 05e6 81000000 		.4byte	0x81
 3394 05ea 02       		.uleb128 0x2
 3395 05eb 91       		.byte	0x91
 3396 05ec 64       		.sleb128 -28
 3397 05ed 0E       		.uleb128 0xe
 3398 05ee 2E030000 		.4byte	.LASF58
 3399 05f2 01       		.byte	0x1
 3400 05f3 1106     		.2byte	0x611
 3401 05f5 81000000 		.4byte	0x81
 3402 05f9 02       		.uleb128 0x2
 3403 05fa 91       		.byte	0x91
 3404 05fb 60       		.sleb128 -32
 3405 05fc 0B       		.uleb128 0xb
 3406 05fd 1E040000 		.4byte	.LASF21
 3407 0601 01       		.byte	0x1
 3408 0602 1306     		.2byte	0x613
 3409 0604 81000000 		.4byte	0x81
 3410 0608 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 99


 3411 0609 91       		.byte	0x91
 3412 060a 6C       		.sleb128 -20
 3413 060b 00       		.byte	0
 3414 060c 11       		.uleb128 0x11
 3415 060d B9070000 		.4byte	.LASF64
 3416 0611 01       		.byte	0x1
 3417 0612 3406     		.2byte	0x634
 3418 0614 00000000 		.4byte	.LFB56
 3419 0618 30000000 		.4byte	.LFE56-.LFB56
 3420 061c 01       		.uleb128 0x1
 3421 061d 9C       		.byte	0x9c
 3422 061e 41060000 		.4byte	0x641
 3423 0622 0E       		.uleb128 0xe
 3424 0623 BF000000 		.4byte	.LASF65
 3425 0627 01       		.byte	0x1
 3426 0628 3406     		.2byte	0x634
 3427 062a 81000000 		.4byte	0x81
 3428 062e 02       		.uleb128 0x2
 3429 062f 91       		.byte	0x91
 3430 0630 6C       		.sleb128 -20
 3431 0631 0B       		.uleb128 0xb
 3432 0632 1E040000 		.4byte	.LASF21
 3433 0636 01       		.byte	0x1
 3434 0637 3606     		.2byte	0x636
 3435 0639 81000000 		.4byte	0x81
 3436 063d 02       		.uleb128 0x2
 3437 063e 91       		.byte	0x91
 3438 063f 74       		.sleb128 -12
 3439 0640 00       		.byte	0
 3440 0641 0F       		.uleb128 0xf
 3441 0642 DD010000 		.4byte	.LASF67
 3442 0646 01       		.byte	0x1
 3443 0647 5806     		.2byte	0x658
 3444 0649 81000000 		.4byte	0x81
 3445 064d 00000000 		.4byte	.LFB57
 3446 0651 2C000000 		.4byte	.LFE57-.LFB57
 3447 0655 01       		.uleb128 0x1
 3448 0656 9C       		.byte	0x9c
 3449 0657 10       		.uleb128 0x10
 3450 0658 AE010000 		.4byte	.LASF68
 3451 065c 01       		.byte	0x1
 3452 065d 7406     		.2byte	0x674
 3453 065f 81000000 		.4byte	0x81
 3454 0663 00000000 		.4byte	.LFB58
 3455 0667 44000000 		.4byte	.LFE58-.LFB58
 3456 066b 01       		.uleb128 0x1
 3457 066c 9C       		.byte	0x9c
 3458 066d AE060000 		.4byte	0x6ae
 3459 0671 0E       		.uleb128 0xe
 3460 0672 5D010000 		.4byte	.LASF69
 3461 0676 01       		.byte	0x1
 3462 0677 7406     		.2byte	0x674
 3463 0679 CE000000 		.4byte	0xce
 3464 067d 02       		.uleb128 0x2
 3465 067e 91       		.byte	0x91
 3466 067f 6C       		.sleb128 -20
 3467 0680 0E       		.uleb128 0xe
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 100


 3468 0681 F4020000 		.4byte	.LASF70
 3469 0685 01       		.byte	0x1
 3470 0686 7406     		.2byte	0x674
 3471 0688 81000000 		.4byte	0x81
 3472 068c 02       		.uleb128 0x2
 3473 068d 91       		.byte	0x91
 3474 068e 68       		.sleb128 -24
 3475 068f 0B       		.uleb128 0xb
 3476 0690 63020000 		.4byte	.LASF71
 3477 0694 01       		.byte	0x1
 3478 0695 7606     		.2byte	0x676
 3479 0697 81000000 		.4byte	0x81
 3480 069b 02       		.uleb128 0x2
 3481 069c 91       		.byte	0x91
 3482 069d 74       		.sleb128 -12
 3483 069e 0B       		.uleb128 0xb
 3484 069f 2B000000 		.4byte	.LASF72
 3485 06a3 01       		.byte	0x1
 3486 06a4 7706     		.2byte	0x677
 3487 06a6 6B000000 		.4byte	0x6b
 3488 06aa 02       		.uleb128 0x2
 3489 06ab 91       		.byte	0x91
 3490 06ac 73       		.sleb128 -13
 3491 06ad 00       		.byte	0
 3492 06ae 11       		.uleb128 0x11
 3493 06af B8040000 		.4byte	.LASF73
 3494 06b3 01       		.byte	0x1
 3495 06b4 9F06     		.2byte	0x69f
 3496 06b6 00000000 		.4byte	.LFB59
 3497 06ba 68000000 		.4byte	.LFE59-.LFB59
 3498 06be 01       		.uleb128 0x1
 3499 06bf 9C       		.byte	0x9c
 3500 06c0 10070000 		.4byte	0x710
 3501 06c4 0E       		.uleb128 0xe
 3502 06c5 5D010000 		.4byte	.LASF69
 3503 06c9 01       		.byte	0x1
 3504 06ca 9F06     		.2byte	0x69f
 3505 06cc C8000000 		.4byte	0xc8
 3506 06d0 02       		.uleb128 0x2
 3507 06d1 91       		.byte	0x91
 3508 06d2 6C       		.sleb128 -20
 3509 06d3 0E       		.uleb128 0xe
 3510 06d4 F4020000 		.4byte	.LASF70
 3511 06d8 01       		.byte	0x1
 3512 06d9 9F06     		.2byte	0x69f
 3513 06db 81000000 		.4byte	0x81
 3514 06df 02       		.uleb128 0x2
 3515 06e0 91       		.byte	0x91
 3516 06e1 68       		.sleb128 -24
 3517 06e2 0E       		.uleb128 0xe
 3518 06e3 26010000 		.4byte	.LASF37
 3519 06e7 01       		.byte	0x1
 3520 06e8 9F06     		.2byte	0x69f
 3521 06ea 81000000 		.4byte	0x81
 3522 06ee 02       		.uleb128 0x2
 3523 06ef 91       		.byte	0x91
 3524 06f0 64       		.sleb128 -28
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 101


 3525 06f1 0B       		.uleb128 0xb
 3526 06f2 63020000 		.4byte	.LASF71
 3527 06f6 01       		.byte	0x1
 3528 06f7 A106     		.2byte	0x6a1
 3529 06f9 81000000 		.4byte	0x81
 3530 06fd 02       		.uleb128 0x2
 3531 06fe 91       		.byte	0x91
 3532 06ff 74       		.sleb128 -12
 3533 0700 0B       		.uleb128 0xb
 3534 0701 2B000000 		.4byte	.LASF72
 3535 0705 01       		.byte	0x1
 3536 0706 A206     		.2byte	0x6a2
 3537 0708 6B000000 		.4byte	0x6b
 3538 070c 02       		.uleb128 0x2
 3539 070d 91       		.byte	0x91
 3540 070e 73       		.sleb128 -13
 3541 070f 00       		.byte	0
 3542 0710 10       		.uleb128 0x10
 3543 0711 E4060000 		.4byte	.LASF74
 3544 0715 01       		.byte	0x1
 3545 0716 D106     		.2byte	0x6d1
 3546 0718 81000000 		.4byte	0x81
 3547 071c 00000000 		.4byte	.LFB60
 3548 0720 1C000000 		.4byte	.LFE60-.LFB60
 3549 0724 01       		.uleb128 0x1
 3550 0725 9C       		.byte	0x9c
 3551 0726 3A070000 		.4byte	0x73a
 3552 072a 0E       		.uleb128 0xe
 3553 072b 5C000000 		.4byte	.LASF28
 3554 072f 01       		.byte	0x1
 3555 0730 D106     		.2byte	0x6d1
 3556 0732 81000000 		.4byte	0x81
 3557 0736 02       		.uleb128 0x2
 3558 0737 91       		.byte	0x91
 3559 0738 74       		.sleb128 -12
 3560 0739 00       		.byte	0
 3561 073a 11       		.uleb128 0x11
 3562 073b 00060000 		.4byte	.LASF75
 3563 073f 01       		.byte	0x1
 3564 0740 F006     		.2byte	0x6f0
 3565 0742 00000000 		.4byte	.LFB61
 3566 0746 20000000 		.4byte	.LFE61-.LFB61
 3567 074a 01       		.uleb128 0x1
 3568 074b 9C       		.byte	0x9c
 3569 074c 6F070000 		.4byte	0x76f
 3570 0750 0E       		.uleb128 0xe
 3571 0751 5C000000 		.4byte	.LASF28
 3572 0755 01       		.byte	0x1
 3573 0756 F006     		.2byte	0x6f0
 3574 0758 81000000 		.4byte	0x81
 3575 075c 02       		.uleb128 0x2
 3576 075d 91       		.byte	0x91
 3577 075e 74       		.sleb128 -12
 3578 075f 0E       		.uleb128 0xe
 3579 0760 B2060000 		.4byte	.LASF76
 3580 0764 01       		.byte	0x1
 3581 0765 F006     		.2byte	0x6f0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 102


 3582 0767 81000000 		.4byte	0x81
 3583 076b 02       		.uleb128 0x2
 3584 076c 91       		.byte	0x91
 3585 076d 70       		.sleb128 -16
 3586 076e 00       		.byte	0
 3587 076f 10       		.uleb128 0x10
 3588 0770 86060000 		.4byte	.LASF77
 3589 0774 01       		.byte	0x1
 3590 0775 1007     		.2byte	0x710
 3591 0777 81000000 		.4byte	0x81
 3592 077b 00000000 		.4byte	.LFB62
 3593 077f 1C000000 		.4byte	.LFE62-.LFB62
 3594 0783 01       		.uleb128 0x1
 3595 0784 9C       		.byte	0x9c
 3596 0785 99070000 		.4byte	0x799
 3597 0789 0E       		.uleb128 0xe
 3598 078a 5C000000 		.4byte	.LASF28
 3599 078e 01       		.byte	0x1
 3600 078f 1007     		.2byte	0x710
 3601 0791 81000000 		.4byte	0x81
 3602 0795 02       		.uleb128 0x2
 3603 0796 91       		.byte	0x91
 3604 0797 74       		.sleb128 -12
 3605 0798 00       		.byte	0
 3606 0799 11       		.uleb128 0x11
 3607 079a 95030000 		.4byte	.LASF78
 3608 079e 01       		.byte	0x1
 3609 079f 2F07     		.2byte	0x72f
 3610 07a1 00000000 		.4byte	.LFB63
 3611 07a5 20000000 		.4byte	.LFE63-.LFB63
 3612 07a9 01       		.uleb128 0x1
 3613 07aa 9C       		.byte	0x9c
 3614 07ab CE070000 		.4byte	0x7ce
 3615 07af 0E       		.uleb128 0xe
 3616 07b0 5C000000 		.4byte	.LASF28
 3617 07b4 01       		.byte	0x1
 3618 07b5 2F07     		.2byte	0x72f
 3619 07b7 81000000 		.4byte	0x81
 3620 07bb 02       		.uleb128 0x2
 3621 07bc 91       		.byte	0x91
 3622 07bd 74       		.sleb128 -12
 3623 07be 0E       		.uleb128 0xe
 3624 07bf 44040000 		.4byte	.LASF79
 3625 07c3 01       		.byte	0x1
 3626 07c4 2F07     		.2byte	0x72f
 3627 07c6 81000000 		.4byte	0x81
 3628 07ca 02       		.uleb128 0x2
 3629 07cb 91       		.byte	0x91
 3630 07cc 70       		.sleb128 -16
 3631 07cd 00       		.byte	0
 3632 07ce 10       		.uleb128 0x10
 3633 07cf F9070000 		.4byte	.LASF80
 3634 07d3 01       		.byte	0x1
 3635 07d4 4E07     		.2byte	0x74e
 3636 07d6 81000000 		.4byte	0x81
 3637 07da 00000000 		.4byte	.LFB64
 3638 07de 1C000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 103


 3639 07e2 01       		.uleb128 0x1
 3640 07e3 9C       		.byte	0x9c
 3641 07e4 F8070000 		.4byte	0x7f8
 3642 07e8 0E       		.uleb128 0xe
 3643 07e9 5C000000 		.4byte	.LASF28
 3644 07ed 01       		.byte	0x1
 3645 07ee 4E07     		.2byte	0x74e
 3646 07f0 81000000 		.4byte	0x81
 3647 07f4 02       		.uleb128 0x2
 3648 07f5 91       		.byte	0x91
 3649 07f6 74       		.sleb128 -12
 3650 07f7 00       		.byte	0
 3651 07f8 11       		.uleb128 0x11
 3652 07f9 92020000 		.4byte	.LASF81
 3653 07fd 01       		.byte	0x1
 3654 07fe 6907     		.2byte	0x769
 3655 0800 00000000 		.4byte	.LFB65
 3656 0804 20000000 		.4byte	.LFE65-.LFB65
 3657 0808 01       		.uleb128 0x1
 3658 0809 9C       		.byte	0x9c
 3659 080a 2D080000 		.4byte	0x82d
 3660 080e 0E       		.uleb128 0xe
 3661 080f 5C000000 		.4byte	.LASF28
 3662 0813 01       		.byte	0x1
 3663 0814 6907     		.2byte	0x769
 3664 0816 81000000 		.4byte	0x81
 3665 081a 02       		.uleb128 0x2
 3666 081b 91       		.byte	0x91
 3667 081c 74       		.sleb128 -12
 3668 081d 0E       		.uleb128 0xe
 3669 081e 51090000 		.4byte	.LASF82
 3670 0822 01       		.byte	0x1
 3671 0823 6907     		.2byte	0x769
 3672 0825 81000000 		.4byte	0x81
 3673 0829 02       		.uleb128 0x2
 3674 082a 91       		.byte	0x91
 3675 082b 70       		.sleb128 -16
 3676 082c 00       		.byte	0
 3677 082d 10       		.uleb128 0x10
 3678 082e 31060000 		.4byte	.LASF83
 3679 0832 01       		.byte	0x1
 3680 0833 8607     		.2byte	0x786
 3681 0835 81000000 		.4byte	0x81
 3682 0839 00000000 		.4byte	.LFB66
 3683 083d 1C000000 		.4byte	.LFE66-.LFB66
 3684 0841 01       		.uleb128 0x1
 3685 0842 9C       		.byte	0x9c
 3686 0843 57080000 		.4byte	0x857
 3687 0847 0E       		.uleb128 0xe
 3688 0848 5C000000 		.4byte	.LASF28
 3689 084c 01       		.byte	0x1
 3690 084d 8607     		.2byte	0x786
 3691 084f 81000000 		.4byte	0x81
 3692 0853 02       		.uleb128 0x2
 3693 0854 91       		.byte	0x91
 3694 0855 74       		.sleb128 -12
 3695 0856 00       		.byte	0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 104


 3696 0857 11       		.uleb128 0x11
 3697 0858 D8030000 		.4byte	.LASF84
 3698 085c 01       		.byte	0x1
 3699 085d A307     		.2byte	0x7a3
 3700 085f 00000000 		.4byte	.LFB67
 3701 0863 20000000 		.4byte	.LFE67-.LFB67
 3702 0867 01       		.uleb128 0x1
 3703 0868 9C       		.byte	0x9c
 3704 0869 8C080000 		.4byte	0x88c
 3705 086d 0E       		.uleb128 0xe
 3706 086e 5C000000 		.4byte	.LASF28
 3707 0872 01       		.byte	0x1
 3708 0873 A307     		.2byte	0x7a3
 3709 0875 81000000 		.4byte	0x81
 3710 0879 02       		.uleb128 0x2
 3711 087a 91       		.byte	0x91
 3712 087b 74       		.sleb128 -12
 3713 087c 0E       		.uleb128 0xe
 3714 087d 20020000 		.4byte	.LASF85
 3715 0881 01       		.byte	0x1
 3716 0882 A307     		.2byte	0x7a3
 3717 0884 81000000 		.4byte	0x81
 3718 0888 02       		.uleb128 0x2
 3719 0889 91       		.byte	0x91
 3720 088a 70       		.sleb128 -16
 3721 088b 00       		.byte	0
 3722 088c 0F       		.uleb128 0xf
 3723 088d C5000000 		.4byte	.LASF86
 3724 0891 01       		.byte	0x1
 3725 0892 C007     		.2byte	0x7c0
 3726 0894 81000000 		.4byte	0x81
 3727 0898 00000000 		.4byte	.LFB68
 3728 089c 20000000 		.4byte	.LFE68-.LFB68
 3729 08a0 01       		.uleb128 0x1
 3730 08a1 9C       		.byte	0x9c
 3731 08a2 11       		.uleb128 0x11
 3732 08a3 79040000 		.4byte	.LASF87
 3733 08a7 01       		.byte	0x1
 3734 08a8 DE07     		.2byte	0x7de
 3735 08aa 00000000 		.4byte	.LFB69
 3736 08ae 3C000000 		.4byte	.LFE69-.LFB69
 3737 08b2 01       		.uleb128 0x1
 3738 08b3 9C       		.byte	0x9c
 3739 08b4 C8080000 		.4byte	0x8c8
 3740 08b8 0E       		.uleb128 0xe
 3741 08b9 DA060000 		.4byte	.LASF88
 3742 08bd 01       		.byte	0x1
 3743 08be DE07     		.2byte	0x7de
 3744 08c0 81000000 		.4byte	0x81
 3745 08c4 02       		.uleb128 0x2
 3746 08c5 91       		.byte	0x91
 3747 08c6 74       		.sleb128 -12
 3748 08c7 00       		.byte	0
 3749 08c8 0D       		.uleb128 0xd
 3750 08c9 D1070000 		.4byte	.LASF89
 3751 08cd 01       		.byte	0x1
 3752 08ce 0608     		.2byte	0x806
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 105


 3753 08d0 76000000 		.4byte	0x76
 3754 08d4 00000000 		.4byte	.LFB70
 3755 08d8 4E000000 		.4byte	.LFE70-.LFB70
 3756 08dc 01       		.uleb128 0x1
 3757 08dd 9C       		.byte	0x9c
 3758 08de 10090000 		.4byte	0x910
 3759 08e2 0E       		.uleb128 0xe
 3760 08e3 5C000000 		.4byte	.LASF28
 3761 08e7 01       		.byte	0x1
 3762 08e8 0608     		.2byte	0x806
 3763 08ea 81000000 		.4byte	0x81
 3764 08ee 02       		.uleb128 0x2
 3765 08ef 91       		.byte	0x91
 3766 08f0 6C       		.sleb128 -20
 3767 08f1 0B       		.uleb128 0xb
 3768 08f2 21000000 		.4byte	.LASF90
 3769 08f6 01       		.byte	0x1
 3770 08f7 0808     		.2byte	0x808
 3771 08f9 81000000 		.4byte	0x81
 3772 08fd 02       		.uleb128 0x2
 3773 08fe 91       		.byte	0x91
 3774 08ff 74       		.sleb128 -12
 3775 0900 0B       		.uleb128 0xb
 3776 0901 4B000000 		.4byte	.LASF91
 3777 0905 01       		.byte	0x1
 3778 0906 0908     		.2byte	0x809
 3779 0908 81000000 		.4byte	0x81
 3780 090c 02       		.uleb128 0x2
 3781 090d 91       		.byte	0x91
 3782 090e 70       		.sleb128 -16
 3783 090f 00       		.byte	0
 3784 0910 11       		.uleb128 0x11
 3785 0911 F8040000 		.4byte	.LASF92
 3786 0915 01       		.byte	0x1
 3787 0916 7008     		.2byte	0x870
 3788 0918 00000000 		.4byte	.LFB71
 3789 091c 20000000 		.4byte	.LFE71-.LFB71
 3790 0920 01       		.uleb128 0x1
 3791 0921 9C       		.byte	0x9c
 3792 0922 45090000 		.4byte	0x945
 3793 0926 0E       		.uleb128 0xe
 3794 0927 5C000000 		.4byte	.LASF28
 3795 092b 01       		.byte	0x1
 3796 092c 7008     		.2byte	0x870
 3797 092e 81000000 		.4byte	0x81
 3798 0932 02       		.uleb128 0x2
 3799 0933 91       		.byte	0x91
 3800 0934 74       		.sleb128 -12
 3801 0935 0E       		.uleb128 0xe
 3802 0936 06020000 		.4byte	.LASF50
 3803 093a 01       		.byte	0x1
 3804 093b 7008     		.2byte	0x870
 3805 093d 81000000 		.4byte	0x81
 3806 0941 02       		.uleb128 0x2
 3807 0942 91       		.byte	0x91
 3808 0943 70       		.sleb128 -16
 3809 0944 00       		.byte	0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 106


 3810 0945 09       		.uleb128 0x9
 3811 0946 39030000 		.4byte	.LASF93
 3812 094a 01       		.byte	0x1
 3813 094b 26       		.byte	0x26
 3814 094c 6B000000 		.4byte	0x6b
 3815 0950 05       		.uleb128 0x5
 3816 0951 03       		.byte	0x3
 3817 0952 01000000 		.4byte	CapSense_initVar
 3818 0956 12       		.uleb128 0x12
 3819 0957 7B000000 		.4byte	.LASF94
 3820 095b 01       		.byte	0x1
 3821 095c 1E       		.byte	0x1e
 3822 095d 6B000000 		.4byte	0x6b
 3823 0961 05       		.uleb128 0x5
 3824 0962 03       		.byte	0x3
 3825 0963 00000000 		.4byte	CapSense_lowLevelTuningDone
 3826 0967 13       		.uleb128 0x13
 3827 0968 76000000 		.4byte	0x76
 3828 096c 77090000 		.4byte	0x977
 3829 0970 14       		.uleb128 0x14
 3830 0971 C1000000 		.4byte	0xc1
 3831 0975 00       		.byte	0
 3832 0976 00       		.byte	0
 3833 0977 12       		.uleb128 0x12
 3834 0978 0E000000 		.4byte	.LASF95
 3835 097c 01       		.byte	0x1
 3836 097d 2D       		.byte	0x2d
 3837 097e 67090000 		.4byte	0x967
 3838 0982 05       		.uleb128 0x5
 3839 0983 03       		.byte	0x3
 3840 0984 00000000 		.4byte	CapSense_sensorRaw
 3841 0988 13       		.uleb128 0x13
 3842 0989 6B000000 		.4byte	0x6b
 3843 098d 98090000 		.4byte	0x998
 3844 0991 14       		.uleb128 0x14
 3845 0992 C1000000 		.4byte	0xc1
 3846 0996 00       		.byte	0
 3847 0997 00       		.byte	0
 3848 0998 12       		.uleb128 0x12
 3849 0999 1B070000 		.4byte	.LASF96
 3850 099d 01       		.byte	0x1
 3851 099e 5A       		.byte	0x5a
 3852 099f A9090000 		.4byte	0x9a9
 3853 09a3 05       		.uleb128 0x5
 3854 09a4 03       		.byte	0x3
 3855 09a5 00000000 		.4byte	CapSense_widgetNumber
 3856 09a9 07       		.uleb128 0x7
 3857 09aa 88090000 		.4byte	0x988
 3858 09ae 12       		.uleb128 0x12
 3859 09af 1F080000 		.4byte	.LASF97
 3860 09b3 01       		.byte	0x1
 3861 09b4 29       		.byte	0x29
 3862 09b5 AC000000 		.4byte	0xac
 3863 09b9 05       		.uleb128 0x5
 3864 09ba 03       		.byte	0x3
 3865 09bb 00000000 		.4byte	CapSense_csdStatusVar
 3866 09bf 12       		.uleb128 0x12
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 107


 3867 09c0 3C090000 		.4byte	.LASF98
 3868 09c4 01       		.byte	0x1
 3869 09c5 2A       		.byte	0x2a
 3870 09c6 AC000000 		.4byte	0xac
 3871 09ca 05       		.uleb128 0x5
 3872 09cb 03       		.byte	0x3
 3873 09cc 00000000 		.4byte	CapSense_sensorIndex
 3874 09d0 13       		.uleb128 0x13
 3875 09d1 6B000000 		.4byte	0x6b
 3876 09d5 DB090000 		.4byte	0x9db
 3877 09d9 15       		.uleb128 0x15
 3878 09da 00       		.byte	0
 3879 09db 16       		.uleb128 0x16
 3880 09dc 32000000 		.4byte	.LASF99
 3881 09e0 01       		.byte	0x1
 3882 09e1 18       		.byte	0x18
 3883 09e2 D0090000 		.4byte	0x9d0
 3884 09e6 16       		.uleb128 0x16
 3885 09e7 6A020000 		.4byte	.LASF100
 3886 09eb 01       		.byte	0x1
 3887 09ec 19       		.byte	0x19
 3888 09ed D0090000 		.4byte	0x9d0
 3889 09f1 16       		.uleb128 0x16
 3890 09f2 43020000 		.4byte	.LASF101
 3891 09f6 01       		.byte	0x1
 3892 09f7 1F       		.byte	0x1f
 3893 09f8 88090000 		.4byte	0x988
 3894 09fc 12       		.uleb128 0x12
 3895 09fd 80020000 		.4byte	.LASF102
 3896 0a01 01       		.byte	0x1
 3897 0a02 33       		.byte	0x33
 3898 0a03 6B000000 		.4byte	0x6b
 3899 0a07 05       		.uleb128 0x5
 3900 0a08 03       		.byte	0x3
 3901 0a09 00000000 		.4byte	CapSense_csdTrim1
 3902 0a0d 12       		.uleb128 0x12
 3903 0a0e BB060000 		.4byte	.LASF103
 3904 0a12 01       		.byte	0x1
 3905 0a13 37       		.byte	0x37
 3906 0a14 88090000 		.4byte	0x988
 3907 0a18 05       		.uleb128 0x5
 3908 0a19 03       		.byte	0x3
 3909 0a1a 00000000 		.4byte	CapSense_unscannedSnsDriveMode
 3910 0a1e 12       		.uleb128 0x12
 3911 0a1f 78080000 		.4byte	.LASF104
 3912 0a23 01       		.byte	0x1
 3913 0a24 3A       		.byte	0x3a
 3914 0a25 88090000 		.4byte	0x988
 3915 0a29 05       		.uleb128 0x5
 3916 0a2a 03       		.byte	0x3
 3917 0a2b 00000000 		.4byte	CapSense_sensorEnableMaskBackup
 3918 0a2f 12       		.uleb128 0x12
 3919 0a30 C3010000 		.4byte	.LASF105
 3920 0a34 01       		.byte	0x1
 3921 0a35 3D       		.byte	0x3d
 3922 0a36 88090000 		.4byte	0x988
 3923 0a3a 05       		.uleb128 0x5
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 108


 3924 0a3b 03       		.byte	0x3
 3925 0a3c 00000000 		.4byte	CapSense_sensorEnableMask
 3926 0a40 13       		.uleb128 0x13
 3927 0a41 500A0000 		.4byte	0xa50
 3928 0a45 500A0000 		.4byte	0xa50
 3929 0a49 14       		.uleb128 0x14
 3930 0a4a C1000000 		.4byte	0xc1
 3931 0a4e 00       		.byte	0
 3932 0a4f 00       		.byte	0
 3933 0a50 06       		.uleb128 0x6
 3934 0a51 04       		.byte	0x4
 3935 0a52 560A0000 		.4byte	0xa56
 3936 0a56 05       		.uleb128 0x5
 3937 0a57 48000000 		.4byte	0x48
 3938 0a5b 12       		.uleb128 0x12
 3939 0a5c 51040000 		.4byte	.LASF106
 3940 0a60 01       		.byte	0x1
 3941 0a61 40       		.byte	0x40
 3942 0a62 400A0000 		.4byte	0xa40
 3943 0a66 05       		.uleb128 0x5
 3944 0a67 03       		.byte	0x3
 3945 0a68 00000000 		.4byte	CapSense_pcTable
 3946 0a6c 12       		.uleb128 0x12
 3947 0a6d 19050000 		.4byte	.LASF107
 3948 0a71 01       		.byte	0x1
 3949 0a72 44       		.byte	0x44
 3950 0a73 7D0A0000 		.4byte	0xa7d
 3951 0a77 05       		.uleb128 0x5
 3952 0a78 03       		.byte	0x3
 3953 0a79 00000000 		.4byte	CapSense_portTable
 3954 0a7d 07       		.uleb128 0x7
 3955 0a7e 88090000 		.4byte	0x988
 3956 0a82 13       		.uleb128 0x13
 3957 0a83 81000000 		.4byte	0x81
 3958 0a87 920A0000 		.4byte	0xa92
 3959 0a8b 14       		.uleb128 0x14
 3960 0a8c C1000000 		.4byte	0xc1
 3961 0a90 00       		.byte	0
 3962 0a91 00       		.byte	0
 3963 0a92 12       		.uleb128 0x12
 3964 0a93 84070000 		.4byte	.LASF108
 3965 0a97 01       		.byte	0x1
 3966 0a98 48       		.byte	0x48
 3967 0a99 A30A0000 		.4byte	0xaa3
 3968 0a9d 05       		.uleb128 0x5
 3969 0a9e 03       		.byte	0x3
 3970 0a9f 00000000 		.4byte	CapSense_maskTable
 3971 0aa3 07       		.uleb128 0x7
 3972 0aa4 820A0000 		.4byte	0xa82
 3973 0aa8 12       		.uleb128 0x12
 3974 0aa9 2E020000 		.4byte	.LASF109
 3975 0aad 01       		.byte	0x1
 3976 0aae 4C       		.byte	0x4c
 3977 0aaf B90A0000 		.4byte	0xab9
 3978 0ab3 05       		.uleb128 0x5
 3979 0ab4 03       		.byte	0x3
 3980 0ab5 00000000 		.4byte	CapSense_pinShiftTbl
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 109


 3981 0ab9 07       		.uleb128 0x7
 3982 0aba 88090000 		.4byte	0x988
 3983 0abe 12       		.uleb128 0x12
 3984 0abf 59070000 		.4byte	.LASF110
 3985 0ac3 01       		.byte	0x1
 3986 0ac4 50       		.byte	0x50
 3987 0ac5 88090000 		.4byte	0x988
 3988 0ac9 05       		.uleb128 0x5
 3989 0aca 03       		.byte	0x3
 3990 0acb 00000000 		.4byte	CapSense_modulationIDAC
 3991 0acf 12       		.uleb128 0x12
 3992 0ad0 2A040000 		.4byte	.LASF111
 3993 0ad4 01       		.byte	0x1
 3994 0ad5 51       		.byte	0x51
 3995 0ad6 88090000 		.4byte	0x988
 3996 0ada 05       		.uleb128 0x5
 3997 0adb 03       		.byte	0x3
 3998 0adc 00000000 		.4byte	CapSense_compensationIDAC
 3999 0ae0 12       		.uleb128 0x12
 4000 0ae1 4E060000 		.4byte	.LASF112
 4001 0ae5 01       		.byte	0x1
 4002 0ae6 53       		.byte	0x53
 4003 0ae7 820A0000 		.4byte	0xa82
 4004 0aeb 05       		.uleb128 0x5
 4005 0aec 03       		.byte	0x3
 4006 0aed 00000000 		.4byte	CapSense_widgetResolution
 4007 0af1 12       		.uleb128 0x12
 4008 0af2 63010000 		.4byte	.LASF113
 4009 0af6 01       		.byte	0x1
 4010 0af7 57       		.byte	0x57
 4011 0af8 88090000 		.4byte	0x988
 4012 0afc 05       		.uleb128 0x5
 4013 0afd 03       		.byte	0x3
 4014 0afe 00000000 		.4byte	CapSense_senseClkDividerVal
 4015 0b02 12       		.uleb128 0x12
 4016 0b03 33010000 		.4byte	.LASF114
 4017 0b07 01       		.byte	0x1
 4018 0b08 58       		.byte	0x58
 4019 0b09 88090000 		.4byte	0x988
 4020 0b0d 05       		.uleb128 0x5
 4021 0b0e 03       		.byte	0x3
 4022 0b0f 00000000 		.4byte	CapSense_sampleClkDividerVal
 4023 0b13 13       		.uleb128 0x13
 4024 0b14 500A0000 		.4byte	0xa50
 4025 0b18 230B0000 		.4byte	0xb23
 4026 0b1c 14       		.uleb128 0x14
 4027 0b1d C1000000 		.4byte	0xc1
 4028 0b21 04       		.byte	0x4
 4029 0b22 00       		.byte	0
 4030 0b23 12       		.uleb128 0x12
 4031 0b24 9B010000 		.4byte	.LASF115
 4032 0b28 01       		.byte	0x1
 4033 0b29 60       		.byte	0x60
 4034 0b2a 340B0000 		.4byte	0xb34
 4035 0b2e 05       		.uleb128 0x5
 4036 0b2f 03       		.byte	0x3
 4037 0b30 00000000 		.4byte	CapSense_prtSelTbl
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 110


 4038 0b34 07       		.uleb128 0x7
 4039 0b35 130B0000 		.4byte	0xb13
 4040 0b39 12       		.uleb128 0x12
 4041 0b3a A9080000 		.4byte	.LASF116
 4042 0b3e 01       		.byte	0x1
 4043 0b3f 6A       		.byte	0x6a
 4044 0b40 4A0B0000 		.4byte	0xb4a
 4045 0b44 05       		.uleb128 0x5
 4046 0b45 03       		.byte	0x3
 4047 0b46 00000000 		.4byte	CapSense_prtCfgTbl
 4048 0b4a 07       		.uleb128 0x7
 4049 0b4b 130B0000 		.4byte	0xb13
 4050 0b4f 12       		.uleb128 0x12
 4051 0b50 E7070000 		.4byte	.LASF117
 4052 0b54 01       		.byte	0x1
 4053 0b55 74       		.byte	0x74
 4054 0b56 600B0000 		.4byte	0xb60
 4055 0b5a 05       		.uleb128 0x5
 4056 0b5b 03       		.byte	0x3
 4057 0b5c 00000000 		.4byte	CapSense_prtDRTbl
 4058 0b60 07       		.uleb128 0x7
 4059 0b61 130B0000 		.4byte	0xb13
 4060 0b65 00       		.byte	0
 4061              		.section	.debug_abbrev,"",%progbits
 4062              	.Ldebug_abbrev0:
 4063 0000 01       		.uleb128 0x1
 4064 0001 11       		.uleb128 0x11
 4065 0002 01       		.byte	0x1
 4066 0003 25       		.uleb128 0x25
 4067 0004 0E       		.uleb128 0xe
 4068 0005 13       		.uleb128 0x13
 4069 0006 0B       		.uleb128 0xb
 4070 0007 03       		.uleb128 0x3
 4071 0008 0E       		.uleb128 0xe
 4072 0009 1B       		.uleb128 0x1b
 4073 000a 0E       		.uleb128 0xe
 4074 000b 55       		.uleb128 0x55
 4075 000c 17       		.uleb128 0x17
 4076 000d 11       		.uleb128 0x11
 4077 000e 01       		.uleb128 0x1
 4078 000f 10       		.uleb128 0x10
 4079 0010 17       		.uleb128 0x17
 4080 0011 00       		.byte	0
 4081 0012 00       		.byte	0
 4082 0013 02       		.uleb128 0x2
 4083 0014 24       		.uleb128 0x24
 4084 0015 00       		.byte	0
 4085 0016 0B       		.uleb128 0xb
 4086 0017 0B       		.uleb128 0xb
 4087 0018 3E       		.uleb128 0x3e
 4088 0019 0B       		.uleb128 0xb
 4089 001a 03       		.uleb128 0x3
 4090 001b 0E       		.uleb128 0xe
 4091 001c 00       		.byte	0
 4092 001d 00       		.byte	0
 4093 001e 03       		.uleb128 0x3
 4094 001f 24       		.uleb128 0x24
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 111


 4095 0020 00       		.byte	0
 4096 0021 0B       		.uleb128 0xb
 4097 0022 0B       		.uleb128 0xb
 4098 0023 3E       		.uleb128 0x3e
 4099 0024 0B       		.uleb128 0xb
 4100 0025 03       		.uleb128 0x3
 4101 0026 08       		.uleb128 0x8
 4102 0027 00       		.byte	0
 4103 0028 00       		.byte	0
 4104 0029 04       		.uleb128 0x4
 4105 002a 16       		.uleb128 0x16
 4106 002b 00       		.byte	0
 4107 002c 03       		.uleb128 0x3
 4108 002d 0E       		.uleb128 0xe
 4109 002e 3A       		.uleb128 0x3a
 4110 002f 0B       		.uleb128 0xb
 4111 0030 3B       		.uleb128 0x3b
 4112 0031 0B       		.uleb128 0xb
 4113 0032 49       		.uleb128 0x49
 4114 0033 13       		.uleb128 0x13
 4115 0034 00       		.byte	0
 4116 0035 00       		.byte	0
 4117 0036 05       		.uleb128 0x5
 4118 0037 35       		.uleb128 0x35
 4119 0038 00       		.byte	0
 4120 0039 49       		.uleb128 0x49
 4121 003a 13       		.uleb128 0x13
 4122 003b 00       		.byte	0
 4123 003c 00       		.byte	0
 4124 003d 06       		.uleb128 0x6
 4125 003e 0F       		.uleb128 0xf
 4126 003f 00       		.byte	0
 4127 0040 0B       		.uleb128 0xb
 4128 0041 0B       		.uleb128 0xb
 4129 0042 49       		.uleb128 0x49
 4130 0043 13       		.uleb128 0x13
 4131 0044 00       		.byte	0
 4132 0045 00       		.byte	0
 4133 0046 07       		.uleb128 0x7
 4134 0047 26       		.uleb128 0x26
 4135 0048 00       		.byte	0
 4136 0049 49       		.uleb128 0x49
 4137 004a 13       		.uleb128 0x13
 4138 004b 00       		.byte	0
 4139 004c 00       		.byte	0
 4140 004d 08       		.uleb128 0x8
 4141 004e 2E       		.uleb128 0x2e
 4142 004f 01       		.byte	0x1
 4143 0050 3F       		.uleb128 0x3f
 4144 0051 19       		.uleb128 0x19
 4145 0052 03       		.uleb128 0x3
 4146 0053 0E       		.uleb128 0xe
 4147 0054 3A       		.uleb128 0x3a
 4148 0055 0B       		.uleb128 0xb
 4149 0056 3B       		.uleb128 0x3b
 4150 0057 0B       		.uleb128 0xb
 4151 0058 27       		.uleb128 0x27
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 112


 4152 0059 19       		.uleb128 0x19
 4153 005a 11       		.uleb128 0x11
 4154 005b 01       		.uleb128 0x1
 4155 005c 12       		.uleb128 0x12
 4156 005d 06       		.uleb128 0x6
 4157 005e 40       		.uleb128 0x40
 4158 005f 18       		.uleb128 0x18
 4159 0060 9642     		.uleb128 0x2116
 4160 0062 19       		.uleb128 0x19
 4161 0063 01       		.uleb128 0x1
 4162 0064 13       		.uleb128 0x13
 4163 0065 00       		.byte	0
 4164 0066 00       		.byte	0
 4165 0067 09       		.uleb128 0x9
 4166 0068 34       		.uleb128 0x34
 4167 0069 00       		.byte	0
 4168 006a 03       		.uleb128 0x3
 4169 006b 0E       		.uleb128 0xe
 4170 006c 3A       		.uleb128 0x3a
 4171 006d 0B       		.uleb128 0xb
 4172 006e 3B       		.uleb128 0x3b
 4173 006f 0B       		.uleb128 0xb
 4174 0070 49       		.uleb128 0x49
 4175 0071 13       		.uleb128 0x13
 4176 0072 02       		.uleb128 0x2
 4177 0073 18       		.uleb128 0x18
 4178 0074 00       		.byte	0
 4179 0075 00       		.byte	0
 4180 0076 0A       		.uleb128 0xa
 4181 0077 2E       		.uleb128 0x2e
 4182 0078 01       		.byte	0x1
 4183 0079 3F       		.uleb128 0x3f
 4184 007a 19       		.uleb128 0x19
 4185 007b 03       		.uleb128 0x3
 4186 007c 0E       		.uleb128 0xe
 4187 007d 3A       		.uleb128 0x3a
 4188 007e 0B       		.uleb128 0xb
 4189 007f 3B       		.uleb128 0x3b
 4190 0080 05       		.uleb128 0x5
 4191 0081 27       		.uleb128 0x27
 4192 0082 19       		.uleb128 0x19
 4193 0083 11       		.uleb128 0x11
 4194 0084 01       		.uleb128 0x1
 4195 0085 12       		.uleb128 0x12
 4196 0086 06       		.uleb128 0x6
 4197 0087 40       		.uleb128 0x40
 4198 0088 18       		.uleb128 0x18
 4199 0089 9642     		.uleb128 0x2116
 4200 008b 19       		.uleb128 0x19
 4201 008c 01       		.uleb128 0x1
 4202 008d 13       		.uleb128 0x13
 4203 008e 00       		.byte	0
 4204 008f 00       		.byte	0
 4205 0090 0B       		.uleb128 0xb
 4206 0091 34       		.uleb128 0x34
 4207 0092 00       		.byte	0
 4208 0093 03       		.uleb128 0x3
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 113


 4209 0094 0E       		.uleb128 0xe
 4210 0095 3A       		.uleb128 0x3a
 4211 0096 0B       		.uleb128 0xb
 4212 0097 3B       		.uleb128 0x3b
 4213 0098 05       		.uleb128 0x5
 4214 0099 49       		.uleb128 0x49
 4215 009a 13       		.uleb128 0x13
 4216 009b 02       		.uleb128 0x2
 4217 009c 18       		.uleb128 0x18
 4218 009d 00       		.byte	0
 4219 009e 00       		.byte	0
 4220 009f 0C       		.uleb128 0xc
 4221 00a0 2E       		.uleb128 0x2e
 4222 00a1 00       		.byte	0
 4223 00a2 3F       		.uleb128 0x3f
 4224 00a3 19       		.uleb128 0x19
 4225 00a4 03       		.uleb128 0x3
 4226 00a5 0E       		.uleb128 0xe
 4227 00a6 3A       		.uleb128 0x3a
 4228 00a7 0B       		.uleb128 0xb
 4229 00a8 3B       		.uleb128 0x3b
 4230 00a9 05       		.uleb128 0x5
 4231 00aa 27       		.uleb128 0x27
 4232 00ab 19       		.uleb128 0x19
 4233 00ac 11       		.uleb128 0x11
 4234 00ad 01       		.uleb128 0x1
 4235 00ae 12       		.uleb128 0x12
 4236 00af 06       		.uleb128 0x6
 4237 00b0 40       		.uleb128 0x40
 4238 00b1 18       		.uleb128 0x18
 4239 00b2 9642     		.uleb128 0x2116
 4240 00b4 19       		.uleb128 0x19
 4241 00b5 00       		.byte	0
 4242 00b6 00       		.byte	0
 4243 00b7 0D       		.uleb128 0xd
 4244 00b8 2E       		.uleb128 0x2e
 4245 00b9 01       		.byte	0x1
 4246 00ba 3F       		.uleb128 0x3f
 4247 00bb 19       		.uleb128 0x19
 4248 00bc 03       		.uleb128 0x3
 4249 00bd 0E       		.uleb128 0xe
 4250 00be 3A       		.uleb128 0x3a
 4251 00bf 0B       		.uleb128 0xb
 4252 00c0 3B       		.uleb128 0x3b
 4253 00c1 05       		.uleb128 0x5
 4254 00c2 27       		.uleb128 0x27
 4255 00c3 19       		.uleb128 0x19
 4256 00c4 49       		.uleb128 0x49
 4257 00c5 13       		.uleb128 0x13
 4258 00c6 11       		.uleb128 0x11
 4259 00c7 01       		.uleb128 0x1
 4260 00c8 12       		.uleb128 0x12
 4261 00c9 06       		.uleb128 0x6
 4262 00ca 40       		.uleb128 0x40
 4263 00cb 18       		.uleb128 0x18
 4264 00cc 9642     		.uleb128 0x2116
 4265 00ce 19       		.uleb128 0x19
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 114


 4266 00cf 01       		.uleb128 0x1
 4267 00d0 13       		.uleb128 0x13
 4268 00d1 00       		.byte	0
 4269 00d2 00       		.byte	0
 4270 00d3 0E       		.uleb128 0xe
 4271 00d4 05       		.uleb128 0x5
 4272 00d5 00       		.byte	0
 4273 00d6 03       		.uleb128 0x3
 4274 00d7 0E       		.uleb128 0xe
 4275 00d8 3A       		.uleb128 0x3a
 4276 00d9 0B       		.uleb128 0xb
 4277 00da 3B       		.uleb128 0x3b
 4278 00db 05       		.uleb128 0x5
 4279 00dc 49       		.uleb128 0x49
 4280 00dd 13       		.uleb128 0x13
 4281 00de 02       		.uleb128 0x2
 4282 00df 18       		.uleb128 0x18
 4283 00e0 00       		.byte	0
 4284 00e1 00       		.byte	0
 4285 00e2 0F       		.uleb128 0xf
 4286 00e3 2E       		.uleb128 0x2e
 4287 00e4 00       		.byte	0
 4288 00e5 3F       		.uleb128 0x3f
 4289 00e6 19       		.uleb128 0x19
 4290 00e7 03       		.uleb128 0x3
 4291 00e8 0E       		.uleb128 0xe
 4292 00e9 3A       		.uleb128 0x3a
 4293 00ea 0B       		.uleb128 0xb
 4294 00eb 3B       		.uleb128 0x3b
 4295 00ec 05       		.uleb128 0x5
 4296 00ed 27       		.uleb128 0x27
 4297 00ee 19       		.uleb128 0x19
 4298 00ef 49       		.uleb128 0x49
 4299 00f0 13       		.uleb128 0x13
 4300 00f1 11       		.uleb128 0x11
 4301 00f2 01       		.uleb128 0x1
 4302 00f3 12       		.uleb128 0x12
 4303 00f4 06       		.uleb128 0x6
 4304 00f5 40       		.uleb128 0x40
 4305 00f6 18       		.uleb128 0x18
 4306 00f7 9742     		.uleb128 0x2117
 4307 00f9 19       		.uleb128 0x19
 4308 00fa 00       		.byte	0
 4309 00fb 00       		.byte	0
 4310 00fc 10       		.uleb128 0x10
 4311 00fd 2E       		.uleb128 0x2e
 4312 00fe 01       		.byte	0x1
 4313 00ff 3F       		.uleb128 0x3f
 4314 0100 19       		.uleb128 0x19
 4315 0101 03       		.uleb128 0x3
 4316 0102 0E       		.uleb128 0xe
 4317 0103 3A       		.uleb128 0x3a
 4318 0104 0B       		.uleb128 0xb
 4319 0105 3B       		.uleb128 0x3b
 4320 0106 05       		.uleb128 0x5
 4321 0107 27       		.uleb128 0x27
 4322 0108 19       		.uleb128 0x19
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 115


 4323 0109 49       		.uleb128 0x49
 4324 010a 13       		.uleb128 0x13
 4325 010b 11       		.uleb128 0x11
 4326 010c 01       		.uleb128 0x1
 4327 010d 12       		.uleb128 0x12
 4328 010e 06       		.uleb128 0x6
 4329 010f 40       		.uleb128 0x40
 4330 0110 18       		.uleb128 0x18
 4331 0111 9742     		.uleb128 0x2117
 4332 0113 19       		.uleb128 0x19
 4333 0114 01       		.uleb128 0x1
 4334 0115 13       		.uleb128 0x13
 4335 0116 00       		.byte	0
 4336 0117 00       		.byte	0
 4337 0118 11       		.uleb128 0x11
 4338 0119 2E       		.uleb128 0x2e
 4339 011a 01       		.byte	0x1
 4340 011b 3F       		.uleb128 0x3f
 4341 011c 19       		.uleb128 0x19
 4342 011d 03       		.uleb128 0x3
 4343 011e 0E       		.uleb128 0xe
 4344 011f 3A       		.uleb128 0x3a
 4345 0120 0B       		.uleb128 0xb
 4346 0121 3B       		.uleb128 0x3b
 4347 0122 05       		.uleb128 0x5
 4348 0123 27       		.uleb128 0x27
 4349 0124 19       		.uleb128 0x19
 4350 0125 11       		.uleb128 0x11
 4351 0126 01       		.uleb128 0x1
 4352 0127 12       		.uleb128 0x12
 4353 0128 06       		.uleb128 0x6
 4354 0129 40       		.uleb128 0x40
 4355 012a 18       		.uleb128 0x18
 4356 012b 9742     		.uleb128 0x2117
 4357 012d 19       		.uleb128 0x19
 4358 012e 01       		.uleb128 0x1
 4359 012f 13       		.uleb128 0x13
 4360 0130 00       		.byte	0
 4361 0131 00       		.byte	0
 4362 0132 12       		.uleb128 0x12
 4363 0133 34       		.uleb128 0x34
 4364 0134 00       		.byte	0
 4365 0135 03       		.uleb128 0x3
 4366 0136 0E       		.uleb128 0xe
 4367 0137 3A       		.uleb128 0x3a
 4368 0138 0B       		.uleb128 0xb
 4369 0139 3B       		.uleb128 0x3b
 4370 013a 0B       		.uleb128 0xb
 4371 013b 49       		.uleb128 0x49
 4372 013c 13       		.uleb128 0x13
 4373 013d 3F       		.uleb128 0x3f
 4374 013e 19       		.uleb128 0x19
 4375 013f 02       		.uleb128 0x2
 4376 0140 18       		.uleb128 0x18
 4377 0141 00       		.byte	0
 4378 0142 00       		.byte	0
 4379 0143 13       		.uleb128 0x13
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 116


 4380 0144 01       		.uleb128 0x1
 4381 0145 01       		.byte	0x1
 4382 0146 49       		.uleb128 0x49
 4383 0147 13       		.uleb128 0x13
 4384 0148 01       		.uleb128 0x1
 4385 0149 13       		.uleb128 0x13
 4386 014a 00       		.byte	0
 4387 014b 00       		.byte	0
 4388 014c 14       		.uleb128 0x14
 4389 014d 21       		.uleb128 0x21
 4390 014e 00       		.byte	0
 4391 014f 49       		.uleb128 0x49
 4392 0150 13       		.uleb128 0x13
 4393 0151 2F       		.uleb128 0x2f
 4394 0152 0B       		.uleb128 0xb
 4395 0153 00       		.byte	0
 4396 0154 00       		.byte	0
 4397 0155 15       		.uleb128 0x15
 4398 0156 21       		.uleb128 0x21
 4399 0157 00       		.byte	0
 4400 0158 00       		.byte	0
 4401 0159 00       		.byte	0
 4402 015a 16       		.uleb128 0x16
 4403 015b 34       		.uleb128 0x34
 4404 015c 00       		.byte	0
 4405 015d 03       		.uleb128 0x3
 4406 015e 0E       		.uleb128 0xe
 4407 015f 3A       		.uleb128 0x3a
 4408 0160 0B       		.uleb128 0xb
 4409 0161 3B       		.uleb128 0x3b
 4410 0162 0B       		.uleb128 0xb
 4411 0163 49       		.uleb128 0x49
 4412 0164 13       		.uleb128 0x13
 4413 0165 3F       		.uleb128 0x3f
 4414 0166 19       		.uleb128 0x19
 4415 0167 3C       		.uleb128 0x3c
 4416 0168 19       		.uleb128 0x19
 4417 0169 00       		.byte	0
 4418 016a 00       		.byte	0
 4419 016b 00       		.byte	0
 4420              		.section	.debug_aranges,"",%progbits
 4421 0000 4C010000 		.4byte	0x14c
 4422 0004 0200     		.2byte	0x2
 4423 0006 00000000 		.4byte	.Ldebug_info0
 4424 000a 04       		.byte	0x4
 4425 000b 00       		.byte	0
 4426 000c 0000     		.2byte	0
 4427 000e 0000     		.2byte	0
 4428 0010 00000000 		.4byte	.LFB33
 4429 0014 3C000000 		.4byte	.LFE33-.LFB33
 4430 0018 00000000 		.4byte	.LFB34
 4431 001c C0000000 		.4byte	.LFE34-.LFB34
 4432 0020 00000000 		.4byte	.LFB35
 4433 0024 50000000 		.4byte	.LFE35-.LFB35
 4434 0028 00000000 		.4byte	.LFB36
 4435 002c 44000000 		.4byte	.LFE36-.LFB36
 4436 0030 00000000 		.4byte	.LFB37
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 117


 4437 0034 38000000 		.4byte	.LFE37-.LFB37
 4438 0038 00000000 		.4byte	.LFB38
 4439 003c 48000000 		.4byte	.LFE38-.LFB38
 4440 0040 00000000 		.4byte	.LFB39
 4441 0044 34000000 		.4byte	.LFE39-.LFB39
 4442 0048 00000000 		.4byte	.LFB40
 4443 004c DC000000 		.4byte	.LFE40-.LFB40
 4444 0050 00000000 		.4byte	.LFB41
 4445 0054 58000000 		.4byte	.LFE41-.LFB41
 4446 0058 00000000 		.4byte	.LFB42
 4447 005c 1C000000 		.4byte	.LFE42-.LFB42
 4448 0060 00000000 		.4byte	.LFB43
 4449 0064 1C000000 		.4byte	.LFE43-.LFB43
 4450 0068 00000000 		.4byte	.LFB44
 4451 006c 24000000 		.4byte	.LFE44-.LFB44
 4452 0070 00000000 		.4byte	.LFB45
 4453 0074 20000000 		.4byte	.LFE45-.LFB45
 4454 0078 00000000 		.4byte	.LFB46
 4455 007c 1C000000 		.4byte	.LFE46-.LFB46
 4456 0080 00000000 		.4byte	.LFB47
 4457 0084 26000000 		.4byte	.LFE47-.LFB47
 4458 0088 00000000 		.4byte	.LFB48
 4459 008c B4000000 		.4byte	.LFE48-.LFB48
 4460 0090 00000000 		.4byte	.LFB49
 4461 0094 04010000 		.4byte	.LFE49-.LFB49
 4462 0098 00000000 		.4byte	.LFB50
 4463 009c 44000000 		.4byte	.LFE50-.LFB50
 4464 00a0 00000000 		.4byte	.LFB51
 4465 00a4 38000000 		.4byte	.LFE51-.LFB51
 4466 00a8 00000000 		.4byte	.LFB52
 4467 00ac 5C000000 		.4byte	.LFE52-.LFB52
 4468 00b0 00000000 		.4byte	.LFB53
 4469 00b4 34010000 		.4byte	.LFE53-.LFB53
 4470 00b8 00000000 		.4byte	.LFB54
 4471 00bc BC000000 		.4byte	.LFE54-.LFB54
 4472 00c0 00000000 		.4byte	.LFB55
 4473 00c4 80000000 		.4byte	.LFE55-.LFB55
 4474 00c8 00000000 		.4byte	.LFB56
 4475 00cc 30000000 		.4byte	.LFE56-.LFB56
 4476 00d0 00000000 		.4byte	.LFB57
 4477 00d4 2C000000 		.4byte	.LFE57-.LFB57
 4478 00d8 00000000 		.4byte	.LFB58
 4479 00dc 44000000 		.4byte	.LFE58-.LFB58
 4480 00e0 00000000 		.4byte	.LFB59
 4481 00e4 68000000 		.4byte	.LFE59-.LFB59
 4482 00e8 00000000 		.4byte	.LFB60
 4483 00ec 1C000000 		.4byte	.LFE60-.LFB60
 4484 00f0 00000000 		.4byte	.LFB61
 4485 00f4 20000000 		.4byte	.LFE61-.LFB61
 4486 00f8 00000000 		.4byte	.LFB62
 4487 00fc 1C000000 		.4byte	.LFE62-.LFB62
 4488 0100 00000000 		.4byte	.LFB63
 4489 0104 20000000 		.4byte	.LFE63-.LFB63
 4490 0108 00000000 		.4byte	.LFB64
 4491 010c 1C000000 		.4byte	.LFE64-.LFB64
 4492 0110 00000000 		.4byte	.LFB65
 4493 0114 20000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 118


 4494 0118 00000000 		.4byte	.LFB66
 4495 011c 1C000000 		.4byte	.LFE66-.LFB66
 4496 0120 00000000 		.4byte	.LFB67
 4497 0124 20000000 		.4byte	.LFE67-.LFB67
 4498 0128 00000000 		.4byte	.LFB68
 4499 012c 20000000 		.4byte	.LFE68-.LFB68
 4500 0130 00000000 		.4byte	.LFB69
 4501 0134 3C000000 		.4byte	.LFE69-.LFB69
 4502 0138 00000000 		.4byte	.LFB70
 4503 013c 4E000000 		.4byte	.LFE70-.LFB70
 4504 0140 00000000 		.4byte	.LFB71
 4505 0144 20000000 		.4byte	.LFE71-.LFB71
 4506 0148 00000000 		.4byte	0
 4507 014c 00000000 		.4byte	0
 4508              		.section	.debug_ranges,"",%progbits
 4509              	.Ldebug_ranges0:
 4510 0000 00000000 		.4byte	.LFB33
 4511 0004 3C000000 		.4byte	.LFE33
 4512 0008 00000000 		.4byte	.LFB34
 4513 000c C0000000 		.4byte	.LFE34
 4514 0010 00000000 		.4byte	.LFB35
 4515 0014 50000000 		.4byte	.LFE35
 4516 0018 00000000 		.4byte	.LFB36
 4517 001c 44000000 		.4byte	.LFE36
 4518 0020 00000000 		.4byte	.LFB37
 4519 0024 38000000 		.4byte	.LFE37
 4520 0028 00000000 		.4byte	.LFB38
 4521 002c 48000000 		.4byte	.LFE38
 4522 0030 00000000 		.4byte	.LFB39
 4523 0034 34000000 		.4byte	.LFE39
 4524 0038 00000000 		.4byte	.LFB40
 4525 003c DC000000 		.4byte	.LFE40
 4526 0040 00000000 		.4byte	.LFB41
 4527 0044 58000000 		.4byte	.LFE41
 4528 0048 00000000 		.4byte	.LFB42
 4529 004c 1C000000 		.4byte	.LFE42
 4530 0050 00000000 		.4byte	.LFB43
 4531 0054 1C000000 		.4byte	.LFE43
 4532 0058 00000000 		.4byte	.LFB44
 4533 005c 24000000 		.4byte	.LFE44
 4534 0060 00000000 		.4byte	.LFB45
 4535 0064 20000000 		.4byte	.LFE45
 4536 0068 00000000 		.4byte	.LFB46
 4537 006c 1C000000 		.4byte	.LFE46
 4538 0070 00000000 		.4byte	.LFB47
 4539 0074 26000000 		.4byte	.LFE47
 4540 0078 00000000 		.4byte	.LFB48
 4541 007c B4000000 		.4byte	.LFE48
 4542 0080 00000000 		.4byte	.LFB49
 4543 0084 04010000 		.4byte	.LFE49
 4544 0088 00000000 		.4byte	.LFB50
 4545 008c 44000000 		.4byte	.LFE50
 4546 0090 00000000 		.4byte	.LFB51
 4547 0094 38000000 		.4byte	.LFE51
 4548 0098 00000000 		.4byte	.LFB52
 4549 009c 5C000000 		.4byte	.LFE52
 4550 00a0 00000000 		.4byte	.LFB53
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 119


 4551 00a4 34010000 		.4byte	.LFE53
 4552 00a8 00000000 		.4byte	.LFB54
 4553 00ac BC000000 		.4byte	.LFE54
 4554 00b0 00000000 		.4byte	.LFB55
 4555 00b4 80000000 		.4byte	.LFE55
 4556 00b8 00000000 		.4byte	.LFB56
 4557 00bc 30000000 		.4byte	.LFE56
 4558 00c0 00000000 		.4byte	.LFB57
 4559 00c4 2C000000 		.4byte	.LFE57
 4560 00c8 00000000 		.4byte	.LFB58
 4561 00cc 44000000 		.4byte	.LFE58
 4562 00d0 00000000 		.4byte	.LFB59
 4563 00d4 68000000 		.4byte	.LFE59
 4564 00d8 00000000 		.4byte	.LFB60
 4565 00dc 1C000000 		.4byte	.LFE60
 4566 00e0 00000000 		.4byte	.LFB61
 4567 00e4 20000000 		.4byte	.LFE61
 4568 00e8 00000000 		.4byte	.LFB62
 4569 00ec 1C000000 		.4byte	.LFE62
 4570 00f0 00000000 		.4byte	.LFB63
 4571 00f4 20000000 		.4byte	.LFE63
 4572 00f8 00000000 		.4byte	.LFB64
 4573 00fc 1C000000 		.4byte	.LFE64
 4574 0100 00000000 		.4byte	.LFB65
 4575 0104 20000000 		.4byte	.LFE65
 4576 0108 00000000 		.4byte	.LFB66
 4577 010c 1C000000 		.4byte	.LFE66
 4578 0110 00000000 		.4byte	.LFB67
 4579 0114 20000000 		.4byte	.LFE67
 4580 0118 00000000 		.4byte	.LFB68
 4581 011c 20000000 		.4byte	.LFE68
 4582 0120 00000000 		.4byte	.LFB69
 4583 0124 3C000000 		.4byte	.LFE69
 4584 0128 00000000 		.4byte	.LFB70
 4585 012c 4E000000 		.4byte	.LFE70
 4586 0130 00000000 		.4byte	.LFB71
 4587 0134 20000000 		.4byte	.LFE71
 4588 0138 00000000 		.4byte	0
 4589 013c 00000000 		.4byte	0
 4590              		.section	.debug_line,"",%progbits
 4591              	.Ldebug_line0:
 4592 0000 67040000 		.section	.debug_str,"MS",%progbits,1
 4592      02004700 
 4592      00000201 
 4592      FB0E0D00 
 4592      01010101 
 4593              	.LASF18:
 4594 0000 43617053 		.ascii	"CapSense_Init\000"
 4594      656E7365 
 4594      5F496E69 
 4594      7400
 4595              	.LASF95:
 4596 000e 43617053 		.ascii	"CapSense_sensorRaw\000"
 4596      656E7365 
 4596      5F73656E 
 4596      736F7252 
 4596      617700
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 120


 4597              	.LASF90:
 4598 0021 63757253 		.ascii	"curSample\000"
 4598      616D706C 
 4598      6500
 4599              	.LASF72:
 4600 002b 656E4D61 		.ascii	"enMask\000"
 4600      736B00
 4601              	.LASF99:
 4602 0032 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4602      656E7365 
 4602      5F6E756D 
 4602      6265724F 
 4602      6653656E 
 4603              	.LASF91:
 4604 004b 61766756 		.ascii	"avgVal\000"
 4604      616C00
 4605              	.LASF2:
 4606 0052 73686F72 		.ascii	"short int\000"
 4606      7420696E 
 4606      7400
 4607              	.LASF28:
 4608 005c 73656E73 		.ascii	"sensor\000"
 4608      6F7200
 4609              	.LASF36:
 4610 0063 43617053 		.ascii	"CapSense_WriteSensorRaw\000"
 4610      656E7365 
 4610      5F577269 
 4610      74655365 
 4610      6E736F72 
 4611              	.LASF94:
 4612 007b 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 4612      656E7365 
 4612      5F6C6F77 
 4612      4C657665 
 4612      6C54756E 
 4613              	.LASF63:
 4614 0097 43617053 		.ascii	"CapSense_EnableShieldElectrode\000"
 4614      656E7365 
 4614      5F456E61 
 4614      626C6553 
 4614      6869656C 
 4615              	.LASF17:
 4616 00b6 73697A65 		.ascii	"sizetype\000"
 4616      74797065 
 4616      00
 4617              	.LASF65:
 4618 00bf 64656C61 		.ascii	"delay\000"
 4618      7900
 4619              	.LASF86:
 4620 00c5 43617053 		.ascii	"CapSense_GetIDACRange\000"
 4620      656E7365 
 4620      5F476574 
 4620      49444143 
 4620      52616E67 
 4621              	.LASF55:
 4622 00db 43617053 		.ascii	"CapSense_RestoreDriveModeAllPins\000"
 4622      656E7365 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 121


 4622      5F526573 
 4622      746F7265 
 4622      44726976 
 4623              	.LASF34:
 4624 00fc 43617053 		.ascii	"CapSense_FindNextSensor\000"
 4624      656E7365 
 4624      5F46696E 
 4624      644E6578 
 4624      7453656E 
 4625              	.LASF5:
 4626 0114 6C6F6E67 		.ascii	"long unsigned int\000"
 4626      20756E73 
 4626      69676E65 
 4626      6420696E 
 4626      7400
 4627              	.LASF37:
 4628 0126 76616C75 		.ascii	"value\000"
 4628      6500
 4629              	.LASF10:
 4630 012c 75696E74 		.ascii	"uint16\000"
 4630      313600
 4631              	.LASF114:
 4632 0133 43617053 		.ascii	"CapSense_sampleClkDividerVal\000"
 4632      656E7365 
 4632      5F73616D 
 4632      706C6543 
 4632      6C6B4469 
 4633              	.LASF30:
 4634 0150 77696467 		.ascii	"widget\000"
 4634      657400
 4635              	.LASF9:
 4636 0157 75696E74 		.ascii	"uint8\000"
 4636      3800
 4637              	.LASF69:
 4638 015d 7461626C 		.ascii	"table\000"
 4638      6500
 4639              	.LASF113:
 4640 0163 43617053 		.ascii	"CapSense_senseClkDividerVal\000"
 4640      656E7365 
 4640      5F73656E 
 4640      7365436C 
 4640      6B446976 
 4641              	.LASF33:
 4642 017f 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4642      656E7365 
 4642      5F536361 
 4642      6E456E61 
 4642      626C6564 
 4643              	.LASF115:
 4644 019b 43617053 		.ascii	"CapSense_prtSelTbl\000"
 4644      656E7365 
 4644      5F707274 
 4644      53656C54 
 4644      626C00
 4645              	.LASF68:
 4646 01ae 43617053 		.ascii	"CapSense_GetBitValue\000"
 4646      656E7365 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 122


 4646      5F476574 
 4646      42697456 
 4646      616C7565 
 4647              	.LASF105:
 4648 01c3 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4648      656E7365 
 4648      5F73656E 
 4648      736F7245 
 4648      6E61626C 
 4649              	.LASF67:
 4650 01dd 43617053 		.ascii	"CapSense_ReadCurrentScanningSensor\000"
 4650      656E7365 
 4650      5F526561 
 4650      64437572 
 4650      72656E74 
 4651              	.LASF12:
 4652 0200 666C6F61 		.ascii	"float\000"
 4652      7400
 4653              	.LASF50:
 4654 0206 73656E73 		.ascii	"sensorState\000"
 4654      6F725374 
 4654      61746500 
 4655              	.LASF6:
 4656 0212 6C6F6E67 		.ascii	"long long int\000"
 4656      206C6F6E 
 4656      6720696E 
 4656      7400
 4657              	.LASF85:
 4658 0220 636F6D70 		.ascii	"compIdacValue\000"
 4658      49646163 
 4658      56616C75 
 4658      6500
 4659              	.LASF109:
 4660 022e 43617053 		.ascii	"CapSense_pinShiftTbl\000"
 4660      656E7365 
 4660      5F70696E 
 4660      53686966 
 4660      7454626C 
 4661              	.LASF101:
 4662 0243 7363616E 		.ascii	"scanSpeedTbl\000"
 4662      53706565 
 4662      6454626C 
 4662      00
 4663              	.LASF4:
 4664 0250 6C6F6E67 		.ascii	"long int\000"
 4664      20696E74 
 4664      00
 4665              	.LASF20:
 4666 0259 63757253 		.ascii	"curSensor\000"
 4666      656E736F 
 4666      7200
 4667              	.LASF71:
 4668 0263 6F666673 		.ascii	"offset\000"
 4668      657400
 4669              	.LASF100:
 4670 026a 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4670      656E7365 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 123


 4670      5F726177 
 4670      44617461 
 4670      496E6465 
 4671              	.LASF102:
 4672 0280 43617053 		.ascii	"CapSense_csdTrim1\000"
 4672      656E7365 
 4672      5F637364 
 4672      5472696D 
 4672      3100
 4673              	.LASF81:
 4674 0292 43617053 		.ascii	"CapSense_SetModulationIDAC\000"
 4674      656E7365 
 4674      5F536574 
 4674      4D6F6475 
 4674      6C617469 
 4675              	.LASF1:
 4676 02ad 756E7369 		.ascii	"unsigned char\000"
 4676      676E6564 
 4676      20636861 
 4676      7200
 4677              	.LASF59:
 4678 02bb 43617053 		.ascii	"CapSense_PreScan\000"
 4678      656E7365 
 4678      5F507265 
 4678      5363616E 
 4678      00
 4679              	.LASF27:
 4680 02cc 736E7349 		.ascii	"snsIndex\000"
 4680      6E646578 
 4680      00
 4681              	.LASF53:
 4682 02d5 7072744E 		.ascii	"prtNumberTmp\000"
 4682      756D6265 
 4682      72546D70 
 4682      00
 4683              	.LASF60:
 4684 02e2 636F756E 		.ascii	"counterResolution\000"
 4684      74657252 
 4684      65736F6C 
 4684      7574696F 
 4684      6E00
 4685              	.LASF70:
 4686 02f4 706F7369 		.ascii	"position\000"
 4686      74696F6E 
 4686      00
 4687              	.LASF51:
 4688 02fd 43617053 		.ascii	"CapSense_SetDriveModeAllPins\000"
 4688      656E7365 
 4688      5F536574 
 4688      44726976 
 4688      654D6F64 
 4689              	.LASF26:
 4690 031a 43617053 		.ascii	"CapSense_ScanSensor\000"
 4690      656E7365 
 4690      5F536361 
 4690      6E53656E 
 4690      736F7200 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 124


 4691              	.LASF58:
 4692 032e 706F7274 		.ascii	"portNumber\000"
 4692      4E756D62 
 4692      657200
 4693              	.LASF93:
 4694 0339 43617053 		.ascii	"CapSense_initVar\000"
 4694      656E7365 
 4694      5F696E69 
 4694      74566172 
 4694      00
 4695              	.LASF24:
 4696 034a 43617053 		.ascii	"CapSense_Stop\000"
 4696      656E7365 
 4696      5F53746F 
 4696      7000
 4697              	.LASF56:
 4698 0358 43617053 		.ascii	"CapSense_SetPinDriveMode\000"
 4698      656E7365 
 4698      5F536574 
 4698      50696E44 
 4698      72697665 
 4699              	.LASF119:
 4700 0371 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense.c\000"
 4700      6E657261 
 4700      7465645F 
 4700      536F7572 
 4700      63655C50 
 4701              	.LASF78:
 4702 0395 43617053 		.ascii	"CapSense_SetModulatorClkDivider\000"
 4702      656E7365 
 4702      5F536574 
 4702      4D6F6475 
 4702      6C61746F 
 4703              	.LASF0:
 4704 03b5 7369676E 		.ascii	"signed char\000"
 4704      65642063 
 4704      68617200 
 4705              	.LASF7:
 4706 03c1 6C6F6E67 		.ascii	"long long unsigned int\000"
 4706      206C6F6E 
 4706      6720756E 
 4706      7369676E 
 4706      65642069 
 4707              	.LASF84:
 4708 03d8 43617053 		.ascii	"CapSense_SetCompensationIDAC\000"
 4708      656E7365 
 4708      5F536574 
 4708      436F6D70 
 4708      656E7361 
 4709              	.LASF23:
 4710 03f5 43617053 		.ascii	"CapSense_Start\000"
 4710      656E7365 
 4710      5F537461 
 4710      727400
 4711              	.LASF8:
 4712 0404 756E7369 		.ascii	"unsigned int\000"
 4712      676E6564 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 125


 4712      20696E74 
 4712      00
 4713              	.LASF43:
 4714 0411 70696E4D 		.ascii	"pinModeShift\000"
 4714      6F646553 
 4714      68696674 
 4714      00
 4715              	.LASF21:
 4716 041e 6E657752 		.ascii	"newRegValue\000"
 4716      65675661 
 4716      6C756500 
 4717              	.LASF111:
 4718 042a 43617053 		.ascii	"CapSense_compensationIDAC\000"
 4718      656E7365 
 4718      5F636F6D 
 4718      70656E73 
 4718      6174696F 
 4719              	.LASF79:
 4720 0444 6D6F6475 		.ascii	"modulatorClk\000"
 4720      6C61746F 
 4720      72436C6B 
 4720      00
 4721              	.LASF106:
 4722 0451 43617053 		.ascii	"CapSense_pcTable\000"
 4722      656E7365 
 4722      5F706354 
 4722      61626C65 
 4722      00
 4723              	.LASF48:
 4724 0462 43617053 		.ascii	"CapSense_DisableSensor\000"
 4724      656E7365 
 4724      5F446973 
 4724      61626C65 
 4724      53656E73 
 4725              	.LASF87:
 4726 0479 43617053 		.ascii	"CapSense_SetIDACRange\000"
 4726      656E7365 
 4726      5F536574 
 4726      49444143 
 4726      52616E67 
 4727              	.LASF16:
 4728 048f 72656733 		.ascii	"reg32\000"
 4728      3200
 4729              	.LASF49:
 4730 0495 696E6163 		.ascii	"inactiveConnect\000"
 4730      74697665 
 4730      436F6E6E 
 4730      65637400 
 4731              	.LASF3:
 4732 04a5 73686F72 		.ascii	"short unsigned int\000"
 4732      7420756E 
 4732      7369676E 
 4732      65642069 
 4732      6E7400
 4733              	.LASF73:
 4734 04b8 43617053 		.ascii	"CapSense_SetBitValue\000"
 4734      656E7365 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 126


 4734      5F536574 
 4734      42697456 
 4734      616C7565 
 4735              	.LASF42:
 4736 04cd 43617053 		.ascii	"CapSense_EnableSensor\000"
 4736      656E7365 
 4736      5F456E61 
 4736      626C6553 
 4736      656E736F 
 4737              	.LASF22:
 4738 04e3 43617053 		.ascii	"CapSense_Enable\000"
 4738      656E7365 
 4738      5F456E61 
 4738      626C6500 
 4739              	.LASF14:
 4740 04f3 63686172 		.ascii	"char\000"
 4740      00
 4741              	.LASF92:
 4742 04f8 43617053 		.ascii	"CapSense_SetUnscannedSensorState\000"
 4742      656E7365 
 4742      5F536574 
 4742      556E7363 
 4742      616E6E65 
 4743              	.LASF107:
 4744 0519 43617053 		.ascii	"CapSense_portTable\000"
 4744      656E7365 
 4744      5F706F72 
 4744      74546162 
 4744      6C6500
 4745              	.LASF118:
 4746 052c 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4746      4320342E 
 4746      382E3420 
 4746      32303134 
 4746      30353236 
 4747 055f 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4747      20726576 
 4747      6973696F 
 4747      6E203231 
 4747      31333538 
 4748 0592 30202D66 		.ascii	"0 -ffunction-sections -fno-rtti -fno-exceptions -fu"
 4748      66756E63 
 4748      74696F6E 
 4748      2D736563 
 4748      74696F6E 
 4749 05c5 6E736967 		.ascii	"nsigned-char -funsigned-bitfields -fshort-enums\000"
 4749      6E65642D 
 4749      63686172 
 4749      202D6675 
 4749      6E736967 
 4750              	.LASF39:
 4751 05f5 7265736F 		.ascii	"resolution\000"
 4751      6C757469 
 4751      6F6E00
 4752              	.LASF75:
 4753 0600 43617053 		.ascii	"CapSense_SetSenseClkDivider\000"
 4753      656E7365 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 127


 4753      5F536574 
 4753      53656E73 
 4753      65436C6B 
 4754              	.LASF52:
 4755 061c 64726976 		.ascii	"driveMode\000"
 4755      654D6F64 
 4755      6500
 4756              	.LASF32:
 4757 0626 6C617374 		.ascii	"lastSensor\000"
 4757      53656E73 
 4757      6F7200
 4758              	.LASF83:
 4759 0631 43617053 		.ascii	"CapSense_GetCompensationIDAC\000"
 4759      656E7365 
 4759      5F476574 
 4759      436F6D70 
 4759      656E7361 
 4760              	.LASF112:
 4761 064e 43617053 		.ascii	"CapSense_widgetResolution\000"
 4761      656E7365 
 4761      5F776964 
 4761      67657452 
 4761      65736F6C 
 4762              	.LASF57:
 4763 0668 70696E4E 		.ascii	"pinNumber\000"
 4763      756D6265 
 4763      7200
 4764              	.LASF47:
 4765 0672 706F7274 		.ascii	"port\000"
 4765      00
 4766              	.LASF45:
 4767 0677 696E7465 		.ascii	"interruptState\000"
 4767      72727570 
 4767      74537461 
 4767      746500
 4768              	.LASF77:
 4769 0686 43617053 		.ascii	"CapSense_GetModulatorClkDivider\000"
 4769      656E7365 
 4769      5F476574 
 4769      4D6F6475 
 4769      6C61746F 
 4770              	.LASF11:
 4771 06a6 75696E74 		.ascii	"uint32\000"
 4771      333200
 4772              	.LASF15:
 4773 06ad 72656738 		.ascii	"reg8\000"
 4773      00
 4774              	.LASF76:
 4775 06b2 73656E73 		.ascii	"senseClk\000"
 4775      65436C6B 
 4775      00
 4776              	.LASF103:
 4777 06bb 43617053 		.ascii	"CapSense_unscannedSnsDriveMode\000"
 4777      656E7365 
 4777      5F756E73 
 4777      63616E6E 
 4777      6564536E 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 128


 4778              	.LASF88:
 4779 06da 69446163 		.ascii	"iDacRange\000"
 4779      52616E67 
 4779      6500
 4780              	.LASF74:
 4781 06e4 43617053 		.ascii	"CapSense_GetSenseClkDivider\000"
 4781      656E7365 
 4781      5F476574 
 4781      53656E73 
 4781      65436C6B 
 4782              	.LASF40:
 4783 0700 43617053 		.ascii	"CapSense_GetScanResolution\000"
 4783      656E7365 
 4783      5F476574 
 4783      5363616E 
 4783      5265736F 
 4784              	.LASF96:
 4785 071b 43617053 		.ascii	"CapSense_widgetNumber\000"
 4785      656E7365 
 4785      5F776964 
 4785      6765744E 
 4785      756D6265 
 4786              	.LASF54:
 4787 0731 70696E4E 		.ascii	"pinNumberTmp\000"
 4787      756D6265 
 4787      72546D70 
 4787      00
 4788              	.LASF38:
 4789 073e 43617053 		.ascii	"CapSense_SetScanResolution\000"
 4789      656E7365 
 4789      5F536574 
 4789      5363616E 
 4789      5265736F 
 4790              	.LASF110:
 4791 0759 43617053 		.ascii	"CapSense_modulationIDAC\000"
 4791      656E7365 
 4791      5F6D6F64 
 4791      756C6174 
 4791      696F6E49 
 4792              	.LASF61:
 4793 0771 6F766572 		.ascii	"oversamplingFactor\000"
 4793      73616D70 
 4793      6C696E67 
 4793      46616374 
 4793      6F7200
 4794              	.LASF108:
 4795 0784 43617053 		.ascii	"CapSense_maskTable\000"
 4795      656E7365 
 4795      5F6D6173 
 4795      6B546162 
 4795      6C6500
 4796              	.LASF66:
 4797 0797 43617053 		.ascii	"CapSense_IsBusy\000"
 4797      656E7365 
 4797      5F497342 
 4797      75737900 
 4798              	.LASF62:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 129


 4799 07a7 43617053 		.ascii	"CapSense_PostScan\000"
 4799      656E7365 
 4799      5F506F73 
 4799      74536361 
 4799      6E00
 4800              	.LASF64:
 4801 07b9 43617053 		.ascii	"CapSense_SetShieldDelay\000"
 4801      656E7365 
 4801      5F536574 
 4801      53686965 
 4801      6C644465 
 4802              	.LASF89:
 4803 07d1 43617053 		.ascii	"CapSense_GetSensorRaw\000"
 4803      656E7365 
 4803      5F476574 
 4803      53656E73 
 4803      6F725261 
 4804              	.LASF117:
 4805 07e7 43617053 		.ascii	"CapSense_prtDRTbl\000"
 4805      656E7365 
 4805      5F707274 
 4805      44525462 
 4805      6C00
 4806              	.LASF80:
 4807 07f9 43617053 		.ascii	"CapSense_GetModulationIDAC\000"
 4807      656E7365 
 4807      5F476574 
 4807      4D6F6475 
 4807      6C617469 
 4808              	.LASF25:
 4809 0814 656E6162 		.ascii	"enableFlag\000"
 4809      6C65466C 
 4809      616700
 4810              	.LASF97:
 4811 081f 43617053 		.ascii	"CapSense_csdStatusVar\000"
 4811      656E7365 
 4811      5F637364 
 4811      53746174 
 4811      75735661 
 4812              	.LASF13:
 4813 0835 646F7562 		.ascii	"double\000"
 4813      6C6500
 4814              	.LASF44:
 4815 083c 70696E48 		.ascii	"pinHSIOMShift\000"
 4815      53494F4D 
 4815      53686966 
 4815      7400
 4816              	.LASF41:
 4817 084a 43617053 		.ascii	"CapSense_ClearSensors\000"
 4817      656E7365 
 4817      5F436C65 
 4817      61725365 
 4817      6E736F72 
 4818              	.LASF19:
 4819 0860 43617053 		.ascii	"CapSense_CsdHwBlockInit\000"
 4819      656E7365 
 4819      5F437364 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 130


 4819      4877426C 
 4819      6F636B49 
 4820              	.LASF104:
 4821 0878 43617053 		.ascii	"CapSense_sensorEnableMaskBackup\000"
 4821      656E7365 
 4821      5F73656E 
 4821      736F7245 
 4821      6E61626C 
 4822              	.LASF31:
 4823 0898 73656E73 		.ascii	"sensorsPerWidget\000"
 4823      6F727350 
 4823      65725769 
 4823      64676574 
 4823      00
 4824              	.LASF116:
 4825 08a9 43617053 		.ascii	"CapSense_prtCfgTbl\000"
 4825      656E7365 
 4825      5F707274 
 4825      43666754 
 4825      626C00
 4826              	.LASF35:
 4827 08bc 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 4827      656E7365 
 4827      5F526561 
 4827      6453656E 
 4827      736F7252 
 4828              	.LASF46:
 4829 08d3 6E657752 		.ascii	"newRegisterValue\000"
 4829      65676973 
 4829      74657256 
 4829      616C7565 
 4829      00
 4830              	.LASF120:
 4831 08e4 433A5C44 		.ascii	"C:\\Documents and Settings\\Chuck\\My Documents\\PS"
 4831      6F63756D 
 4831      656E7473 
 4831      20616E64 
 4831      20536574 
 4832 0913 6F432043 		.ascii	"oC Creator\\RosOnAStick\\RosOnAStick.cydsn\000"
 4832      72656174 
 4832      6F725C52 
 4832      6F734F6E 
 4832      41537469 
 4833              	.LASF98:
 4834 093c 43617053 		.ascii	"CapSense_sensorIndex\000"
 4834      656E7365 
 4834      5F73656E 
 4834      736F7249 
 4834      6E646578 
 4835              	.LASF82:
 4836 0951 6D6F6449 		.ascii	"modIdacValue\000"
 4836      64616356 
 4836      616C7565 
 4836      00
 4837              	.LASF29:
 4838 095e 43617053 		.ascii	"CapSense_ScanWidget\000"
 4838      656E7365 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccp9wtTg.s 			page 131


 4838      5F536361 
 4838      6E576964 
 4838      67657400 
 4839              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
