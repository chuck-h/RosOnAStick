ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ROSSerial_UART_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	ROSSerial_UART_rxBufferHead,4,4
  18              		.comm	ROSSerial_UART_rxBufferTail,4,4
  19              		.comm	ROSSerial_UART_rxBufferOverflow,1,1
  20              		.comm	ROSSerial_UART_txBufferHead,4,4
  21              		.comm	ROSSerial_UART_txBufferTail,4,4
  22              		.comm	ROSSerial_UART_rxBufferInternal,65,4
  23              		.comm	ROSSerial_UART_txBufferInternal,128,4
  24              		.section	.text.ROSSerial_UART_SpiUartReadRxData,"ax",%progbits
  25              		.align	2
  26              		.global	ROSSerial_UART_SpiUartReadRxData
  27              		.code	16
  28              		.thumb_func
  29              		.type	ROSSerial_UART_SpiUartReadRxData, %function
  30              	ROSSerial_UART_SpiUartReadRxData:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC4\\ROSSerial_UART_SPI_UART.c"
   1:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * File Name: ROSSerial_UART_SPI_UART.c
   3:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Version 1.20
   4:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *
   5:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *  SPI and UART modes.
   8:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *
   9:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *
  11:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  18:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #include "ROSSerial_UART_PVT.h"
  19:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #include "ROSSerial_UART_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  21:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** /***************************************
  22:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *        SPI/UART Private Vars
  23:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  25:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #if(ROSSerial_UART_INTERNAL_RX_SW_BUFFER_CONST)
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 2


  26:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     volatile uint32 ROSSerial_UART_rxBufferHead;
  27:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     volatile uint32 ROSSerial_UART_rxBufferTail;
  28:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     volatile uint8  ROSSerial_UART_rxBufferOverflow;
  29:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #endif /* (ROSSerial_UART_INTERNAL_RX_SW_BUFFER_CONST) */
  30:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  31:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #if(ROSSerial_UART_INTERNAL_TX_SW_BUFFER_CONST)
  32:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     volatile uint32 ROSSerial_UART_txBufferHead;
  33:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     volatile uint32 ROSSerial_UART_txBufferTail;
  34:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #endif /* (ROSSerial_UART_INTERNAL_TX_SW_BUFFER_CONST) */
  35:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  36:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #if(ROSSerial_UART_INTERNAL_RX_SW_BUFFER)
  37:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  38:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     volatile uint8 ROSSerial_UART_rxBufferInternal[ROSSerial_UART_RX_BUFFER_SIZE];
  39:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #endif /* (ROSSerial_UART_INTERNAL_RX_SW_BUFFER) */
  40:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  41:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #if(ROSSerial_UART_INTERNAL_TX_SW_BUFFER)
  42:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     volatile uint8 ROSSerial_UART_txBufferInternal[ROSSerial_UART_TX_BUFFER_SIZE];
  43:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #endif /* (ROSSerial_UART_INTERNAL_TX_SW_BUFFER) */
  44:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  45:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  46:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #if(ROSSerial_UART_RX_DIRECTION)
  47:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  48:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     /*******************************************************************************
  49:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Function Name: ROSSerial_UART_SpiUartReadRxData
  50:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     ********************************************************************************
  51:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
  52:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Summary:
  53:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  54:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  55:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  56:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  57:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  58:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *     is empty.
  59:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
  60:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Parameters:
  61:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  None
  62:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
  63:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Return:
  64:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  Next data element from the receive buffer.
  65:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
  66:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Global Variables:
  67:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  Look into ROSSerial_UART_SpiInit for description.
  68:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
  69:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *******************************************************************************/
  70:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     uint32 ROSSerial_UART_SpiUartReadRxData(void)
  71:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     {
  33              		.loc 1 71 0
  34              		.cfi_startproc
  35 0000 80B5     		push	{r7, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 82B0     		sub	sp, sp, #8
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  72:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         uint32 rxData = 0u;
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 3


  43              		.loc 1 72 0
  44 0006 0023     		mov	r3, #0
  45 0008 7B60     		str	r3, [r7, #4]
  73:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  74:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_INTERNAL_RX_SW_BUFFER_CONST)
  75:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             uint32 locTail;
  76:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif /* (ROSSerial_UART_INTERNAL_RX_SW_BUFFER_CONST) */
  77:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  78:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_CHECK_RX_SW_BUFFER)
  79:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
  80:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             if(ROSSerial_UART_rxBufferHead != ROSSerial_UART_rxBufferTail)
  46              		.loc 1 80 0
  47 000a 0E4B     		ldr	r3, .L5
  48 000c 1A68     		ldr	r2, [r3]
  49 000e 0E4B     		ldr	r3, .L5+4
  50 0010 1B68     		ldr	r3, [r3]
  51 0012 9A42     		cmp	r2, r3
  52 0014 11D0     		beq	.L2
  81:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             {
  82:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  83:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  84:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 /* Calculate index to read from */
  85:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 locTail = (ROSSerial_UART_rxBufferTail + 1u);
  53              		.loc 1 85 0
  54 0016 0C4B     		ldr	r3, .L5+4
  55 0018 1B68     		ldr	r3, [r3]
  56 001a 0133     		add	r3, r3, #1
  57 001c 3B60     		str	r3, [r7]
  86:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  87:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 if(ROSSerial_UART_RX_BUFFER_SIZE == locTail)
  58              		.loc 1 87 0
  59 001e 3B68     		ldr	r3, [r7]
  60 0020 412B     		cmp	r3, #65
  61 0022 01D1     		bne	.L3
  88:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 {
  89:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                     locTail = 0u;
  62              		.loc 1 89 0
  63 0024 0023     		mov	r3, #0
  64 0026 3B60     		str	r3, [r7]
  65              	.L3:
  90:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 }
  91:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  92:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 /* Get data from RX software buffer */
  93:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 rxData = ROSSerial_UART_GetWordFromRxBuffer(locTail);
  66              		.loc 1 93 0
  67 0028 084A     		ldr	r2, .L5+8
  68 002a 3B68     		ldr	r3, [r7]
  69 002c D318     		add	r3, r2, r3
  70 002e 1B78     		ldrb	r3, [r3]
  71 0030 DBB2     		uxtb	r3, r3
  72 0032 7B60     		str	r3, [r7, #4]
  94:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
  95:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 /* Change index in the buffer */
  96:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 ROSSerial_UART_rxBufferTail = locTail;
  73              		.loc 1 96 0
  74 0034 044B     		ldr	r3, .L5+4
  75 0036 3A68     		ldr	r2, [r7]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 4


  76 0038 1A60     		str	r2, [r3]
  77              	.L2:
  97:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             }
  98:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
  99:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #else
 100:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 101:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             rxData = ROSSerial_UART_RX_FIFO_RD_REG; /* Read data from RX FIFO */
 102:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 103:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif
 104:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 105:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         return(rxData);
  78              		.loc 1 105 0
  79 003a 7B68     		ldr	r3, [r7, #4]
 106:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     }
  80              		.loc 1 106 0
  81 003c 181C     		mov	r0, r3
  82 003e BD46     		mov	sp, r7
  83 0040 02B0     		add	sp, sp, #8
  84              		@ sp needed
  85 0042 80BD     		pop	{r7, pc}
  86              	.L6:
  87              		.align	2
  88              	.L5:
  89 0044 00000000 		.word	ROSSerial_UART_rxBufferHead
  90 0048 00000000 		.word	ROSSerial_UART_rxBufferTail
  91 004c 00000000 		.word	ROSSerial_UART_rxBufferInternal
  92              		.cfi_endproc
  93              	.LFE0:
  94              		.size	ROSSerial_UART_SpiUartReadRxData, .-ROSSerial_UART_SpiUartReadRxData
  95              		.section	.text.ROSSerial_UART_SpiUartGetRxBufferSize,"ax",%progbits
  96              		.align	2
  97              		.global	ROSSerial_UART_SpiUartGetRxBufferSize
  98              		.code	16
  99              		.thumb_func
 100              		.type	ROSSerial_UART_SpiUartGetRxBufferSize, %function
 101              	ROSSerial_UART_SpiUartGetRxBufferSize:
 102              	.LFB1:
 107:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 108:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 109:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     /*******************************************************************************
 110:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Function Name: ROSSerial_UART_SpiUartGetRxBufferSize
 111:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     ********************************************************************************
 112:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 113:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Summary:
 114:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 115:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 116:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *     RX FIFO.
 117:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 118:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *     placed in the receive buffer.
 119:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 120:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Parameters:
 121:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  None
 122:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 123:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Return:
 124:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  Number of received data elements
 125:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 126:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *******************************************************************************/
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 5


 127:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     uint32 ROSSerial_UART_SpiUartGetRxBufferSize(void)
 128:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     {
 103              		.loc 1 128 0
 104              		.cfi_startproc
 105 0000 80B5     		push	{r7, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109 0002 82B0     		sub	sp, sp, #8
 110              		.cfi_def_cfa_offset 16
 111 0004 00AF     		add	r7, sp, #0
 112              		.cfi_def_cfa_register 7
 129:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         uint32 size;
 130:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_INTERNAL_RX_SW_BUFFER_CONST)
 131:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             uint32 locHead;
 132:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif /* (ROSSerial_UART_INTERNAL_RX_SW_BUFFER_CONST) */
 133:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 134:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_CHECK_RX_SW_BUFFER)
 135:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 136:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             locHead = ROSSerial_UART_rxBufferHead;
 113              		.loc 1 136 0
 114 0006 0C4B     		ldr	r3, .L11
 115 0008 1B68     		ldr	r3, [r3]
 116 000a 3B60     		str	r3, [r7]
 137:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 138:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             if(locHead >= ROSSerial_UART_rxBufferTail)
 117              		.loc 1 138 0
 118 000c 0B4B     		ldr	r3, .L11+4
 119 000e 1B68     		ldr	r3, [r3]
 120 0010 3A68     		ldr	r2, [r7]
 121 0012 9A42     		cmp	r2, r3
 122 0014 05D3     		bcc	.L8
 139:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             {
 140:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 size = (locHead - ROSSerial_UART_rxBufferTail);
 123              		.loc 1 140 0
 124 0016 094B     		ldr	r3, .L11+4
 125 0018 1B68     		ldr	r3, [r3]
 126 001a 3A68     		ldr	r2, [r7]
 127 001c D31A     		sub	r3, r2, r3
 128 001e 7B60     		str	r3, [r7, #4]
 129 0020 05E0     		b	.L9
 130              	.L8:
 141:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             }
 142:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             else
 143:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             {
 144:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 size = (locHead + (ROSSerial_UART_RX_BUFFER_SIZE - ROSSerial_UART_rxBufferTail));
 131              		.loc 1 144 0
 132 0022 064B     		ldr	r3, .L11+4
 133 0024 1B68     		ldr	r3, [r3]
 134 0026 3A68     		ldr	r2, [r7]
 135 0028 D31A     		sub	r3, r2, r3
 136 002a 4133     		add	r3, r3, #65
 137 002c 7B60     		str	r3, [r7, #4]
 138              	.L9:
 145:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             }
 146:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 147:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #else
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 6


 148:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 149:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             size = ROSSerial_UART_GET_RX_FIFO_ENTRIES;
 150:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 151:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif
 152:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 153:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         return(size);
 139              		.loc 1 153 0
 140 002e 7B68     		ldr	r3, [r7, #4]
 154:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     }
 141              		.loc 1 154 0
 142 0030 181C     		mov	r0, r3
 143 0032 BD46     		mov	sp, r7
 144 0034 02B0     		add	sp, sp, #8
 145              		@ sp needed
 146 0036 80BD     		pop	{r7, pc}
 147              	.L12:
 148              		.align	2
 149              	.L11:
 150 0038 00000000 		.word	ROSSerial_UART_rxBufferHead
 151 003c 00000000 		.word	ROSSerial_UART_rxBufferTail
 152              		.cfi_endproc
 153              	.LFE1:
 154              		.size	ROSSerial_UART_SpiUartGetRxBufferSize, .-ROSSerial_UART_SpiUartGetRxBufferSize
 155              		.section	.text.ROSSerial_UART_SpiUartClearRxBuffer,"ax",%progbits
 156              		.align	2
 157              		.global	ROSSerial_UART_SpiUartClearRxBuffer
 158              		.code	16
 159              		.thumb_func
 160              		.type	ROSSerial_UART_SpiUartClearRxBuffer, %function
 161              	ROSSerial_UART_SpiUartClearRxBuffer:
 162              	.LFB2:
 155:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 156:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 157:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     /*******************************************************************************
 158:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Function Name: ROSSerial_UART_SpiUartClearRxBuffer
 159:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     ********************************************************************************
 160:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 161:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Summary:
 162:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 163:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 164:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Parameters:
 165:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  None
 166:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 167:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Return:
 168:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  None
 169:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 170:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *******************************************************************************/
 171:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     void ROSSerial_UART_SpiUartClearRxBuffer(void)
 172:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     {
 163              		.loc 1 172 0
 164              		.cfi_startproc
 165 0000 80B5     		push	{r7, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 82B0     		sub	sp, sp, #8
 170              		.cfi_def_cfa_offset 16
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 7


 171 0004 00AF     		add	r7, sp, #0
 172              		.cfi_def_cfa_register 7
 173:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_INTERNAL_RX_SW_BUFFER_CONST)
 174:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             uint32 intSourceMask;
 175:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif /* (ROSSerial_UART_INTERNAL_RX_SW_BUFFER_CONST) */
 176:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 177:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_CHECK_RX_SW_BUFFER)
 178:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 179:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             intSourceMask = ROSSerial_UART_SpiUartDisableIntRx();
 173              		.loc 1 179 0
 174 0006 FFF7FEFF 		bl	ROSSerial_UART_SpiUartDisableIntRx
 175 000a 031C     		mov	r3, r0
 176 000c 7B60     		str	r3, [r7, #4]
 180:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 181:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_CLEAR_RX_FIFO;
 177              		.loc 1 181 0
 178 000e 0E4B     		ldr	r3, .L14
 179 0010 0D4A     		ldr	r2, .L14
 180 0012 1268     		ldr	r2, [r2]
 181 0014 8021     		mov	r1, #128
 182 0016 4902     		lsl	r1, r1, #9
 183 0018 0A43     		orr	r2, r1
 184 001a 1A60     		str	r2, [r3]
 185 001c 0A4B     		ldr	r3, .L14
 186 001e 0A4A     		ldr	r2, .L14
 187 0020 1168     		ldr	r1, [r2]
 188 0022 0A4A     		ldr	r2, .L14+4
 189 0024 0A40     		and	r2, r1
 190 0026 1A60     		str	r2, [r3]
 182:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 183:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             /* Flush RX software buffer */
 184:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_rxBufferHead     = ROSSerial_UART_rxBufferTail;
 191              		.loc 1 184 0
 192 0028 094B     		ldr	r3, .L14+8
 193 002a 1A68     		ldr	r2, [r3]
 194 002c 094B     		ldr	r3, .L14+12
 195 002e 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_rxBufferOverflow = 0u;
 196              		.loc 1 185 0
 197 0030 094B     		ldr	r3, .L14+16
 198 0032 0022     		mov	r2, #0
 199 0034 1A70     		strb	r2, [r3]
 186:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 187:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             /* End RX transfer */
 188:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_ClearRxInterruptSource(ROSSerial_UART_INTR_RX_ALL);
 200              		.loc 1 188 0
 201 0036 094B     		ldr	r3, .L14+20
 202 0038 094A     		ldr	r2, .L14+24
 203 003a 1A60     		str	r2, [r3]
 189:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 190:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_SpiUartEnableIntRx(intSourceMask);
 204              		.loc 1 190 0
 205 003c 094B     		ldr	r3, .L14+28
 206 003e 7A68     		ldr	r2, [r7, #4]
 207 0040 1A60     		str	r2, [r3]
 191:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 192:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #else
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 8


 193:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 194:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_CLEAR_RX_FIFO;
 195:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 196:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif
 197:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     }
 208              		.loc 1 197 0
 209 0042 BD46     		mov	sp, r7
 210 0044 02B0     		add	sp, sp, #8
 211              		@ sp needed
 212 0046 80BD     		pop	{r7, pc}
 213              	.L15:
 214              		.align	2
 215              	.L14:
 216 0048 04030640 		.word	1074135812
 217 004c FFFFFEFF 		.word	-65537
 218 0050 00000000 		.word	ROSSerial_UART_rxBufferTail
 219 0054 00000000 		.word	ROSSerial_UART_rxBufferHead
 220 0058 00000000 		.word	ROSSerial_UART_rxBufferOverflow
 221 005c C00F0640 		.word	1074139072
 222 0060 ED0F0000 		.word	4077
 223 0064 C80F0640 		.word	1074139080
 224              		.cfi_endproc
 225              	.LFE2:
 226              		.size	ROSSerial_UART_SpiUartClearRxBuffer, .-ROSSerial_UART_SpiUartClearRxBuffer
 227              		.section	.text.ROSSerial_UART_SpiUartWriteTxData,"ax",%progbits
 228              		.align	2
 229              		.global	ROSSerial_UART_SpiUartWriteTxData
 230              		.code	16
 231              		.thumb_func
 232              		.type	ROSSerial_UART_SpiUartWriteTxData, %function
 233              	ROSSerial_UART_SpiUartWriteTxData:
 234              	.LFB3:
 198:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 199:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #endif /* (ROSSerial_UART_RX_DIRECTION) */
 200:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 201:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 202:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #if(ROSSerial_UART_TX_DIRECTION)
 203:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 204:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     /*******************************************************************************
 205:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Function Name: ROSSerial_UART_SpiUartWriteTxData
 206:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     ********************************************************************************
 207:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 208:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Summary:
 209:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 210:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  bus time.
 211:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 212:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 213:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 214:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Parameters:
 215:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  txDataByte: the data to be transmitted.
 216:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 217:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Return:
 218:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  None
 219:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 220:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *******************************************************************************/
 221:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     void ROSSerial_UART_SpiUartWriteTxData(uint32 txData)
 222:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     {
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 9


 235              		.loc 1 222 0
 236              		.cfi_startproc
 237 0000 80B5     		push	{r7, lr}
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 7, -8
 240              		.cfi_offset 14, -4
 241 0002 84B0     		sub	sp, sp, #16
 242              		.cfi_def_cfa_offset 24
 243 0004 00AF     		add	r7, sp, #0
 244              		.cfi_def_cfa_register 7
 245 0006 7860     		str	r0, [r7, #4]
 223:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_INTERNAL_TX_SW_BUFFER_CONST)
 224:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             uint32 locHead;
 225:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             uint32 intSourceMask;
 226:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif /* (ROSSerial_UART_INTERNAL_TX_SW_BUFFER_CONST) */
 227:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 228:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_CHECK_TX_SW_BUFFER)
 229:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 230:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             /* Head index to put data */
 231:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             locHead = (ROSSerial_UART_txBufferHead + 1u);
 246              		.loc 1 231 0
 247 0008 1C4B     		ldr	r3, .L22
 248 000a 1B68     		ldr	r3, [r3]
 249 000c 0133     		add	r3, r3, #1
 250 000e FB60     		str	r3, [r7, #12]
 232:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 233:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             /* Adjust TX software buffer index */
 234:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             if(ROSSerial_UART_TX_BUFFER_SIZE == locHead)
 251              		.loc 1 234 0
 252 0010 FB68     		ldr	r3, [r7, #12]
 253 0012 802B     		cmp	r3, #128
 254 0014 02D1     		bne	.L17
 235:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             {
 236:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 locHead = 0u;
 255              		.loc 1 236 0
 256 0016 0023     		mov	r3, #0
 257 0018 FB60     		str	r3, [r7, #12]
 237:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             }
 238:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 239:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             while(locHead == ROSSerial_UART_txBufferTail)
 258              		.loc 1 239 0
 259 001a FFE7     		b	.L21
 260              	.L17:
 261              	.L21:
 262 001c C046     		mov	r8, r8
 263              	.L18:
 264              		.loc 1 239 0 is_stmt 0 discriminator 1
 265 001e 184B     		ldr	r3, .L22+4
 266 0020 1B68     		ldr	r3, [r3]
 267 0022 FA68     		ldr	r2, [r7, #12]
 268 0024 9A42     		cmp	r2, r3
 269 0026 FAD0     		beq	.L18
 240:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             {
 241:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 242:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             }
 243:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 244:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             /* TX software buffer has at least one room */
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 10


 245:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 246:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             if((ROSSerial_UART_txBufferHead == ROSSerial_UART_txBufferTail) &&
 270              		.loc 1 246 0 is_stmt 1
 271 0028 144B     		ldr	r3, .L22
 272 002a 1A68     		ldr	r2, [r3]
 273 002c 144B     		ldr	r3, .L22+4
 274 002e 1B68     		ldr	r3, [r3]
 275 0030 9A42     		cmp	r2, r3
 276 0032 09D1     		bne	.L19
 247:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                (ROSSerial_UART_FIFO_SIZE != ROSSerial_UART_GET_TX_FIFO_ENTRIES))
 277              		.loc 1 247 0 discriminator 1
 278 0034 134B     		ldr	r3, .L22+8
 279 0036 1A68     		ldr	r2, [r3]
 280 0038 0F23     		mov	r3, #15
 281 003a 1340     		and	r3, r2
 246:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             if((ROSSerial_UART_txBufferHead == ROSSerial_UART_txBufferTail) &&
 282              		.loc 1 246 0 discriminator 1
 283 003c 082B     		cmp	r3, #8
 284 003e 03D0     		beq	.L19
 248:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             {
 249:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 250:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 ROSSerial_UART_TX_FIFO_WR_REG = txData;
 285              		.loc 1 250 0
 286 0040 114B     		ldr	r3, .L22+12
 287 0042 7A68     		ldr	r2, [r7, #4]
 288 0044 1A60     		str	r2, [r3]
 289 0046 15E0     		b	.L16
 290              	.L19:
 251:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             }
 252:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             /* Put data in TX software buffer */
 253:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             else
 254:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             {
 255:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 256:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 ROSSerial_UART_ClearTxInterruptSource(ROSSerial_UART_INTR_TX_NOT_FULL);
 291              		.loc 1 256 0
 292 0048 104B     		ldr	r3, .L22+16
 293 004a 0222     		mov	r2, #2
 294 004c 1A60     		str	r2, [r3]
 257:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 258:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 ROSSerial_UART_PutWordInTxBuffer(locHead, txData);
 295              		.loc 1 258 0
 296 004e 7B68     		ldr	r3, [r7, #4]
 297 0050 DAB2     		uxtb	r2, r3
 298 0052 0F49     		ldr	r1, .L22+20
 299 0054 FB68     		ldr	r3, [r7, #12]
 300 0056 CB18     		add	r3, r1, r3
 301 0058 1A70     		strb	r2, [r3]
 259:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 260:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 ROSSerial_UART_txBufferHead = locHead;
 302              		.loc 1 260 0
 303 005a 084B     		ldr	r3, .L22
 304 005c FA68     		ldr	r2, [r7, #12]
 305 005e 1A60     		str	r2, [r3]
 261:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 262:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 /* Enable interrupt to transmit */
 263:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 intSourceMask  = ROSSerial_UART_INTR_TX_NOT_FULL;
 306              		.loc 1 263 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 11


 307 0060 0223     		mov	r3, #2
 308 0062 BB60     		str	r3, [r7, #8]
 264:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 intSourceMask |= ROSSerial_UART_GetTxInterruptMode();
 309              		.loc 1 264 0
 310 0064 0B4B     		ldr	r3, .L22+24
 311 0066 1B68     		ldr	r3, [r3]
 312 0068 BA68     		ldr	r2, [r7, #8]
 313 006a 1343     		orr	r3, r2
 314 006c BB60     		str	r3, [r7, #8]
 265:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 ROSSerial_UART_SpiUartEnableIntTx(intSourceMask);
 315              		.loc 1 265 0
 316 006e 094B     		ldr	r3, .L22+24
 317 0070 BA68     		ldr	r2, [r7, #8]
 318 0072 1A60     		str	r2, [r3]
 319              	.L16:
 266:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             }
 267:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 268:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #else
 269:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 270:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             while(ROSSerial_UART_FIFO_SIZE == ROSSerial_UART_GET_TX_FIFO_ENTRIES)
 271:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             {
 272:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 /* Block while TX FIFO is FULL */
 273:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             }
 274:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 275:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_TX_FIFO_WR_REG = txData;
 276:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 277:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif
 278:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     }
 320              		.loc 1 278 0
 321 0074 BD46     		mov	sp, r7
 322 0076 04B0     		add	sp, sp, #16
 323              		@ sp needed
 324 0078 80BD     		pop	{r7, pc}
 325              	.L23:
 326 007a C046     		.align	2
 327              	.L22:
 328 007c 00000000 		.word	ROSSerial_UART_txBufferHead
 329 0080 00000000 		.word	ROSSerial_UART_txBufferTail
 330 0084 08020640 		.word	1074135560
 331 0088 40020640 		.word	1074135616
 332 008c 800F0640 		.word	1074139008
 333 0090 00000000 		.word	ROSSerial_UART_txBufferInternal
 334 0094 880F0640 		.word	1074139016
 335              		.cfi_endproc
 336              	.LFE3:
 337              		.size	ROSSerial_UART_SpiUartWriteTxData, .-ROSSerial_UART_SpiUartWriteTxData
 338              		.section	.text.ROSSerial_UART_SpiUartPutArray,"ax",%progbits
 339              		.align	2
 340              		.global	ROSSerial_UART_SpiUartPutArray
 341              		.code	16
 342              		.thumb_func
 343              		.type	ROSSerial_UART_SpiUartPutArray, %function
 344              	ROSSerial_UART_SpiUartPutArray:
 345              	.LFB4:
 279:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 280:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 281:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     /*******************************************************************************
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 12


 282:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Function Name: ROSSerial_UART_SpiUartPutArray
 283:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     ********************************************************************************
 284:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 285:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Summary:
 286:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 287:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 288:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 289:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  than transmit buffer size.
 290:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 291:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Parameters:
 292:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  wrBuf:  pointer to an array with data to be placed in transmit buffer.
 293:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  count:  number of data elements to be placed in the transmit buffer.
 294:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 295:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Return:
 296:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  None
 297:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 298:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *******************************************************************************/
 299:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     void ROSSerial_UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 300:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     {
 346              		.loc 1 300 0
 347              		.cfi_startproc
 348 0000 80B5     		push	{r7, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 84B0     		sub	sp, sp, #16
 353              		.cfi_def_cfa_offset 24
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 356 0006 7860     		str	r0, [r7, #4]
 357 0008 3960     		str	r1, [r7]
 301:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         uint32 i;
 302:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 303:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         for(i=0u; i < count; i++)
 358              		.loc 1 303 0
 359 000a 0023     		mov	r3, #0
 360 000c FB60     		str	r3, [r7, #12]
 361 000e 09E0     		b	.L25
 362              	.L26:
 304:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 305:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_SpiUartWriteTxData((uint32) wrBuf[i]);
 363              		.loc 1 305 0 discriminator 2
 364 0010 7A68     		ldr	r2, [r7, #4]
 365 0012 FB68     		ldr	r3, [r7, #12]
 366 0014 D318     		add	r3, r2, r3
 367 0016 1B78     		ldrb	r3, [r3]
 368 0018 181C     		mov	r0, r3
 369 001a FFF7FEFF 		bl	ROSSerial_UART_SpiUartWriteTxData
 303:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         for(i=0u; i < count; i++)
 370              		.loc 1 303 0 discriminator 2
 371 001e FB68     		ldr	r3, [r7, #12]
 372 0020 0133     		add	r3, r3, #1
 373 0022 FB60     		str	r3, [r7, #12]
 374              	.L25:
 303:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         for(i=0u; i < count; i++)
 375              		.loc 1 303 0 is_stmt 0 discriminator 1
 376 0024 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 13


 377 0026 3B68     		ldr	r3, [r7]
 378 0028 9A42     		cmp	r2, r3
 379 002a F1D3     		bcc	.L26
 306:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 307:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     }
 380              		.loc 1 307 0 is_stmt 1
 381 002c BD46     		mov	sp, r7
 382 002e 04B0     		add	sp, sp, #16
 383              		@ sp needed
 384 0030 80BD     		pop	{r7, pc}
 385              		.cfi_endproc
 386              	.LFE4:
 387              		.size	ROSSerial_UART_SpiUartPutArray, .-ROSSerial_UART_SpiUartPutArray
 388 0032 C046     		.section	.text.ROSSerial_UART_SpiUartGetTxBufferSize,"ax",%progbits
 389              		.align	2
 390              		.global	ROSSerial_UART_SpiUartGetTxBufferSize
 391              		.code	16
 392              		.thumb_func
 393              		.type	ROSSerial_UART_SpiUartGetTxBufferSize, %function
 394              	ROSSerial_UART_SpiUartGetTxBufferSize:
 395              	.LFB5:
 308:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 309:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 310:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     /*******************************************************************************
 311:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Function Name: ROSSerial_UART_SpiUartGetTxBufferSize
 312:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     ********************************************************************************
 313:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 314:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Summary:
 315:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Returns the number of elements currently in the transmit buffer.
 316:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  - TX software buffer is disabled: returns the number of used entries in
 317:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *    TX FIFO.
 318:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  - TX software buffer is enabled: returns the number of elements currently
 319:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *    used in the transmit buffer. This number does not include used entries in
 320:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *    the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 321:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *    not full.
 322:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 323:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Parameters:
 324:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  None
 325:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 326:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Return:
 327:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 328:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 329:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *******************************************************************************/
 330:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     uint32 ROSSerial_UART_SpiUartGetTxBufferSize(void)
 331:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     {
 396              		.loc 1 331 0
 397              		.cfi_startproc
 398 0000 80B5     		push	{r7, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 82B0     		sub	sp, sp, #8
 403              		.cfi_def_cfa_offset 16
 404 0004 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
 332:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         uint32 size;
 333:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_INTERNAL_TX_SW_BUFFER_CONST)
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 14


 334:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             uint32 locTail;
 335:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif /* (ROSSerial_UART_INTERNAL_TX_SW_BUFFER_CONST) */
 336:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 337:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_CHECK_TX_SW_BUFFER)
 338:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 339:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             /* Get current Tail index */
 340:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             locTail = ROSSerial_UART_txBufferTail;
 406              		.loc 1 340 0
 407 0006 0C4B     		ldr	r3, .L31
 408 0008 1B68     		ldr	r3, [r3]
 409 000a 3B60     		str	r3, [r7]
 341:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 342:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             if(ROSSerial_UART_txBufferHead >= locTail)
 410              		.loc 1 342 0
 411 000c 0B4B     		ldr	r3, .L31+4
 412 000e 1A68     		ldr	r2, [r3]
 413 0010 3B68     		ldr	r3, [r7]
 414 0012 9A42     		cmp	r2, r3
 415 0014 05D3     		bcc	.L28
 343:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             {
 344:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 size = (ROSSerial_UART_txBufferHead - locTail);
 416              		.loc 1 344 0
 417 0016 094B     		ldr	r3, .L31+4
 418 0018 1A68     		ldr	r2, [r3]
 419 001a 3B68     		ldr	r3, [r7]
 420 001c D31A     		sub	r3, r2, r3
 421 001e 7B60     		str	r3, [r7, #4]
 422 0020 05E0     		b	.L29
 423              	.L28:
 345:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             }
 346:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             else
 347:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             {
 348:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****                 size = (ROSSerial_UART_txBufferHead + (ROSSerial_UART_TX_BUFFER_SIZE - locTail));
 424              		.loc 1 348 0
 425 0022 064B     		ldr	r3, .L31+4
 426 0024 1A68     		ldr	r2, [r3]
 427 0026 3B68     		ldr	r3, [r7]
 428 0028 D31A     		sub	r3, r2, r3
 429 002a 8033     		add	r3, r3, #128
 430 002c 7B60     		str	r3, [r7, #4]
 431              	.L29:
 349:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             }
 350:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 351:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #else
 352:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 353:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             size = ROSSerial_UART_GET_TX_FIFO_ENTRIES;
 354:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 355:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif
 356:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 357:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         return(size);
 432              		.loc 1 357 0
 433 002e 7B68     		ldr	r3, [r7, #4]
 358:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     }
 434              		.loc 1 358 0
 435 0030 181C     		mov	r0, r3
 436 0032 BD46     		mov	sp, r7
 437 0034 02B0     		add	sp, sp, #8
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 15


 438              		@ sp needed
 439 0036 80BD     		pop	{r7, pc}
 440              	.L32:
 441              		.align	2
 442              	.L31:
 443 0038 00000000 		.word	ROSSerial_UART_txBufferTail
 444 003c 00000000 		.word	ROSSerial_UART_txBufferHead
 445              		.cfi_endproc
 446              	.LFE5:
 447              		.size	ROSSerial_UART_SpiUartGetTxBufferSize, .-ROSSerial_UART_SpiUartGetTxBufferSize
 448              		.section	.text.ROSSerial_UART_SpiUartClearTxBuffer,"ax",%progbits
 449              		.align	2
 450              		.global	ROSSerial_UART_SpiUartClearTxBuffer
 451              		.code	16
 452              		.thumb_func
 453              		.type	ROSSerial_UART_SpiUartClearTxBuffer, %function
 454              	ROSSerial_UART_SpiUartClearTxBuffer:
 455              	.LFB6:
 359:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 360:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 361:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     /*******************************************************************************
 362:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Function Name: ROSSerial_UART_SpiUartClearTxBuffer
 363:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     ********************************************************************************
 364:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 365:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Summary:
 366:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 367:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 368:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Parameters:
 369:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  None
 370:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 371:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     * Return:
 372:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *  None
 373:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *
 374:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     *******************************************************************************/
 375:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     void ROSSerial_UART_SpiUartClearTxBuffer(void)
 376:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     {
 456              		.loc 1 376 0
 457              		.cfi_startproc
 458 0000 80B5     		push	{r7, lr}
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 7, -8
 461              		.cfi_offset 14, -4
 462 0002 82B0     		sub	sp, sp, #8
 463              		.cfi_def_cfa_offset 16
 464 0004 00AF     		add	r7, sp, #0
 465              		.cfi_def_cfa_register 7
 377:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_INTERNAL_TX_SW_BUFFER_CONST)
 378:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             uint32 intSourceMask;
 379:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif /* (ROSSerial_UART_INTERNAL_TX_SW_BUFFER_CONST) */
 380:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 381:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #if(ROSSerial_UART_CHECK_TX_SW_BUFFER)
 382:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 383:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             intSourceMask = ROSSerial_UART_SpiUartDisableIntTx();
 466              		.loc 1 383 0
 467 0006 FFF7FEFF 		bl	ROSSerial_UART_SpiUartDisableIntTx
 468 000a 031C     		mov	r3, r0
 469 000c 7B60     		str	r3, [r7, #4]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 16


 384:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 385:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_CLEAR_TX_FIFO;
 470              		.loc 1 385 0
 471 000e 0D4B     		ldr	r3, .L34
 472 0010 0C4A     		ldr	r2, .L34
 473 0012 1268     		ldr	r2, [r2]
 474 0014 8021     		mov	r1, #128
 475 0016 4902     		lsl	r1, r1, #9
 476 0018 0A43     		orr	r2, r1
 477 001a 1A60     		str	r2, [r3]
 478 001c 094B     		ldr	r3, .L34
 479 001e 094A     		ldr	r2, .L34
 480 0020 1168     		ldr	r1, [r2]
 481 0022 094A     		ldr	r2, .L34+4
 482 0024 0A40     		and	r2, r1
 483 0026 1A60     		str	r2, [r3]
 386:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 387:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             /* Flush TX software buffer */
 388:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_txBufferHead = ROSSerial_UART_txBufferTail;
 484              		.loc 1 388 0
 485 0028 084B     		ldr	r3, .L34+8
 486 002a 1A68     		ldr	r2, [r3]
 487 002c 084B     		ldr	r3, .L34+12
 488 002e 1A60     		str	r2, [r3]
 389:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 390:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             /* End TX transfer if it is in progress */
 391:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             intSourceMask &= (uint32) ~ROSSerial_UART_INTR_TX_NOT_FULL;
 489              		.loc 1 391 0
 490 0030 7B68     		ldr	r3, [r7, #4]
 491 0032 0222     		mov	r2, #2
 492 0034 9343     		bic	r3, r2
 493 0036 7B60     		str	r3, [r7, #4]
 392:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 393:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_SpiUartEnableIntTx(intSourceMask);
 494              		.loc 1 393 0
 495 0038 064B     		ldr	r3, .L34+16
 496 003a 7A68     		ldr	r2, [r7, #4]
 497 003c 1A60     		str	r2, [r3]
 394:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 395:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #else
 396:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         {
 397:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****             ROSSerial_UART_CLEAR_TX_FIFO;
 398:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         }
 399:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****         #endif
 400:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     }
 498              		.loc 1 400 0
 499 003e BD46     		mov	sp, r7
 500 0040 02B0     		add	sp, sp, #8
 501              		@ sp needed
 502 0042 80BD     		pop	{r7, pc}
 503              	.L35:
 504              		.align	2
 505              	.L34:
 506 0044 04020640 		.word	1074135556
 507 0048 FFFFFEFF 		.word	-65537
 508 004c 00000000 		.word	ROSSerial_UART_txBufferTail
 509 0050 00000000 		.word	ROSSerial_UART_txBufferHead
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 17


 510 0054 880F0640 		.word	1074139016
 511              		.cfi_endproc
 512              	.LFE6:
 513              		.size	ROSSerial_UART_SpiUartClearTxBuffer, .-ROSSerial_UART_SpiUartClearTxBuffer
 514              		.section	.text.ROSSerial_UART_SpiUartDisableIntRx,"ax",%progbits
 515              		.align	2
 516              		.global	ROSSerial_UART_SpiUartDisableIntRx
 517              		.code	16
 518              		.thumb_func
 519              		.type	ROSSerial_UART_SpiUartDisableIntRx, %function
 520              	ROSSerial_UART_SpiUartDisableIntRx:
 521              	.LFB7:
 401:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 402:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** #endif /* (ROSSerial_UART_TX_DIRECTION) */
 403:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 404:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 405:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** /*******************************************************************************
 406:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Function Name: ROSSerial_UART_SpiUartDisableIntRx
 407:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** ********************************************************************************
 408:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *
 409:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Summary:
 410:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 411:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *
 412:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Parameters:
 413:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *  None
 414:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *
 415:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Return:
 416:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *  Returns the RX interrupt sources enabled before the function call.
 417:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *
 418:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** uint32 ROSSerial_UART_SpiUartDisableIntRx(void)
 420:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** {
 522              		.loc 1 420 0
 523              		.cfi_startproc
 524 0000 80B5     		push	{r7, lr}
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 7, -8
 527              		.cfi_offset 14, -4
 528 0002 82B0     		sub	sp, sp, #8
 529              		.cfi_def_cfa_offset 16
 530 0004 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 421:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     uint32 intSource;
 422:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 423:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     intSource = ROSSerial_UART_GetRxInterruptMode();
 532              		.loc 1 423 0
 533 0006 054B     		ldr	r3, .L38
 534 0008 1B68     		ldr	r3, [r3]
 535 000a 7B60     		str	r3, [r7, #4]
 424:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 425:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     ROSSerial_UART_SetRxInterruptMode(ROSSerial_UART_NO_INTR_SOURCES);
 536              		.loc 1 425 0
 537 000c 034B     		ldr	r3, .L38
 538 000e 0022     		mov	r2, #0
 539 0010 1A60     		str	r2, [r3]
 426:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 427:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     return(intSource);
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 18


 540              		.loc 1 427 0
 541 0012 7B68     		ldr	r3, [r7, #4]
 428:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** }
 542              		.loc 1 428 0
 543 0014 181C     		mov	r0, r3
 544 0016 BD46     		mov	sp, r7
 545 0018 02B0     		add	sp, sp, #8
 546              		@ sp needed
 547 001a 80BD     		pop	{r7, pc}
 548              	.L39:
 549              		.align	2
 550              	.L38:
 551 001c C80F0640 		.word	1074139080
 552              		.cfi_endproc
 553              	.LFE7:
 554              		.size	ROSSerial_UART_SpiUartDisableIntRx, .-ROSSerial_UART_SpiUartDisableIntRx
 555              		.section	.text.ROSSerial_UART_SpiUartDisableIntTx,"ax",%progbits
 556              		.align	2
 557              		.global	ROSSerial_UART_SpiUartDisableIntTx
 558              		.code	16
 559              		.thumb_func
 560              		.type	ROSSerial_UART_SpiUartDisableIntTx, %function
 561              	ROSSerial_UART_SpiUartDisableIntTx:
 562              	.LFB8:
 429:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 430:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 431:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** /*******************************************************************************
 432:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Function Name: ROSSerial_UART_SpiUartDisableIntTx
 433:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** ********************************************************************************
 434:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *
 435:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Summary:
 436:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *  Disables TX interrupt sources.
 437:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *
 438:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Parameters:
 439:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *  None
 440:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *
 441:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** * Return:
 442:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *  Returns TX interrupt sources enabled before function call.
 443:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *
 444:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** *******************************************************************************/
 445:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** uint32 ROSSerial_UART_SpiUartDisableIntTx(void)
 446:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** {
 563              		.loc 1 446 0
 564              		.cfi_startproc
 565 0000 80B5     		push	{r7, lr}
 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 7, -8
 568              		.cfi_offset 14, -4
 569 0002 82B0     		sub	sp, sp, #8
 570              		.cfi_def_cfa_offset 16
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 447:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     uint32 intSourceMask;
 448:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 449:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     intSourceMask = ROSSerial_UART_GetTxInterruptMode();
 573              		.loc 1 449 0
 574 0006 054B     		ldr	r3, .L42
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 19


 575 0008 1B68     		ldr	r3, [r3]
 576 000a 7B60     		str	r3, [r7, #4]
 450:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 451:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     ROSSerial_UART_SetTxInterruptMode(ROSSerial_UART_NO_INTR_SOURCES);
 577              		.loc 1 451 0
 578 000c 034B     		ldr	r3, .L42
 579 000e 0022     		mov	r2, #0
 580 0010 1A60     		str	r2, [r3]
 452:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** 
 453:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c ****     return(intSourceMask);
 581              		.loc 1 453 0
 582 0012 7B68     		ldr	r3, [r7, #4]
 454:.\Generated_Source\PSoC4/ROSSerial_UART_SPI_UART.c **** }
 583              		.loc 1 454 0
 584 0014 181C     		mov	r0, r3
 585 0016 BD46     		mov	sp, r7
 586 0018 02B0     		add	sp, sp, #8
 587              		@ sp needed
 588 001a 80BD     		pop	{r7, pc}
 589              	.L43:
 590              		.align	2
 591              	.L42:
 592 001c 880F0640 		.word	1074139016
 593              		.cfi_endproc
 594              	.LFE8:
 595              		.size	ROSSerial_UART_SpiUartDisableIntTx, .-ROSSerial_UART_SpiUartDisableIntTx
 596              		.text
 597              	.Letext0:
 598              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 599              		.section	.debug_info,"",%progbits
 600              	.Ldebug_info0:
 601 0000 20030000 		.4byte	0x320
 602 0004 0400     		.2byte	0x4
 603 0006 00000000 		.4byte	.Ldebug_abbrev0
 604 000a 04       		.byte	0x4
 605 000b 01       		.uleb128 0x1
 606 000c 6D030000 		.4byte	.LASF41
 607 0010 01       		.byte	0x1
 608 0011 92020000 		.4byte	.LASF42
 609 0015 00000000 		.4byte	.LASF43
 610 0019 00000000 		.4byte	.Ldebug_ranges0+0
 611 001d 00000000 		.4byte	0
 612 0021 00000000 		.4byte	.Ldebug_line0
 613 0025 02       		.uleb128 0x2
 614 0026 01       		.byte	0x1
 615 0027 06       		.byte	0x6
 616 0028 3E030000 		.4byte	.LASF0
 617 002c 02       		.uleb128 0x2
 618 002d 01       		.byte	0x1
 619 002e 08       		.byte	0x8
 620 002f EC010000 		.4byte	.LASF1
 621 0033 02       		.uleb128 0x2
 622 0034 02       		.byte	0x2
 623 0035 05       		.byte	0x5
 624 0036 0B030000 		.4byte	.LASF2
 625 003a 02       		.uleb128 0x2
 626 003b 02       		.byte	0x2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 20


 627 003c 07       		.byte	0x7
 628 003d F5000000 		.4byte	.LASF3
 629 0041 02       		.uleb128 0x2
 630 0042 04       		.byte	0x4
 631 0043 05       		.byte	0x5
 632 0044 35030000 		.4byte	.LASF4
 633 0048 02       		.uleb128 0x2
 634 0049 04       		.byte	0x4
 635 004a 07       		.byte	0x7
 636 004b 81010000 		.4byte	.LASF5
 637 004f 02       		.uleb128 0x2
 638 0050 08       		.byte	0x8
 639 0051 05       		.byte	0x5
 640 0052 84020000 		.4byte	.LASF6
 641 0056 02       		.uleb128 0x2
 642 0057 08       		.byte	0x8
 643 0058 07       		.byte	0x7
 644 0059 5C020000 		.4byte	.LASF7
 645 005d 03       		.uleb128 0x3
 646 005e 04       		.byte	0x4
 647 005f 05       		.byte	0x5
 648 0060 696E7400 		.ascii	"int\000"
 649 0064 02       		.uleb128 0x2
 650 0065 04       		.byte	0x4
 651 0066 07       		.byte	0x7
 652 0067 08010000 		.4byte	.LASF8
 653 006b 04       		.uleb128 0x4
 654 006c B3010000 		.4byte	.LASF9
 655 0070 02       		.byte	0x2
 656 0071 5B       		.byte	0x5b
 657 0072 2C000000 		.4byte	0x2c
 658 0076 04       		.uleb128 0x4
 659 0077 01020000 		.4byte	.LASF10
 660 007b 02       		.byte	0x2
 661 007c 5D       		.byte	0x5d
 662 007d 48000000 		.4byte	0x48
 663 0081 02       		.uleb128 0x2
 664 0082 04       		.byte	0x4
 665 0083 04       		.byte	0x4
 666 0084 5A010000 		.4byte	.LASF11
 667 0088 02       		.uleb128 0x2
 668 0089 08       		.byte	0x8
 669 008a 04       		.byte	0x4
 670 008b FA010000 		.4byte	.LASF12
 671 008f 02       		.uleb128 0x2
 672 0090 01       		.byte	0x1
 673 0091 08       		.byte	0x8
 674 0092 C5020000 		.4byte	.LASF13
 675 0096 05       		.uleb128 0x5
 676 0097 6B000000 		.4byte	0x6b
 677 009b 04       		.uleb128 0x4
 678 009c 7E000000 		.4byte	.LASF14
 679 00a0 02       		.byte	0x2
 680 00a1 F2       		.byte	0xf2
 681 00a2 A6000000 		.4byte	0xa6
 682 00a6 05       		.uleb128 0x5
 683 00a7 76000000 		.4byte	0x76
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 21


 684 00ab 02       		.uleb128 0x2
 685 00ac 04       		.byte	0x4
 686 00ad 07       		.byte	0x7
 687 00ae 7B020000 		.4byte	.LASF15
 688 00b2 06       		.uleb128 0x6
 689 00b3 15010000 		.4byte	.LASF18
 690 00b7 01       		.byte	0x1
 691 00b8 46       		.byte	0x46
 692 00b9 76000000 		.4byte	0x76
 693 00bd 00000000 		.4byte	.LFB0
 694 00c1 50000000 		.4byte	.LFE0-.LFB0
 695 00c5 01       		.uleb128 0x1
 696 00c6 9C       		.byte	0x9c
 697 00c7 E8000000 		.4byte	0xe8
 698 00cb 07       		.uleb128 0x7
 699 00cc DF010000 		.4byte	.LASF16
 700 00d0 01       		.byte	0x1
 701 00d1 48       		.byte	0x48
 702 00d2 76000000 		.4byte	0x76
 703 00d6 02       		.uleb128 0x2
 704 00d7 91       		.byte	0x91
 705 00d8 74       		.sleb128 -12
 706 00d9 07       		.uleb128 0x7
 707 00da 73020000 		.4byte	.LASF17
 708 00de 01       		.byte	0x1
 709 00df 4B       		.byte	0x4b
 710 00e0 76000000 		.4byte	0x76
 711 00e4 02       		.uleb128 0x2
 712 00e5 91       		.byte	0x91
 713 00e6 70       		.sleb128 -16
 714 00e7 00       		.byte	0
 715 00e8 06       		.uleb128 0x6
 716 00e9 58000000 		.4byte	.LASF19
 717 00ed 01       		.byte	0x1
 718 00ee 7F       		.byte	0x7f
 719 00ef 76000000 		.4byte	0x76
 720 00f3 00000000 		.4byte	.LFB1
 721 00f7 40000000 		.4byte	.LFE1-.LFB1
 722 00fb 01       		.uleb128 0x1
 723 00fc 9C       		.byte	0x9c
 724 00fd 1E010000 		.4byte	0x11e
 725 0101 07       		.uleb128 0x7
 726 0102 7C010000 		.4byte	.LASF20
 727 0106 01       		.byte	0x1
 728 0107 81       		.byte	0x81
 729 0108 76000000 		.4byte	0x76
 730 010c 02       		.uleb128 0x2
 731 010d 91       		.byte	0x91
 732 010e 74       		.sleb128 -12
 733 010f 07       		.uleb128 0x7
 734 0110 52010000 		.4byte	.LASF21
 735 0114 01       		.byte	0x1
 736 0115 83       		.byte	0x83
 737 0116 76000000 		.4byte	0x76
 738 011a 02       		.uleb128 0x2
 739 011b 91       		.byte	0x91
 740 011c 70       		.sleb128 -16
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 22


 741 011d 00       		.byte	0
 742 011e 08       		.uleb128 0x8
 743 011f D1000000 		.4byte	.LASF23
 744 0123 01       		.byte	0x1
 745 0124 AB       		.byte	0xab
 746 0125 00000000 		.4byte	.LFB2
 747 0129 68000000 		.4byte	.LFE2-.LFB2
 748 012d 01       		.uleb128 0x1
 749 012e 9C       		.byte	0x9c
 750 012f 42010000 		.4byte	0x142
 751 0133 07       		.uleb128 0x7
 752 0134 28020000 		.4byte	.LASF22
 753 0138 01       		.byte	0x1
 754 0139 AE       		.byte	0xae
 755 013a 76000000 		.4byte	0x76
 756 013e 02       		.uleb128 0x2
 757 013f 91       		.byte	0x91
 758 0140 74       		.sleb128 -12
 759 0141 00       		.byte	0
 760 0142 09       		.uleb128 0x9
 761 0143 CA020000 		.4byte	.LASF24
 762 0147 01       		.byte	0x1
 763 0148 DD       		.byte	0xdd
 764 0149 00000000 		.4byte	.LFB3
 765 014d 98000000 		.4byte	.LFE3-.LFB3
 766 0151 01       		.uleb128 0x1
 767 0152 9C       		.byte	0x9c
 768 0153 82010000 		.4byte	0x182
 769 0157 0A       		.uleb128 0xa
 770 0158 CA000000 		.4byte	.LASF26
 771 015c 01       		.byte	0x1
 772 015d DD       		.byte	0xdd
 773 015e 76000000 		.4byte	0x76
 774 0162 02       		.uleb128 0x2
 775 0163 91       		.byte	0x91
 776 0164 6C       		.sleb128 -20
 777 0165 07       		.uleb128 0x7
 778 0166 52010000 		.4byte	.LASF21
 779 016a 01       		.byte	0x1
 780 016b E0       		.byte	0xe0
 781 016c 76000000 		.4byte	0x76
 782 0170 02       		.uleb128 0x2
 783 0171 91       		.byte	0x91
 784 0172 74       		.sleb128 -12
 785 0173 07       		.uleb128 0x7
 786 0174 28020000 		.4byte	.LASF22
 787 0178 01       		.byte	0x1
 788 0179 E1       		.byte	0xe1
 789 017a 76000000 		.4byte	0x76
 790 017e 02       		.uleb128 0x2
 791 017f 91       		.byte	0x91
 792 0180 70       		.sleb128 -16
 793 0181 00       		.byte	0
 794 0182 0B       		.uleb128 0xb
 795 0183 EC020000 		.4byte	.LASF25
 796 0187 01       		.byte	0x1
 797 0188 2B01     		.2byte	0x12b
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 23


 798 018a 00000000 		.4byte	.LFB4
 799 018e 32000000 		.4byte	.LFE4-.LFB4
 800 0192 01       		.uleb128 0x1
 801 0193 9C       		.byte	0x9c
 802 0194 C4010000 		.4byte	0x1c4
 803 0198 0C       		.uleb128 0xc
 804 0199 E6010000 		.4byte	.LASF27
 805 019d 01       		.byte	0x1
 806 019e 2B01     		.2byte	0x12b
 807 01a0 C4010000 		.4byte	0x1c4
 808 01a4 02       		.uleb128 0x2
 809 01a5 91       		.byte	0x91
 810 01a6 6C       		.sleb128 -20
 811 01a7 0C       		.uleb128 0xc
 812 01a8 C4000000 		.4byte	.LASF28
 813 01ac 01       		.byte	0x1
 814 01ad 2B01     		.2byte	0x12b
 815 01af 76000000 		.4byte	0x76
 816 01b3 02       		.uleb128 0x2
 817 01b4 91       		.byte	0x91
 818 01b5 68       		.sleb128 -24
 819 01b6 0D       		.uleb128 0xd
 820 01b7 6900     		.ascii	"i\000"
 821 01b9 01       		.byte	0x1
 822 01ba 2D01     		.2byte	0x12d
 823 01bc 76000000 		.4byte	0x76
 824 01c0 02       		.uleb128 0x2
 825 01c1 91       		.byte	0x91
 826 01c2 74       		.sleb128 -12
 827 01c3 00       		.byte	0
 828 01c4 0E       		.uleb128 0xe
 829 01c5 04       		.byte	0x4
 830 01c6 CA010000 		.4byte	0x1ca
 831 01ca 0F       		.uleb128 0xf
 832 01cb 6B000000 		.4byte	0x6b
 833 01cf 10       		.uleb128 0x10
 834 01d0 B9010000 		.4byte	.LASF29
 835 01d4 01       		.byte	0x1
 836 01d5 4A01     		.2byte	0x14a
 837 01d7 76000000 		.4byte	0x76
 838 01db 00000000 		.4byte	.LFB5
 839 01df 40000000 		.4byte	.LFE5-.LFB5
 840 01e3 01       		.uleb128 0x1
 841 01e4 9C       		.byte	0x9c
 842 01e5 08020000 		.4byte	0x208
 843 01e9 11       		.uleb128 0x11
 844 01ea 7C010000 		.4byte	.LASF20
 845 01ee 01       		.byte	0x1
 846 01ef 4C01     		.2byte	0x14c
 847 01f1 76000000 		.4byte	0x76
 848 01f5 02       		.uleb128 0x2
 849 01f6 91       		.byte	0x91
 850 01f7 74       		.sleb128 -12
 851 01f8 11       		.uleb128 0x11
 852 01f9 73020000 		.4byte	.LASF17
 853 01fd 01       		.byte	0x1
 854 01fe 4E01     		.2byte	0x14e
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 24


 855 0200 76000000 		.4byte	0x76
 856 0204 02       		.uleb128 0x2
 857 0205 91       		.byte	0x91
 858 0206 70       		.sleb128 -16
 859 0207 00       		.byte	0
 860 0208 0B       		.uleb128 0xb
 861 0209 A0000000 		.4byte	.LASF30
 862 020d 01       		.byte	0x1
 863 020e 7701     		.2byte	0x177
 864 0210 00000000 		.4byte	.LFB6
 865 0214 58000000 		.4byte	.LFE6-.LFB6
 866 0218 01       		.uleb128 0x1
 867 0219 9C       		.byte	0x9c
 868 021a 2E020000 		.4byte	0x22e
 869 021e 11       		.uleb128 0x11
 870 021f 28020000 		.4byte	.LASF22
 871 0223 01       		.byte	0x1
 872 0224 7A01     		.2byte	0x17a
 873 0226 76000000 		.4byte	0x76
 874 022a 02       		.uleb128 0x2
 875 022b 91       		.byte	0x91
 876 022c 74       		.sleb128 -12
 877 022d 00       		.byte	0
 878 022e 10       		.uleb128 0x10
 879 022f 4A030000 		.4byte	.LASF31
 880 0233 01       		.byte	0x1
 881 0234 A301     		.2byte	0x1a3
 882 0236 76000000 		.4byte	0x76
 883 023a 00000000 		.4byte	.LFB7
 884 023e 20000000 		.4byte	.LFE7-.LFB7
 885 0242 01       		.uleb128 0x1
 886 0243 9C       		.byte	0x9c
 887 0244 58020000 		.4byte	0x258
 888 0248 11       		.uleb128 0x11
 889 0249 36020000 		.4byte	.LASF32
 890 024d 01       		.byte	0x1
 891 024e A501     		.2byte	0x1a5
 892 0250 76000000 		.4byte	0x76
 893 0254 02       		.uleb128 0x2
 894 0255 91       		.byte	0x91
 895 0256 74       		.sleb128 -12
 896 0257 00       		.byte	0
 897 0258 10       		.uleb128 0x10
 898 0259 36040000 		.4byte	.LASF33
 899 025d 01       		.byte	0x1
 900 025e BD01     		.2byte	0x1bd
 901 0260 76000000 		.4byte	0x76
 902 0264 00000000 		.4byte	.LFB8
 903 0268 20000000 		.4byte	.LFE8-.LFB8
 904 026c 01       		.uleb128 0x1
 905 026d 9C       		.byte	0x9c
 906 026e 82020000 		.4byte	0x282
 907 0272 11       		.uleb128 0x11
 908 0273 28020000 		.4byte	.LASF22
 909 0277 01       		.byte	0x1
 910 0278 BF01     		.2byte	0x1bf
 911 027a 76000000 		.4byte	0x76
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 25


 912 027e 02       		.uleb128 0x2
 913 027f 91       		.byte	0x91
 914 0280 74       		.sleb128 -12
 915 0281 00       		.byte	0
 916 0282 12       		.uleb128 0x12
 917 0283 60010000 		.4byte	.LASF34
 918 0287 01       		.byte	0x1
 919 0288 1A       		.byte	0x1a
 920 0289 A6000000 		.4byte	0xa6
 921 028d 05       		.uleb128 0x5
 922 028e 03       		.byte	0x3
 923 028f 00000000 		.4byte	ROSSerial_UART_rxBufferHead
 924 0293 12       		.uleb128 0x12
 925 0294 36010000 		.4byte	.LASF35
 926 0298 01       		.byte	0x1
 927 0299 1B       		.byte	0x1b
 928 029a A6000000 		.4byte	0xa6
 929 029e 05       		.uleb128 0x5
 930 029f 03       		.byte	0x3
 931 02a0 00000000 		.4byte	ROSSerial_UART_rxBufferTail
 932 02a4 12       		.uleb128 0x12
 933 02a5 08020000 		.4byte	.LASF36
 934 02a9 01       		.byte	0x1
 935 02aa 1C       		.byte	0x1c
 936 02ab 96000000 		.4byte	0x96
 937 02af 05       		.uleb128 0x5
 938 02b0 03       		.byte	0x3
 939 02b1 00000000 		.4byte	ROSSerial_UART_rxBufferOverflow
 940 02b5 12       		.uleb128 0x12
 941 02b6 40020000 		.4byte	.LASF37
 942 02ba 01       		.byte	0x1
 943 02bb 20       		.byte	0x20
 944 02bc A6000000 		.4byte	0xa6
 945 02c0 05       		.uleb128 0x5
 946 02c1 03       		.byte	0x3
 947 02c2 00000000 		.4byte	ROSSerial_UART_txBufferHead
 948 02c6 12       		.uleb128 0x12
 949 02c7 84000000 		.4byte	.LASF38
 950 02cb 01       		.byte	0x1
 951 02cc 21       		.byte	0x21
 952 02cd A6000000 		.4byte	0xa6
 953 02d1 05       		.uleb128 0x5
 954 02d2 03       		.byte	0x3
 955 02d3 00000000 		.4byte	ROSSerial_UART_txBufferTail
 956 02d7 13       		.uleb128 0x13
 957 02d8 6B000000 		.4byte	0x6b
 958 02dc E7020000 		.4byte	0x2e7
 959 02e0 14       		.uleb128 0x14
 960 02e1 AB000000 		.4byte	0xab
 961 02e5 40       		.byte	0x40
 962 02e6 00       		.byte	0
 963 02e7 12       		.uleb128 0x12
 964 02e8 93010000 		.4byte	.LASF39
 965 02ec 01       		.byte	0x1
 966 02ed 26       		.byte	0x26
 967 02ee F8020000 		.4byte	0x2f8
 968 02f2 05       		.uleb128 0x5
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 26


 969 02f3 03       		.byte	0x3
 970 02f4 00000000 		.4byte	ROSSerial_UART_rxBufferInternal
 971 02f8 05       		.uleb128 0x5
 972 02f9 D7020000 		.4byte	0x2d7
 973 02fd 13       		.uleb128 0x13
 974 02fe 6B000000 		.4byte	0x6b
 975 0302 0D030000 		.4byte	0x30d
 976 0306 14       		.uleb128 0x14
 977 0307 AB000000 		.4byte	0xab
 978 030b 7F       		.byte	0x7f
 979 030c 00       		.byte	0
 980 030d 12       		.uleb128 0x12
 981 030e 15030000 		.4byte	.LASF40
 982 0312 01       		.byte	0x1
 983 0313 2A       		.byte	0x2a
 984 0314 1E030000 		.4byte	0x31e
 985 0318 05       		.uleb128 0x5
 986 0319 03       		.byte	0x3
 987 031a 00000000 		.4byte	ROSSerial_UART_txBufferInternal
 988 031e 05       		.uleb128 0x5
 989 031f FD020000 		.4byte	0x2fd
 990 0323 00       		.byte	0
 991              		.section	.debug_abbrev,"",%progbits
 992              	.Ldebug_abbrev0:
 993 0000 01       		.uleb128 0x1
 994 0001 11       		.uleb128 0x11
 995 0002 01       		.byte	0x1
 996 0003 25       		.uleb128 0x25
 997 0004 0E       		.uleb128 0xe
 998 0005 13       		.uleb128 0x13
 999 0006 0B       		.uleb128 0xb
 1000 0007 03       		.uleb128 0x3
 1001 0008 0E       		.uleb128 0xe
 1002 0009 1B       		.uleb128 0x1b
 1003 000a 0E       		.uleb128 0xe
 1004 000b 55       		.uleb128 0x55
 1005 000c 17       		.uleb128 0x17
 1006 000d 11       		.uleb128 0x11
 1007 000e 01       		.uleb128 0x1
 1008 000f 10       		.uleb128 0x10
 1009 0010 17       		.uleb128 0x17
 1010 0011 00       		.byte	0
 1011 0012 00       		.byte	0
 1012 0013 02       		.uleb128 0x2
 1013 0014 24       		.uleb128 0x24
 1014 0015 00       		.byte	0
 1015 0016 0B       		.uleb128 0xb
 1016 0017 0B       		.uleb128 0xb
 1017 0018 3E       		.uleb128 0x3e
 1018 0019 0B       		.uleb128 0xb
 1019 001a 03       		.uleb128 0x3
 1020 001b 0E       		.uleb128 0xe
 1021 001c 00       		.byte	0
 1022 001d 00       		.byte	0
 1023 001e 03       		.uleb128 0x3
 1024 001f 24       		.uleb128 0x24
 1025 0020 00       		.byte	0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 27


 1026 0021 0B       		.uleb128 0xb
 1027 0022 0B       		.uleb128 0xb
 1028 0023 3E       		.uleb128 0x3e
 1029 0024 0B       		.uleb128 0xb
 1030 0025 03       		.uleb128 0x3
 1031 0026 08       		.uleb128 0x8
 1032 0027 00       		.byte	0
 1033 0028 00       		.byte	0
 1034 0029 04       		.uleb128 0x4
 1035 002a 16       		.uleb128 0x16
 1036 002b 00       		.byte	0
 1037 002c 03       		.uleb128 0x3
 1038 002d 0E       		.uleb128 0xe
 1039 002e 3A       		.uleb128 0x3a
 1040 002f 0B       		.uleb128 0xb
 1041 0030 3B       		.uleb128 0x3b
 1042 0031 0B       		.uleb128 0xb
 1043 0032 49       		.uleb128 0x49
 1044 0033 13       		.uleb128 0x13
 1045 0034 00       		.byte	0
 1046 0035 00       		.byte	0
 1047 0036 05       		.uleb128 0x5
 1048 0037 35       		.uleb128 0x35
 1049 0038 00       		.byte	0
 1050 0039 49       		.uleb128 0x49
 1051 003a 13       		.uleb128 0x13
 1052 003b 00       		.byte	0
 1053 003c 00       		.byte	0
 1054 003d 06       		.uleb128 0x6
 1055 003e 2E       		.uleb128 0x2e
 1056 003f 01       		.byte	0x1
 1057 0040 3F       		.uleb128 0x3f
 1058 0041 19       		.uleb128 0x19
 1059 0042 03       		.uleb128 0x3
 1060 0043 0E       		.uleb128 0xe
 1061 0044 3A       		.uleb128 0x3a
 1062 0045 0B       		.uleb128 0xb
 1063 0046 3B       		.uleb128 0x3b
 1064 0047 0B       		.uleb128 0xb
 1065 0048 27       		.uleb128 0x27
 1066 0049 19       		.uleb128 0x19
 1067 004a 49       		.uleb128 0x49
 1068 004b 13       		.uleb128 0x13
 1069 004c 11       		.uleb128 0x11
 1070 004d 01       		.uleb128 0x1
 1071 004e 12       		.uleb128 0x12
 1072 004f 06       		.uleb128 0x6
 1073 0050 40       		.uleb128 0x40
 1074 0051 18       		.uleb128 0x18
 1075 0052 9742     		.uleb128 0x2117
 1076 0054 19       		.uleb128 0x19
 1077 0055 01       		.uleb128 0x1
 1078 0056 13       		.uleb128 0x13
 1079 0057 00       		.byte	0
 1080 0058 00       		.byte	0
 1081 0059 07       		.uleb128 0x7
 1082 005a 34       		.uleb128 0x34
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 28


 1083 005b 00       		.byte	0
 1084 005c 03       		.uleb128 0x3
 1085 005d 0E       		.uleb128 0xe
 1086 005e 3A       		.uleb128 0x3a
 1087 005f 0B       		.uleb128 0xb
 1088 0060 3B       		.uleb128 0x3b
 1089 0061 0B       		.uleb128 0xb
 1090 0062 49       		.uleb128 0x49
 1091 0063 13       		.uleb128 0x13
 1092 0064 02       		.uleb128 0x2
 1093 0065 18       		.uleb128 0x18
 1094 0066 00       		.byte	0
 1095 0067 00       		.byte	0
 1096 0068 08       		.uleb128 0x8
 1097 0069 2E       		.uleb128 0x2e
 1098 006a 01       		.byte	0x1
 1099 006b 3F       		.uleb128 0x3f
 1100 006c 19       		.uleb128 0x19
 1101 006d 03       		.uleb128 0x3
 1102 006e 0E       		.uleb128 0xe
 1103 006f 3A       		.uleb128 0x3a
 1104 0070 0B       		.uleb128 0xb
 1105 0071 3B       		.uleb128 0x3b
 1106 0072 0B       		.uleb128 0xb
 1107 0073 27       		.uleb128 0x27
 1108 0074 19       		.uleb128 0x19
 1109 0075 11       		.uleb128 0x11
 1110 0076 01       		.uleb128 0x1
 1111 0077 12       		.uleb128 0x12
 1112 0078 06       		.uleb128 0x6
 1113 0079 40       		.uleb128 0x40
 1114 007a 18       		.uleb128 0x18
 1115 007b 9642     		.uleb128 0x2116
 1116 007d 19       		.uleb128 0x19
 1117 007e 01       		.uleb128 0x1
 1118 007f 13       		.uleb128 0x13
 1119 0080 00       		.byte	0
 1120 0081 00       		.byte	0
 1121 0082 09       		.uleb128 0x9
 1122 0083 2E       		.uleb128 0x2e
 1123 0084 01       		.byte	0x1
 1124 0085 3F       		.uleb128 0x3f
 1125 0086 19       		.uleb128 0x19
 1126 0087 03       		.uleb128 0x3
 1127 0088 0E       		.uleb128 0xe
 1128 0089 3A       		.uleb128 0x3a
 1129 008a 0B       		.uleb128 0xb
 1130 008b 3B       		.uleb128 0x3b
 1131 008c 0B       		.uleb128 0xb
 1132 008d 27       		.uleb128 0x27
 1133 008e 19       		.uleb128 0x19
 1134 008f 11       		.uleb128 0x11
 1135 0090 01       		.uleb128 0x1
 1136 0091 12       		.uleb128 0x12
 1137 0092 06       		.uleb128 0x6
 1138 0093 40       		.uleb128 0x40
 1139 0094 18       		.uleb128 0x18
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 29


 1140 0095 9742     		.uleb128 0x2117
 1141 0097 19       		.uleb128 0x19
 1142 0098 01       		.uleb128 0x1
 1143 0099 13       		.uleb128 0x13
 1144 009a 00       		.byte	0
 1145 009b 00       		.byte	0
 1146 009c 0A       		.uleb128 0xa
 1147 009d 05       		.uleb128 0x5
 1148 009e 00       		.byte	0
 1149 009f 03       		.uleb128 0x3
 1150 00a0 0E       		.uleb128 0xe
 1151 00a1 3A       		.uleb128 0x3a
 1152 00a2 0B       		.uleb128 0xb
 1153 00a3 3B       		.uleb128 0x3b
 1154 00a4 0B       		.uleb128 0xb
 1155 00a5 49       		.uleb128 0x49
 1156 00a6 13       		.uleb128 0x13
 1157 00a7 02       		.uleb128 0x2
 1158 00a8 18       		.uleb128 0x18
 1159 00a9 00       		.byte	0
 1160 00aa 00       		.byte	0
 1161 00ab 0B       		.uleb128 0xb
 1162 00ac 2E       		.uleb128 0x2e
 1163 00ad 01       		.byte	0x1
 1164 00ae 3F       		.uleb128 0x3f
 1165 00af 19       		.uleb128 0x19
 1166 00b0 03       		.uleb128 0x3
 1167 00b1 0E       		.uleb128 0xe
 1168 00b2 3A       		.uleb128 0x3a
 1169 00b3 0B       		.uleb128 0xb
 1170 00b4 3B       		.uleb128 0x3b
 1171 00b5 05       		.uleb128 0x5
 1172 00b6 27       		.uleb128 0x27
 1173 00b7 19       		.uleb128 0x19
 1174 00b8 11       		.uleb128 0x11
 1175 00b9 01       		.uleb128 0x1
 1176 00ba 12       		.uleb128 0x12
 1177 00bb 06       		.uleb128 0x6
 1178 00bc 40       		.uleb128 0x40
 1179 00bd 18       		.uleb128 0x18
 1180 00be 9642     		.uleb128 0x2116
 1181 00c0 19       		.uleb128 0x19
 1182 00c1 01       		.uleb128 0x1
 1183 00c2 13       		.uleb128 0x13
 1184 00c3 00       		.byte	0
 1185 00c4 00       		.byte	0
 1186 00c5 0C       		.uleb128 0xc
 1187 00c6 05       		.uleb128 0x5
 1188 00c7 00       		.byte	0
 1189 00c8 03       		.uleb128 0x3
 1190 00c9 0E       		.uleb128 0xe
 1191 00ca 3A       		.uleb128 0x3a
 1192 00cb 0B       		.uleb128 0xb
 1193 00cc 3B       		.uleb128 0x3b
 1194 00cd 05       		.uleb128 0x5
 1195 00ce 49       		.uleb128 0x49
 1196 00cf 13       		.uleb128 0x13
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 30


 1197 00d0 02       		.uleb128 0x2
 1198 00d1 18       		.uleb128 0x18
 1199 00d2 00       		.byte	0
 1200 00d3 00       		.byte	0
 1201 00d4 0D       		.uleb128 0xd
 1202 00d5 34       		.uleb128 0x34
 1203 00d6 00       		.byte	0
 1204 00d7 03       		.uleb128 0x3
 1205 00d8 08       		.uleb128 0x8
 1206 00d9 3A       		.uleb128 0x3a
 1207 00da 0B       		.uleb128 0xb
 1208 00db 3B       		.uleb128 0x3b
 1209 00dc 05       		.uleb128 0x5
 1210 00dd 49       		.uleb128 0x49
 1211 00de 13       		.uleb128 0x13
 1212 00df 02       		.uleb128 0x2
 1213 00e0 18       		.uleb128 0x18
 1214 00e1 00       		.byte	0
 1215 00e2 00       		.byte	0
 1216 00e3 0E       		.uleb128 0xe
 1217 00e4 0F       		.uleb128 0xf
 1218 00e5 00       		.byte	0
 1219 00e6 0B       		.uleb128 0xb
 1220 00e7 0B       		.uleb128 0xb
 1221 00e8 49       		.uleb128 0x49
 1222 00e9 13       		.uleb128 0x13
 1223 00ea 00       		.byte	0
 1224 00eb 00       		.byte	0
 1225 00ec 0F       		.uleb128 0xf
 1226 00ed 26       		.uleb128 0x26
 1227 00ee 00       		.byte	0
 1228 00ef 49       		.uleb128 0x49
 1229 00f0 13       		.uleb128 0x13
 1230 00f1 00       		.byte	0
 1231 00f2 00       		.byte	0
 1232 00f3 10       		.uleb128 0x10
 1233 00f4 2E       		.uleb128 0x2e
 1234 00f5 01       		.byte	0x1
 1235 00f6 3F       		.uleb128 0x3f
 1236 00f7 19       		.uleb128 0x19
 1237 00f8 03       		.uleb128 0x3
 1238 00f9 0E       		.uleb128 0xe
 1239 00fa 3A       		.uleb128 0x3a
 1240 00fb 0B       		.uleb128 0xb
 1241 00fc 3B       		.uleb128 0x3b
 1242 00fd 05       		.uleb128 0x5
 1243 00fe 27       		.uleb128 0x27
 1244 00ff 19       		.uleb128 0x19
 1245 0100 49       		.uleb128 0x49
 1246 0101 13       		.uleb128 0x13
 1247 0102 11       		.uleb128 0x11
 1248 0103 01       		.uleb128 0x1
 1249 0104 12       		.uleb128 0x12
 1250 0105 06       		.uleb128 0x6
 1251 0106 40       		.uleb128 0x40
 1252 0107 18       		.uleb128 0x18
 1253 0108 9742     		.uleb128 0x2117
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 31


 1254 010a 19       		.uleb128 0x19
 1255 010b 01       		.uleb128 0x1
 1256 010c 13       		.uleb128 0x13
 1257 010d 00       		.byte	0
 1258 010e 00       		.byte	0
 1259 010f 11       		.uleb128 0x11
 1260 0110 34       		.uleb128 0x34
 1261 0111 00       		.byte	0
 1262 0112 03       		.uleb128 0x3
 1263 0113 0E       		.uleb128 0xe
 1264 0114 3A       		.uleb128 0x3a
 1265 0115 0B       		.uleb128 0xb
 1266 0116 3B       		.uleb128 0x3b
 1267 0117 05       		.uleb128 0x5
 1268 0118 49       		.uleb128 0x49
 1269 0119 13       		.uleb128 0x13
 1270 011a 02       		.uleb128 0x2
 1271 011b 18       		.uleb128 0x18
 1272 011c 00       		.byte	0
 1273 011d 00       		.byte	0
 1274 011e 12       		.uleb128 0x12
 1275 011f 34       		.uleb128 0x34
 1276 0120 00       		.byte	0
 1277 0121 03       		.uleb128 0x3
 1278 0122 0E       		.uleb128 0xe
 1279 0123 3A       		.uleb128 0x3a
 1280 0124 0B       		.uleb128 0xb
 1281 0125 3B       		.uleb128 0x3b
 1282 0126 0B       		.uleb128 0xb
 1283 0127 49       		.uleb128 0x49
 1284 0128 13       		.uleb128 0x13
 1285 0129 3F       		.uleb128 0x3f
 1286 012a 19       		.uleb128 0x19
 1287 012b 02       		.uleb128 0x2
 1288 012c 18       		.uleb128 0x18
 1289 012d 00       		.byte	0
 1290 012e 00       		.byte	0
 1291 012f 13       		.uleb128 0x13
 1292 0130 01       		.uleb128 0x1
 1293 0131 01       		.byte	0x1
 1294 0132 49       		.uleb128 0x49
 1295 0133 13       		.uleb128 0x13
 1296 0134 01       		.uleb128 0x1
 1297 0135 13       		.uleb128 0x13
 1298 0136 00       		.byte	0
 1299 0137 00       		.byte	0
 1300 0138 14       		.uleb128 0x14
 1301 0139 21       		.uleb128 0x21
 1302 013a 00       		.byte	0
 1303 013b 49       		.uleb128 0x49
 1304 013c 13       		.uleb128 0x13
 1305 013d 2F       		.uleb128 0x2f
 1306 013e 0B       		.uleb128 0xb
 1307 013f 00       		.byte	0
 1308 0140 00       		.byte	0
 1309 0141 00       		.byte	0
 1310              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 32


 1311 0000 5C000000 		.4byte	0x5c
 1312 0004 0200     		.2byte	0x2
 1313 0006 00000000 		.4byte	.Ldebug_info0
 1314 000a 04       		.byte	0x4
 1315 000b 00       		.byte	0
 1316 000c 0000     		.2byte	0
 1317 000e 0000     		.2byte	0
 1318 0010 00000000 		.4byte	.LFB0
 1319 0014 50000000 		.4byte	.LFE0-.LFB0
 1320 0018 00000000 		.4byte	.LFB1
 1321 001c 40000000 		.4byte	.LFE1-.LFB1
 1322 0020 00000000 		.4byte	.LFB2
 1323 0024 68000000 		.4byte	.LFE2-.LFB2
 1324 0028 00000000 		.4byte	.LFB3
 1325 002c 98000000 		.4byte	.LFE3-.LFB3
 1326 0030 00000000 		.4byte	.LFB4
 1327 0034 32000000 		.4byte	.LFE4-.LFB4
 1328 0038 00000000 		.4byte	.LFB5
 1329 003c 40000000 		.4byte	.LFE5-.LFB5
 1330 0040 00000000 		.4byte	.LFB6
 1331 0044 58000000 		.4byte	.LFE6-.LFB6
 1332 0048 00000000 		.4byte	.LFB7
 1333 004c 20000000 		.4byte	.LFE7-.LFB7
 1334 0050 00000000 		.4byte	.LFB8
 1335 0054 20000000 		.4byte	.LFE8-.LFB8
 1336 0058 00000000 		.4byte	0
 1337 005c 00000000 		.4byte	0
 1338              		.section	.debug_ranges,"",%progbits
 1339              	.Ldebug_ranges0:
 1340 0000 00000000 		.4byte	.LFB0
 1341 0004 50000000 		.4byte	.LFE0
 1342 0008 00000000 		.4byte	.LFB1
 1343 000c 40000000 		.4byte	.LFE1
 1344 0010 00000000 		.4byte	.LFB2
 1345 0014 68000000 		.4byte	.LFE2
 1346 0018 00000000 		.4byte	.LFB3
 1347 001c 98000000 		.4byte	.LFE3
 1348 0020 00000000 		.4byte	.LFB4
 1349 0024 32000000 		.4byte	.LFE4
 1350 0028 00000000 		.4byte	.LFB5
 1351 002c 40000000 		.4byte	.LFE5
 1352 0030 00000000 		.4byte	.LFB6
 1353 0034 58000000 		.4byte	.LFE6
 1354 0038 00000000 		.4byte	.LFB7
 1355 003c 20000000 		.4byte	.LFE7
 1356 0040 00000000 		.4byte	.LFB8
 1357 0044 20000000 		.4byte	.LFE8
 1358 0048 00000000 		.4byte	0
 1359 004c 00000000 		.4byte	0
 1360              		.section	.debug_line,"",%progbits
 1361              	.Ldebug_line0:
 1362 0000 53010000 		.section	.debug_str,"MS",%progbits,1
 1362      02005600 
 1362      00000201 
 1362      FB0E0D00 
 1362      01010101 
 1363              	.LASF43:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 33


 1364 0000 433A5C44 		.ascii	"C:\\Documents and Settings\\Chuck\\My Documents\\PS"
 1364      6F63756D 
 1364      656E7473 
 1364      20616E64 
 1364      20536574 
 1365 002f 6F432043 		.ascii	"oC Creator\\RosOnAStick\\RosOnAStick.cydsn\000"
 1365      72656174 
 1365      6F725C52 
 1365      6F734F6E 
 1365      41537469 
 1366              	.LASF19:
 1367 0058 524F5353 		.ascii	"ROSSerial_UART_SpiUartGetRxBufferSize\000"
 1367      65726961 
 1367      6C5F5541 
 1367      52545F53 
 1367      70695561 
 1368              	.LASF14:
 1369 007e 72656733 		.ascii	"reg32\000"
 1369      3200
 1370              	.LASF38:
 1371 0084 524F5353 		.ascii	"ROSSerial_UART_txBufferTail\000"
 1371      65726961 
 1371      6C5F5541 
 1371      52545F74 
 1371      78427566 
 1372              	.LASF30:
 1373 00a0 524F5353 		.ascii	"ROSSerial_UART_SpiUartClearTxBuffer\000"
 1373      65726961 
 1373      6C5F5541 
 1373      52545F53 
 1373      70695561 
 1374              	.LASF28:
 1375 00c4 636F756E 		.ascii	"count\000"
 1375      7400
 1376              	.LASF26:
 1377 00ca 74784461 		.ascii	"txData\000"
 1377      746100
 1378              	.LASF23:
 1379 00d1 524F5353 		.ascii	"ROSSerial_UART_SpiUartClearRxBuffer\000"
 1379      65726961 
 1379      6C5F5541 
 1379      52545F53 
 1379      70695561 
 1380              	.LASF3:
 1381 00f5 73686F72 		.ascii	"short unsigned int\000"
 1381      7420756E 
 1381      7369676E 
 1381      65642069 
 1381      6E7400
 1382              	.LASF8:
 1383 0108 756E7369 		.ascii	"unsigned int\000"
 1383      676E6564 
 1383      20696E74 
 1383      00
 1384              	.LASF18:
 1385 0115 524F5353 		.ascii	"ROSSerial_UART_SpiUartReadRxData\000"
 1385      65726961 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 34


 1385      6C5F5541 
 1385      52545F53 
 1385      70695561 
 1386              	.LASF35:
 1387 0136 524F5353 		.ascii	"ROSSerial_UART_rxBufferTail\000"
 1387      65726961 
 1387      6C5F5541 
 1387      52545F72 
 1387      78427566 
 1388              	.LASF21:
 1389 0152 6C6F6348 		.ascii	"locHead\000"
 1389      65616400 
 1390              	.LASF11:
 1391 015a 666C6F61 		.ascii	"float\000"
 1391      7400
 1392              	.LASF34:
 1393 0160 524F5353 		.ascii	"ROSSerial_UART_rxBufferHead\000"
 1393      65726961 
 1393      6C5F5541 
 1393      52545F72 
 1393      78427566 
 1394              	.LASF20:
 1395 017c 73697A65 		.ascii	"size\000"
 1395      00
 1396              	.LASF5:
 1397 0181 6C6F6E67 		.ascii	"long unsigned int\000"
 1397      20756E73 
 1397      69676E65 
 1397      6420696E 
 1397      7400
 1398              	.LASF39:
 1399 0193 524F5353 		.ascii	"ROSSerial_UART_rxBufferInternal\000"
 1399      65726961 
 1399      6C5F5541 
 1399      52545F72 
 1399      78427566 
 1400              	.LASF9:
 1401 01b3 75696E74 		.ascii	"uint8\000"
 1401      3800
 1402              	.LASF29:
 1403 01b9 524F5353 		.ascii	"ROSSerial_UART_SpiUartGetTxBufferSize\000"
 1403      65726961 
 1403      6C5F5541 
 1403      52545F53 
 1403      70695561 
 1404              	.LASF16:
 1405 01df 72784461 		.ascii	"rxData\000"
 1405      746100
 1406              	.LASF27:
 1407 01e6 77724275 		.ascii	"wrBuf\000"
 1407      6600
 1408              	.LASF1:
 1409 01ec 756E7369 		.ascii	"unsigned char\000"
 1409      676E6564 
 1409      20636861 
 1409      7200
 1410              	.LASF12:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 35


 1411 01fa 646F7562 		.ascii	"double\000"
 1411      6C6500
 1412              	.LASF10:
 1413 0201 75696E74 		.ascii	"uint32\000"
 1413      333200
 1414              	.LASF36:
 1415 0208 524F5353 		.ascii	"ROSSerial_UART_rxBufferOverflow\000"
 1415      65726961 
 1415      6C5F5541 
 1415      52545F72 
 1415      78427566 
 1416              	.LASF22:
 1417 0228 696E7453 		.ascii	"intSourceMask\000"
 1417      6F757263 
 1417      654D6173 
 1417      6B00
 1418              	.LASF32:
 1419 0236 696E7453 		.ascii	"intSource\000"
 1419      6F757263 
 1419      6500
 1420              	.LASF37:
 1421 0240 524F5353 		.ascii	"ROSSerial_UART_txBufferHead\000"
 1421      65726961 
 1421      6C5F5541 
 1421      52545F74 
 1421      78427566 
 1422              	.LASF7:
 1423 025c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1423      206C6F6E 
 1423      6720756E 
 1423      7369676E 
 1423      65642069 
 1424              	.LASF17:
 1425 0273 6C6F6354 		.ascii	"locTail\000"
 1425      61696C00 
 1426              	.LASF15:
 1427 027b 73697A65 		.ascii	"sizetype\000"
 1427      74797065 
 1427      00
 1428              	.LASF6:
 1429 0284 6C6F6E67 		.ascii	"long long int\000"
 1429      206C6F6E 
 1429      6720696E 
 1429      7400
 1430              	.LASF42:
 1431 0292 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ROSSerial_UART_SPI_UART"
 1431      6E657261 
 1431      7465645F 
 1431      536F7572 
 1431      63655C50 
 1432 02c2 2E6300   		.ascii	".c\000"
 1433              	.LASF13:
 1434 02c5 63686172 		.ascii	"char\000"
 1434      00
 1435              	.LASF24:
 1436 02ca 524F5353 		.ascii	"ROSSerial_UART_SpiUartWriteTxData\000"
 1436      65726961 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 36


 1436      6C5F5541 
 1436      52545F53 
 1436      70695561 
 1437              	.LASF25:
 1438 02ec 524F5353 		.ascii	"ROSSerial_UART_SpiUartPutArray\000"
 1438      65726961 
 1438      6C5F5541 
 1438      52545F53 
 1438      70695561 
 1439              	.LASF2:
 1440 030b 73686F72 		.ascii	"short int\000"
 1440      7420696E 
 1440      7400
 1441              	.LASF40:
 1442 0315 524F5353 		.ascii	"ROSSerial_UART_txBufferInternal\000"
 1442      65726961 
 1442      6C5F5541 
 1442      52545F74 
 1442      78427566 
 1443              	.LASF4:
 1444 0335 6C6F6E67 		.ascii	"long int\000"
 1444      20696E74 
 1444      00
 1445              	.LASF0:
 1446 033e 7369676E 		.ascii	"signed char\000"
 1446      65642063 
 1446      68617200 
 1447              	.LASF31:
 1448 034a 524F5353 		.ascii	"ROSSerial_UART_SpiUartDisableIntRx\000"
 1448      65726961 
 1448      6C5F5541 
 1448      52545F53 
 1448      70695561 
 1449              	.LASF41:
 1450 036d 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1450      4320342E 
 1450      382E3420 
 1450      32303134 
 1450      30353236 
 1451 03a0 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1451      20726576 
 1451      6973696F 
 1451      6E203231 
 1451      31333538 
 1452 03d3 30202D66 		.ascii	"0 -ffunction-sections -fno-rtti -fno-exceptions -fu"
 1452      66756E63 
 1452      74696F6E 
 1452      2D736563 
 1452      74696F6E 
 1453 0406 6E736967 		.ascii	"nsigned-char -funsigned-bitfields -fshort-enums\000"
 1453      6E65642D 
 1453      63686172 
 1453      202D6675 
 1453      6E736967 
 1454              	.LASF33:
 1455 0436 524F5353 		.ascii	"ROSSerial_UART_SpiUartDisableIntTx\000"
 1455      65726961 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccn4arI2.s 			page 37


 1455      6C5F5541 
 1455      52545F53 
 1455      70695561 
 1456              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
