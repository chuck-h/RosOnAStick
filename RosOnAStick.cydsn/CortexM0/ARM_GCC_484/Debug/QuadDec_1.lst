ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"QuadDec_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	QuadDec_1_initVar
  18              		.bss
  19              		.type	QuadDec_1_initVar, %object
  20              		.size	QuadDec_1_initVar, 1
  21              	QuadDec_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.QuadDec_1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	QuadDec_1_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	QuadDec_1_Init, %function
  29              	QuadDec_1_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\QuadDec_1.c"
   1:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/QuadDec_1.c **** * File Name: QuadDec_1.c
   3:.\Generated_Source\PSoC4/QuadDec_1.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/QuadDec_1.c **** *
   5:.\Generated_Source\PSoC4/QuadDec_1.c **** * Description:
   6:.\Generated_Source\PSoC4/QuadDec_1.c **** *  This file provides the source code to the API for the QuadDec_1
   7:.\Generated_Source\PSoC4/QuadDec_1.c **** *  component
   8:.\Generated_Source\PSoC4/QuadDec_1.c **** *
   9:.\Generated_Source\PSoC4/QuadDec_1.c **** * Note:
  10:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
  11:.\Generated_Source\PSoC4/QuadDec_1.c **** *
  12:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/QuadDec_1.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/QuadDec_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/QuadDec_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/QuadDec_1.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  19:.\Generated_Source\PSoC4/QuadDec_1.c **** #include "QuadDec_1.h"
  20:.\Generated_Source\PSoC4/QuadDec_1.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  22:.\Generated_Source\PSoC4/QuadDec_1.c **** uint8 QuadDec_1_initVar = 0u;
  23:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  24:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  25:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_Init
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 2


  27:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/QuadDec_1.c **** *
  29:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
  30:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Initialize/Restore default QuadDec_1 configuration.
  31:.\Generated_Source\PSoC4/QuadDec_1.c **** *
  32:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
  33:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
  34:.\Generated_Source\PSoC4/QuadDec_1.c **** *
  35:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
  36:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
  37:.\Generated_Source\PSoC4/QuadDec_1.c **** *
  38:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_Init(void)
  40:.\Generated_Source\PSoC4/QuadDec_1.c **** {
  32              		.loc 1 40 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  41:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  42:.\Generated_Source\PSoC4/QuadDec_1.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__QUAD == QuadDec_1_CONFIG)
  44:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_CONTROL_REG =
  40              		.loc 1 44 0
  41 0004 064B     		ldr	r3, .L2
  42 0006 C822     		mov	r2, #200
  43 0008 9204     		lsl	r2, r2, #18
  44 000a 1A60     		str	r2, [r3]
  45:.\Generated_Source\PSoC4/QuadDec_1.c ****         (((uint32)(QuadDec_1_QUAD_ENCODING_MODES     << QuadDec_1_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_CONFIG                  << QuadDec_1_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif  /* (QuadDec_1__QUAD == QuadDec_1_CONFIG) */
  48:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  49:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__PWM_SEL == QuadDec_1_CONFIG)
  50:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_CONTROL_REG =
  51:.\Generated_Source\PSoC4/QuadDec_1.c ****         (((uint32)(QuadDec_1_PWM_STOP_EVENT          << QuadDec_1_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_PWM_OUT_INVERT          << QuadDec_1_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_PWM_OUT_N_INVERT        << QuadDec_1_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_PWM_MODE                << QuadDec_1_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  56:.\Generated_Source\PSoC4/QuadDec_1.c ****         #if (QuadDec_1__PWM_PR == QuadDec_1_PWM_MODE)
  57:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/QuadDec_1.c ****             ((uint32)(QuadDec_1_PWM_RUN_MODE         << QuadDec_1_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  60:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_WriteCounter(QuadDec_1_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/QuadDec_1.c ****         #else
  62:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_CONTROL_REG |=
  63:.\Generated_Source\PSoC4/QuadDec_1.c ****             (((uint32)(QuadDec_1_PWM_ALIGN           << QuadDec_1_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/QuadDec_1.c ****              ((uint32)(QuadDec_1_PWM_KILL_EVENT      << QuadDec_1_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/QuadDec_1.c ****         #endif  /* (QuadDec_1__PWM_PR == QuadDec_1_PWM_MODE) */
  66:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  67:.\Generated_Source\PSoC4/QuadDec_1.c ****         #if (QuadDec_1__PWM_DT == QuadDec_1_PWM_MODE)
  68:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/QuadDec_1.c ****             ((uint32)(QuadDec_1_PWM_DEAD_TIME_CYCLE  << QuadDec_1_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/QuadDec_1.c ****         #endif  /* (QuadDec_1__PWM_DT == QuadDec_1_PWM_MODE) */
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 3


  71:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  72:.\Generated_Source\PSoC4/QuadDec_1.c ****         #if (QuadDec_1__PWM == QuadDec_1_PWM_MODE)
  73:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_CONTROL_REG |=
  74:.\Generated_Source\PSoC4/QuadDec_1.c ****             ((uint32)QuadDec_1_PWM_PRESCALER         << QuadDec_1_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/QuadDec_1.c ****         #endif  /* (QuadDec_1__PWM == QuadDec_1_PWM_MODE) */
  76:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif  /* (QuadDec_1__PWM_SEL == QuadDec_1_CONFIG) */
  77:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  78:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__TIMER == QuadDec_1_CONFIG)
  79:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_CONTROL_REG =
  80:.\Generated_Source\PSoC4/QuadDec_1.c ****         (((uint32)(QuadDec_1_TC_PRESCALER            << QuadDec_1_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_TC_COUNTER_MODE         << QuadDec_1_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_TC_RUN_MODE             << QuadDec_1_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_TC_COMP_CAP_MODE        << QuadDec_1_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif  /* (QuadDec_1__TIMER == QuadDec_1_CONFIG) */
  85:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  86:.\Generated_Source\PSoC4/QuadDec_1.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__QUAD == QuadDec_1_CONFIG)
  88:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_TRIG_CONTROL1_REG  =
  45              		.loc 1 88 0
  46 000c 054B     		ldr	r3, .L2+4
  47 000e C322     		mov	r2, #195
  48 0010 9200     		lsl	r2, r2, #2
  49 0012 1A60     		str	r2, [r3]
  89:.\Generated_Source\PSoC4/QuadDec_1.c ****         (((uint32)(QuadDec_1_QUAD_PHIA_SIGNAL_MODE   << QuadDec_1_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_QUAD_INDEX_SIGNAL_MODE  << QuadDec_1_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_QUAD_STOP_SIGNAL_MODE   << QuadDec_1_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_QUAD_PHIB_SIGNAL_MODE   << QuadDec_1_START_SHIFT)));
  93:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif  /* (QuadDec_1__QUAD == QuadDec_1_CONFIG) */
  94:.\Generated_Source\PSoC4/QuadDec_1.c **** 
  95:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__PWM_SEL == QuadDec_1_CONFIG)
  96:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_TRIG_CONTROL1_REG  =
  97:.\Generated_Source\PSoC4/QuadDec_1.c ****         (((uint32)(QuadDec_1_PWM_SWITCH_SIGNAL_MODE  << QuadDec_1_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_PWM_COUNT_SIGNAL_MODE   << QuadDec_1_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_PWM_RELOAD_SIGNAL_MODE  << QuadDec_1_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_PWM_STOP_SIGNAL_MODE    << QuadDec_1_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_PWM_START_SIGNAL_MODE   << QuadDec_1_START_SHIFT)));
 102:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif  /* (QuadDec_1__PWM_SEL == QuadDec_1_CONFIG) */
 103:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 104:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__TIMER == QuadDec_1_CONFIG)
 105:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_TRIG_CONTROL1_REG  =
 106:.\Generated_Source\PSoC4/QuadDec_1.c ****         (((uint32)(QuadDec_1_TC_CAPTURE_SIGNAL_MODE  << QuadDec_1_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_TC_COUNT_SIGNAL_MODE    << QuadDec_1_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_TC_RELOAD_SIGNAL_MODE   << QuadDec_1_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_TC_STOP_SIGNAL_MODE     << QuadDec_1_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/QuadDec_1.c ****          ((uint32)(QuadDec_1_TC_START_SIGNAL_MODE    << QuadDec_1_START_SHIFT)));
 111:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif  /* (QuadDec_1__TIMER == QuadDec_1_CONFIG) */
 112:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 113:.\Generated_Source\PSoC4/QuadDec_1.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__QUAD == QuadDec_1_CONFIG)
 115:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_SetInterruptMode(QuadDec_1_QUAD_INTERRUPT_MASK);
  50              		.loc 1 115 0
  51 0014 0020     		mov	r0, #0
  52 0016 FFF7FEFF 		bl	QuadDec_1_SetInterruptMode
 116:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif  /* (QuadDec_1__QUAD == QuadDec_1_CONFIG) */
 117:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 118:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__PWM_SEL == QuadDec_1_CONFIG)
 119:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_SetInterruptMode(QuadDec_1_PWM_INTERRUPT_MASK);
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 4


 120:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif  /* (QuadDec_1__PWM_SEL == QuadDec_1_CONFIG) */
 121:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 122:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__TIMER == QuadDec_1_CONFIG)
 123:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_SetInterruptMode(QuadDec_1_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif  /* (QuadDec_1__TIMER == QuadDec_1_CONFIG) */
 125:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 126:.\Generated_Source\PSoC4/QuadDec_1.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__TIMER == QuadDec_1_CONFIG)
 128:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_WritePeriod(QuadDec_1_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 130:.\Generated_Source\PSoC4/QuadDec_1.c ****         #if (QuadDec_1__COUNT_DOWN == QuadDec_1_TC_COUNTER_MODE)
 131:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_WriteCounter(QuadDec_1_TC_PERIOD_VALUE );
 132:.\Generated_Source\PSoC4/QuadDec_1.c ****         #endif  /* (QuadDec_1__COUNT_DOWN == QuadDec_1_TC_COUNTER_MODE) */
 133:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 134:.\Generated_Source\PSoC4/QuadDec_1.c ****         #if (QuadDec_1__COMPARE == QuadDec_1_TC_COMP_CAP_MODE)
 135:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_WriteCompare(QuadDec_1_TC_COMPARE_VALUE);
 136:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 137:.\Generated_Source\PSoC4/QuadDec_1.c ****             #if (1u == QuadDec_1_TC_COMPARE_SWAP)
 138:.\Generated_Source\PSoC4/QuadDec_1.c ****                 QuadDec_1_SetCompareSwap(1u);
 139:.\Generated_Source\PSoC4/QuadDec_1.c ****                 QuadDec_1_WriteCompareBuf(QuadDec_1_TC_COMPARE_BUF_VALUE);
 140:.\Generated_Source\PSoC4/QuadDec_1.c ****             #endif  /* (1u == QuadDec_1_TC_COMPARE_SWAP) */
 141:.\Generated_Source\PSoC4/QuadDec_1.c ****         #endif  /* (QuadDec_1__COMPARE == QuadDec_1_TC_COMP_CAP_MODE) */
 142:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif  /* (QuadDec_1__TIMER == QuadDec_1_CONFIG) */
 143:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 144:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__PWM_SEL == QuadDec_1_CONFIG)
 145:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_WritePeriod(QuadDec_1_PWM_PERIOD_VALUE );
 146:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_WriteCompare(QuadDec_1_PWM_COMPARE_VALUE);
 147:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 148:.\Generated_Source\PSoC4/QuadDec_1.c ****         #if (1u == QuadDec_1_PWM_COMPARE_SWAP)
 149:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_SetCompareSwap(1u);
 150:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_WriteCompareBuf(QuadDec_1_PWM_COMPARE_BUF_VALUE);
 151:.\Generated_Source\PSoC4/QuadDec_1.c ****         #endif  /* (1u == QuadDec_1_PWM_COMPARE_SWAP) */
 152:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 153:.\Generated_Source\PSoC4/QuadDec_1.c ****         #if (1u == QuadDec_1_PWM_PERIOD_SWAP)
 154:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_SetPeriodSwap(1u);
 155:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_WritePeriodBuf(QuadDec_1_PWM_PERIOD_BUF_VALUE);
 156:.\Generated_Source\PSoC4/QuadDec_1.c ****         #endif  /* (1u == QuadDec_1_PWM_PERIOD_SWAP) */
 157:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 158:.\Generated_Source\PSoC4/QuadDec_1.c ****         /* Set values from customizer to CTRL2 */
 159:.\Generated_Source\PSoC4/QuadDec_1.c ****         #if (QuadDec_1__PWM_PR == QuadDec_1_PWM_MODE)
 160:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_TRIG_CONTROL2_REG =
 161:.\Generated_Source\PSoC4/QuadDec_1.c ****                     (QuadDec_1_CC_MATCH_NO_CHANGE    |
 162:.\Generated_Source\PSoC4/QuadDec_1.c ****                     QuadDec_1_OVERLOW_NO_CHANGE      |
 163:.\Generated_Source\PSoC4/QuadDec_1.c ****                     QuadDec_1_UNDERFLOW_NO_CHANGE);
 164:.\Generated_Source\PSoC4/QuadDec_1.c ****         #else
 165:.\Generated_Source\PSoC4/QuadDec_1.c ****             #if (QuadDec_1__LEFT == QuadDec_1_PWM_ALIGN)
 166:.\Generated_Source\PSoC4/QuadDec_1.c ****                 QuadDec_1_TRIG_CONTROL2_REG = QuadDec_1_PWM_MODE_LEFT;
 167:.\Generated_Source\PSoC4/QuadDec_1.c ****             #endif  /* ( QuadDec_1_PWM_LEFT == QuadDec_1_PWM_ALIGN) */
 168:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 169:.\Generated_Source\PSoC4/QuadDec_1.c ****             #if (QuadDec_1__RIGHT == QuadDec_1_PWM_ALIGN)
 170:.\Generated_Source\PSoC4/QuadDec_1.c ****                 QuadDec_1_WriteCounter(QuadDec_1_PWM_PERIOD_VALUE);
 171:.\Generated_Source\PSoC4/QuadDec_1.c ****                 QuadDec_1_TRIG_CONTROL2_REG = QuadDec_1_PWM_MODE_RIGHT;
 172:.\Generated_Source\PSoC4/QuadDec_1.c ****             #endif  /* ( QuadDec_1_PWM_RIGHT == QuadDec_1_PWM_ALIGN) */
 173:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 174:.\Generated_Source\PSoC4/QuadDec_1.c ****             #if (QuadDec_1__CENTER == QuadDec_1_PWM_ALIGN)
 175:.\Generated_Source\PSoC4/QuadDec_1.c ****                 QuadDec_1_TRIG_CONTROL2_REG = QuadDec_1_PWM_MODE_CENTER;
 176:.\Generated_Source\PSoC4/QuadDec_1.c ****             #endif  /* ( QuadDec_1_PWM_CENTER == QuadDec_1_PWM_ALIGN) */
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 5


 177:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 178:.\Generated_Source\PSoC4/QuadDec_1.c ****             #if (QuadDec_1__ASYMMETRIC == QuadDec_1_PWM_ALIGN)
 179:.\Generated_Source\PSoC4/QuadDec_1.c ****                 QuadDec_1_TRIG_CONTROL2_REG = QuadDec_1_PWM_MODE_ASYM;
 180:.\Generated_Source\PSoC4/QuadDec_1.c ****             #endif  /* (QuadDec_1__ASYMMETRIC == QuadDec_1_PWM_ALIGN) */
 181:.\Generated_Source\PSoC4/QuadDec_1.c ****         #endif  /* (QuadDec_1__PWM_PR == QuadDec_1_PWM_MODE) */
 182:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif  /* (QuadDec_1__PWM_SEL == QuadDec_1_CONFIG) */
 183:.\Generated_Source\PSoC4/QuadDec_1.c **** }
  53              		.loc 1 183 0
  54 001a BD46     		mov	sp, r7
  55              		@ sp needed
  56 001c 80BD     		pop	{r7, pc}
  57              	.L3:
  58 001e C046     		.align	2
  59              	.L2:
  60 0020 00010540 		.word	1074069760
  61 0024 24010540 		.word	1074069796
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	QuadDec_1_Init, .-QuadDec_1_Init
  65              		.section	.text.QuadDec_1_Enable,"ax",%progbits
  66              		.align	2
  67              		.global	QuadDec_1_Enable
  68              		.code	16
  69              		.thumb_func
  70              		.type	QuadDec_1_Enable, %function
  71              	QuadDec_1_Enable:
  72              	.LFB1:
 184:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 185:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 186:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_Enable
 188:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 190:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 191:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Enables the QuadDec_1.
 192:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 193:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 194:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 195:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 196:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 197:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 198:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 199:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_Enable(void)
 201:.\Generated_Source\PSoC4/QuadDec_1.c **** {
  73              		.loc 1 201 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
 202:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 6


 203:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 204:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
  84              		.loc 1 204 0
  85 0006 FC1D     		add	r4, r7, #7
  86 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  87 000c 031C     		mov	r3, r0
  88 000e 2370     		strb	r3, [r4]
 205:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_BLOCK_CONTROL_REG |= QuadDec_1_MASK;
  89              		.loc 1 205 0
  90 0010 064B     		ldr	r3, .L5
  91 0012 064A     		ldr	r2, .L5
  92 0014 1268     		ldr	r2, [r2]
  93 0016 0121     		mov	r1, #1
  94 0018 0A43     		orr	r2, r1
  95 001a 1A60     		str	r2, [r3]
 206:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
  96              		.loc 1 206 0
  97 001c FB1D     		add	r3, r7, #7
  98 001e 1B78     		ldrb	r3, [r3]
  99 0020 181C     		mov	r0, r3
 100 0022 FFF7FEFF 		bl	CyExitCriticalSection
 207:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 208:.\Generated_Source\PSoC4/QuadDec_1.c ****     /* Start Timer or PWM if start input is absent */
 209:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__PWM_SEL == QuadDec_1_CONFIG)
 210:.\Generated_Source\PSoC4/QuadDec_1.c ****         #if (0u == QuadDec_1_PWM_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_TriggerCommand(QuadDec_1_MASK, QuadDec_1_CMD_START);
 212:.\Generated_Source\PSoC4/QuadDec_1.c ****         #endif /* (0u == QuadDec_1_PWM_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif /* (QuadDec_1__PWM_SEL == QuadDec_1_CONFIG) */
 214:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 215:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1__TIMER == QuadDec_1_CONFIG)
 216:.\Generated_Source\PSoC4/QuadDec_1.c ****         #if (0u == QuadDec_1_TC_START_SIGNAL_PRESENT)
 217:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_TriggerCommand(QuadDec_1_MASK, QuadDec_1_CMD_START);
 218:.\Generated_Source\PSoC4/QuadDec_1.c ****         #endif /* (0u == QuadDec_1_TC_START_SIGNAL_PRESENT) */
 219:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif /* (QuadDec_1__TIMER == QuadDec_1_CONFIG) */
 220:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 101              		.loc 1 220 0
 102 0026 BD46     		mov	sp, r7
 103 0028 03B0     		add	sp, sp, #12
 104              		@ sp needed
 105 002a 90BD     		pop	{r4, r7, pc}
 106              	.L6:
 107              		.align	2
 108              	.L5:
 109 002c 00000540 		.word	1074069504
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	QuadDec_1_Enable, .-QuadDec_1_Enable
 113              		.section	.text.QuadDec_1_Start,"ax",%progbits
 114              		.align	2
 115              		.global	QuadDec_1_Start
 116              		.code	16
 117              		.thumb_func
 118              		.type	QuadDec_1_Start, %function
 119              	QuadDec_1_Start:
 120              	.LFB2:
 221:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 222:.\Generated_Source\PSoC4/QuadDec_1.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 7


 223:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_Start
 225:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 227:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 228:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Initializes the QuadDec_1 with default customizer
 229:.\Generated_Source\PSoC4/QuadDec_1.c **** *  values when called the first time and enables the QuadDec_1.
 230:.\Generated_Source\PSoC4/QuadDec_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 231:.\Generated_Source\PSoC4/QuadDec_1.c **** *  just enabled.
 232:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 233:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 234:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 235:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 236:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 237:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 238:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 239:.\Generated_Source\PSoC4/QuadDec_1.c **** * Global variables:
 240:.\Generated_Source\PSoC4/QuadDec_1.c **** *  QuadDec_1_initVar: global variable is used to indicate initial
 241:.\Generated_Source\PSoC4/QuadDec_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 242:.\Generated_Source\PSoC4/QuadDec_1.c **** *  to 1 the first time QuadDec_1_Start() is called. This allows
 243:.\Generated_Source\PSoC4/QuadDec_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 244:.\Generated_Source\PSoC4/QuadDec_1.c **** *  calls to the QuadDec_1_Start() routine.
 245:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 246:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_Start(void)
 248:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 121              		.loc 1 248 0
 122              		.cfi_startproc
 123 0000 80B5     		push	{r7, lr}
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 0002 00AF     		add	r7, sp, #0
 128              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC4/QuadDec_1.c ****     if (0u == QuadDec_1_initVar)
 129              		.loc 1 249 0
 130 0004 064B     		ldr	r3, .L9
 131 0006 1B78     		ldrb	r3, [r3]
 132 0008 002B     		cmp	r3, #0
 133 000a 04D1     		bne	.L8
 250:.\Generated_Source\PSoC4/QuadDec_1.c ****     {
 251:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_Init();
 134              		.loc 1 251 0
 135 000c FFF7FEFF 		bl	QuadDec_1_Init
 252:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_initVar = 1u;
 136              		.loc 1 252 0
 137 0010 034B     		ldr	r3, .L9
 138 0012 0122     		mov	r2, #1
 139 0014 1A70     		strb	r2, [r3]
 140              	.L8:
 253:.\Generated_Source\PSoC4/QuadDec_1.c ****     }
 254:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 255:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_Enable();
 141              		.loc 1 255 0
 142 0016 FFF7FEFF 		bl	QuadDec_1_Enable
 256:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 143              		.loc 1 256 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 8


 144 001a BD46     		mov	sp, r7
 145              		@ sp needed
 146 001c 80BD     		pop	{r7, pc}
 147              	.L10:
 148 001e C046     		.align	2
 149              	.L9:
 150 0020 00000000 		.word	QuadDec_1_initVar
 151              		.cfi_endproc
 152              	.LFE2:
 153              		.size	QuadDec_1_Start, .-QuadDec_1_Start
 154              		.section	.text.QuadDec_1_Stop,"ax",%progbits
 155              		.align	2
 156              		.global	QuadDec_1_Stop
 157              		.code	16
 158              		.thumb_func
 159              		.type	QuadDec_1_Stop, %function
 160              	QuadDec_1_Stop:
 161              	.LFB3:
 257:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 258:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 259:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_Stop
 261:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 262:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 263:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 264:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Disables the QuadDec_1.
 265:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 266:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 267:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 268:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 269:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 270:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 271:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 272:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 273:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_Stop(void)
 274:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 162              		.loc 1 274 0
 163              		.cfi_startproc
 164 0000 90B5     		push	{r4, r7, lr}
 165              		.cfi_def_cfa_offset 12
 166              		.cfi_offset 4, -12
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 83B0     		sub	sp, sp, #12
 170              		.cfi_def_cfa_offset 24
 171 0004 00AF     		add	r7, sp, #0
 172              		.cfi_def_cfa_register 7
 275:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 276:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 277:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 173              		.loc 1 277 0
 174 0006 FC1D     		add	r4, r7, #7
 175 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 176 000c 031C     		mov	r3, r0
 177 000e 2370     		strb	r3, [r4]
 278:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 279:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_BLOCK_CONTROL_REG &= (uint32)~QuadDec_1_MASK;
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 9


 178              		.loc 1 279 0
 179 0010 064B     		ldr	r3, .L12
 180 0012 064A     		ldr	r2, .L12
 181 0014 1268     		ldr	r2, [r2]
 182 0016 0121     		mov	r1, #1
 183 0018 8A43     		bic	r2, r1
 184 001a 1A60     		str	r2, [r3]
 280:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 281:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 185              		.loc 1 281 0
 186 001c FB1D     		add	r3, r7, #7
 187 001e 1B78     		ldrb	r3, [r3]
 188 0020 181C     		mov	r0, r3
 189 0022 FFF7FEFF 		bl	CyExitCriticalSection
 282:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 190              		.loc 1 282 0
 191 0026 BD46     		mov	sp, r7
 192 0028 03B0     		add	sp, sp, #12
 193              		@ sp needed
 194 002a 90BD     		pop	{r4, r7, pc}
 195              	.L13:
 196              		.align	2
 197              	.L12:
 198 002c 00000540 		.word	1074069504
 199              		.cfi_endproc
 200              	.LFE3:
 201              		.size	QuadDec_1_Stop, .-QuadDec_1_Stop
 202              		.section	.text.QuadDec_1_SetMode,"ax",%progbits
 203              		.align	2
 204              		.global	QuadDec_1_SetMode
 205              		.code	16
 206              		.thumb_func
 207              		.type	QuadDec_1_SetMode, %function
 208              	QuadDec_1_SetMode:
 209              	.LFB4:
 283:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 284:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 285:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetMode
 287:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 289:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 290:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Sets the operation mode of the QuadDec_1. This function is used when
 291:.\Generated_Source\PSoC4/QuadDec_1.c **** *  configured as a generic QuadDec_1 and the actual mode of operation is
 292:.\Generated_Source\PSoC4/QuadDec_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 293:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 294:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 295:.\Generated_Source\PSoC4/QuadDec_1.c **** *  mode: Mode for the QuadDec_1 to operate in
 296:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
 297:.\Generated_Source\PSoC4/QuadDec_1.c **** *   - QuadDec_1_MODE_TIMER_COMPARE - Timer / Counter with
 298:.\Generated_Source\PSoC4/QuadDec_1.c **** *                                                 compare capability
 299:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_MODE_TIMER_CAPTURE - Timer / Counter with
 300:.\Generated_Source\PSoC4/QuadDec_1.c **** *                                                 capture capability
 301:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_MODE_QUAD - Quadrature decoder
 302:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_MODE_PWM - PWM
 303:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_MODE_PWM_DT - PWM with dead time
 304:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_MODE_PWM_PR - PWM with pseudo random capability
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 10


 305:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 306:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 307:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 308:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 309:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetMode(uint32 mode)
 311:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 210              		.loc 1 311 0
 211              		.cfi_startproc
 212 0000 90B5     		push	{r4, r7, lr}
 213              		.cfi_def_cfa_offset 12
 214              		.cfi_offset 4, -12
 215              		.cfi_offset 7, -8
 216              		.cfi_offset 14, -4
 217 0002 85B0     		sub	sp, sp, #20
 218              		.cfi_def_cfa_offset 32
 219 0004 00AF     		add	r7, sp, #0
 220              		.cfi_def_cfa_register 7
 221 0006 7860     		str	r0, [r7, #4]
 312:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 313:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 314:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 222              		.loc 1 314 0
 223 0008 3C1C     		mov	r4, r7
 224 000a 0F34     		add	r4, r4, #15
 225 000c FFF7FEFF 		bl	CyEnterCriticalSection
 226 0010 031C     		mov	r3, r0
 227 0012 2370     		strb	r3, [r4]
 315:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 316:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG &= (uint32)~QuadDec_1_MODE_MASK;
 228              		.loc 1 316 0
 229 0014 0A4B     		ldr	r3, .L15
 230 0016 0A4A     		ldr	r2, .L15
 231 0018 1168     		ldr	r1, [r2]
 232 001a 0A4A     		ldr	r2, .L15+4
 233 001c 0A40     		and	r2, r1
 234 001e 1A60     		str	r2, [r3]
 317:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG |= mode;
 235              		.loc 1 317 0
 236 0020 074B     		ldr	r3, .L15
 237 0022 074A     		ldr	r2, .L15
 238 0024 1168     		ldr	r1, [r2]
 239 0026 7A68     		ldr	r2, [r7, #4]
 240 0028 0A43     		orr	r2, r1
 241 002a 1A60     		str	r2, [r3]
 318:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 319:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 242              		.loc 1 319 0
 243 002c 3B1C     		mov	r3, r7
 244 002e 0F33     		add	r3, r3, #15
 245 0030 1B78     		ldrb	r3, [r3]
 246 0032 181C     		mov	r0, r3
 247 0034 FFF7FEFF 		bl	CyExitCriticalSection
 320:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 248              		.loc 1 320 0
 249 0038 BD46     		mov	sp, r7
 250 003a 05B0     		add	sp, sp, #20
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 11


 251              		@ sp needed
 252 003c 90BD     		pop	{r4, r7, pc}
 253              	.L16:
 254 003e C046     		.align	2
 255              	.L15:
 256 0040 00010540 		.word	1074069760
 257 0044 FFFFFFF8 		.word	-117440513
 258              		.cfi_endproc
 259              	.LFE4:
 260              		.size	QuadDec_1_SetMode, .-QuadDec_1_SetMode
 261              		.section	.text.QuadDec_1_SetQDMode,"ax",%progbits
 262              		.align	2
 263              		.global	QuadDec_1_SetQDMode
 264              		.code	16
 265              		.thumb_func
 266              		.type	QuadDec_1_SetQDMode, %function
 267              	QuadDec_1_SetQDMode:
 268              	.LFB5:
 321:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 322:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 323:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetQDMode
 325:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 326:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 327:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 328:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 329:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 330:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 331:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 332:.\Generated_Source\PSoC4/QuadDec_1.c **** *  qdMode: Quadrature Decoder mode
 333:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
 334:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_MODE_X1 - Counts on phi 1 rising
 335:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 336:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_MODE_X4 - Counts on both edges of phi1 and phi2
 337:.\Generated_Source\PSoC4/QuadDec_1.c **** *                                        (4x faster)
 338:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 339:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 340:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 341:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 342:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetQDMode(uint32 qdMode)
 344:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 269              		.loc 1 344 0
 270              		.cfi_startproc
 271 0000 90B5     		push	{r4, r7, lr}
 272              		.cfi_def_cfa_offset 12
 273              		.cfi_offset 4, -12
 274              		.cfi_offset 7, -8
 275              		.cfi_offset 14, -4
 276 0002 85B0     		sub	sp, sp, #20
 277              		.cfi_def_cfa_offset 32
 278 0004 00AF     		add	r7, sp, #0
 279              		.cfi_def_cfa_register 7
 280 0006 7860     		str	r0, [r7, #4]
 345:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 347:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 12


 281              		.loc 1 347 0
 282 0008 3C1C     		mov	r4, r7
 283 000a 0F34     		add	r4, r4, #15
 284 000c FFF7FEFF 		bl	CyEnterCriticalSection
 285 0010 031C     		mov	r3, r0
 286 0012 2370     		strb	r3, [r4]
 348:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 349:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG &= (uint32)~QuadDec_1_QUAD_MODE_MASK;
 287              		.loc 1 349 0
 288 0014 0A4B     		ldr	r3, .L18
 289 0016 0A4A     		ldr	r2, .L18
 290 0018 1168     		ldr	r1, [r2]
 291 001a 0A4A     		ldr	r2, .L18+4
 292 001c 0A40     		and	r2, r1
 293 001e 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG |= qdMode;
 294              		.loc 1 350 0
 295 0020 074B     		ldr	r3, .L18
 296 0022 074A     		ldr	r2, .L18
 297 0024 1168     		ldr	r1, [r2]
 298 0026 7A68     		ldr	r2, [r7, #4]
 299 0028 0A43     		orr	r2, r1
 300 002a 1A60     		str	r2, [r3]
 351:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 352:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 301              		.loc 1 352 0
 302 002c 3B1C     		mov	r3, r7
 303 002e 0F33     		add	r3, r3, #15
 304 0030 1B78     		ldrb	r3, [r3]
 305 0032 181C     		mov	r0, r3
 306 0034 FFF7FEFF 		bl	CyExitCriticalSection
 353:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 307              		.loc 1 353 0
 308 0038 BD46     		mov	sp, r7
 309 003a 05B0     		add	sp, sp, #20
 310              		@ sp needed
 311 003c 90BD     		pop	{r4, r7, pc}
 312              	.L19:
 313 003e C046     		.align	2
 314              	.L18:
 315 0040 00010540 		.word	1074069760
 316 0044 FFFF8FFF 		.word	-7340033
 317              		.cfi_endproc
 318              	.LFE5:
 319              		.size	QuadDec_1_SetQDMode, .-QuadDec_1_SetQDMode
 320              		.section	.text.QuadDec_1_SetPrescaler,"ax",%progbits
 321              		.align	2
 322              		.global	QuadDec_1_SetPrescaler
 323              		.code	16
 324              		.thumb_func
 325              		.type	QuadDec_1_SetPrescaler, %function
 326              	QuadDec_1_SetPrescaler:
 327              	.LFB6:
 354:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 355:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 356:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetPrescaler
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 13


 358:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 359:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 360:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 361:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 362:.\Generated_Source\PSoC4/QuadDec_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 363:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 364:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 365:.\Generated_Source\PSoC4/QuadDec_1.c **** *  prescaler: Prescaler divider value
 366:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
 367:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 368:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_PRESCALE_DIVBY2    - Divide by 2
 369:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_PRESCALE_DIVBY4    - Divide by 4
 370:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_PRESCALE_DIVBY8    - Divide by 8
 371:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_PRESCALE_DIVBY16   - Divide by 16
 372:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_PRESCALE_DIVBY32   - Divide by 32
 373:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_PRESCALE_DIVBY64   - Divide by 64
 374:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_PRESCALE_DIVBY128  - Divide by 128
 375:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 376:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 377:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 378:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 379:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetPrescaler(uint32 prescaler)
 381:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 328              		.loc 1 381 0
 329              		.cfi_startproc
 330 0000 90B5     		push	{r4, r7, lr}
 331              		.cfi_def_cfa_offset 12
 332              		.cfi_offset 4, -12
 333              		.cfi_offset 7, -8
 334              		.cfi_offset 14, -4
 335 0002 85B0     		sub	sp, sp, #20
 336              		.cfi_def_cfa_offset 32
 337 0004 00AF     		add	r7, sp, #0
 338              		.cfi_def_cfa_register 7
 339 0006 7860     		str	r0, [r7, #4]
 382:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 383:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 384:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 340              		.loc 1 384 0
 341 0008 3C1C     		mov	r4, r7
 342 000a 0F34     		add	r4, r4, #15
 343 000c FFF7FEFF 		bl	CyEnterCriticalSection
 344 0010 031C     		mov	r3, r0
 345 0012 2370     		strb	r3, [r4]
 385:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 386:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG &= (uint32)~QuadDec_1_PRESCALER_MASK;
 346              		.loc 1 386 0
 347 0014 0A4B     		ldr	r3, .L21
 348 0016 0A4A     		ldr	r2, .L21
 349 0018 1168     		ldr	r1, [r2]
 350 001a 0A4A     		ldr	r2, .L21+4
 351 001c 0A40     		and	r2, r1
 352 001e 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG |= prescaler;
 353              		.loc 1 387 0
 354 0020 074B     		ldr	r3, .L21
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 14


 355 0022 074A     		ldr	r2, .L21
 356 0024 1168     		ldr	r1, [r2]
 357 0026 7A68     		ldr	r2, [r7, #4]
 358 0028 0A43     		orr	r2, r1
 359 002a 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 389:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 360              		.loc 1 389 0
 361 002c 3B1C     		mov	r3, r7
 362 002e 0F33     		add	r3, r3, #15
 363 0030 1B78     		ldrb	r3, [r3]
 364 0032 181C     		mov	r0, r3
 365 0034 FFF7FEFF 		bl	CyExitCriticalSection
 390:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 366              		.loc 1 390 0
 367 0038 BD46     		mov	sp, r7
 368 003a 05B0     		add	sp, sp, #20
 369              		@ sp needed
 370 003c 90BD     		pop	{r4, r7, pc}
 371              	.L22:
 372 003e C046     		.align	2
 373              	.L21:
 374 0040 00010540 		.word	1074069760
 375 0044 FF00FFFF 		.word	-65281
 376              		.cfi_endproc
 377              	.LFE6:
 378              		.size	QuadDec_1_SetPrescaler, .-QuadDec_1_SetPrescaler
 379              		.section	.text.QuadDec_1_SetOneShot,"ax",%progbits
 380              		.align	2
 381              		.global	QuadDec_1_SetOneShot
 382              		.code	16
 383              		.thumb_func
 384              		.type	QuadDec_1_SetOneShot, %function
 385              	QuadDec_1_SetOneShot:
 386              	.LFB7:
 391:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 392:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 393:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 394:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetOneShot
 395:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 396:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 397:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 398:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the register that controls whether the QuadDec_1 runs
 399:.\Generated_Source\PSoC4/QuadDec_1.c **** *  continuously or stops when terminal count is reached.  By default the
 400:.\Generated_Source\PSoC4/QuadDec_1.c **** *  QuadDec_1 operates in the continuous mode.
 401:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 402:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 403:.\Generated_Source\PSoC4/QuadDec_1.c **** *  oneShotEnable
 404:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
 405:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - 0 - Continuous
 406:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - 1 - Enable One Shot
 407:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 408:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 409:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 410:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 411:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetOneShot(uint32 oneShotEnable)
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 15


 413:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 387              		.loc 1 413 0
 388              		.cfi_startproc
 389 0000 90B5     		push	{r4, r7, lr}
 390              		.cfi_def_cfa_offset 12
 391              		.cfi_offset 4, -12
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 85B0     		sub	sp, sp, #20
 395              		.cfi_def_cfa_offset 32
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 7860     		str	r0, [r7, #4]
 414:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 415:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 416:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 399              		.loc 1 416 0
 400 0008 3C1C     		mov	r4, r7
 401 000a 0F34     		add	r4, r4, #15
 402 000c FFF7FEFF 		bl	CyEnterCriticalSection
 403 0010 031C     		mov	r3, r0
 404 0012 2370     		strb	r3, [r4]
 417:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 418:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG &= (uint32)~QuadDec_1_ONESHOT_MASK;
 405              		.loc 1 418 0
 406 0014 0B4B     		ldr	r3, .L24
 407 0016 0B4A     		ldr	r2, .L24
 408 0018 1168     		ldr	r1, [r2]
 409 001a 0B4A     		ldr	r2, .L24+4
 410 001c 0A40     		and	r2, r1
 411 001e 1A60     		str	r2, [r3]
 419:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG |= ((uint32)((oneShotEnable & QuadDec_1_1BIT_MASK) <<
 412              		.loc 1 419 0
 413 0020 084B     		ldr	r3, .L24
 414 0022 084A     		ldr	r2, .L24
 415 0024 1168     		ldr	r1, [r2]
 416 0026 7868     		ldr	r0, [r7, #4]
 417 0028 0122     		mov	r2, #1
 418 002a 0240     		and	r2, r0
 419 002c 9204     		lsl	r2, r2, #18
 420 002e 0A43     		orr	r2, r1
 421 0030 1A60     		str	r2, [r3]
 420:.\Generated_Source\PSoC4/QuadDec_1.c ****                                                                QuadDec_1_ONESHOT_SHIFT));
 421:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 422:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 422              		.loc 1 422 0
 423 0032 3B1C     		mov	r3, r7
 424 0034 0F33     		add	r3, r3, #15
 425 0036 1B78     		ldrb	r3, [r3]
 426 0038 181C     		mov	r0, r3
 427 003a FFF7FEFF 		bl	CyExitCriticalSection
 423:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 428              		.loc 1 423 0
 429 003e BD46     		mov	sp, r7
 430 0040 05B0     		add	sp, sp, #20
 431              		@ sp needed
 432 0042 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 16


 433              	.L25:
 434              		.align	2
 435              	.L24:
 436 0044 00010540 		.word	1074069760
 437 0048 FFFFFBFF 		.word	-262145
 438              		.cfi_endproc
 439              	.LFE7:
 440              		.size	QuadDec_1_SetOneShot, .-QuadDec_1_SetOneShot
 441              		.section	.text.QuadDec_1_SetPWMMode,"ax",%progbits
 442              		.align	2
 443              		.global	QuadDec_1_SetPWMMode
 444              		.code	16
 445              		.thumb_func
 446              		.type	QuadDec_1_SetPWMMode, %function
 447              	QuadDec_1_SetPWMMode:
 448              	.LFB8:
 424:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 425:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 426:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 427:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetPWMMode
 428:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 429:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 430:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 431:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the control register that determines what mode of operation the PWM
 432:.\Generated_Source\PSoC4/QuadDec_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 433:.\Generated_Source\PSoC4/QuadDec_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 434:.\Generated_Source\PSoC4/QuadDec_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 435:.\Generated_Source\PSoC4/QuadDec_1.c **** *  the mode.
 436:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 437:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 438:.\Generated_Source\PSoC4/QuadDec_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 439:.\Generated_Source\PSoC4/QuadDec_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 440:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
 441:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 442:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 443:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 444:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 445:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - OVERLOW_SET         - Set on overflow
 446:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 447:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 448:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 449:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 450:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 451:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 452:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 453:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 454:.\Generated_Source\PSoC4/QuadDec_1.c **** *                             with up counting mode
 455:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 456:.\Generated_Source\PSoC4/QuadDec_1.c **** *                             with down counting mode
 457:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 458:.\Generated_Source\PSoC4/QuadDec_1.c **** *                             combined with up/down 0 mode
 459:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 460:.\Generated_Source\PSoC4/QuadDec_1.c **** *                             with up/down 1 mode
 461:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 462:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 463:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 464:.\Generated_Source\PSoC4/QuadDec_1.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 17


 465:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetPWMMode(uint32 modeMask)
 467:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 449              		.loc 1 467 0
 450              		.cfi_startproc
 451 0000 80B5     		push	{r7, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 82B0     		sub	sp, sp, #8
 456              		.cfi_def_cfa_offset 16
 457 0004 00AF     		add	r7, sp, #0
 458              		.cfi_def_cfa_register 7
 459 0006 7860     		str	r0, [r7, #4]
 468:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_TRIG_CONTROL2_REG = (modeMask & QuadDec_1_6BIT_MASK);
 460              		.loc 1 468 0
 461 0008 034B     		ldr	r3, .L27
 462 000a 7968     		ldr	r1, [r7, #4]
 463 000c 3F22     		mov	r2, #63
 464 000e 0A40     		and	r2, r1
 465 0010 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 466              		.loc 1 469 0
 467 0012 BD46     		mov	sp, r7
 468 0014 02B0     		add	sp, sp, #8
 469              		@ sp needed
 470 0016 80BD     		pop	{r7, pc}
 471              	.L28:
 472              		.align	2
 473              	.L27:
 474 0018 28010540 		.word	1074069800
 475              		.cfi_endproc
 476              	.LFE8:
 477              		.size	QuadDec_1_SetPWMMode, .-QuadDec_1_SetPWMMode
 478              		.section	.text.QuadDec_1_SetPWMSyncKill,"ax",%progbits
 479              		.align	2
 480              		.global	QuadDec_1_SetPWMSyncKill
 481              		.code	16
 482              		.thumb_func
 483              		.type	QuadDec_1_SetPWMSyncKill, %function
 484              	QuadDec_1_SetPWMSyncKill:
 485              	.LFB9:
 470:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 471:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 472:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 473:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetPWMSyncKill
 475:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 476:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 477:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 478:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 479:.\Generated_Source\PSoC4/QuadDec_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 480:.\Generated_Source\PSoC4/QuadDec_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 481:.\Generated_Source\PSoC4/QuadDec_1.c **** *  and PWM with dead time modes.
 482:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 483:.\Generated_Source\PSoC4/QuadDec_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 484:.\Generated_Source\PSoC4/QuadDec_1.c **** *  signals until the next terminal count.
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 18


 485:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 486:.\Generated_Source\PSoC4/QuadDec_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 487:.\Generated_Source\PSoC4/QuadDec_1.c **** *  signals when the kill signal is present.  This mode should only be used
 488:.\Generated_Source\PSoC4/QuadDec_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 489:.\Generated_Source\PSoC4/QuadDec_1.c **** *  (Level sensitive signal).
 490:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 491:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 492:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 493:.\Generated_Source\PSoC4/QuadDec_1.c **** *  syncKillEnable
 494:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
 495:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - 0 - Asynchronous
 496:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - 1 - Synchronous
 497:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 498:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 499:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 500:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 501:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 502:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetPWMSyncKill(uint32 syncKillEnable)
 503:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 486              		.loc 1 503 0
 487              		.cfi_startproc
 488 0000 90B5     		push	{r4, r7, lr}
 489              		.cfi_def_cfa_offset 12
 490              		.cfi_offset 4, -12
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 85B0     		sub	sp, sp, #20
 494              		.cfi_def_cfa_offset 32
 495 0004 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 497 0006 7860     		str	r0, [r7, #4]
 504:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 505:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 506:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 498              		.loc 1 506 0
 499 0008 3C1C     		mov	r4, r7
 500 000a 0F34     		add	r4, r4, #15
 501 000c FFF7FEFF 		bl	CyEnterCriticalSection
 502 0010 031C     		mov	r3, r0
 503 0012 2370     		strb	r3, [r4]
 507:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 508:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG &= (uint32)~QuadDec_1_PWM_SYNC_KILL_MASK;
 504              		.loc 1 508 0
 505 0014 0B4B     		ldr	r3, .L30
 506 0016 0B4A     		ldr	r2, .L30
 507 0018 1268     		ldr	r2, [r2]
 508 001a 0421     		mov	r1, #4
 509 001c 8A43     		bic	r2, r1
 510 001e 1A60     		str	r2, [r3]
 509:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG |= ((uint32)((syncKillEnable & QuadDec_1_1BIT_MASK)  <<
 511              		.loc 1 509 0
 512 0020 084B     		ldr	r3, .L30
 513 0022 084A     		ldr	r2, .L30
 514 0024 1168     		ldr	r1, [r2]
 515 0026 7868     		ldr	r0, [r7, #4]
 516 0028 0122     		mov	r2, #1
 517 002a 0240     		and	r2, r0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 19


 518 002c 9200     		lsl	r2, r2, #2
 519 002e 0A43     		orr	r2, r1
 520 0030 1A60     		str	r2, [r3]
 510:.\Generated_Source\PSoC4/QuadDec_1.c ****                                                QuadDec_1_PWM_SYNC_KILL_SHIFT));
 511:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 512:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 521              		.loc 1 512 0
 522 0032 3B1C     		mov	r3, r7
 523 0034 0F33     		add	r3, r3, #15
 524 0036 1B78     		ldrb	r3, [r3]
 525 0038 181C     		mov	r0, r3
 526 003a FFF7FEFF 		bl	CyExitCriticalSection
 513:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 527              		.loc 1 513 0
 528 003e BD46     		mov	sp, r7
 529 0040 05B0     		add	sp, sp, #20
 530              		@ sp needed
 531 0042 90BD     		pop	{r4, r7, pc}
 532              	.L31:
 533              		.align	2
 534              	.L30:
 535 0044 00010540 		.word	1074069760
 536              		.cfi_endproc
 537              	.LFE9:
 538              		.size	QuadDec_1_SetPWMSyncKill, .-QuadDec_1_SetPWMSyncKill
 539              		.section	.text.QuadDec_1_SetPWMStopOnKill,"ax",%progbits
 540              		.align	2
 541              		.global	QuadDec_1_SetPWMStopOnKill
 542              		.code	16
 543              		.thumb_func
 544              		.type	QuadDec_1_SetPWMStopOnKill, %function
 545              	QuadDec_1_SetPWMStopOnKill:
 546              	.LFB10:
 514:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 515:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 516:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetPWMStopOnKill
 518:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 520:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 521:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 522:.\Generated_Source\PSoC4/QuadDec_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 523:.\Generated_Source\PSoC4/QuadDec_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 524:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 525:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 526:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 527:.\Generated_Source\PSoC4/QuadDec_1.c **** *  stopOnKillEnable
 528:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
 529:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - 0 - Don't stop
 530:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - 1 - Stop
 531:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 532:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 533:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 534:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 535:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 536:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 537:.\Generated_Source\PSoC4/QuadDec_1.c **** {
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 20


 547              		.loc 1 537 0
 548              		.cfi_startproc
 549 0000 90B5     		push	{r4, r7, lr}
 550              		.cfi_def_cfa_offset 12
 551              		.cfi_offset 4, -12
 552              		.cfi_offset 7, -8
 553              		.cfi_offset 14, -4
 554 0002 85B0     		sub	sp, sp, #20
 555              		.cfi_def_cfa_offset 32
 556 0004 00AF     		add	r7, sp, #0
 557              		.cfi_def_cfa_register 7
 558 0006 7860     		str	r0, [r7, #4]
 538:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 539:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 540:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 559              		.loc 1 540 0
 560 0008 3C1C     		mov	r4, r7
 561 000a 0F34     		add	r4, r4, #15
 562 000c FFF7FEFF 		bl	CyEnterCriticalSection
 563 0010 031C     		mov	r3, r0
 564 0012 2370     		strb	r3, [r4]
 541:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 542:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG &= (uint32)~QuadDec_1_PWM_STOP_KILL_MASK;
 565              		.loc 1 542 0
 566 0014 0B4B     		ldr	r3, .L33
 567 0016 0B4A     		ldr	r2, .L33
 568 0018 1268     		ldr	r2, [r2]
 569 001a 0821     		mov	r1, #8
 570 001c 8A43     		bic	r2, r1
 571 001e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & QuadDec_1_1BIT_MASK)  <<
 572              		.loc 1 543 0
 573 0020 084B     		ldr	r3, .L33
 574 0022 084A     		ldr	r2, .L33
 575 0024 1168     		ldr	r1, [r2]
 576 0026 7868     		ldr	r0, [r7, #4]
 577 0028 0122     		mov	r2, #1
 578 002a 0240     		and	r2, r0
 579 002c D200     		lsl	r2, r2, #3
 580 002e 0A43     		orr	r2, r1
 581 0030 1A60     		str	r2, [r3]
 544:.\Generated_Source\PSoC4/QuadDec_1.c ****                                                          QuadDec_1_PWM_STOP_KILL_SHIFT));
 545:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 546:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 582              		.loc 1 546 0
 583 0032 3B1C     		mov	r3, r7
 584 0034 0F33     		add	r3, r3, #15
 585 0036 1B78     		ldrb	r3, [r3]
 586 0038 181C     		mov	r0, r3
 587 003a FFF7FEFF 		bl	CyExitCriticalSection
 547:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 588              		.loc 1 547 0
 589 003e BD46     		mov	sp, r7
 590 0040 05B0     		add	sp, sp, #20
 591              		@ sp needed
 592 0042 90BD     		pop	{r4, r7, pc}
 593              	.L34:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 21


 594              		.align	2
 595              	.L33:
 596 0044 00010540 		.word	1074069760
 597              		.cfi_endproc
 598              	.LFE10:
 599              		.size	QuadDec_1_SetPWMStopOnKill, .-QuadDec_1_SetPWMStopOnKill
 600              		.section	.text.QuadDec_1_SetPWMDeadTime,"ax",%progbits
 601              		.align	2
 602              		.global	QuadDec_1_SetPWMDeadTime
 603              		.code	16
 604              		.thumb_func
 605              		.type	QuadDec_1_SetPWMDeadTime, %function
 606              	QuadDec_1_SetPWMDeadTime:
 607              	.LFB11:
 548:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 549:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 550:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetPWMDeadTime
 552:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 553:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 554:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 555:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 556:.\Generated_Source\PSoC4/QuadDec_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 557:.\Generated_Source\PSoC4/QuadDec_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 558:.\Generated_Source\PSoC4/QuadDec_1.c **** *  only applicable to the PWM in the dead time mode.
 559:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 560:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 561:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 562:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Dead time to insert
 563:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values: 0 to 255
 564:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 565:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 566:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 567:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 568:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 569:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetPWMDeadTime(uint32 deadTime)
 570:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 608              		.loc 1 570 0
 609              		.cfi_startproc
 610 0000 90B5     		push	{r4, r7, lr}
 611              		.cfi_def_cfa_offset 12
 612              		.cfi_offset 4, -12
 613              		.cfi_offset 7, -8
 614              		.cfi_offset 14, -4
 615 0002 85B0     		sub	sp, sp, #20
 616              		.cfi_def_cfa_offset 32
 617 0004 00AF     		add	r7, sp, #0
 618              		.cfi_def_cfa_register 7
 619 0006 7860     		str	r0, [r7, #4]
 571:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 572:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 573:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 620              		.loc 1 573 0
 621 0008 3C1C     		mov	r4, r7
 622 000a 0F34     		add	r4, r4, #15
 623 000c FFF7FEFF 		bl	CyEnterCriticalSection
 624 0010 031C     		mov	r3, r0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 22


 625 0012 2370     		strb	r3, [r4]
 574:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 575:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG &= (uint32)~QuadDec_1_PRESCALER_MASK;
 626              		.loc 1 575 0
 627 0014 0B4B     		ldr	r3, .L36
 628 0016 0B4A     		ldr	r2, .L36
 629 0018 1168     		ldr	r1, [r2]
 630 001a 0B4A     		ldr	r2, .L36+4
 631 001c 0A40     		and	r2, r1
 632 001e 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG |= ((uint32)((deadTime & QuadDec_1_8BIT_MASK) <<
 633              		.loc 1 576 0
 634 0020 084B     		ldr	r3, .L36
 635 0022 084A     		ldr	r2, .L36
 636 0024 1168     		ldr	r1, [r2]
 637 0026 7A68     		ldr	r2, [r7, #4]
 638 0028 1202     		lsl	r2, r2, #8
 639 002a 1204     		lsl	r2, r2, #16
 640 002c 120C     		lsr	r2, r2, #16
 641 002e 0A43     		orr	r2, r1
 642 0030 1A60     		str	r2, [r3]
 577:.\Generated_Source\PSoC4/QuadDec_1.c ****                                                           QuadDec_1_PRESCALER_SHIFT));
 578:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 579:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 643              		.loc 1 579 0
 644 0032 3B1C     		mov	r3, r7
 645 0034 0F33     		add	r3, r3, #15
 646 0036 1B78     		ldrb	r3, [r3]
 647 0038 181C     		mov	r0, r3
 648 003a FFF7FEFF 		bl	CyExitCriticalSection
 580:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 649              		.loc 1 580 0
 650 003e BD46     		mov	sp, r7
 651 0040 05B0     		add	sp, sp, #20
 652              		@ sp needed
 653 0042 90BD     		pop	{r4, r7, pc}
 654              	.L37:
 655              		.align	2
 656              	.L36:
 657 0044 00010540 		.word	1074069760
 658 0048 FF00FFFF 		.word	-65281
 659              		.cfi_endproc
 660              	.LFE11:
 661              		.size	QuadDec_1_SetPWMDeadTime, .-QuadDec_1_SetPWMDeadTime
 662              		.section	.text.QuadDec_1_SetPWMInvert,"ax",%progbits
 663              		.align	2
 664              		.global	QuadDec_1_SetPWMInvert
 665              		.code	16
 666              		.thumb_func
 667              		.type	QuadDec_1_SetPWMInvert, %function
 668              	QuadDec_1_SetPWMInvert:
 669              	.LFB12:
 581:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 582:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 583:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 584:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetPWMInvert
 585:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 23


 586:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 587:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 588:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 589:.\Generated_Source\PSoC4/QuadDec_1.c **** *  inverted from their normal output values.  This functionality is only
 590:.\Generated_Source\PSoC4/QuadDec_1.c **** *  applicable to the three PWM modes.
 591:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 592:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 593:.\Generated_Source\PSoC4/QuadDec_1.c **** *  mask: Mask of outputs to invert.
 594:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
 595:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_INVERT_LINE   - Inverts the line output
 596:.\Generated_Source\PSoC4/QuadDec_1.c **** *         - QuadDec_1_INVERT_LINE_N - Inverts the line_n output
 597:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 598:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 599:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 600:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 601:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetPWMInvert(uint32 mask)
 603:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 670              		.loc 1 603 0
 671              		.cfi_startproc
 672 0000 90B5     		push	{r4, r7, lr}
 673              		.cfi_def_cfa_offset 12
 674              		.cfi_offset 4, -12
 675              		.cfi_offset 7, -8
 676              		.cfi_offset 14, -4
 677 0002 85B0     		sub	sp, sp, #20
 678              		.cfi_def_cfa_offset 32
 679 0004 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 0006 7860     		str	r0, [r7, #4]
 604:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 605:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 606:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 682              		.loc 1 606 0
 683 0008 3C1C     		mov	r4, r7
 684 000a 0F34     		add	r4, r4, #15
 685 000c FFF7FEFF 		bl	CyEnterCriticalSection
 686 0010 031C     		mov	r3, r0
 687 0012 2370     		strb	r3, [r4]
 607:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 608:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG &= (uint32)~QuadDec_1_INV_OUT_MASK;
 688              		.loc 1 608 0
 689 0014 0A4B     		ldr	r3, .L39
 690 0016 0A4A     		ldr	r2, .L39
 691 0018 1168     		ldr	r1, [r2]
 692 001a 0A4A     		ldr	r2, .L39+4
 693 001c 0A40     		and	r2, r1
 694 001e 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG |= mask;
 695              		.loc 1 609 0
 696 0020 074B     		ldr	r3, .L39
 697 0022 074A     		ldr	r2, .L39
 698 0024 1168     		ldr	r1, [r2]
 699 0026 7A68     		ldr	r2, [r7, #4]
 700 0028 0A43     		orr	r2, r1
 701 002a 1A60     		str	r2, [r3]
 610:.\Generated_Source\PSoC4/QuadDec_1.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 24


 611:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 702              		.loc 1 611 0
 703 002c 3B1C     		mov	r3, r7
 704 002e 0F33     		add	r3, r3, #15
 705 0030 1B78     		ldrb	r3, [r3]
 706 0032 181C     		mov	r0, r3
 707 0034 FFF7FEFF 		bl	CyExitCriticalSection
 612:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 708              		.loc 1 612 0
 709 0038 BD46     		mov	sp, r7
 710 003a 05B0     		add	sp, sp, #20
 711              		@ sp needed
 712 003c 90BD     		pop	{r4, r7, pc}
 713              	.L40:
 714 003e C046     		.align	2
 715              	.L39:
 716 0040 00010540 		.word	1074069760
 717 0044 FFFFCFFF 		.word	-3145729
 718              		.cfi_endproc
 719              	.LFE12:
 720              		.size	QuadDec_1_SetPWMInvert, .-QuadDec_1_SetPWMInvert
 721              		.section	.text.QuadDec_1_WriteCounter,"ax",%progbits
 722              		.align	2
 723              		.global	QuadDec_1_WriteCounter
 724              		.code	16
 725              		.thumb_func
 726              		.type	QuadDec_1_WriteCounter, %function
 727              	QuadDec_1_WriteCounter:
 728              	.LFB13:
 613:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 614:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 615:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 616:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_WriteCounter
 618:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 620:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 621:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 622:.\Generated_Source\PSoC4/QuadDec_1.c **** *  setting the counter (not the period) to the value written. It is not
 623:.\Generated_Source\PSoC4/QuadDec_1.c **** *  advised to write to this field when the counter is running.
 624:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 625:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 626:.\Generated_Source\PSoC4/QuadDec_1.c **** *  count: value to write
 627:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 628:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 629:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 630:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 631:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 632:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_WriteCounter(uint32 count)
 633:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 729              		.loc 1 633 0
 730              		.cfi_startproc
 731 0000 80B5     		push	{r7, lr}
 732              		.cfi_def_cfa_offset 8
 733              		.cfi_offset 7, -8
 734              		.cfi_offset 14, -4
 735 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 25


 736              		.cfi_def_cfa_offset 16
 737 0004 00AF     		add	r7, sp, #0
 738              		.cfi_def_cfa_register 7
 739 0006 7860     		str	r0, [r7, #4]
 634:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_COUNTER_REG = (count & QuadDec_1_16BIT_MASK);
 740              		.loc 1 634 0
 741 0008 034B     		ldr	r3, .L42
 742 000a 7A68     		ldr	r2, [r7, #4]
 743 000c 1204     		lsl	r2, r2, #16
 744 000e 120C     		lsr	r2, r2, #16
 745 0010 1A60     		str	r2, [r3]
 635:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 746              		.loc 1 635 0
 747 0012 BD46     		mov	sp, r7
 748 0014 02B0     		add	sp, sp, #8
 749              		@ sp needed
 750 0016 80BD     		pop	{r7, pc}
 751              	.L43:
 752              		.align	2
 753              	.L42:
 754 0018 08010540 		.word	1074069768
 755              		.cfi_endproc
 756              	.LFE13:
 757              		.size	QuadDec_1_WriteCounter, .-QuadDec_1_WriteCounter
 758              		.section	.text.QuadDec_1_ReadCounter,"ax",%progbits
 759              		.align	2
 760              		.global	QuadDec_1_ReadCounter
 761              		.code	16
 762              		.thumb_func
 763              		.type	QuadDec_1_ReadCounter, %function
 764              	QuadDec_1_ReadCounter:
 765              	.LFB14:
 636:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 637:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 638:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 639:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_ReadCounter
 640:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 641:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 642:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 643:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Reads the current counter value.
 644:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 645:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 646:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 647:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 648:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 649:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Current counter value
 650:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 651:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 652:.\Generated_Source\PSoC4/QuadDec_1.c **** uint32 QuadDec_1_ReadCounter(void)
 653:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 766              		.loc 1 653 0
 767              		.cfi_startproc
 768 0000 80B5     		push	{r7, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 26


 773              		.cfi_def_cfa_register 7
 654:.\Generated_Source\PSoC4/QuadDec_1.c ****     return (QuadDec_1_COUNTER_REG & QuadDec_1_16BIT_MASK);
 774              		.loc 1 654 0
 775 0004 034B     		ldr	r3, .L46
 776 0006 1B68     		ldr	r3, [r3]
 777 0008 1B04     		lsl	r3, r3, #16
 778 000a 1B0C     		lsr	r3, r3, #16
 655:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 779              		.loc 1 655 0
 780 000c 181C     		mov	r0, r3
 781 000e BD46     		mov	sp, r7
 782              		@ sp needed
 783 0010 80BD     		pop	{r7, pc}
 784              	.L47:
 785 0012 C046     		.align	2
 786              	.L46:
 787 0014 08010540 		.word	1074069768
 788              		.cfi_endproc
 789              	.LFE14:
 790              		.size	QuadDec_1_ReadCounter, .-QuadDec_1_ReadCounter
 791              		.section	.text.QuadDec_1_SetCounterMode,"ax",%progbits
 792              		.align	2
 793              		.global	QuadDec_1_SetCounterMode
 794              		.code	16
 795              		.thumb_func
 796              		.type	QuadDec_1_SetCounterMode, %function
 797              	QuadDec_1_SetCounterMode:
 798              	.LFB15:
 656:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 657:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 658:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetCounterMode
 660:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 661:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 662:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 663:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 664:.\Generated_Source\PSoC4/QuadDec_1.c **** *  and the PWM with a pseudo random output.
 665:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 666:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 667:.\Generated_Source\PSoC4/QuadDec_1.c **** *  counterMode: Enumerated counter type values
 668:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
 669:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_COUNT_UP       - Counts up
 670:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_COUNT_DOWN     - Counts down
 671:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 672:.\Generated_Source\PSoC4/QuadDec_1.c **** *                                         generated when counter reaches 0
 673:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 674:.\Generated_Source\PSoC4/QuadDec_1.c **** *                                         generated both when counter reaches 0
 675:.\Generated_Source\PSoC4/QuadDec_1.c **** *                                         and period
 676:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 677:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 678:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 679:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 680:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetCounterMode(uint32 counterMode)
 682:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 799              		.loc 1 682 0
 800              		.cfi_startproc
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 27


 801 0000 90B5     		push	{r4, r7, lr}
 802              		.cfi_def_cfa_offset 12
 803              		.cfi_offset 4, -12
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 85B0     		sub	sp, sp, #20
 807              		.cfi_def_cfa_offset 32
 808 0004 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 810 0006 7860     		str	r0, [r7, #4]
 683:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 684:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 685:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 811              		.loc 1 685 0
 812 0008 3C1C     		mov	r4, r7
 813 000a 0F34     		add	r4, r4, #15
 814 000c FFF7FEFF 		bl	CyEnterCriticalSection
 815 0010 031C     		mov	r3, r0
 816 0012 2370     		strb	r3, [r4]
 686:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 687:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG &= (uint32)~QuadDec_1_UPDOWN_MASK;
 817              		.loc 1 687 0
 818 0014 0A4B     		ldr	r3, .L49
 819 0016 0A4A     		ldr	r2, .L49
 820 0018 1168     		ldr	r1, [r2]
 821 001a 0A4A     		ldr	r2, .L49+4
 822 001c 0A40     		and	r2, r1
 823 001e 1A60     		str	r2, [r3]
 688:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG |= counterMode;
 824              		.loc 1 688 0
 825 0020 074B     		ldr	r3, .L49
 826 0022 074A     		ldr	r2, .L49
 827 0024 1168     		ldr	r1, [r2]
 828 0026 7A68     		ldr	r2, [r7, #4]
 829 0028 0A43     		orr	r2, r1
 830 002a 1A60     		str	r2, [r3]
 689:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 690:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 831              		.loc 1 690 0
 832 002c 3B1C     		mov	r3, r7
 833 002e 0F33     		add	r3, r3, #15
 834 0030 1B78     		ldrb	r3, [r3]
 835 0032 181C     		mov	r0, r3
 836 0034 FFF7FEFF 		bl	CyExitCriticalSection
 691:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 837              		.loc 1 691 0
 838 0038 BD46     		mov	sp, r7
 839 003a 05B0     		add	sp, sp, #20
 840              		@ sp needed
 841 003c 90BD     		pop	{r4, r7, pc}
 842              	.L50:
 843 003e C046     		.align	2
 844              	.L49:
 845 0040 00010540 		.word	1074069760
 846 0044 FFFFFCFF 		.word	-196609
 847              		.cfi_endproc
 848              	.LFE15:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 28


 849              		.size	QuadDec_1_SetCounterMode, .-QuadDec_1_SetCounterMode
 850              		.section	.text.QuadDec_1_WritePeriod,"ax",%progbits
 851              		.align	2
 852              		.global	QuadDec_1_WritePeriod
 853              		.code	16
 854              		.thumb_func
 855              		.type	QuadDec_1_WritePeriod, %function
 856              	QuadDec_1_WritePeriod:
 857              	.LFB16:
 692:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 693:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 694:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_WritePeriod
 696:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 698:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 699:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the 16 bit period register with the new period value.
 700:.\Generated_Source\PSoC4/QuadDec_1.c **** *  To cause the counter to count for N cycles this register should be written
 701:.\Generated_Source\PSoC4/QuadDec_1.c **** *  with N-1 (counts from 0 to period inclusive).
 702:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 703:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 704:.\Generated_Source\PSoC4/QuadDec_1.c **** *  period: Period value
 705:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 706:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 707:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 708:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 709:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_WritePeriod(uint32 period)
 711:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 858              		.loc 1 711 0
 859              		.cfi_startproc
 860 0000 80B5     		push	{r7, lr}
 861              		.cfi_def_cfa_offset 8
 862              		.cfi_offset 7, -8
 863              		.cfi_offset 14, -4
 864 0002 82B0     		sub	sp, sp, #8
 865              		.cfi_def_cfa_offset 16
 866 0004 00AF     		add	r7, sp, #0
 867              		.cfi_def_cfa_register 7
 868 0006 7860     		str	r0, [r7, #4]
 712:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_PERIOD_REG = (period & QuadDec_1_16BIT_MASK);
 869              		.loc 1 712 0
 870 0008 034B     		ldr	r3, .L52
 871 000a 7A68     		ldr	r2, [r7, #4]
 872 000c 1204     		lsl	r2, r2, #16
 873 000e 120C     		lsr	r2, r2, #16
 874 0010 1A60     		str	r2, [r3]
 713:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 875              		.loc 1 713 0
 876 0012 BD46     		mov	sp, r7
 877 0014 02B0     		add	sp, sp, #8
 878              		@ sp needed
 879 0016 80BD     		pop	{r7, pc}
 880              	.L53:
 881              		.align	2
 882              	.L52:
 883 0018 14010540 		.word	1074069780
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 29


 884              		.cfi_endproc
 885              	.LFE16:
 886              		.size	QuadDec_1_WritePeriod, .-QuadDec_1_WritePeriod
 887              		.section	.text.QuadDec_1_ReadPeriod,"ax",%progbits
 888              		.align	2
 889              		.global	QuadDec_1_ReadPeriod
 890              		.code	16
 891              		.thumb_func
 892              		.type	QuadDec_1_ReadPeriod, %function
 893              	QuadDec_1_ReadPeriod:
 894              	.LFB17:
 714:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 715:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 716:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_ReadPeriod
 718:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 719:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 720:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 721:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Reads the 16 bit period register.
 722:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 723:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 724:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 725:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 726:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 727:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Period value
 728:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 729:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 730:.\Generated_Source\PSoC4/QuadDec_1.c **** uint32 QuadDec_1_ReadPeriod(void)
 731:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 895              		.loc 1 731 0
 896              		.cfi_startproc
 897 0000 80B5     		push	{r7, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 14, -4
 901 0002 00AF     		add	r7, sp, #0
 902              		.cfi_def_cfa_register 7
 732:.\Generated_Source\PSoC4/QuadDec_1.c ****     return (QuadDec_1_PERIOD_REG & QuadDec_1_16BIT_MASK);
 903              		.loc 1 732 0
 904 0004 034B     		ldr	r3, .L56
 905 0006 1B68     		ldr	r3, [r3]
 906 0008 1B04     		lsl	r3, r3, #16
 907 000a 1B0C     		lsr	r3, r3, #16
 733:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 908              		.loc 1 733 0
 909 000c 181C     		mov	r0, r3
 910 000e BD46     		mov	sp, r7
 911              		@ sp needed
 912 0010 80BD     		pop	{r7, pc}
 913              	.L57:
 914 0012 C046     		.align	2
 915              	.L56:
 916 0014 14010540 		.word	1074069780
 917              		.cfi_endproc
 918              	.LFE17:
 919              		.size	QuadDec_1_ReadPeriod, .-QuadDec_1_ReadPeriod
 920              		.section	.text.QuadDec_1_SetCompareSwap,"ax",%progbits
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 30


 921              		.align	2
 922              		.global	QuadDec_1_SetCompareSwap
 923              		.code	16
 924              		.thumb_func
 925              		.type	QuadDec_1_SetCompareSwap, %function
 926              	QuadDec_1_SetCompareSwap:
 927              	.LFB18:
 734:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 735:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 736:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 737:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetCompareSwap
 738:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 739:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 740:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 741:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the register that controls whether the compare registers are
 742:.\Generated_Source\PSoC4/QuadDec_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 743:.\Generated_Source\PSoC4/QuadDec_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 744:.\Generated_Source\PSoC4/QuadDec_1.c **** *  following a hardware switch event.
 745:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 746:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 747:.\Generated_Source\PSoC4/QuadDec_1.c **** *  swapEnable
 748:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
 749:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - 0 - Disable swap
 750:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - 1 - Enable swap
 751:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 752:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 753:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 754:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 755:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetCompareSwap(uint32 swapEnable)
 757:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 928              		.loc 1 757 0
 929              		.cfi_startproc
 930 0000 90B5     		push	{r4, r7, lr}
 931              		.cfi_def_cfa_offset 12
 932              		.cfi_offset 4, -12
 933              		.cfi_offset 7, -8
 934              		.cfi_offset 14, -4
 935 0002 85B0     		sub	sp, sp, #20
 936              		.cfi_def_cfa_offset 32
 937 0004 00AF     		add	r7, sp, #0
 938              		.cfi_def_cfa_register 7
 939 0006 7860     		str	r0, [r7, #4]
 758:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 759:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 760:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 940              		.loc 1 760 0
 941 0008 3C1C     		mov	r4, r7
 942 000a 0F34     		add	r4, r4, #15
 943 000c FFF7FEFF 		bl	CyEnterCriticalSection
 944 0010 031C     		mov	r3, r0
 945 0012 2370     		strb	r3, [r4]
 761:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 762:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG &= (uint32)~QuadDec_1_RELOAD_CC_MASK;
 946              		.loc 1 762 0
 947 0014 0B4B     		ldr	r3, .L59
 948 0016 0B4A     		ldr	r2, .L59
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 31


 949 0018 1268     		ldr	r2, [r2]
 950 001a 0121     		mov	r1, #1
 951 001c 8A43     		bic	r2, r1
 952 001e 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG |= (swapEnable & QuadDec_1_1BIT_MASK);
 953              		.loc 1 763 0
 954 0020 084B     		ldr	r3, .L59
 955 0022 084A     		ldr	r2, .L59
 956 0024 1168     		ldr	r1, [r2]
 957 0026 7868     		ldr	r0, [r7, #4]
 958 0028 0122     		mov	r2, #1
 959 002a 0240     		and	r2, r0
 960 002c 0A43     		orr	r2, r1
 961 002e 1A60     		str	r2, [r3]
 764:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 765:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 962              		.loc 1 765 0
 963 0030 3B1C     		mov	r3, r7
 964 0032 0F33     		add	r3, r3, #15
 965 0034 1B78     		ldrb	r3, [r3]
 966 0036 181C     		mov	r0, r3
 967 0038 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 968              		.loc 1 766 0
 969 003c BD46     		mov	sp, r7
 970 003e 05B0     		add	sp, sp, #20
 971              		@ sp needed
 972 0040 90BD     		pop	{r4, r7, pc}
 973              	.L60:
 974 0042 C046     		.align	2
 975              	.L59:
 976 0044 00010540 		.word	1074069760
 977              		.cfi_endproc
 978              	.LFE18:
 979              		.size	QuadDec_1_SetCompareSwap, .-QuadDec_1_SetCompareSwap
 980              		.section	.text.QuadDec_1_WritePeriodBuf,"ax",%progbits
 981              		.align	2
 982              		.global	QuadDec_1_WritePeriodBuf
 983              		.code	16
 984              		.thumb_func
 985              		.type	QuadDec_1_WritePeriodBuf, %function
 986              	QuadDec_1_WritePeriodBuf:
 987              	.LFB19:
 767:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 768:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 769:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_WritePeriodBuf
 771:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 773:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 774:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the 16 bit period buf register with the new period value.
 775:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 776:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 777:.\Generated_Source\PSoC4/QuadDec_1.c **** *  periodBuf: Period value
 778:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 779:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 780:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 32


 781:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 782:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 783:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_WritePeriodBuf(uint32 periodBuf)
 784:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 988              		.loc 1 784 0
 989              		.cfi_startproc
 990 0000 80B5     		push	{r7, lr}
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 7, -8
 993              		.cfi_offset 14, -4
 994 0002 82B0     		sub	sp, sp, #8
 995              		.cfi_def_cfa_offset 16
 996 0004 00AF     		add	r7, sp, #0
 997              		.cfi_def_cfa_register 7
 998 0006 7860     		str	r0, [r7, #4]
 785:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_PERIOD_BUF_REG = (periodBuf & QuadDec_1_16BIT_MASK);
 999              		.loc 1 785 0
 1000 0008 034B     		ldr	r3, .L62
 1001 000a 7A68     		ldr	r2, [r7, #4]
 1002 000c 1204     		lsl	r2, r2, #16
 1003 000e 120C     		lsr	r2, r2, #16
 1004 0010 1A60     		str	r2, [r3]
 786:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1005              		.loc 1 786 0
 1006 0012 BD46     		mov	sp, r7
 1007 0014 02B0     		add	sp, sp, #8
 1008              		@ sp needed
 1009 0016 80BD     		pop	{r7, pc}
 1010              	.L63:
 1011              		.align	2
 1012              	.L62:
 1013 0018 18010540 		.word	1074069784
 1014              		.cfi_endproc
 1015              	.LFE19:
 1016              		.size	QuadDec_1_WritePeriodBuf, .-QuadDec_1_WritePeriodBuf
 1017              		.section	.text.QuadDec_1_ReadPeriodBuf,"ax",%progbits
 1018              		.align	2
 1019              		.global	QuadDec_1_ReadPeriodBuf
 1020              		.code	16
 1021              		.thumb_func
 1022              		.type	QuadDec_1_ReadPeriodBuf, %function
 1023              	QuadDec_1_ReadPeriodBuf:
 1024              	.LFB20:
 787:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 788:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 789:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_ReadPeriodBuf
 791:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 792:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 793:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 794:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Reads the 16 bit period buf register.
 795:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 796:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 797:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 798:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 799:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 800:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Period value
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 33


 801:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 802:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/QuadDec_1.c **** uint32 QuadDec_1_ReadPeriodBuf(void)
 804:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1025              		.loc 1 804 0
 1026              		.cfi_startproc
 1027 0000 80B5     		push	{r7, lr}
 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 7, -8
 1030              		.cfi_offset 14, -4
 1031 0002 00AF     		add	r7, sp, #0
 1032              		.cfi_def_cfa_register 7
 805:.\Generated_Source\PSoC4/QuadDec_1.c ****     return (QuadDec_1_PERIOD_BUF_REG & QuadDec_1_16BIT_MASK);
 1033              		.loc 1 805 0
 1034 0004 034B     		ldr	r3, .L66
 1035 0006 1B68     		ldr	r3, [r3]
 1036 0008 1B04     		lsl	r3, r3, #16
 1037 000a 1B0C     		lsr	r3, r3, #16
 806:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1038              		.loc 1 806 0
 1039 000c 181C     		mov	r0, r3
 1040 000e BD46     		mov	sp, r7
 1041              		@ sp needed
 1042 0010 80BD     		pop	{r7, pc}
 1043              	.L67:
 1044 0012 C046     		.align	2
 1045              	.L66:
 1046 0014 18010540 		.word	1074069784
 1047              		.cfi_endproc
 1048              	.LFE20:
 1049              		.size	QuadDec_1_ReadPeriodBuf, .-QuadDec_1_ReadPeriodBuf
 1050              		.section	.text.QuadDec_1_SetPeriodSwap,"ax",%progbits
 1051              		.align	2
 1052              		.global	QuadDec_1_SetPeriodSwap
 1053              		.code	16
 1054              		.thumb_func
 1055              		.type	QuadDec_1_SetPeriodSwap, %function
 1056              	QuadDec_1_SetPeriodSwap:
 1057              	.LFB21:
 807:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 808:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 809:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 810:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetPeriodSwap
 811:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 812:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 813:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 814:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the register that controls whether the period registers are
 815:.\Generated_Source\PSoC4/QuadDec_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 816:.\Generated_Source\PSoC4/QuadDec_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 817:.\Generated_Source\PSoC4/QuadDec_1.c **** *  switch event.
 818:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 819:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 820:.\Generated_Source\PSoC4/QuadDec_1.c **** *  swapEnable
 821:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
 822:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - 0 - Disable swap
 823:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - 1 - Enable swap
 824:.\Generated_Source\PSoC4/QuadDec_1.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 34


 825:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 826:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 827:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 828:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetPeriodSwap(uint32 swapEnable)
 830:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1058              		.loc 1 830 0
 1059              		.cfi_startproc
 1060 0000 90B5     		push	{r4, r7, lr}
 1061              		.cfi_def_cfa_offset 12
 1062              		.cfi_offset 4, -12
 1063              		.cfi_offset 7, -8
 1064              		.cfi_offset 14, -4
 1065 0002 85B0     		sub	sp, sp, #20
 1066              		.cfi_def_cfa_offset 32
 1067 0004 00AF     		add	r7, sp, #0
 1068              		.cfi_def_cfa_register 7
 1069 0006 7860     		str	r0, [r7, #4]
 831:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
 832:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 833:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1070              		.loc 1 833 0
 1071 0008 3C1C     		mov	r4, r7
 1072 000a 0F34     		add	r4, r4, #15
 1073 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1074 0010 031C     		mov	r3, r0
 1075 0012 2370     		strb	r3, [r4]
 834:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 835:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG &= (uint32)~QuadDec_1_RELOAD_PERIOD_MASK;
 1076              		.loc 1 835 0
 1077 0014 0B4B     		ldr	r3, .L69
 1078 0016 0B4A     		ldr	r2, .L69
 1079 0018 1268     		ldr	r2, [r2]
 1080 001a 0221     		mov	r1, #2
 1081 001c 8A43     		bic	r2, r1
 1082 001e 1A60     		str	r2, [r3]
 836:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_CONTROL_REG |= ((uint32)((swapEnable & QuadDec_1_1BIT_MASK) <<
 1083              		.loc 1 836 0
 1084 0020 084B     		ldr	r3, .L69
 1085 0022 084A     		ldr	r2, .L69
 1086 0024 1168     		ldr	r1, [r2]
 1087 0026 7868     		ldr	r0, [r7, #4]
 1088 0028 0122     		mov	r2, #1
 1089 002a 0240     		and	r2, r0
 1090 002c 5200     		lsl	r2, r2, #1
 1091 002e 0A43     		orr	r2, r1
 1092 0030 1A60     		str	r2, [r3]
 837:.\Generated_Source\PSoC4/QuadDec_1.c ****                                                             QuadDec_1_RELOAD_PERIOD_SHIFT));
 838:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 839:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 1093              		.loc 1 839 0
 1094 0032 3B1C     		mov	r3, r7
 1095 0034 0F33     		add	r3, r3, #15
 1096 0036 1B78     		ldrb	r3, [r3]
 1097 0038 181C     		mov	r0, r3
 1098 003a FFF7FEFF 		bl	CyExitCriticalSection
 840:.\Generated_Source\PSoC4/QuadDec_1.c **** }
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 35


 1099              		.loc 1 840 0
 1100 003e BD46     		mov	sp, r7
 1101 0040 05B0     		add	sp, sp, #20
 1102              		@ sp needed
 1103 0042 90BD     		pop	{r4, r7, pc}
 1104              	.L70:
 1105              		.align	2
 1106              	.L69:
 1107 0044 00010540 		.word	1074069760
 1108              		.cfi_endproc
 1109              	.LFE21:
 1110              		.size	QuadDec_1_SetPeriodSwap, .-QuadDec_1_SetPeriodSwap
 1111              		.section	.text.QuadDec_1_WriteCompare,"ax",%progbits
 1112              		.align	2
 1113              		.global	QuadDec_1_WriteCompare
 1114              		.code	16
 1115              		.thumb_func
 1116              		.type	QuadDec_1_WriteCompare, %function
 1117              	QuadDec_1_WriteCompare:
 1118              	.LFB22:
 841:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 842:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 843:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_WriteCompare
 845:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 847:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 848:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 849:.\Generated_Source\PSoC4/QuadDec_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 850:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 851:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 852:.\Generated_Source\PSoC4/QuadDec_1.c **** *  compare: Compare value
 853:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 854:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 855:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 856:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 857:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_WriteCompare(uint32 compare)
 859:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1119              		.loc 1 859 0
 1120              		.cfi_startproc
 1121 0000 80B5     		push	{r7, lr}
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 0002 82B0     		sub	sp, sp, #8
 1126              		.cfi_def_cfa_offset 16
 1127 0004 00AF     		add	r7, sp, #0
 1128              		.cfi_def_cfa_register 7
 1129 0006 7860     		str	r0, [r7, #4]
 860:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1_CY_TCPWM_V2)
 861:.\Generated_Source\PSoC4/QuadDec_1.c ****         uint32 currentMode;
 862:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif /* (QuadDec_1_CY_TCPWM_V2) */
 863:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 864:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1_CY_TCPWM_V2)
 865:.\Generated_Source\PSoC4/QuadDec_1.c ****         currentMode = ((QuadDec_1_CONTROL_REG & QuadDec_1_UPDOWN_MASK) >> QuadDec_1_UPDOWN_SHIFT);
 866:.\Generated_Source\PSoC4/QuadDec_1.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 36


 867:.\Generated_Source\PSoC4/QuadDec_1.c ****         if (QuadDec_1__COUNT_DOWN == currentMode)
 868:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
 869:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_COMP_CAP_REG = ((compare + 1u) & QuadDec_1_16BIT_MASK);
 870:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
 871:.\Generated_Source\PSoC4/QuadDec_1.c ****         else if (QuadDec_1__COUNT_UP == currentMode)
 872:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
 873:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_COMP_CAP_REG = ((compare - 1u) & QuadDec_1_16BIT_MASK);
 874:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
 875:.\Generated_Source\PSoC4/QuadDec_1.c ****         else
 876:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
 877:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_COMP_CAP_REG = (compare & QuadDec_1_16BIT_MASK);
 878:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
 879:.\Generated_Source\PSoC4/QuadDec_1.c ****     #else
 880:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_COMP_CAP_REG = (compare & QuadDec_1_16BIT_MASK);
 1130              		.loc 1 880 0
 1131 0008 034B     		ldr	r3, .L72
 1132 000a 7A68     		ldr	r2, [r7, #4]
 1133 000c 1204     		lsl	r2, r2, #16
 1134 000e 120C     		lsr	r2, r2, #16
 1135 0010 1A60     		str	r2, [r3]
 881:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif /* (QuadDec_1_CY_TCPWM_V2) */
 882:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1136              		.loc 1 882 0
 1137 0012 BD46     		mov	sp, r7
 1138 0014 02B0     		add	sp, sp, #8
 1139              		@ sp needed
 1140 0016 80BD     		pop	{r7, pc}
 1141              	.L73:
 1142              		.align	2
 1143              	.L72:
 1144 0018 0C010540 		.word	1074069772
 1145              		.cfi_endproc
 1146              	.LFE22:
 1147              		.size	QuadDec_1_WriteCompare, .-QuadDec_1_WriteCompare
 1148              		.section	.text.QuadDec_1_ReadCompare,"ax",%progbits
 1149              		.align	2
 1150              		.global	QuadDec_1_ReadCompare
 1151              		.code	16
 1152              		.thumb_func
 1153              		.type	QuadDec_1_ReadCompare, %function
 1154              	QuadDec_1_ReadCompare:
 1155              	.LFB23:
 883:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 884:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 885:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 886:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_ReadCompare
 887:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 888:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 889:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 890:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 891:.\Generated_Source\PSoC4/QuadDec_1.c **** *  or in Quadrature Decoder modes.
 892:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 893:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 894:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 895:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 896:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 897:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Compare value
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 37


 898:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 899:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/QuadDec_1.c **** uint32 QuadDec_1_ReadCompare(void)
 901:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1156              		.loc 1 901 0
 1157              		.cfi_startproc
 1158 0000 80B5     		push	{r7, lr}
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 7, -8
 1161              		.cfi_offset 14, -4
 1162 0002 00AF     		add	r7, sp, #0
 1163              		.cfi_def_cfa_register 7
 902:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1_CY_TCPWM_V2)
 903:.\Generated_Source\PSoC4/QuadDec_1.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/QuadDec_1.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif /* (QuadDec_1_CY_TCPWM_V2) */
 906:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 907:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1_CY_TCPWM_V2)
 908:.\Generated_Source\PSoC4/QuadDec_1.c ****         currentMode = ((QuadDec_1_CONTROL_REG & QuadDec_1_UPDOWN_MASK) >> QuadDec_1_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 910:.\Generated_Source\PSoC4/QuadDec_1.c ****         if (QuadDec_1__COUNT_DOWN == currentMode)
 911:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
 912:.\Generated_Source\PSoC4/QuadDec_1.c ****             regVal = ((QuadDec_1_COMP_CAP_REG - 1u) & QuadDec_1_16BIT_MASK);
 913:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
 914:.\Generated_Source\PSoC4/QuadDec_1.c ****         else if (QuadDec_1__COUNT_UP == currentMode)
 915:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
 916:.\Generated_Source\PSoC4/QuadDec_1.c ****             regVal = ((QuadDec_1_COMP_CAP_REG + 1u) & QuadDec_1_16BIT_MASK);
 917:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
 918:.\Generated_Source\PSoC4/QuadDec_1.c ****         else
 919:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
 920:.\Generated_Source\PSoC4/QuadDec_1.c ****             regVal = (QuadDec_1_COMP_CAP_REG & QuadDec_1_16BIT_MASK);
 921:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
 922:.\Generated_Source\PSoC4/QuadDec_1.c ****         return (regVal);
 923:.\Generated_Source\PSoC4/QuadDec_1.c ****     #else
 924:.\Generated_Source\PSoC4/QuadDec_1.c ****         return (QuadDec_1_COMP_CAP_REG & QuadDec_1_16BIT_MASK);
 1164              		.loc 1 924 0
 1165 0004 034B     		ldr	r3, .L76
 1166 0006 1B68     		ldr	r3, [r3]
 1167 0008 1B04     		lsl	r3, r3, #16
 1168 000a 1B0C     		lsr	r3, r3, #16
 925:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif /* (QuadDec_1_CY_TCPWM_V2) */
 926:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1169              		.loc 1 926 0
 1170 000c 181C     		mov	r0, r3
 1171 000e BD46     		mov	sp, r7
 1172              		@ sp needed
 1173 0010 80BD     		pop	{r7, pc}
 1174              	.L77:
 1175 0012 C046     		.align	2
 1176              	.L76:
 1177 0014 0C010540 		.word	1074069772
 1178              		.cfi_endproc
 1179              	.LFE23:
 1180              		.size	QuadDec_1_ReadCompare, .-QuadDec_1_ReadCompare
 1181              		.section	.text.QuadDec_1_WriteCompareBuf,"ax",%progbits
 1182              		.align	2
 1183              		.global	QuadDec_1_WriteCompareBuf
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 38


 1184              		.code	16
 1185              		.thumb_func
 1186              		.type	QuadDec_1_WriteCompareBuf, %function
 1187              	QuadDec_1_WriteCompareBuf:
 1188              	.LFB24:
 927:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 928:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 929:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 930:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_WriteCompareBuf
 931:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 932:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 933:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 934:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 935:.\Generated_Source\PSoC4/QuadDec_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 936:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 937:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 938:.\Generated_Source\PSoC4/QuadDec_1.c **** *  compareBuf: Compare value
 939:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 940:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 941:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 942:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 943:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 944:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_WriteCompareBuf(uint32 compareBuf)
 945:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1189              		.loc 1 945 0
 1190              		.cfi_startproc
 1191 0000 80B5     		push	{r7, lr}
 1192              		.cfi_def_cfa_offset 8
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
 1195 0002 82B0     		sub	sp, sp, #8
 1196              		.cfi_def_cfa_offset 16
 1197 0004 00AF     		add	r7, sp, #0
 1198              		.cfi_def_cfa_register 7
 1199 0006 7860     		str	r0, [r7, #4]
 946:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1_CY_TCPWM_V2)
 947:.\Generated_Source\PSoC4/QuadDec_1.c ****         uint32 currentMode;
 948:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif /* (QuadDec_1_CY_TCPWM_V2) */
 949:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 950:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1_CY_TCPWM_V2)
 951:.\Generated_Source\PSoC4/QuadDec_1.c ****         currentMode = ((QuadDec_1_CONTROL_REG & QuadDec_1_UPDOWN_MASK) >> QuadDec_1_UPDOWN_SHIFT);
 952:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 953:.\Generated_Source\PSoC4/QuadDec_1.c ****         if (QuadDec_1__COUNT_DOWN == currentMode)
 954:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
 955:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_COMP_CAP_BUF_REG = ((compareBuf + 1u) & QuadDec_1_16BIT_MASK);
 956:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
 957:.\Generated_Source\PSoC4/QuadDec_1.c ****         else if (QuadDec_1__COUNT_UP == currentMode)
 958:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
 959:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_COMP_CAP_BUF_REG = ((compareBuf - 1u) & QuadDec_1_16BIT_MASK);
 960:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
 961:.\Generated_Source\PSoC4/QuadDec_1.c ****         else
 962:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
 963:.\Generated_Source\PSoC4/QuadDec_1.c ****             QuadDec_1_COMP_CAP_BUF_REG = (compareBuf & QuadDec_1_16BIT_MASK);
 964:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
 965:.\Generated_Source\PSoC4/QuadDec_1.c ****     #else
 966:.\Generated_Source\PSoC4/QuadDec_1.c ****         QuadDec_1_COMP_CAP_BUF_REG = (compareBuf & QuadDec_1_16BIT_MASK);
 1200              		.loc 1 966 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 39


 1201 0008 034B     		ldr	r3, .L79
 1202 000a 7A68     		ldr	r2, [r7, #4]
 1203 000c 1204     		lsl	r2, r2, #16
 1204 000e 120C     		lsr	r2, r2, #16
 1205 0010 1A60     		str	r2, [r3]
 967:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif /* (QuadDec_1_CY_TCPWM_V2) */
 968:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1206              		.loc 1 968 0
 1207 0012 BD46     		mov	sp, r7
 1208 0014 02B0     		add	sp, sp, #8
 1209              		@ sp needed
 1210 0016 80BD     		pop	{r7, pc}
 1211              	.L80:
 1212              		.align	2
 1213              	.L79:
 1214 0018 10010540 		.word	1074069776
 1215              		.cfi_endproc
 1216              	.LFE24:
 1217              		.size	QuadDec_1_WriteCompareBuf, .-QuadDec_1_WriteCompareBuf
 1218              		.section	.text.QuadDec_1_ReadCompareBuf,"ax",%progbits
 1219              		.align	2
 1220              		.global	QuadDec_1_ReadCompareBuf
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	QuadDec_1_ReadCompareBuf, %function
 1224              	QuadDec_1_ReadCompareBuf:
 1225              	.LFB25:
 969:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 970:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 971:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
 972:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_ReadCompareBuf
 973:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
 974:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 975:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
 976:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 977:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Capture or in Quadrature Decoder modes.
 978:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 979:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
 980:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
 981:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 982:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
 983:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Compare buffer value
 984:.\Generated_Source\PSoC4/QuadDec_1.c **** *
 985:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
 986:.\Generated_Source\PSoC4/QuadDec_1.c **** uint32 QuadDec_1_ReadCompareBuf(void)
 987:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1226              		.loc 1 987 0
 1227              		.cfi_startproc
 1228 0000 80B5     		push	{r7, lr}
 1229              		.cfi_def_cfa_offset 8
 1230              		.cfi_offset 7, -8
 1231              		.cfi_offset 14, -4
 1232 0002 00AF     		add	r7, sp, #0
 1233              		.cfi_def_cfa_register 7
 988:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1_CY_TCPWM_V2)
 989:.\Generated_Source\PSoC4/QuadDec_1.c ****         uint32 currentMode;
 990:.\Generated_Source\PSoC4/QuadDec_1.c ****         uint32 regVal;
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 40


 991:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif /* (QuadDec_1_CY_TCPWM_V2) */
 992:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 993:.\Generated_Source\PSoC4/QuadDec_1.c ****     #if (QuadDec_1_CY_TCPWM_V2)
 994:.\Generated_Source\PSoC4/QuadDec_1.c ****         currentMode = ((QuadDec_1_CONTROL_REG & QuadDec_1_UPDOWN_MASK) >> QuadDec_1_UPDOWN_SHIFT);
 995:.\Generated_Source\PSoC4/QuadDec_1.c **** 
 996:.\Generated_Source\PSoC4/QuadDec_1.c ****         if (QuadDec_1__COUNT_DOWN == currentMode)
 997:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
 998:.\Generated_Source\PSoC4/QuadDec_1.c ****             regVal = ((QuadDec_1_COMP_CAP_BUF_REG - 1u) & QuadDec_1_16BIT_MASK);
 999:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
1000:.\Generated_Source\PSoC4/QuadDec_1.c ****         else if (QuadDec_1__COUNT_UP == currentMode)
1001:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
1002:.\Generated_Source\PSoC4/QuadDec_1.c ****             regVal = ((QuadDec_1_COMP_CAP_BUF_REG + 1u) & QuadDec_1_16BIT_MASK);
1003:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
1004:.\Generated_Source\PSoC4/QuadDec_1.c ****         else
1005:.\Generated_Source\PSoC4/QuadDec_1.c ****         {
1006:.\Generated_Source\PSoC4/QuadDec_1.c ****             regVal = (QuadDec_1_COMP_CAP_BUF_REG & QuadDec_1_16BIT_MASK);
1007:.\Generated_Source\PSoC4/QuadDec_1.c ****         }
1008:.\Generated_Source\PSoC4/QuadDec_1.c ****         return (regVal);
1009:.\Generated_Source\PSoC4/QuadDec_1.c ****     #else
1010:.\Generated_Source\PSoC4/QuadDec_1.c ****         return (QuadDec_1_COMP_CAP_BUF_REG & QuadDec_1_16BIT_MASK);
 1234              		.loc 1 1010 0
 1235 0004 034B     		ldr	r3, .L83
 1236 0006 1B68     		ldr	r3, [r3]
 1237 0008 1B04     		lsl	r3, r3, #16
 1238 000a 1B0C     		lsr	r3, r3, #16
1011:.\Generated_Source\PSoC4/QuadDec_1.c ****     #endif /* (QuadDec_1_CY_TCPWM_V2) */
1012:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1239              		.loc 1 1012 0
 1240 000c 181C     		mov	r0, r3
 1241 000e BD46     		mov	sp, r7
 1242              		@ sp needed
 1243 0010 80BD     		pop	{r7, pc}
 1244              	.L84:
 1245 0012 C046     		.align	2
 1246              	.L83:
 1247 0014 10010540 		.word	1074069776
 1248              		.cfi_endproc
 1249              	.LFE25:
 1250              		.size	QuadDec_1_ReadCompareBuf, .-QuadDec_1_ReadCompareBuf
 1251              		.section	.text.QuadDec_1_ReadCapture,"ax",%progbits
 1252              		.align	2
 1253              		.global	QuadDec_1_ReadCapture
 1254              		.code	16
 1255              		.thumb_func
 1256              		.type	QuadDec_1_ReadCapture, %function
 1257              	QuadDec_1_ReadCapture:
 1258              	.LFB26:
1013:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1014:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1015:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_ReadCapture
1017:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1018:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1019:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1020:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Reads the captured counter value. This API is applicable only for
1021:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1022:.\Generated_Source\PSoC4/QuadDec_1.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 41


1023:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1024:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1025:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1026:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1027:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Capture value
1028:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1029:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1030:.\Generated_Source\PSoC4/QuadDec_1.c **** uint32 QuadDec_1_ReadCapture(void)
1031:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1259              		.loc 1 1031 0
 1260              		.cfi_startproc
 1261 0000 80B5     		push	{r7, lr}
 1262              		.cfi_def_cfa_offset 8
 1263              		.cfi_offset 7, -8
 1264              		.cfi_offset 14, -4
 1265 0002 00AF     		add	r7, sp, #0
 1266              		.cfi_def_cfa_register 7
1032:.\Generated_Source\PSoC4/QuadDec_1.c ****     return (QuadDec_1_COMP_CAP_REG & QuadDec_1_16BIT_MASK);
 1267              		.loc 1 1032 0
 1268 0004 034B     		ldr	r3, .L87
 1269 0006 1B68     		ldr	r3, [r3]
 1270 0008 1B04     		lsl	r3, r3, #16
 1271 000a 1B0C     		lsr	r3, r3, #16
1033:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1272              		.loc 1 1033 0
 1273 000c 181C     		mov	r0, r3
 1274 000e BD46     		mov	sp, r7
 1275              		@ sp needed
 1276 0010 80BD     		pop	{r7, pc}
 1277              	.L88:
 1278 0012 C046     		.align	2
 1279              	.L87:
 1280 0014 0C010540 		.word	1074069772
 1281              		.cfi_endproc
 1282              	.LFE26:
 1283              		.size	QuadDec_1_ReadCapture, .-QuadDec_1_ReadCapture
 1284              		.section	.text.QuadDec_1_ReadCaptureBuf,"ax",%progbits
 1285              		.align	2
 1286              		.global	QuadDec_1_ReadCaptureBuf
 1287              		.code	16
 1288              		.thumb_func
 1289              		.type	QuadDec_1_ReadCaptureBuf, %function
 1290              	QuadDec_1_ReadCaptureBuf:
 1291              	.LFB27:
1034:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1035:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1036:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1037:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_ReadCaptureBuf
1038:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1039:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1040:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1041:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Reads the capture buffer register. This API is applicable only for
1042:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1043:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1044:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1045:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1046:.\Generated_Source\PSoC4/QuadDec_1.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 42


1047:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1048:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Capture buffer value
1049:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1050:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1051:.\Generated_Source\PSoC4/QuadDec_1.c **** uint32 QuadDec_1_ReadCaptureBuf(void)
1052:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1292              		.loc 1 1052 0
 1293              		.cfi_startproc
 1294 0000 80B5     		push	{r7, lr}
 1295              		.cfi_def_cfa_offset 8
 1296              		.cfi_offset 7, -8
 1297              		.cfi_offset 14, -4
 1298 0002 00AF     		add	r7, sp, #0
 1299              		.cfi_def_cfa_register 7
1053:.\Generated_Source\PSoC4/QuadDec_1.c ****     return (QuadDec_1_COMP_CAP_BUF_REG & QuadDec_1_16BIT_MASK);
 1300              		.loc 1 1053 0
 1301 0004 034B     		ldr	r3, .L91
 1302 0006 1B68     		ldr	r3, [r3]
 1303 0008 1B04     		lsl	r3, r3, #16
 1304 000a 1B0C     		lsr	r3, r3, #16
1054:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1305              		.loc 1 1054 0
 1306 000c 181C     		mov	r0, r3
 1307 000e BD46     		mov	sp, r7
 1308              		@ sp needed
 1309 0010 80BD     		pop	{r7, pc}
 1310              	.L92:
 1311 0012 C046     		.align	2
 1312              	.L91:
 1313 0014 10010540 		.word	1074069776
 1314              		.cfi_endproc
 1315              	.LFE27:
 1316              		.size	QuadDec_1_ReadCaptureBuf, .-QuadDec_1_ReadCaptureBuf
 1317              		.section	.text.QuadDec_1_SetCaptureMode,"ax",%progbits
 1318              		.align	2
 1319              		.global	QuadDec_1_SetCaptureMode
 1320              		.code	16
 1321              		.thumb_func
 1322              		.type	QuadDec_1_SetCaptureMode, %function
 1323              	QuadDec_1_SetCaptureMode:
 1324              	.LFB28:
1055:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1056:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1057:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1058:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetCaptureMode
1059:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1060:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1061:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1062:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1063:.\Generated_Source\PSoC4/QuadDec_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1064:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Quadrature Decoder modes.
1065:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1066:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1067:.\Generated_Source\PSoC4/QuadDec_1.c **** *  triggerMode: Enumerated trigger mode value
1068:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1069:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_LEVEL     - Level
1070:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_RISING    - Rising edge
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 43


1071:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_FALLING   - Falling edge
1072:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_BOTH      - Both rising and falling edge
1073:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1074:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1075:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1076:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1077:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1078:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetCaptureMode(uint32 triggerMode)
1079:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1325              		.loc 1 1079 0
 1326              		.cfi_startproc
 1327 0000 90B5     		push	{r4, r7, lr}
 1328              		.cfi_def_cfa_offset 12
 1329              		.cfi_offset 4, -12
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 85B0     		sub	sp, sp, #20
 1333              		.cfi_def_cfa_offset 32
 1334 0004 00AF     		add	r7, sp, #0
 1335              		.cfi_def_cfa_register 7
 1336 0006 7860     		str	r0, [r7, #4]
1080:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
1081:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1082:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1337              		.loc 1 1082 0
 1338 0008 3C1C     		mov	r4, r7
 1339 000a 0F34     		add	r4, r4, #15
 1340 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1341 0010 031C     		mov	r3, r0
 1342 0012 2370     		strb	r3, [r4]
1083:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1084:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_TRIG_CONTROL1_REG &= (uint32)~QuadDec_1_CAPTURE_MASK;
 1343              		.loc 1 1084 0
 1344 0014 0A4B     		ldr	r3, .L94
 1345 0016 0A4A     		ldr	r2, .L94
 1346 0018 1268     		ldr	r2, [r2]
 1347 001a 0321     		mov	r1, #3
 1348 001c 8A43     		bic	r2, r1
 1349 001e 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_TRIG_CONTROL1_REG |= triggerMode;
 1350              		.loc 1 1085 0
 1351 0020 074B     		ldr	r3, .L94
 1352 0022 074A     		ldr	r2, .L94
 1353 0024 1168     		ldr	r1, [r2]
 1354 0026 7A68     		ldr	r2, [r7, #4]
 1355 0028 0A43     		orr	r2, r1
 1356 002a 1A60     		str	r2, [r3]
1086:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1087:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 1357              		.loc 1 1087 0
 1358 002c 3B1C     		mov	r3, r7
 1359 002e 0F33     		add	r3, r3, #15
 1360 0030 1B78     		ldrb	r3, [r3]
 1361 0032 181C     		mov	r0, r3
 1362 0034 FFF7FEFF 		bl	CyExitCriticalSection
1088:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1363              		.loc 1 1088 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 44


 1364 0038 BD46     		mov	sp, r7
 1365 003a 05B0     		add	sp, sp, #20
 1366              		@ sp needed
 1367 003c 90BD     		pop	{r4, r7, pc}
 1368              	.L95:
 1369 003e C046     		.align	2
 1370              	.L94:
 1371 0040 24010540 		.word	1074069796
 1372              		.cfi_endproc
 1373              	.LFE28:
 1374              		.size	QuadDec_1_SetCaptureMode, .-QuadDec_1_SetCaptureMode
 1375              		.section	.text.QuadDec_1_SetReloadMode,"ax",%progbits
 1376              		.align	2
 1377              		.global	QuadDec_1_SetReloadMode
 1378              		.code	16
 1379              		.thumb_func
 1380              		.type	QuadDec_1_SetReloadMode, %function
 1381              	QuadDec_1_SetReloadMode:
 1382              	.LFB29:
1089:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1090:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1091:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetReloadMode
1093:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1095:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1096:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1097:.\Generated_Source\PSoC4/QuadDec_1.c **** *  input.
1098:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1099:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1100:.\Generated_Source\PSoC4/QuadDec_1.c **** *  triggerMode: Enumerated trigger mode value
1101:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1102:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_LEVEL     - Level
1103:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_RISING    - Rising edge
1104:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_FALLING   - Falling edge
1105:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_BOTH      - Both rising and falling edge
1106:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1107:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1108:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1109:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1110:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetReloadMode(uint32 triggerMode)
1112:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1383              		.loc 1 1112 0
 1384              		.cfi_startproc
 1385 0000 90B5     		push	{r4, r7, lr}
 1386              		.cfi_def_cfa_offset 12
 1387              		.cfi_offset 4, -12
 1388              		.cfi_offset 7, -8
 1389              		.cfi_offset 14, -4
 1390 0002 85B0     		sub	sp, sp, #20
 1391              		.cfi_def_cfa_offset 32
 1392 0004 00AF     		add	r7, sp, #0
 1393              		.cfi_def_cfa_register 7
 1394 0006 7860     		str	r0, [r7, #4]
1113:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
1114:.\Generated_Source\PSoC4/QuadDec_1.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 45


1115:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1395              		.loc 1 1115 0
 1396 0008 3C1C     		mov	r4, r7
 1397 000a 0F34     		add	r4, r4, #15
 1398 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1399 0010 031C     		mov	r3, r0
 1400 0012 2370     		strb	r3, [r4]
1116:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1117:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_TRIG_CONTROL1_REG &= (uint32)~QuadDec_1_RELOAD_MASK;
 1401              		.loc 1 1117 0
 1402 0014 0A4B     		ldr	r3, .L97
 1403 0016 0A4A     		ldr	r2, .L97
 1404 0018 1268     		ldr	r2, [r2]
 1405 001a 3021     		mov	r1, #48
 1406 001c 8A43     		bic	r2, r1
 1407 001e 1A60     		str	r2, [r3]
1118:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << QuadDec_1_RELOAD_SHIFT));
 1408              		.loc 1 1118 0
 1409 0020 074B     		ldr	r3, .L97
 1410 0022 074A     		ldr	r2, .L97
 1411 0024 1168     		ldr	r1, [r2]
 1412 0026 7A68     		ldr	r2, [r7, #4]
 1413 0028 1201     		lsl	r2, r2, #4
 1414 002a 0A43     		orr	r2, r1
 1415 002c 1A60     		str	r2, [r3]
1119:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1120:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 1416              		.loc 1 1120 0
 1417 002e 3B1C     		mov	r3, r7
 1418 0030 0F33     		add	r3, r3, #15
 1419 0032 1B78     		ldrb	r3, [r3]
 1420 0034 181C     		mov	r0, r3
 1421 0036 FFF7FEFF 		bl	CyExitCriticalSection
1121:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1422              		.loc 1 1121 0
 1423 003a BD46     		mov	sp, r7
 1424 003c 05B0     		add	sp, sp, #20
 1425              		@ sp needed
 1426 003e 90BD     		pop	{r4, r7, pc}
 1427              	.L98:
 1428              		.align	2
 1429              	.L97:
 1430 0040 24010540 		.word	1074069796
 1431              		.cfi_endproc
 1432              	.LFE29:
 1433              		.size	QuadDec_1_SetReloadMode, .-QuadDec_1_SetReloadMode
 1434              		.section	.text.QuadDec_1_SetStartMode,"ax",%progbits
 1435              		.align	2
 1436              		.global	QuadDec_1_SetStartMode
 1437              		.code	16
 1438              		.thumb_func
 1439              		.type	QuadDec_1_SetStartMode, %function
 1440              	QuadDec_1_SetStartMode:
 1441              	.LFB30:
1122:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1123:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1124:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 46


1125:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetStartMode
1126:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1127:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1128:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1129:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1130:.\Generated_Source\PSoC4/QuadDec_1.c **** *  phiB input.
1131:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1132:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1133:.\Generated_Source\PSoC4/QuadDec_1.c **** *  triggerMode: Enumerated trigger mode value
1134:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1135:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_LEVEL     - Level
1136:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_RISING    - Rising edge
1137:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_FALLING   - Falling edge
1138:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_BOTH      - Both rising and falling edge
1139:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1140:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1141:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1142:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1143:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1144:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetStartMode(uint32 triggerMode)
1145:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1442              		.loc 1 1145 0
 1443              		.cfi_startproc
 1444 0000 90B5     		push	{r4, r7, lr}
 1445              		.cfi_def_cfa_offset 12
 1446              		.cfi_offset 4, -12
 1447              		.cfi_offset 7, -8
 1448              		.cfi_offset 14, -4
 1449 0002 85B0     		sub	sp, sp, #20
 1450              		.cfi_def_cfa_offset 32
 1451 0004 00AF     		add	r7, sp, #0
 1452              		.cfi_def_cfa_register 7
 1453 0006 7860     		str	r0, [r7, #4]
1146:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
1147:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1148:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1454              		.loc 1 1148 0
 1455 0008 3C1C     		mov	r4, r7
 1456 000a 0F34     		add	r4, r4, #15
 1457 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1458 0010 031C     		mov	r3, r0
 1459 0012 2370     		strb	r3, [r4]
1149:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1150:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_TRIG_CONTROL1_REG &= (uint32)~QuadDec_1_START_MASK;
 1460              		.loc 1 1150 0
 1461 0014 0A4B     		ldr	r3, .L100
 1462 0016 0A4A     		ldr	r2, .L100
 1463 0018 1168     		ldr	r1, [r2]
 1464 001a 0A4A     		ldr	r2, .L100+4
 1465 001c 0A40     		and	r2, r1
 1466 001e 1A60     		str	r2, [r3]
1151:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << QuadDec_1_START_SHIFT));
 1467              		.loc 1 1151 0
 1468 0020 074B     		ldr	r3, .L100
 1469 0022 074A     		ldr	r2, .L100
 1470 0024 1168     		ldr	r1, [r2]
 1471 0026 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 47


 1472 0028 1202     		lsl	r2, r2, #8
 1473 002a 0A43     		orr	r2, r1
 1474 002c 1A60     		str	r2, [r3]
1152:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1153:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 1475              		.loc 1 1153 0
 1476 002e 3B1C     		mov	r3, r7
 1477 0030 0F33     		add	r3, r3, #15
 1478 0032 1B78     		ldrb	r3, [r3]
 1479 0034 181C     		mov	r0, r3
 1480 0036 FFF7FEFF 		bl	CyExitCriticalSection
1154:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1481              		.loc 1 1154 0
 1482 003a BD46     		mov	sp, r7
 1483 003c 05B0     		add	sp, sp, #20
 1484              		@ sp needed
 1485 003e 90BD     		pop	{r4, r7, pc}
 1486              	.L101:
 1487              		.align	2
 1488              	.L100:
 1489 0040 24010540 		.word	1074069796
 1490 0044 FFFCFFFF 		.word	-769
 1491              		.cfi_endproc
 1492              	.LFE30:
 1493              		.size	QuadDec_1_SetStartMode, .-QuadDec_1_SetStartMode
 1494              		.section	.text.QuadDec_1_SetStopMode,"ax",%progbits
 1495              		.align	2
 1496              		.global	QuadDec_1_SetStopMode
 1497              		.code	16
 1498              		.thumb_func
 1499              		.type	QuadDec_1_SetStopMode, %function
 1500              	QuadDec_1_SetStopMode:
 1501              	.LFB31:
1155:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1156:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1157:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1158:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetStopMode
1159:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1160:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1161:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1162:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1163:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1164:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1165:.\Generated_Source\PSoC4/QuadDec_1.c **** *  triggerMode: Enumerated trigger mode value
1166:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1167:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_LEVEL     - Level
1168:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_RISING    - Rising edge
1169:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_FALLING   - Falling edge
1170:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_BOTH      - Both rising and falling edge
1171:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1172:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1173:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1174:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1175:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1176:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetStopMode(uint32 triggerMode)
1177:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1502              		.loc 1 1177 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 48


 1503              		.cfi_startproc
 1504 0000 90B5     		push	{r4, r7, lr}
 1505              		.cfi_def_cfa_offset 12
 1506              		.cfi_offset 4, -12
 1507              		.cfi_offset 7, -8
 1508              		.cfi_offset 14, -4
 1509 0002 85B0     		sub	sp, sp, #20
 1510              		.cfi_def_cfa_offset 32
 1511 0004 00AF     		add	r7, sp, #0
 1512              		.cfi_def_cfa_register 7
 1513 0006 7860     		str	r0, [r7, #4]
1178:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
1179:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1180:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1514              		.loc 1 1180 0
 1515 0008 3C1C     		mov	r4, r7
 1516 000a 0F34     		add	r4, r4, #15
 1517 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1518 0010 031C     		mov	r3, r0
 1519 0012 2370     		strb	r3, [r4]
1181:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1182:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_TRIG_CONTROL1_REG &= (uint32)~QuadDec_1_STOP_MASK;
 1520              		.loc 1 1182 0
 1521 0014 0A4B     		ldr	r3, .L103
 1522 0016 0A4A     		ldr	r2, .L103
 1523 0018 1268     		ldr	r2, [r2]
 1524 001a C021     		mov	r1, #192
 1525 001c 8A43     		bic	r2, r1
 1526 001e 1A60     		str	r2, [r3]
1183:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << QuadDec_1_STOP_SHIFT));
 1527              		.loc 1 1183 0
 1528 0020 074B     		ldr	r3, .L103
 1529 0022 074A     		ldr	r2, .L103
 1530 0024 1168     		ldr	r1, [r2]
 1531 0026 7A68     		ldr	r2, [r7, #4]
 1532 0028 9201     		lsl	r2, r2, #6
 1533 002a 0A43     		orr	r2, r1
 1534 002c 1A60     		str	r2, [r3]
1184:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1185:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 1535              		.loc 1 1185 0
 1536 002e 3B1C     		mov	r3, r7
 1537 0030 0F33     		add	r3, r3, #15
 1538 0032 1B78     		ldrb	r3, [r3]
 1539 0034 181C     		mov	r0, r3
 1540 0036 FFF7FEFF 		bl	CyExitCriticalSection
1186:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1541              		.loc 1 1186 0
 1542 003a BD46     		mov	sp, r7
 1543 003c 05B0     		add	sp, sp, #20
 1544              		@ sp needed
 1545 003e 90BD     		pop	{r4, r7, pc}
 1546              	.L104:
 1547              		.align	2
 1548              	.L103:
 1549 0040 24010540 		.word	1074069796
 1550              		.cfi_endproc
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 49


 1551              	.LFE31:
 1552              		.size	QuadDec_1_SetStopMode, .-QuadDec_1_SetStopMode
 1553              		.section	.text.QuadDec_1_SetCountMode,"ax",%progbits
 1554              		.align	2
 1555              		.global	QuadDec_1_SetCountMode
 1556              		.code	16
 1557              		.thumb_func
 1558              		.type	QuadDec_1_SetCountMode, %function
 1559              	QuadDec_1_SetCountMode:
 1560              	.LFB32:
1187:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1188:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1189:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1190:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetCountMode
1191:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1192:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1193:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1194:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1195:.\Generated_Source\PSoC4/QuadDec_1.c **** *  input.
1196:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1197:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1198:.\Generated_Source\PSoC4/QuadDec_1.c **** *  triggerMode: Enumerated trigger mode value
1199:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1200:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_LEVEL     - Level
1201:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_RISING    - Rising edge
1202:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_FALLING   - Falling edge
1203:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_TRIG_BOTH      - Both rising and falling edge
1204:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1205:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1206:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1207:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1208:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetCountMode(uint32 triggerMode)
1210:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1561              		.loc 1 1210 0
 1562              		.cfi_startproc
 1563 0000 90B5     		push	{r4, r7, lr}
 1564              		.cfi_def_cfa_offset 12
 1565              		.cfi_offset 4, -12
 1566              		.cfi_offset 7, -8
 1567              		.cfi_offset 14, -4
 1568 0002 85B0     		sub	sp, sp, #20
 1569              		.cfi_def_cfa_offset 32
 1570 0004 00AF     		add	r7, sp, #0
 1571              		.cfi_def_cfa_register 7
 1572 0006 7860     		str	r0, [r7, #4]
1211:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
1212:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1213:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1573              		.loc 1 1213 0
 1574 0008 3C1C     		mov	r4, r7
 1575 000a 0F34     		add	r4, r4, #15
 1576 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1577 0010 031C     		mov	r3, r0
 1578 0012 2370     		strb	r3, [r4]
1214:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1215:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_TRIG_CONTROL1_REG &= (uint32)~QuadDec_1_COUNT_MASK;
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 50


 1579              		.loc 1 1215 0
 1580 0014 0A4B     		ldr	r3, .L106
 1581 0016 0A4A     		ldr	r2, .L106
 1582 0018 1268     		ldr	r2, [r2]
 1583 001a 0C21     		mov	r1, #12
 1584 001c 8A43     		bic	r2, r1
 1585 001e 1A60     		str	r2, [r3]
1216:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << QuadDec_1_COUNT_SHIFT));
 1586              		.loc 1 1216 0
 1587 0020 074B     		ldr	r3, .L106
 1588 0022 074A     		ldr	r2, .L106
 1589 0024 1168     		ldr	r1, [r2]
 1590 0026 7A68     		ldr	r2, [r7, #4]
 1591 0028 9200     		lsl	r2, r2, #2
 1592 002a 0A43     		orr	r2, r1
 1593 002c 1A60     		str	r2, [r3]
1217:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1218:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 1594              		.loc 1 1218 0
 1595 002e 3B1C     		mov	r3, r7
 1596 0030 0F33     		add	r3, r3, #15
 1597 0032 1B78     		ldrb	r3, [r3]
 1598 0034 181C     		mov	r0, r3
 1599 0036 FFF7FEFF 		bl	CyExitCriticalSection
1219:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1600              		.loc 1 1219 0
 1601 003a BD46     		mov	sp, r7
 1602 003c 05B0     		add	sp, sp, #20
 1603              		@ sp needed
 1604 003e 90BD     		pop	{r4, r7, pc}
 1605              	.L107:
 1606              		.align	2
 1607              	.L106:
 1608 0040 24010540 		.word	1074069796
 1609              		.cfi_endproc
 1610              	.LFE32:
 1611              		.size	QuadDec_1_SetCountMode, .-QuadDec_1_SetCountMode
 1612              		.section	.text.QuadDec_1_TriggerCommand,"ax",%progbits
 1613              		.align	2
 1614              		.global	QuadDec_1_TriggerCommand
 1615              		.code	16
 1616              		.thumb_func
 1617              		.type	QuadDec_1_TriggerCommand, %function
 1618              	QuadDec_1_TriggerCommand:
 1619              	.LFB33:
1220:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1221:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1222:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_TriggerCommand
1224:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1225:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1226:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1227:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1228:.\Generated_Source\PSoC4/QuadDec_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1229:.\Generated_Source\PSoC4/QuadDec_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1230:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1231:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 51


1232:.\Generated_Source\PSoC4/QuadDec_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1233:.\Generated_Source\PSoC4/QuadDec_1.c **** *        command should apply to.  This function from one instance can be used
1234:.\Generated_Source\PSoC4/QuadDec_1.c **** *        to apply the command to any of the instances in the design.
1235:.\Generated_Source\PSoC4/QuadDec_1.c **** *        The mask value for a specific instance is available with the MASK
1236:.\Generated_Source\PSoC4/QuadDec_1.c **** *        define.
1237:.\Generated_Source\PSoC4/QuadDec_1.c **** *  command: Enumerated command values. Capture command only applicable for
1238:.\Generated_Source\PSoC4/QuadDec_1.c **** *           Timer/Counter with Capture and PWM modes.
1239:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1240:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_CMD_CAPTURE    - Trigger Capture command
1241:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_CMD_RELOAD     - Trigger Reload command
1242:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_CMD_STOP       - Trigger Stop command
1243:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_CMD_START      - Trigger Start command
1244:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1245:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1246:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1247:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1248:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_TriggerCommand(uint32 mask, uint32 command)
1250:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1620              		.loc 1 1250 0
 1621              		.cfi_startproc
 1622 0000 90B5     		push	{r4, r7, lr}
 1623              		.cfi_def_cfa_offset 12
 1624              		.cfi_offset 4, -12
 1625              		.cfi_offset 7, -8
 1626              		.cfi_offset 14, -4
 1627 0002 85B0     		sub	sp, sp, #20
 1628              		.cfi_def_cfa_offset 32
 1629 0004 00AF     		add	r7, sp, #0
 1630              		.cfi_def_cfa_register 7
 1631 0006 7860     		str	r0, [r7, #4]
 1632 0008 3960     		str	r1, [r7]
1251:.\Generated_Source\PSoC4/QuadDec_1.c ****     uint8 enableInterrupts;
1252:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1253:.\Generated_Source\PSoC4/QuadDec_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1633              		.loc 1 1253 0
 1634 000a 3C1C     		mov	r4, r7
 1635 000c 0F34     		add	r4, r4, #15
 1636 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1637 0012 031C     		mov	r3, r0
 1638 0014 2370     		strb	r3, [r4]
1254:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1255:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_COMMAND_REG = ((uint32)(mask << command));
 1639              		.loc 1 1255 0
 1640 0016 084B     		ldr	r3, .L109
 1641 0018 3A68     		ldr	r2, [r7]
 1642 001a 7968     		ldr	r1, [r7, #4]
 1643 001c 081C     		mov	r0, r1
 1644 001e 9040     		lsl	r0, r0, r2
 1645 0020 021C     		mov	r2, r0
 1646 0022 1A60     		str	r2, [r3]
1256:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1257:.\Generated_Source\PSoC4/QuadDec_1.c ****     CyExitCriticalSection(enableInterrupts);
 1647              		.loc 1 1257 0
 1648 0024 3B1C     		mov	r3, r7
 1649 0026 0F33     		add	r3, r3, #15
 1650 0028 1B78     		ldrb	r3, [r3]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 52


 1651 002a 181C     		mov	r0, r3
 1652 002c FFF7FEFF 		bl	CyExitCriticalSection
1258:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1653              		.loc 1 1258 0
 1654 0030 BD46     		mov	sp, r7
 1655 0032 05B0     		add	sp, sp, #20
 1656              		@ sp needed
 1657 0034 90BD     		pop	{r4, r7, pc}
 1658              	.L110:
 1659 0036 C046     		.align	2
 1660              	.L109:
 1661 0038 08000540 		.word	1074069512
 1662              		.cfi_endproc
 1663              	.LFE33:
 1664              		.size	QuadDec_1_TriggerCommand, .-QuadDec_1_TriggerCommand
 1665              		.section	.text.QuadDec_1_ReadStatus,"ax",%progbits
 1666              		.align	2
 1667              		.global	QuadDec_1_ReadStatus
 1668              		.code	16
 1669              		.thumb_func
 1670              		.type	QuadDec_1_ReadStatus, %function
 1671              	QuadDec_1_ReadStatus:
 1672              	.LFB34:
1259:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1260:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1261:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_ReadStatus
1263:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1265:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1266:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Reads the status of the QuadDec_1.
1267:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1268:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1269:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1270:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1271:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1272:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Status
1273:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1274:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_STATUS_DOWN    - Set if counting down
1275:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_STATUS_RUNNING - Set if counter is running
1276:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1277:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/QuadDec_1.c **** uint32 QuadDec_1_ReadStatus(void)
1279:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1673              		.loc 1 1279 0
 1674              		.cfi_startproc
 1675 0000 80B5     		push	{r7, lr}
 1676              		.cfi_def_cfa_offset 8
 1677              		.cfi_offset 7, -8
 1678              		.cfi_offset 14, -4
 1679 0002 00AF     		add	r7, sp, #0
 1680              		.cfi_def_cfa_register 7
1280:.\Generated_Source\PSoC4/QuadDec_1.c ****     return ((QuadDec_1_STATUS_REG >> QuadDec_1_RUNNING_STATUS_SHIFT) |
 1681              		.loc 1 1280 0
 1682 0004 054B     		ldr	r3, .L113
 1683 0006 1B68     		ldr	r3, [r3]
 1684 0008 9A0F     		lsr	r2, r3, #30
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 53


1281:.\Generated_Source\PSoC4/QuadDec_1.c ****             (QuadDec_1_STATUS_REG & QuadDec_1_STATUS_DOWN));
 1685              		.loc 1 1281 0
 1686 000a 044B     		ldr	r3, .L113
 1687 000c 1968     		ldr	r1, [r3]
 1688 000e 0123     		mov	r3, #1
 1689 0010 0B40     		and	r3, r1
1280:.\Generated_Source\PSoC4/QuadDec_1.c ****     return ((QuadDec_1_STATUS_REG >> QuadDec_1_RUNNING_STATUS_SHIFT) |
 1690              		.loc 1 1280 0
 1691 0012 1343     		orr	r3, r2
1282:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1692              		.loc 1 1282 0
 1693 0014 181C     		mov	r0, r3
 1694 0016 BD46     		mov	sp, r7
 1695              		@ sp needed
 1696 0018 80BD     		pop	{r7, pc}
 1697              	.L114:
 1698 001a C046     		.align	2
 1699              	.L113:
 1700 001c 04010540 		.word	1074069764
 1701              		.cfi_endproc
 1702              	.LFE34:
 1703              		.size	QuadDec_1_ReadStatus, .-QuadDec_1_ReadStatus
 1704              		.section	.text.QuadDec_1_SetInterruptMode,"ax",%progbits
 1705              		.align	2
 1706              		.global	QuadDec_1_SetInterruptMode
 1707              		.code	16
 1708              		.thumb_func
 1709              		.type	QuadDec_1_SetInterruptMode, %function
 1710              	QuadDec_1_SetInterruptMode:
 1711              	.LFB35:
1283:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1284:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1285:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1286:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetInterruptMode
1287:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1288:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1289:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1290:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Sets the interrupt mask to control which interrupt
1291:.\Generated_Source\PSoC4/QuadDec_1.c **** *  requests generate the interrupt signal.
1292:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1293:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1294:.\Generated_Source\PSoC4/QuadDec_1.c **** *   interruptMask: Mask of bits to be enabled
1295:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1296:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_INTR_MASK_TC       - Terminal count mask
1297:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1298:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1299:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1300:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1301:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1302:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetInterruptMode(uint32 interruptMask)
1304:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1712              		.loc 1 1304 0
 1713              		.cfi_startproc
 1714 0000 80B5     		push	{r7, lr}
 1715              		.cfi_def_cfa_offset 8
 1716              		.cfi_offset 7, -8
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 54


 1717              		.cfi_offset 14, -4
 1718 0002 82B0     		sub	sp, sp, #8
 1719              		.cfi_def_cfa_offset 16
 1720 0004 00AF     		add	r7, sp, #0
 1721              		.cfi_def_cfa_register 7
 1722 0006 7860     		str	r0, [r7, #4]
1305:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_INTERRUPT_MASK_REG =  interruptMask;
 1723              		.loc 1 1305 0
 1724 0008 024B     		ldr	r3, .L116
 1725 000a 7A68     		ldr	r2, [r7, #4]
 1726 000c 1A60     		str	r2, [r3]
1306:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1727              		.loc 1 1306 0
 1728 000e BD46     		mov	sp, r7
 1729 0010 02B0     		add	sp, sp, #8
 1730              		@ sp needed
 1731 0012 80BD     		pop	{r7, pc}
 1732              	.L117:
 1733              		.align	2
 1734              	.L116:
 1735 0014 38010540 		.word	1074069816
 1736              		.cfi_endproc
 1737              	.LFE35:
 1738              		.size	QuadDec_1_SetInterruptMode, .-QuadDec_1_SetInterruptMode
 1739              		.section	.text.QuadDec_1_GetInterruptSourceMasked,"ax",%progbits
 1740              		.align	2
 1741              		.global	QuadDec_1_GetInterruptSourceMasked
 1742              		.code	16
 1743              		.thumb_func
 1744              		.type	QuadDec_1_GetInterruptSourceMasked, %function
 1745              	QuadDec_1_GetInterruptSourceMasked:
 1746              	.LFB36:
1307:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1308:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1309:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1310:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_GetInterruptSourceMasked
1311:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1312:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1313:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1314:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1315:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1316:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1317:.\Generated_Source\PSoC4/QuadDec_1.c **** *   None
1318:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1319:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1320:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Masked interrupt source
1321:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1322:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_INTR_MASK_TC       - Terminal count mask
1323:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1324:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1325:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1326:.\Generated_Source\PSoC4/QuadDec_1.c **** uint32 QuadDec_1_GetInterruptSourceMasked(void)
1327:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1747              		.loc 1 1327 0
 1748              		.cfi_startproc
 1749 0000 80B5     		push	{r7, lr}
 1750              		.cfi_def_cfa_offset 8
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 55


 1751              		.cfi_offset 7, -8
 1752              		.cfi_offset 14, -4
 1753 0002 00AF     		add	r7, sp, #0
 1754              		.cfi_def_cfa_register 7
1328:.\Generated_Source\PSoC4/QuadDec_1.c ****     return (QuadDec_1_INTERRUPT_MASKED_REG);
 1755              		.loc 1 1328 0
 1756 0004 024B     		ldr	r3, .L120
 1757 0006 1B68     		ldr	r3, [r3]
1329:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1758              		.loc 1 1329 0
 1759 0008 181C     		mov	r0, r3
 1760 000a BD46     		mov	sp, r7
 1761              		@ sp needed
 1762 000c 80BD     		pop	{r7, pc}
 1763              	.L121:
 1764 000e C046     		.align	2
 1765              	.L120:
 1766 0010 3C010540 		.word	1074069820
 1767              		.cfi_endproc
 1768              	.LFE36:
 1769              		.size	QuadDec_1_GetInterruptSourceMasked, .-QuadDec_1_GetInterruptSourceMasked
 1770              		.section	.text.QuadDec_1_GetInterruptSource,"ax",%progbits
 1771              		.align	2
 1772              		.global	QuadDec_1_GetInterruptSource
 1773              		.code	16
 1774              		.thumb_func
 1775              		.type	QuadDec_1_GetInterruptSource, %function
 1776              	QuadDec_1_GetInterruptSource:
 1777              	.LFB37:
1330:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1331:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1332:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1333:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_GetInterruptSource
1334:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1335:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1336:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1337:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Gets the interrupt requests (without masking).
1338:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1339:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1340:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1341:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1342:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1343:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Interrupt request value
1344:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1345:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_INTR_MASK_TC       - Terminal count mask
1346:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1347:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1348:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1349:.\Generated_Source\PSoC4/QuadDec_1.c **** uint32 QuadDec_1_GetInterruptSource(void)
1350:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1778              		.loc 1 1350 0
 1779              		.cfi_startproc
 1780 0000 80B5     		push	{r7, lr}
 1781              		.cfi_def_cfa_offset 8
 1782              		.cfi_offset 7, -8
 1783              		.cfi_offset 14, -4
 1784 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 56


 1785              		.cfi_def_cfa_register 7
1351:.\Generated_Source\PSoC4/QuadDec_1.c ****     return (QuadDec_1_INTERRUPT_REQ_REG);
 1786              		.loc 1 1351 0
 1787 0004 024B     		ldr	r3, .L124
 1788 0006 1B68     		ldr	r3, [r3]
1352:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1789              		.loc 1 1352 0
 1790 0008 181C     		mov	r0, r3
 1791 000a BD46     		mov	sp, r7
 1792              		@ sp needed
 1793 000c 80BD     		pop	{r7, pc}
 1794              	.L125:
 1795 000e C046     		.align	2
 1796              	.L124:
 1797 0010 30010540 		.word	1074069808
 1798              		.cfi_endproc
 1799              	.LFE37:
 1800              		.size	QuadDec_1_GetInterruptSource, .-QuadDec_1_GetInterruptSource
 1801              		.section	.text.QuadDec_1_ClearInterrupt,"ax",%progbits
 1802              		.align	2
 1803              		.global	QuadDec_1_ClearInterrupt
 1804              		.code	16
 1805              		.thumb_func
 1806              		.type	QuadDec_1_ClearInterrupt, %function
 1807              	QuadDec_1_ClearInterrupt:
 1808              	.LFB38:
1353:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1354:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1355:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_ClearInterrupt
1357:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1358:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1359:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1360:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Clears the interrupt request.
1361:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1362:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1363:.\Generated_Source\PSoC4/QuadDec_1.c **** *   interruptMask: Mask of interrupts to clear
1364:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1365:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_INTR_MASK_TC       - Terminal count mask
1366:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1367:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1368:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1369:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1370:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1371:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1372:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_ClearInterrupt(uint32 interruptMask)
1373:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1809              		.loc 1 1373 0
 1810              		.cfi_startproc
 1811 0000 80B5     		push	{r7, lr}
 1812              		.cfi_def_cfa_offset 8
 1813              		.cfi_offset 7, -8
 1814              		.cfi_offset 14, -4
 1815 0002 82B0     		sub	sp, sp, #8
 1816              		.cfi_def_cfa_offset 16
 1817 0004 00AF     		add	r7, sp, #0
 1818              		.cfi_def_cfa_register 7
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 57


 1819 0006 7860     		str	r0, [r7, #4]
1374:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_INTERRUPT_REQ_REG = interruptMask;
 1820              		.loc 1 1374 0
 1821 0008 024B     		ldr	r3, .L127
 1822 000a 7A68     		ldr	r2, [r7, #4]
 1823 000c 1A60     		str	r2, [r3]
1375:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1824              		.loc 1 1375 0
 1825 000e BD46     		mov	sp, r7
 1826 0010 02B0     		add	sp, sp, #8
 1827              		@ sp needed
 1828 0012 80BD     		pop	{r7, pc}
 1829              	.L128:
 1830              		.align	2
 1831              	.L127:
 1832 0014 30010540 		.word	1074069808
 1833              		.cfi_endproc
 1834              	.LFE38:
 1835              		.size	QuadDec_1_ClearInterrupt, .-QuadDec_1_ClearInterrupt
 1836              		.section	.text.QuadDec_1_SetInterrupt,"ax",%progbits
 1837              		.align	2
 1838              		.global	QuadDec_1_SetInterrupt
 1839              		.code	16
 1840              		.thumb_func
 1841              		.type	QuadDec_1_SetInterrupt, %function
 1842              	QuadDec_1_SetInterrupt:
 1843              	.LFB39:
1376:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1377:.\Generated_Source\PSoC4/QuadDec_1.c **** 
1378:.\Generated_Source\PSoC4/QuadDec_1.c **** /*******************************************************************************
1379:.\Generated_Source\PSoC4/QuadDec_1.c **** * Function Name: QuadDec_1_SetInterrupt
1380:.\Generated_Source\PSoC4/QuadDec_1.c **** ********************************************************************************
1381:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1382:.\Generated_Source\PSoC4/QuadDec_1.c **** * Summary:
1383:.\Generated_Source\PSoC4/QuadDec_1.c **** *  Sets a software interrupt request.
1384:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1385:.\Generated_Source\PSoC4/QuadDec_1.c **** * Parameters:
1386:.\Generated_Source\PSoC4/QuadDec_1.c **** *   interruptMask: Mask of interrupts to set
1387:.\Generated_Source\PSoC4/QuadDec_1.c **** *   Values:
1388:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_INTR_MASK_TC       - Terminal count mask
1389:.\Generated_Source\PSoC4/QuadDec_1.c **** *     - QuadDec_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1390:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1391:.\Generated_Source\PSoC4/QuadDec_1.c **** * Return:
1392:.\Generated_Source\PSoC4/QuadDec_1.c **** *  None
1393:.\Generated_Source\PSoC4/QuadDec_1.c **** *
1394:.\Generated_Source\PSoC4/QuadDec_1.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC4/QuadDec_1.c **** void QuadDec_1_SetInterrupt(uint32 interruptMask)
1396:.\Generated_Source\PSoC4/QuadDec_1.c **** {
 1844              		.loc 1 1396 0
 1845              		.cfi_startproc
 1846 0000 80B5     		push	{r7, lr}
 1847              		.cfi_def_cfa_offset 8
 1848              		.cfi_offset 7, -8
 1849              		.cfi_offset 14, -4
 1850 0002 82B0     		sub	sp, sp, #8
 1851              		.cfi_def_cfa_offset 16
 1852 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 58


 1853              		.cfi_def_cfa_register 7
 1854 0006 7860     		str	r0, [r7, #4]
1397:.\Generated_Source\PSoC4/QuadDec_1.c ****     QuadDec_1_INTERRUPT_SET_REG = interruptMask;
 1855              		.loc 1 1397 0
 1856 0008 024B     		ldr	r3, .L130
 1857 000a 7A68     		ldr	r2, [r7, #4]
 1858 000c 1A60     		str	r2, [r3]
1398:.\Generated_Source\PSoC4/QuadDec_1.c **** }
 1859              		.loc 1 1398 0
 1860 000e BD46     		mov	sp, r7
 1861 0010 02B0     		add	sp, sp, #8
 1862              		@ sp needed
 1863 0012 80BD     		pop	{r7, pc}
 1864              	.L131:
 1865              		.align	2
 1866              	.L130:
 1867 0014 34010540 		.word	1074069812
 1868              		.cfi_endproc
 1869              	.LFE39:
 1870              		.size	QuadDec_1_SetInterrupt, .-QuadDec_1_SetInterrupt
 1871              		.text
 1872              	.Letext0:
 1873              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1874              		.section	.debug_info,"",%progbits
 1875              	.Ldebug_info0:
 1876 0000 ED060000 		.4byte	0x6ed
 1877 0004 0400     		.2byte	0x4
 1878 0006 00000000 		.4byte	.Ldebug_abbrev0
 1879 000a 04       		.byte	0x4
 1880 000b 01       		.uleb128 0x1
 1881 000c 2F030000 		.4byte	.LASF76
 1882 0010 01       		.byte	0x1
 1883 0011 B1050000 		.4byte	.LASF77
 1884 0015 50020000 		.4byte	.LASF78
 1885 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1886 001d 00000000 		.4byte	0
 1887 0021 00000000 		.4byte	.Ldebug_line0
 1888 0025 02       		.uleb128 0x2
 1889 0026 01       		.byte	0x1
 1890 0027 06       		.byte	0x6
 1891 0028 CF000000 		.4byte	.LASF0
 1892 002c 02       		.uleb128 0x2
 1893 002d 01       		.byte	0x1
 1894 002e 08       		.byte	0x8
 1895 002f C6040000 		.4byte	.LASF1
 1896 0033 02       		.uleb128 0x2
 1897 0034 02       		.byte	0x2
 1898 0035 05       		.byte	0x5
 1899 0036 E5040000 		.4byte	.LASF2
 1900 003a 02       		.uleb128 0x2
 1901 003b 02       		.byte	0x2
 1902 003c 07       		.byte	0x7
 1903 003d 26020000 		.4byte	.LASF3
 1904 0041 02       		.uleb128 0x2
 1905 0042 04       		.byte	0x4
 1906 0043 05       		.byte	0x5
 1907 0044 F0000000 		.4byte	.LASF4
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 59


 1908 0048 02       		.uleb128 0x2
 1909 0049 04       		.byte	0x4
 1910 004a 07       		.byte	0x7
 1911 004b C3010000 		.4byte	.LASF5
 1912 004f 02       		.uleb128 0x2
 1913 0050 08       		.byte	0x8
 1914 0051 05       		.byte	0x5
 1915 0052 C1000000 		.4byte	.LASF6
 1916 0056 02       		.uleb128 0x2
 1917 0057 08       		.byte	0x8
 1918 0058 07       		.byte	0x7
 1919 0059 65000000 		.4byte	.LASF7
 1920 005d 03       		.uleb128 0x3
 1921 005e 04       		.byte	0x4
 1922 005f 05       		.byte	0x5
 1923 0060 696E7400 		.ascii	"int\000"
 1924 0064 02       		.uleb128 0x2
 1925 0065 04       		.byte	0x4
 1926 0066 07       		.byte	0x7
 1927 0067 95010000 		.4byte	.LASF8
 1928 006b 04       		.uleb128 0x4
 1929 006c 28010000 		.4byte	.LASF9
 1930 0070 02       		.byte	0x2
 1931 0071 5B       		.byte	0x5b
 1932 0072 2C000000 		.4byte	0x2c
 1933 0076 04       		.uleb128 0x4
 1934 0077 47010000 		.4byte	.LASF10
 1935 007b 02       		.byte	0x2
 1936 007c 5D       		.byte	0x5d
 1937 007d 48000000 		.4byte	0x48
 1938 0081 02       		.uleb128 0x2
 1939 0082 04       		.byte	0x4
 1940 0083 04       		.byte	0x4
 1941 0084 7B040000 		.4byte	.LASF11
 1942 0088 02       		.uleb128 0x2
 1943 0089 08       		.byte	0x8
 1944 008a 04       		.byte	0x4
 1945 008b 40010000 		.4byte	.LASF12
 1946 008f 02       		.uleb128 0x2
 1947 0090 01       		.byte	0x1
 1948 0091 08       		.byte	0x8
 1949 0092 41050000 		.4byte	.LASF13
 1950 0096 04       		.uleb128 0x4
 1951 0097 F8030000 		.4byte	.LASF14
 1952 009b 02       		.byte	0x2
 1953 009c F2       		.byte	0xf2
 1954 009d A1000000 		.4byte	0xa1
 1955 00a1 05       		.uleb128 0x5
 1956 00a2 76000000 		.4byte	0x76
 1957 00a6 02       		.uleb128 0x2
 1958 00a7 04       		.byte	0x4
 1959 00a8 07       		.byte	0x7
 1960 00a9 15040000 		.4byte	.LASF15
 1961 00ad 06       		.uleb128 0x6
 1962 00ae 4F000000 		.4byte	.LASF16
 1963 00b2 01       		.byte	0x1
 1964 00b3 27       		.byte	0x27
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 60


 1965 00b4 00000000 		.4byte	.LFB0
 1966 00b8 28000000 		.4byte	.LFE0-.LFB0
 1967 00bc 01       		.uleb128 0x1
 1968 00bd 9C       		.byte	0x9c
 1969 00be 07       		.uleb128 0x7
 1970 00bf FA050000 		.4byte	.LASF18
 1971 00c3 01       		.byte	0x1
 1972 00c4 C8       		.byte	0xc8
 1973 00c5 00000000 		.4byte	.LFB1
 1974 00c9 30000000 		.4byte	.LFE1-.LFB1
 1975 00cd 01       		.uleb128 0x1
 1976 00ce 9C       		.byte	0x9c
 1977 00cf E2000000 		.4byte	0xe2
 1978 00d3 08       		.uleb128 0x8
 1979 00d4 26060000 		.4byte	.LASF20
 1980 00d8 01       		.byte	0x1
 1981 00d9 CA       		.byte	0xca
 1982 00da 6B000000 		.4byte	0x6b
 1983 00de 02       		.uleb128 0x2
 1984 00df 91       		.byte	0x91
 1985 00e0 6F       		.sleb128 -17
 1986 00e1 00       		.byte	0
 1987 00e2 06       		.uleb128 0x6
 1988 00e3 4E060000 		.4byte	.LASF17
 1989 00e7 01       		.byte	0x1
 1990 00e8 F7       		.byte	0xf7
 1991 00e9 00000000 		.4byte	.LFB2
 1992 00ed 24000000 		.4byte	.LFE2-.LFB2
 1993 00f1 01       		.uleb128 0x1
 1994 00f2 9C       		.byte	0x9c
 1995 00f3 09       		.uleb128 0x9
 1996 00f4 EF040000 		.4byte	.LASF19
 1997 00f8 01       		.byte	0x1
 1998 00f9 1101     		.2byte	0x111
 1999 00fb 00000000 		.4byte	.LFB3
 2000 00ff 30000000 		.4byte	.LFE3-.LFB3
 2001 0103 01       		.uleb128 0x1
 2002 0104 9C       		.byte	0x9c
 2003 0105 19010000 		.4byte	0x119
 2004 0109 0A       		.uleb128 0xa
 2005 010a 26060000 		.4byte	.LASF20
 2006 010e 01       		.byte	0x1
 2007 010f 1301     		.2byte	0x113
 2008 0111 6B000000 		.4byte	0x6b
 2009 0115 02       		.uleb128 0x2
 2010 0116 91       		.byte	0x91
 2011 0117 6F       		.sleb128 -17
 2012 0118 00       		.byte	0
 2013 0119 09       		.uleb128 0x9
 2014 011a 2E010000 		.4byte	.LASF21
 2015 011e 01       		.byte	0x1
 2016 011f 3601     		.2byte	0x136
 2017 0121 00000000 		.4byte	.LFB4
 2018 0125 48000000 		.4byte	.LFE4-.LFB4
 2019 0129 01       		.uleb128 0x1
 2020 012a 9C       		.byte	0x9c
 2021 012b 4E010000 		.4byte	0x14e
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 61


 2022 012f 0B       		.uleb128 0xb
 2023 0130 46050000 		.4byte	.LASF23
 2024 0134 01       		.byte	0x1
 2025 0135 3601     		.2byte	0x136
 2026 0137 76000000 		.4byte	0x76
 2027 013b 02       		.uleb128 0x2
 2028 013c 91       		.byte	0x91
 2029 013d 64       		.sleb128 -28
 2030 013e 0A       		.uleb128 0xa
 2031 013f 26060000 		.4byte	.LASF20
 2032 0143 01       		.byte	0x1
 2033 0144 3801     		.2byte	0x138
 2034 0146 6B000000 		.4byte	0x6b
 2035 014a 02       		.uleb128 0x2
 2036 014b 91       		.byte	0x91
 2037 014c 6F       		.sleb128 -17
 2038 014d 00       		.byte	0
 2039 014e 09       		.uleb128 0x9
 2040 014f 2D050000 		.4byte	.LASF22
 2041 0153 01       		.byte	0x1
 2042 0154 5701     		.2byte	0x157
 2043 0156 00000000 		.4byte	.LFB5
 2044 015a 48000000 		.4byte	.LFE5-.LFB5
 2045 015e 01       		.uleb128 0x1
 2046 015f 9C       		.byte	0x9c
 2047 0160 83010000 		.4byte	0x183
 2048 0164 0B       		.uleb128 0xb
 2049 0165 97000000 		.4byte	.LASF24
 2050 0169 01       		.byte	0x1
 2051 016a 5701     		.2byte	0x157
 2052 016c 76000000 		.4byte	0x76
 2053 0170 02       		.uleb128 0x2
 2054 0171 91       		.byte	0x91
 2055 0172 64       		.sleb128 -28
 2056 0173 0A       		.uleb128 0xa
 2057 0174 26060000 		.4byte	.LASF20
 2058 0178 01       		.byte	0x1
 2059 0179 5901     		.2byte	0x159
 2060 017b 6B000000 		.4byte	0x6b
 2061 017f 02       		.uleb128 0x2
 2062 0180 91       		.byte	0x91
 2063 0181 6F       		.sleb128 -17
 2064 0182 00       		.byte	0
 2065 0183 09       		.uleb128 0x9
 2066 0184 37060000 		.4byte	.LASF25
 2067 0188 01       		.byte	0x1
 2068 0189 7C01     		.2byte	0x17c
 2069 018b 00000000 		.4byte	.LFB6
 2070 018f 48000000 		.4byte	.LFE6-.LFB6
 2071 0193 01       		.uleb128 0x1
 2072 0194 9C       		.byte	0x9c
 2073 0195 B8010000 		.4byte	0x1b8
 2074 0199 0B       		.uleb128 0xb
 2075 019a 8F040000 		.4byte	.LASF26
 2076 019e 01       		.byte	0x1
 2077 019f 7C01     		.2byte	0x17c
 2078 01a1 76000000 		.4byte	0x76
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 62


 2079 01a5 02       		.uleb128 0x2
 2080 01a6 91       		.byte	0x91
 2081 01a7 64       		.sleb128 -28
 2082 01a8 0A       		.uleb128 0xa
 2083 01a9 26060000 		.4byte	.LASF20
 2084 01ad 01       		.byte	0x1
 2085 01ae 7E01     		.2byte	0x17e
 2086 01b0 6B000000 		.4byte	0x6b
 2087 01b4 02       		.uleb128 0x2
 2088 01b5 91       		.byte	0x91
 2089 01b6 6F       		.sleb128 -17
 2090 01b7 00       		.byte	0
 2091 01b8 09       		.uleb128 0x9
 2092 01b9 A8020000 		.4byte	.LASF27
 2093 01bd 01       		.byte	0x1
 2094 01be 9C01     		.2byte	0x19c
 2095 01c0 00000000 		.4byte	.LFB7
 2096 01c4 4C000000 		.4byte	.LFE7-.LFB7
 2097 01c8 01       		.uleb128 0x1
 2098 01c9 9C       		.byte	0x9c
 2099 01ca ED010000 		.4byte	0x1ed
 2100 01ce 0B       		.uleb128 0xb
 2101 01cf BD020000 		.4byte	.LASF28
 2102 01d3 01       		.byte	0x1
 2103 01d4 9C01     		.2byte	0x19c
 2104 01d6 76000000 		.4byte	0x76
 2105 01da 02       		.uleb128 0x2
 2106 01db 91       		.byte	0x91
 2107 01dc 64       		.sleb128 -28
 2108 01dd 0A       		.uleb128 0xa
 2109 01de 26060000 		.4byte	.LASF20
 2110 01e2 01       		.byte	0x1
 2111 01e3 9E01     		.2byte	0x19e
 2112 01e5 6B000000 		.4byte	0x6b
 2113 01e9 02       		.uleb128 0x2
 2114 01ea 91       		.byte	0x91
 2115 01eb 6F       		.sleb128 -17
 2116 01ec 00       		.byte	0
 2117 01ed 0C       		.uleb128 0xc
 2118 01ee 35040000 		.4byte	.LASF29
 2119 01f2 01       		.byte	0x1
 2120 01f3 D201     		.2byte	0x1d2
 2121 01f5 00000000 		.4byte	.LFB8
 2122 01f9 1C000000 		.4byte	.LFE8-.LFB8
 2123 01fd 01       		.uleb128 0x1
 2124 01fe 9C       		.byte	0x9c
 2125 01ff 13020000 		.4byte	0x213
 2126 0203 0B       		.uleb128 0xb
 2127 0204 D5010000 		.4byte	.LASF30
 2128 0208 01       		.byte	0x1
 2129 0209 D201     		.2byte	0x1d2
 2130 020b 76000000 		.4byte	0x76
 2131 020f 02       		.uleb128 0x2
 2132 0210 91       		.byte	0x91
 2133 0211 74       		.sleb128 -12
 2134 0212 00       		.byte	0
 2135 0213 09       		.uleb128 0x9
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 63


 2136 0214 F8010000 		.4byte	.LASF31
 2137 0218 01       		.byte	0x1
 2138 0219 F601     		.2byte	0x1f6
 2139 021b 00000000 		.4byte	.LFB9
 2140 021f 48000000 		.4byte	.LFE9-.LFB9
 2141 0223 01       		.uleb128 0x1
 2142 0224 9C       		.byte	0x9c
 2143 0225 48020000 		.4byte	0x248
 2144 0229 0B       		.uleb128 0xb
 2145 022a 1E040000 		.4byte	.LASF32
 2146 022e 01       		.byte	0x1
 2147 022f F601     		.2byte	0x1f6
 2148 0231 76000000 		.4byte	0x76
 2149 0235 02       		.uleb128 0x2
 2150 0236 91       		.byte	0x91
 2151 0237 64       		.sleb128 -28
 2152 0238 0A       		.uleb128 0xa
 2153 0239 26060000 		.4byte	.LASF20
 2154 023d 01       		.byte	0x1
 2155 023e F801     		.2byte	0x1f8
 2156 0240 6B000000 		.4byte	0x6b
 2157 0244 02       		.uleb128 0x2
 2158 0245 91       		.byte	0x91
 2159 0246 6F       		.sleb128 -17
 2160 0247 00       		.byte	0
 2161 0248 09       		.uleb128 0x9
 2162 0249 0B060000 		.4byte	.LASF33
 2163 024d 01       		.byte	0x1
 2164 024e 1802     		.2byte	0x218
 2165 0250 00000000 		.4byte	.LFB10
 2166 0254 48000000 		.4byte	.LFE10-.LFB10
 2167 0258 01       		.uleb128 0x1
 2168 0259 9C       		.byte	0x9c
 2169 025a 7D020000 		.4byte	0x27d
 2170 025e 0B       		.uleb128 0xb
 2171 025f D4040000 		.4byte	.LASF34
 2172 0263 01       		.byte	0x1
 2173 0264 1802     		.2byte	0x218
 2174 0266 76000000 		.4byte	0x76
 2175 026a 02       		.uleb128 0x2
 2176 026b 91       		.byte	0x91
 2177 026c 64       		.sleb128 -28
 2178 026d 0A       		.uleb128 0xa
 2179 026e 26060000 		.4byte	.LASF20
 2180 0272 01       		.byte	0x1
 2181 0273 1A02     		.2byte	0x21a
 2182 0275 6B000000 		.4byte	0x6b
 2183 0279 02       		.uleb128 0x2
 2184 027a 91       		.byte	0x91
 2185 027b 6F       		.sleb128 -17
 2186 027c 00       		.byte	0
 2187 027d 09       		.uleb128 0x9
 2188 027e 0F010000 		.4byte	.LASF35
 2189 0282 01       		.byte	0x1
 2190 0283 3902     		.2byte	0x239
 2191 0285 00000000 		.4byte	.LFB11
 2192 0289 4C000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 64


 2193 028d 01       		.uleb128 0x1
 2194 028e 9C       		.byte	0x9c
 2195 028f B2020000 		.4byte	0x2b2
 2196 0293 0B       		.uleb128 0xb
 2197 0294 76010000 		.4byte	.LASF36
 2198 0298 01       		.byte	0x1
 2199 0299 3902     		.2byte	0x239
 2200 029b 76000000 		.4byte	0x76
 2201 029f 02       		.uleb128 0x2
 2202 02a0 91       		.byte	0x91
 2203 02a1 64       		.sleb128 -28
 2204 02a2 0A       		.uleb128 0xa
 2205 02a3 26060000 		.4byte	.LASF20
 2206 02a7 01       		.byte	0x1
 2207 02a8 3B02     		.2byte	0x23b
 2208 02aa 6B000000 		.4byte	0x6b
 2209 02ae 02       		.uleb128 0x2
 2210 02af 91       		.byte	0x91
 2211 02b0 6F       		.sleb128 -17
 2212 02b1 00       		.byte	0
 2213 02b2 09       		.uleb128 0x9
 2214 02b3 06000000 		.4byte	.LASF37
 2215 02b7 01       		.byte	0x1
 2216 02b8 5A02     		.2byte	0x25a
 2217 02ba 00000000 		.4byte	.LFB12
 2218 02be 48000000 		.4byte	.LFE12-.LFB12
 2219 02c2 01       		.uleb128 0x1
 2220 02c3 9C       		.byte	0x9c
 2221 02c4 E7020000 		.4byte	0x2e7
 2222 02c8 0B       		.uleb128 0xb
 2223 02c9 71010000 		.4byte	.LASF38
 2224 02cd 01       		.byte	0x1
 2225 02ce 5A02     		.2byte	0x25a
 2226 02d0 76000000 		.4byte	0x76
 2227 02d4 02       		.uleb128 0x2
 2228 02d5 91       		.byte	0x91
 2229 02d6 64       		.sleb128 -28
 2230 02d7 0A       		.uleb128 0xa
 2231 02d8 26060000 		.4byte	.LASF20
 2232 02dc 01       		.byte	0x1
 2233 02dd 5C02     		.2byte	0x25c
 2234 02df 6B000000 		.4byte	0x6b
 2235 02e3 02       		.uleb128 0x2
 2236 02e4 91       		.byte	0x91
 2237 02e5 6F       		.sleb128 -17
 2238 02e6 00       		.byte	0
 2239 02e7 0C       		.uleb128 0xc
 2240 02e8 AF040000 		.4byte	.LASF39
 2241 02ec 01       		.byte	0x1
 2242 02ed 7802     		.2byte	0x278
 2243 02ef 00000000 		.4byte	.LFB13
 2244 02f3 1C000000 		.4byte	.LFE13-.LFB13
 2245 02f7 01       		.uleb128 0x1
 2246 02f8 9C       		.byte	0x9c
 2247 02f9 0D030000 		.4byte	0x30d
 2248 02fd 0B       		.uleb128 0xb
 2249 02fe 00000000 		.4byte	.LASF40
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 65


 2250 0302 01       		.byte	0x1
 2251 0303 7802     		.2byte	0x278
 2252 0305 76000000 		.4byte	0x76
 2253 0309 02       		.uleb128 0x2
 2254 030a 91       		.byte	0x91
 2255 030b 74       		.sleb128 -12
 2256 030c 00       		.byte	0
 2257 030d 0D       		.uleb128 0xd
 2258 030e F9000000 		.4byte	.LASF45
 2259 0312 01       		.byte	0x1
 2260 0313 8C02     		.2byte	0x28c
 2261 0315 76000000 		.4byte	0x76
 2262 0319 00000000 		.4byte	.LFB14
 2263 031d 18000000 		.4byte	.LFE14-.LFB14
 2264 0321 01       		.uleb128 0x1
 2265 0322 9C       		.byte	0x9c
 2266 0323 09       		.uleb128 0x9
 2267 0324 62040000 		.4byte	.LASF41
 2268 0328 01       		.byte	0x1
 2269 0329 A902     		.2byte	0x2a9
 2270 032b 00000000 		.4byte	.LFB15
 2271 032f 48000000 		.4byte	.LFE15-.LFB15
 2272 0333 01       		.uleb128 0x1
 2273 0334 9C       		.byte	0x9c
 2274 0335 58030000 		.4byte	0x358
 2275 0339 0B       		.uleb128 0xb
 2276 033a 74050000 		.4byte	.LASF42
 2277 033e 01       		.byte	0x1
 2278 033f A902     		.2byte	0x2a9
 2279 0341 76000000 		.4byte	0x76
 2280 0345 02       		.uleb128 0x2
 2281 0346 91       		.byte	0x91
 2282 0347 64       		.sleb128 -28
 2283 0348 0A       		.uleb128 0xa
 2284 0349 26060000 		.4byte	.LASF20
 2285 034d 01       		.byte	0x1
 2286 034e AB02     		.2byte	0x2ab
 2287 0350 6B000000 		.4byte	0x6b
 2288 0354 02       		.uleb128 0x2
 2289 0355 91       		.byte	0x91
 2290 0356 6F       		.sleb128 -17
 2291 0357 00       		.byte	0
 2292 0358 0C       		.uleb128 0xc
 2293 0359 FC020000 		.4byte	.LASF43
 2294 035d 01       		.byte	0x1
 2295 035e C602     		.2byte	0x2c6
 2296 0360 00000000 		.4byte	.LFB16
 2297 0364 1C000000 		.4byte	.LFE16-.LFB16
 2298 0368 01       		.uleb128 0x1
 2299 0369 9C       		.byte	0x9c
 2300 036a 7E030000 		.4byte	0x37e
 2301 036e 0B       		.uleb128 0xb
 2302 036f 5E000000 		.4byte	.LASF44
 2303 0373 01       		.byte	0x1
 2304 0374 C602     		.2byte	0x2c6
 2305 0376 76000000 		.4byte	0x76
 2306 037a 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 66


 2307 037b 91       		.byte	0x91
 2308 037c 74       		.sleb128 -12
 2309 037d 00       		.byte	0
 2310 037e 0D       		.uleb128 0xd
 2311 037f 11020000 		.4byte	.LASF46
 2312 0383 01       		.byte	0x1
 2313 0384 DA02     		.2byte	0x2da
 2314 0386 76000000 		.4byte	0x76
 2315 038a 00000000 		.4byte	.LFB17
 2316 038e 18000000 		.4byte	.LFE17-.LFB17
 2317 0392 01       		.uleb128 0x1
 2318 0393 9C       		.byte	0x9c
 2319 0394 09       		.uleb128 0x9
 2320 0395 D6050000 		.4byte	.LASF47
 2321 0399 01       		.byte	0x1
 2322 039a F402     		.2byte	0x2f4
 2323 039c 00000000 		.4byte	.LFB18
 2324 03a0 48000000 		.4byte	.LFE18-.LFB18
 2325 03a4 01       		.uleb128 0x1
 2326 03a5 9C       		.byte	0x9c
 2327 03a6 C9030000 		.4byte	0x3c9
 2328 03aa 0B       		.uleb128 0xb
 2329 03ab 5E060000 		.4byte	.LASF48
 2330 03af 01       		.byte	0x1
 2331 03b0 F402     		.2byte	0x2f4
 2332 03b2 76000000 		.4byte	0x76
 2333 03b6 02       		.uleb128 0x2
 2334 03b7 91       		.byte	0x91
 2335 03b8 64       		.sleb128 -28
 2336 03b9 0A       		.uleb128 0xa
 2337 03ba 26060000 		.4byte	.LASF20
 2338 03be 01       		.byte	0x1
 2339 03bf F602     		.2byte	0x2f6
 2340 03c1 6B000000 		.4byte	0x6b
 2341 03c5 02       		.uleb128 0x2
 2342 03c6 91       		.byte	0x91
 2343 03c7 6F       		.sleb128 -17
 2344 03c8 00       		.byte	0
 2345 03c9 0C       		.uleb128 0xc
 2346 03ca A2010000 		.4byte	.LASF49
 2347 03ce 01       		.byte	0x1
 2348 03cf 0F03     		.2byte	0x30f
 2349 03d1 00000000 		.4byte	.LFB19
 2350 03d5 1C000000 		.4byte	.LFE19-.LFB19
 2351 03d9 01       		.uleb128 0x1
 2352 03da 9C       		.byte	0x9c
 2353 03db EF030000 		.4byte	0x3ef
 2354 03df 0B       		.uleb128 0xb
 2355 03e0 69060000 		.4byte	.LASF50
 2356 03e4 01       		.byte	0x1
 2357 03e5 0F03     		.2byte	0x30f
 2358 03e7 76000000 		.4byte	0x76
 2359 03eb 02       		.uleb128 0x2
 2360 03ec 91       		.byte	0x91
 2361 03ed 74       		.sleb128 -12
 2362 03ee 00       		.byte	0
 2363 03ef 0D       		.uleb128 0xd
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 67


 2364 03f0 4A040000 		.4byte	.LASF51
 2365 03f4 01       		.byte	0x1
 2366 03f5 2303     		.2byte	0x323
 2367 03f7 76000000 		.4byte	0x76
 2368 03fb 00000000 		.4byte	.LFB20
 2369 03ff 18000000 		.4byte	.LFE20-.LFB20
 2370 0403 01       		.uleb128 0x1
 2371 0404 9C       		.byte	0x9c
 2372 0405 09       		.uleb128 0x9
 2373 0406 E4020000 		.4byte	.LASF52
 2374 040a 01       		.byte	0x1
 2375 040b 3D03     		.2byte	0x33d
 2376 040d 00000000 		.4byte	.LFB21
 2377 0411 48000000 		.4byte	.LFE21-.LFB21
 2378 0415 01       		.uleb128 0x1
 2379 0416 9C       		.byte	0x9c
 2380 0417 3A040000 		.4byte	0x43a
 2381 041b 0B       		.uleb128 0xb
 2382 041c 5E060000 		.4byte	.LASF48
 2383 0420 01       		.byte	0x1
 2384 0421 3D03     		.2byte	0x33d
 2385 0423 76000000 		.4byte	0x76
 2386 0427 02       		.uleb128 0x2
 2387 0428 91       		.byte	0x91
 2388 0429 64       		.sleb128 -28
 2389 042a 0A       		.uleb128 0xa
 2390 042b 26060000 		.4byte	.LASF20
 2391 042f 01       		.byte	0x1
 2392 0430 3F03     		.2byte	0x33f
 2393 0432 6B000000 		.4byte	0x6b
 2394 0436 02       		.uleb128 0x2
 2395 0437 91       		.byte	0x91
 2396 0438 6F       		.sleb128 -17
 2397 0439 00       		.byte	0
 2398 043a 0C       		.uleb128 0xc
 2399 043b FE030000 		.4byte	.LASF53
 2400 043f 01       		.byte	0x1
 2401 0440 5A03     		.2byte	0x35a
 2402 0442 00000000 		.4byte	.LFB22
 2403 0446 1C000000 		.4byte	.LFE22-.LFB22
 2404 044a 01       		.uleb128 0x1
 2405 044b 9C       		.byte	0x9c
 2406 044c 60040000 		.4byte	0x460
 2407 0450 0B       		.uleb128 0xb
 2408 0451 2D040000 		.4byte	.LASF54
 2409 0455 01       		.byte	0x1
 2410 0456 5A03     		.2byte	0x35a
 2411 0458 76000000 		.4byte	0x76
 2412 045c 02       		.uleb128 0x2
 2413 045d 91       		.byte	0x91
 2414 045e 74       		.sleb128 -12
 2415 045f 00       		.byte	0
 2416 0460 0D       		.uleb128 0xd
 2417 0461 17050000 		.4byte	.LASF55
 2418 0465 01       		.byte	0x1
 2419 0466 8403     		.2byte	0x384
 2420 0468 76000000 		.4byte	0x76
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 68


 2421 046c 00000000 		.4byte	.LFB23
 2422 0470 18000000 		.4byte	.LFE23-.LFB23
 2423 0474 01       		.uleb128 0x1
 2424 0475 9C       		.byte	0x9c
 2425 0476 0C       		.uleb128 0xc
 2426 0477 DE010000 		.4byte	.LASF56
 2427 047b 01       		.byte	0x1
 2428 047c B003     		.2byte	0x3b0
 2429 047e 00000000 		.4byte	.LFB24
 2430 0482 1C000000 		.4byte	.LFE24-.LFB24
 2431 0486 01       		.uleb128 0x1
 2432 0487 9C       		.byte	0x9c
 2433 0488 9C040000 		.4byte	0x49c
 2434 048c 0B       		.uleb128 0xb
 2435 048d EF050000 		.4byte	.LASF57
 2436 0491 01       		.byte	0x1
 2437 0492 B003     		.2byte	0x3b0
 2438 0494 76000000 		.4byte	0x76
 2439 0498 02       		.uleb128 0x2
 2440 0499 91       		.byte	0x91
 2441 049a 74       		.sleb128 -12
 2442 049b 00       		.byte	0
 2443 049c 0D       		.uleb128 0xd
 2444 049d 98050000 		.4byte	.LASF58
 2445 04a1 01       		.byte	0x1
 2446 04a2 DA03     		.2byte	0x3da
 2447 04a4 76000000 		.4byte	0x76
 2448 04a8 00000000 		.4byte	.LFB25
 2449 04ac 18000000 		.4byte	.LFE25-.LFB25
 2450 04b0 01       		.uleb128 0x1
 2451 04b1 9C       		.byte	0x9c
 2452 04b2 0D       		.uleb128 0xd
 2453 04b3 99040000 		.4byte	.LASF59
 2454 04b7 01       		.byte	0x1
 2455 04b8 0604     		.2byte	0x406
 2456 04ba 76000000 		.4byte	0x76
 2457 04be 00000000 		.4byte	.LFB26
 2458 04c2 18000000 		.4byte	.LFE26-.LFB26
 2459 04c6 01       		.uleb128 0x1
 2460 04c7 9C       		.byte	0x9c
 2461 04c8 0D       		.uleb128 0xd
 2462 04c9 CB020000 		.4byte	.LASF60
 2463 04cd 01       		.byte	0x1
 2464 04ce 1B04     		.2byte	0x41b
 2465 04d0 76000000 		.4byte	0x76
 2466 04d4 00000000 		.4byte	.LFB27
 2467 04d8 18000000 		.4byte	.LFE27-.LFB27
 2468 04dc 01       		.uleb128 0x1
 2469 04dd 9C       		.byte	0x9c
 2470 04de 09       		.uleb128 0x9
 2471 04df FE040000 		.4byte	.LASF61
 2472 04e3 01       		.byte	0x1
 2473 04e4 3604     		.2byte	0x436
 2474 04e6 00000000 		.4byte	.LFB28
 2475 04ea 44000000 		.4byte	.LFE28-.LFB28
 2476 04ee 01       		.uleb128 0x1
 2477 04ef 9C       		.byte	0x9c
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 69


 2478 04f0 13050000 		.4byte	0x513
 2479 04f4 0B       		.uleb128 0xb
 2480 04f5 65010000 		.4byte	.LASF62
 2481 04f9 01       		.byte	0x1
 2482 04fa 3604     		.2byte	0x436
 2483 04fc 76000000 		.4byte	0x76
 2484 0500 02       		.uleb128 0x2
 2485 0501 91       		.byte	0x91
 2486 0502 64       		.sleb128 -28
 2487 0503 0A       		.uleb128 0xa
 2488 0504 26060000 		.4byte	.LASF20
 2489 0508 01       		.byte	0x1
 2490 0509 3804     		.2byte	0x438
 2491 050b 6B000000 		.4byte	0x6b
 2492 050f 02       		.uleb128 0x2
 2493 0510 91       		.byte	0x91
 2494 0511 6F       		.sleb128 -17
 2495 0512 00       		.byte	0
 2496 0513 09       		.uleb128 0x9
 2497 0514 80050000 		.4byte	.LASF63
 2498 0518 01       		.byte	0x1
 2499 0519 5704     		.2byte	0x457
 2500 051b 00000000 		.4byte	.LFB29
 2501 051f 44000000 		.4byte	.LFE29-.LFB29
 2502 0523 01       		.uleb128 0x1
 2503 0524 9C       		.byte	0x9c
 2504 0525 48050000 		.4byte	0x548
 2505 0529 0B       		.uleb128 0xb
 2506 052a 65010000 		.4byte	.LASF62
 2507 052e 01       		.byte	0x1
 2508 052f 5704     		.2byte	0x457
 2509 0531 76000000 		.4byte	0x76
 2510 0535 02       		.uleb128 0x2
 2511 0536 91       		.byte	0x91
 2512 0537 64       		.sleb128 -28
 2513 0538 0A       		.uleb128 0xa
 2514 0539 26060000 		.4byte	.LASF20
 2515 053d 01       		.byte	0x1
 2516 053e 5904     		.2byte	0x459
 2517 0540 6B000000 		.4byte	0x6b
 2518 0544 02       		.uleb128 0x2
 2519 0545 91       		.byte	0x91
 2520 0546 6F       		.sleb128 -17
 2521 0547 00       		.byte	0
 2522 0548 09       		.uleb128 0x9
 2523 0549 4B050000 		.4byte	.LASF64
 2524 054d 01       		.byte	0x1
 2525 054e 7804     		.2byte	0x478
 2526 0550 00000000 		.4byte	.LFB30
 2527 0554 48000000 		.4byte	.LFE30-.LFB30
 2528 0558 01       		.uleb128 0x1
 2529 0559 9C       		.byte	0x9c
 2530 055a 7D050000 		.4byte	0x57d
 2531 055e 0B       		.uleb128 0xb
 2532 055f 65010000 		.4byte	.LASF62
 2533 0563 01       		.byte	0x1
 2534 0564 7804     		.2byte	0x478
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 70


 2535 0566 76000000 		.4byte	0x76
 2536 056a 02       		.uleb128 0x2
 2537 056b 91       		.byte	0x91
 2538 056c 64       		.sleb128 -28
 2539 056d 0A       		.uleb128 0xa
 2540 056e 26060000 		.4byte	.LASF20
 2541 0572 01       		.byte	0x1
 2542 0573 7A04     		.2byte	0x47a
 2543 0575 6B000000 		.4byte	0x6b
 2544 0579 02       		.uleb128 0x2
 2545 057a 91       		.byte	0x91
 2546 057b 6F       		.sleb128 -17
 2547 057c 00       		.byte	0
 2548 057d 09       		.uleb128 0x9
 2549 057e 7F010000 		.4byte	.LASF65
 2550 0582 01       		.byte	0x1
 2551 0583 9804     		.2byte	0x498
 2552 0585 00000000 		.4byte	.LFB31
 2553 0589 44000000 		.4byte	.LFE31-.LFB31
 2554 058d 01       		.uleb128 0x1
 2555 058e 9C       		.byte	0x9c
 2556 058f B2050000 		.4byte	0x5b2
 2557 0593 0B       		.uleb128 0xb
 2558 0594 65010000 		.4byte	.LASF62
 2559 0598 01       		.byte	0x1
 2560 0599 9804     		.2byte	0x498
 2561 059b 76000000 		.4byte	0x76
 2562 059f 02       		.uleb128 0x2
 2563 05a0 91       		.byte	0x91
 2564 05a1 64       		.sleb128 -28
 2565 05a2 0A       		.uleb128 0xa
 2566 05a3 26060000 		.4byte	.LASF20
 2567 05a7 01       		.byte	0x1
 2568 05a8 9A04     		.2byte	0x49a
 2569 05aa 6B000000 		.4byte	0x6b
 2570 05ae 02       		.uleb128 0x2
 2571 05af 91       		.byte	0x91
 2572 05b0 6F       		.sleb128 -17
 2573 05b1 00       		.byte	0
 2574 05b2 09       		.uleb128 0x9
 2575 05b3 39020000 		.4byte	.LASF66
 2576 05b7 01       		.byte	0x1
 2577 05b8 B904     		.2byte	0x4b9
 2578 05ba 00000000 		.4byte	.LFB32
 2579 05be 44000000 		.4byte	.LFE32-.LFB32
 2580 05c2 01       		.uleb128 0x1
 2581 05c3 9C       		.byte	0x9c
 2582 05c4 E7050000 		.4byte	0x5e7
 2583 05c8 0B       		.uleb128 0xb
 2584 05c9 65010000 		.4byte	.LASF62
 2585 05cd 01       		.byte	0x1
 2586 05ce B904     		.2byte	0x4b9
 2587 05d0 76000000 		.4byte	0x76
 2588 05d4 02       		.uleb128 0x2
 2589 05d5 91       		.byte	0x91
 2590 05d6 64       		.sleb128 -28
 2591 05d7 0A       		.uleb128 0xa
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 71


 2592 05d8 26060000 		.4byte	.LASF20
 2593 05dc 01       		.byte	0x1
 2594 05dd BB04     		.2byte	0x4bb
 2595 05df 6B000000 		.4byte	0x6b
 2596 05e3 02       		.uleb128 0x2
 2597 05e4 91       		.byte	0x91
 2598 05e5 6F       		.sleb128 -17
 2599 05e6 00       		.byte	0
 2600 05e7 09       		.uleb128 0x9
 2601 05e8 1D000000 		.4byte	.LASF67
 2602 05ec 01       		.byte	0x1
 2603 05ed E104     		.2byte	0x4e1
 2604 05ef 00000000 		.4byte	.LFB33
 2605 05f3 3C000000 		.4byte	.LFE33-.LFB33
 2606 05f7 01       		.uleb128 0x1
 2607 05f8 9C       		.byte	0x9c
 2608 05f9 2B060000 		.4byte	0x62b
 2609 05fd 0B       		.uleb128 0xb
 2610 05fe 71010000 		.4byte	.LASF38
 2611 0602 01       		.byte	0x1
 2612 0603 E104     		.2byte	0x4e1
 2613 0605 76000000 		.4byte	0x76
 2614 0609 02       		.uleb128 0x2
 2615 060a 91       		.byte	0x91
 2616 060b 64       		.sleb128 -28
 2617 060c 0B       		.uleb128 0xb
 2618 060d BB010000 		.4byte	.LASF68
 2619 0611 01       		.byte	0x1
 2620 0612 E104     		.2byte	0x4e1
 2621 0614 76000000 		.4byte	0x76
 2622 0618 02       		.uleb128 0x2
 2623 0619 91       		.byte	0x91
 2624 061a 60       		.sleb128 -32
 2625 061b 0A       		.uleb128 0xa
 2626 061c 26060000 		.4byte	.LASF20
 2627 0620 01       		.byte	0x1
 2628 0621 E304     		.2byte	0x4e3
 2629 0623 6B000000 		.4byte	0x6b
 2630 0627 02       		.uleb128 0x2
 2631 0628 91       		.byte	0x91
 2632 0629 6F       		.sleb128 -17
 2633 062a 00       		.byte	0
 2634 062b 0D       		.uleb128 0xd
 2635 062c DB000000 		.4byte	.LASF69
 2636 0630 01       		.byte	0x1
 2637 0631 FE04     		.2byte	0x4fe
 2638 0633 76000000 		.4byte	0x76
 2639 0637 00000000 		.4byte	.LFB34
 2640 063b 20000000 		.4byte	.LFE34-.LFB34
 2641 063f 01       		.uleb128 0x1
 2642 0640 9C       		.byte	0x9c
 2643 0641 0C       		.uleb128 0xc
 2644 0642 7C000000 		.4byte	.LASF70
 2645 0646 01       		.byte	0x1
 2646 0647 1705     		.2byte	0x517
 2647 0649 00000000 		.4byte	.LFB35
 2648 064d 18000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 72


 2649 0651 01       		.uleb128 0x1
 2650 0652 9C       		.byte	0x9c
 2651 0653 67060000 		.4byte	0x667
 2652 0657 0B       		.uleb128 0xb
 2653 0658 81040000 		.4byte	.LASF71
 2654 065c 01       		.byte	0x1
 2655 065d 1705     		.2byte	0x517
 2656 065f 76000000 		.4byte	0x76
 2657 0663 02       		.uleb128 0x2
 2658 0664 91       		.byte	0x91
 2659 0665 74       		.sleb128 -12
 2660 0666 00       		.byte	0
 2661 0667 0D       		.uleb128 0xd
 2662 0668 9E000000 		.4byte	.LASF72
 2663 066c 01       		.byte	0x1
 2664 066d 2E05     		.2byte	0x52e
 2665 066f 76000000 		.4byte	0x76
 2666 0673 00000000 		.4byte	.LFB36
 2667 0677 14000000 		.4byte	.LFE36-.LFB36
 2668 067b 01       		.uleb128 0x1
 2669 067c 9C       		.byte	0x9c
 2670 067d 0D       		.uleb128 0xd
 2671 067e 12030000 		.4byte	.LASF73
 2672 0682 01       		.byte	0x1
 2673 0683 4505     		.2byte	0x545
 2674 0685 76000000 		.4byte	0x76
 2675 0689 00000000 		.4byte	.LFB37
 2676 068d 14000000 		.4byte	.LFE37-.LFB37
 2677 0691 01       		.uleb128 0x1
 2678 0692 9C       		.byte	0x9c
 2679 0693 0C       		.uleb128 0xc
 2680 0694 36000000 		.4byte	.LASF74
 2681 0698 01       		.byte	0x1
 2682 0699 5C05     		.2byte	0x55c
 2683 069b 00000000 		.4byte	.LFB38
 2684 069f 18000000 		.4byte	.LFE38-.LFB38
 2685 06a3 01       		.uleb128 0x1
 2686 06a4 9C       		.byte	0x9c
 2687 06a5 B9060000 		.4byte	0x6b9
 2688 06a9 0B       		.uleb128 0xb
 2689 06aa 81040000 		.4byte	.LASF71
 2690 06ae 01       		.byte	0x1
 2691 06af 5C05     		.2byte	0x55c
 2692 06b1 76000000 		.4byte	0x76
 2693 06b5 02       		.uleb128 0x2
 2694 06b6 91       		.byte	0x91
 2695 06b7 74       		.sleb128 -12
 2696 06b8 00       		.byte	0
 2697 06b9 0C       		.uleb128 0xc
 2698 06ba 4E010000 		.4byte	.LASF75
 2699 06be 01       		.byte	0x1
 2700 06bf 7305     		.2byte	0x573
 2701 06c1 00000000 		.4byte	.LFB39
 2702 06c5 18000000 		.4byte	.LFE39-.LFB39
 2703 06c9 01       		.uleb128 0x1
 2704 06ca 9C       		.byte	0x9c
 2705 06cb DF060000 		.4byte	0x6df
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 73


 2706 06cf 0B       		.uleb128 0xb
 2707 06d0 81040000 		.4byte	.LASF71
 2708 06d4 01       		.byte	0x1
 2709 06d5 7305     		.2byte	0x573
 2710 06d7 76000000 		.4byte	0x76
 2711 06db 02       		.uleb128 0x2
 2712 06dc 91       		.byte	0x91
 2713 06dd 74       		.sleb128 -12
 2714 06de 00       		.byte	0
 2715 06df 0E       		.uleb128 0xe
 2716 06e0 62050000 		.4byte	.LASF79
 2717 06e4 01       		.byte	0x1
 2718 06e5 16       		.byte	0x16
 2719 06e6 6B000000 		.4byte	0x6b
 2720 06ea 05       		.uleb128 0x5
 2721 06eb 03       		.byte	0x3
 2722 06ec 00000000 		.4byte	QuadDec_1_initVar
 2723 06f0 00       		.byte	0
 2724              		.section	.debug_abbrev,"",%progbits
 2725              	.Ldebug_abbrev0:
 2726 0000 01       		.uleb128 0x1
 2727 0001 11       		.uleb128 0x11
 2728 0002 01       		.byte	0x1
 2729 0003 25       		.uleb128 0x25
 2730 0004 0E       		.uleb128 0xe
 2731 0005 13       		.uleb128 0x13
 2732 0006 0B       		.uleb128 0xb
 2733 0007 03       		.uleb128 0x3
 2734 0008 0E       		.uleb128 0xe
 2735 0009 1B       		.uleb128 0x1b
 2736 000a 0E       		.uleb128 0xe
 2737 000b 55       		.uleb128 0x55
 2738 000c 17       		.uleb128 0x17
 2739 000d 11       		.uleb128 0x11
 2740 000e 01       		.uleb128 0x1
 2741 000f 10       		.uleb128 0x10
 2742 0010 17       		.uleb128 0x17
 2743 0011 00       		.byte	0
 2744 0012 00       		.byte	0
 2745 0013 02       		.uleb128 0x2
 2746 0014 24       		.uleb128 0x24
 2747 0015 00       		.byte	0
 2748 0016 0B       		.uleb128 0xb
 2749 0017 0B       		.uleb128 0xb
 2750 0018 3E       		.uleb128 0x3e
 2751 0019 0B       		.uleb128 0xb
 2752 001a 03       		.uleb128 0x3
 2753 001b 0E       		.uleb128 0xe
 2754 001c 00       		.byte	0
 2755 001d 00       		.byte	0
 2756 001e 03       		.uleb128 0x3
 2757 001f 24       		.uleb128 0x24
 2758 0020 00       		.byte	0
 2759 0021 0B       		.uleb128 0xb
 2760 0022 0B       		.uleb128 0xb
 2761 0023 3E       		.uleb128 0x3e
 2762 0024 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 74


 2763 0025 03       		.uleb128 0x3
 2764 0026 08       		.uleb128 0x8
 2765 0027 00       		.byte	0
 2766 0028 00       		.byte	0
 2767 0029 04       		.uleb128 0x4
 2768 002a 16       		.uleb128 0x16
 2769 002b 00       		.byte	0
 2770 002c 03       		.uleb128 0x3
 2771 002d 0E       		.uleb128 0xe
 2772 002e 3A       		.uleb128 0x3a
 2773 002f 0B       		.uleb128 0xb
 2774 0030 3B       		.uleb128 0x3b
 2775 0031 0B       		.uleb128 0xb
 2776 0032 49       		.uleb128 0x49
 2777 0033 13       		.uleb128 0x13
 2778 0034 00       		.byte	0
 2779 0035 00       		.byte	0
 2780 0036 05       		.uleb128 0x5
 2781 0037 35       		.uleb128 0x35
 2782 0038 00       		.byte	0
 2783 0039 49       		.uleb128 0x49
 2784 003a 13       		.uleb128 0x13
 2785 003b 00       		.byte	0
 2786 003c 00       		.byte	0
 2787 003d 06       		.uleb128 0x6
 2788 003e 2E       		.uleb128 0x2e
 2789 003f 00       		.byte	0
 2790 0040 3F       		.uleb128 0x3f
 2791 0041 19       		.uleb128 0x19
 2792 0042 03       		.uleb128 0x3
 2793 0043 0E       		.uleb128 0xe
 2794 0044 3A       		.uleb128 0x3a
 2795 0045 0B       		.uleb128 0xb
 2796 0046 3B       		.uleb128 0x3b
 2797 0047 0B       		.uleb128 0xb
 2798 0048 27       		.uleb128 0x27
 2799 0049 19       		.uleb128 0x19
 2800 004a 11       		.uleb128 0x11
 2801 004b 01       		.uleb128 0x1
 2802 004c 12       		.uleb128 0x12
 2803 004d 06       		.uleb128 0x6
 2804 004e 40       		.uleb128 0x40
 2805 004f 18       		.uleb128 0x18
 2806 0050 9642     		.uleb128 0x2116
 2807 0052 19       		.uleb128 0x19
 2808 0053 00       		.byte	0
 2809 0054 00       		.byte	0
 2810 0055 07       		.uleb128 0x7
 2811 0056 2E       		.uleb128 0x2e
 2812 0057 01       		.byte	0x1
 2813 0058 3F       		.uleb128 0x3f
 2814 0059 19       		.uleb128 0x19
 2815 005a 03       		.uleb128 0x3
 2816 005b 0E       		.uleb128 0xe
 2817 005c 3A       		.uleb128 0x3a
 2818 005d 0B       		.uleb128 0xb
 2819 005e 3B       		.uleb128 0x3b
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 75


 2820 005f 0B       		.uleb128 0xb
 2821 0060 27       		.uleb128 0x27
 2822 0061 19       		.uleb128 0x19
 2823 0062 11       		.uleb128 0x11
 2824 0063 01       		.uleb128 0x1
 2825 0064 12       		.uleb128 0x12
 2826 0065 06       		.uleb128 0x6
 2827 0066 40       		.uleb128 0x40
 2828 0067 18       		.uleb128 0x18
 2829 0068 9642     		.uleb128 0x2116
 2830 006a 19       		.uleb128 0x19
 2831 006b 01       		.uleb128 0x1
 2832 006c 13       		.uleb128 0x13
 2833 006d 00       		.byte	0
 2834 006e 00       		.byte	0
 2835 006f 08       		.uleb128 0x8
 2836 0070 34       		.uleb128 0x34
 2837 0071 00       		.byte	0
 2838 0072 03       		.uleb128 0x3
 2839 0073 0E       		.uleb128 0xe
 2840 0074 3A       		.uleb128 0x3a
 2841 0075 0B       		.uleb128 0xb
 2842 0076 3B       		.uleb128 0x3b
 2843 0077 0B       		.uleb128 0xb
 2844 0078 49       		.uleb128 0x49
 2845 0079 13       		.uleb128 0x13
 2846 007a 02       		.uleb128 0x2
 2847 007b 18       		.uleb128 0x18
 2848 007c 00       		.byte	0
 2849 007d 00       		.byte	0
 2850 007e 09       		.uleb128 0x9
 2851 007f 2E       		.uleb128 0x2e
 2852 0080 01       		.byte	0x1
 2853 0081 3F       		.uleb128 0x3f
 2854 0082 19       		.uleb128 0x19
 2855 0083 03       		.uleb128 0x3
 2856 0084 0E       		.uleb128 0xe
 2857 0085 3A       		.uleb128 0x3a
 2858 0086 0B       		.uleb128 0xb
 2859 0087 3B       		.uleb128 0x3b
 2860 0088 05       		.uleb128 0x5
 2861 0089 27       		.uleb128 0x27
 2862 008a 19       		.uleb128 0x19
 2863 008b 11       		.uleb128 0x11
 2864 008c 01       		.uleb128 0x1
 2865 008d 12       		.uleb128 0x12
 2866 008e 06       		.uleb128 0x6
 2867 008f 40       		.uleb128 0x40
 2868 0090 18       		.uleb128 0x18
 2869 0091 9642     		.uleb128 0x2116
 2870 0093 19       		.uleb128 0x19
 2871 0094 01       		.uleb128 0x1
 2872 0095 13       		.uleb128 0x13
 2873 0096 00       		.byte	0
 2874 0097 00       		.byte	0
 2875 0098 0A       		.uleb128 0xa
 2876 0099 34       		.uleb128 0x34
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 76


 2877 009a 00       		.byte	0
 2878 009b 03       		.uleb128 0x3
 2879 009c 0E       		.uleb128 0xe
 2880 009d 3A       		.uleb128 0x3a
 2881 009e 0B       		.uleb128 0xb
 2882 009f 3B       		.uleb128 0x3b
 2883 00a0 05       		.uleb128 0x5
 2884 00a1 49       		.uleb128 0x49
 2885 00a2 13       		.uleb128 0x13
 2886 00a3 02       		.uleb128 0x2
 2887 00a4 18       		.uleb128 0x18
 2888 00a5 00       		.byte	0
 2889 00a6 00       		.byte	0
 2890 00a7 0B       		.uleb128 0xb
 2891 00a8 05       		.uleb128 0x5
 2892 00a9 00       		.byte	0
 2893 00aa 03       		.uleb128 0x3
 2894 00ab 0E       		.uleb128 0xe
 2895 00ac 3A       		.uleb128 0x3a
 2896 00ad 0B       		.uleb128 0xb
 2897 00ae 3B       		.uleb128 0x3b
 2898 00af 05       		.uleb128 0x5
 2899 00b0 49       		.uleb128 0x49
 2900 00b1 13       		.uleb128 0x13
 2901 00b2 02       		.uleb128 0x2
 2902 00b3 18       		.uleb128 0x18
 2903 00b4 00       		.byte	0
 2904 00b5 00       		.byte	0
 2905 00b6 0C       		.uleb128 0xc
 2906 00b7 2E       		.uleb128 0x2e
 2907 00b8 01       		.byte	0x1
 2908 00b9 3F       		.uleb128 0x3f
 2909 00ba 19       		.uleb128 0x19
 2910 00bb 03       		.uleb128 0x3
 2911 00bc 0E       		.uleb128 0xe
 2912 00bd 3A       		.uleb128 0x3a
 2913 00be 0B       		.uleb128 0xb
 2914 00bf 3B       		.uleb128 0x3b
 2915 00c0 05       		.uleb128 0x5
 2916 00c1 27       		.uleb128 0x27
 2917 00c2 19       		.uleb128 0x19
 2918 00c3 11       		.uleb128 0x11
 2919 00c4 01       		.uleb128 0x1
 2920 00c5 12       		.uleb128 0x12
 2921 00c6 06       		.uleb128 0x6
 2922 00c7 40       		.uleb128 0x40
 2923 00c8 18       		.uleb128 0x18
 2924 00c9 9742     		.uleb128 0x2117
 2925 00cb 19       		.uleb128 0x19
 2926 00cc 01       		.uleb128 0x1
 2927 00cd 13       		.uleb128 0x13
 2928 00ce 00       		.byte	0
 2929 00cf 00       		.byte	0
 2930 00d0 0D       		.uleb128 0xd
 2931 00d1 2E       		.uleb128 0x2e
 2932 00d2 00       		.byte	0
 2933 00d3 3F       		.uleb128 0x3f
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 77


 2934 00d4 19       		.uleb128 0x19
 2935 00d5 03       		.uleb128 0x3
 2936 00d6 0E       		.uleb128 0xe
 2937 00d7 3A       		.uleb128 0x3a
 2938 00d8 0B       		.uleb128 0xb
 2939 00d9 3B       		.uleb128 0x3b
 2940 00da 05       		.uleb128 0x5
 2941 00db 27       		.uleb128 0x27
 2942 00dc 19       		.uleb128 0x19
 2943 00dd 49       		.uleb128 0x49
 2944 00de 13       		.uleb128 0x13
 2945 00df 11       		.uleb128 0x11
 2946 00e0 01       		.uleb128 0x1
 2947 00e1 12       		.uleb128 0x12
 2948 00e2 06       		.uleb128 0x6
 2949 00e3 40       		.uleb128 0x40
 2950 00e4 18       		.uleb128 0x18
 2951 00e5 9742     		.uleb128 0x2117
 2952 00e7 19       		.uleb128 0x19
 2953 00e8 00       		.byte	0
 2954 00e9 00       		.byte	0
 2955 00ea 0E       		.uleb128 0xe
 2956 00eb 34       		.uleb128 0x34
 2957 00ec 00       		.byte	0
 2958 00ed 03       		.uleb128 0x3
 2959 00ee 0E       		.uleb128 0xe
 2960 00ef 3A       		.uleb128 0x3a
 2961 00f0 0B       		.uleb128 0xb
 2962 00f1 3B       		.uleb128 0x3b
 2963 00f2 0B       		.uleb128 0xb
 2964 00f3 49       		.uleb128 0x49
 2965 00f4 13       		.uleb128 0x13
 2966 00f5 3F       		.uleb128 0x3f
 2967 00f6 19       		.uleb128 0x19
 2968 00f7 02       		.uleb128 0x2
 2969 00f8 18       		.uleb128 0x18
 2970 00f9 00       		.byte	0
 2971 00fa 00       		.byte	0
 2972 00fb 00       		.byte	0
 2973              		.section	.debug_aranges,"",%progbits
 2974 0000 54010000 		.4byte	0x154
 2975 0004 0200     		.2byte	0x2
 2976 0006 00000000 		.4byte	.Ldebug_info0
 2977 000a 04       		.byte	0x4
 2978 000b 00       		.byte	0
 2979 000c 0000     		.2byte	0
 2980 000e 0000     		.2byte	0
 2981 0010 00000000 		.4byte	.LFB0
 2982 0014 28000000 		.4byte	.LFE0-.LFB0
 2983 0018 00000000 		.4byte	.LFB1
 2984 001c 30000000 		.4byte	.LFE1-.LFB1
 2985 0020 00000000 		.4byte	.LFB2
 2986 0024 24000000 		.4byte	.LFE2-.LFB2
 2987 0028 00000000 		.4byte	.LFB3
 2988 002c 30000000 		.4byte	.LFE3-.LFB3
 2989 0030 00000000 		.4byte	.LFB4
 2990 0034 48000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 78


 2991 0038 00000000 		.4byte	.LFB5
 2992 003c 48000000 		.4byte	.LFE5-.LFB5
 2993 0040 00000000 		.4byte	.LFB6
 2994 0044 48000000 		.4byte	.LFE6-.LFB6
 2995 0048 00000000 		.4byte	.LFB7
 2996 004c 4C000000 		.4byte	.LFE7-.LFB7
 2997 0050 00000000 		.4byte	.LFB8
 2998 0054 1C000000 		.4byte	.LFE8-.LFB8
 2999 0058 00000000 		.4byte	.LFB9
 3000 005c 48000000 		.4byte	.LFE9-.LFB9
 3001 0060 00000000 		.4byte	.LFB10
 3002 0064 48000000 		.4byte	.LFE10-.LFB10
 3003 0068 00000000 		.4byte	.LFB11
 3004 006c 4C000000 		.4byte	.LFE11-.LFB11
 3005 0070 00000000 		.4byte	.LFB12
 3006 0074 48000000 		.4byte	.LFE12-.LFB12
 3007 0078 00000000 		.4byte	.LFB13
 3008 007c 1C000000 		.4byte	.LFE13-.LFB13
 3009 0080 00000000 		.4byte	.LFB14
 3010 0084 18000000 		.4byte	.LFE14-.LFB14
 3011 0088 00000000 		.4byte	.LFB15
 3012 008c 48000000 		.4byte	.LFE15-.LFB15
 3013 0090 00000000 		.4byte	.LFB16
 3014 0094 1C000000 		.4byte	.LFE16-.LFB16
 3015 0098 00000000 		.4byte	.LFB17
 3016 009c 18000000 		.4byte	.LFE17-.LFB17
 3017 00a0 00000000 		.4byte	.LFB18
 3018 00a4 48000000 		.4byte	.LFE18-.LFB18
 3019 00a8 00000000 		.4byte	.LFB19
 3020 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3021 00b0 00000000 		.4byte	.LFB20
 3022 00b4 18000000 		.4byte	.LFE20-.LFB20
 3023 00b8 00000000 		.4byte	.LFB21
 3024 00bc 48000000 		.4byte	.LFE21-.LFB21
 3025 00c0 00000000 		.4byte	.LFB22
 3026 00c4 1C000000 		.4byte	.LFE22-.LFB22
 3027 00c8 00000000 		.4byte	.LFB23
 3028 00cc 18000000 		.4byte	.LFE23-.LFB23
 3029 00d0 00000000 		.4byte	.LFB24
 3030 00d4 1C000000 		.4byte	.LFE24-.LFB24
 3031 00d8 00000000 		.4byte	.LFB25
 3032 00dc 18000000 		.4byte	.LFE25-.LFB25
 3033 00e0 00000000 		.4byte	.LFB26
 3034 00e4 18000000 		.4byte	.LFE26-.LFB26
 3035 00e8 00000000 		.4byte	.LFB27
 3036 00ec 18000000 		.4byte	.LFE27-.LFB27
 3037 00f0 00000000 		.4byte	.LFB28
 3038 00f4 44000000 		.4byte	.LFE28-.LFB28
 3039 00f8 00000000 		.4byte	.LFB29
 3040 00fc 44000000 		.4byte	.LFE29-.LFB29
 3041 0100 00000000 		.4byte	.LFB30
 3042 0104 48000000 		.4byte	.LFE30-.LFB30
 3043 0108 00000000 		.4byte	.LFB31
 3044 010c 44000000 		.4byte	.LFE31-.LFB31
 3045 0110 00000000 		.4byte	.LFB32
 3046 0114 44000000 		.4byte	.LFE32-.LFB32
 3047 0118 00000000 		.4byte	.LFB33
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 79


 3048 011c 3C000000 		.4byte	.LFE33-.LFB33
 3049 0120 00000000 		.4byte	.LFB34
 3050 0124 20000000 		.4byte	.LFE34-.LFB34
 3051 0128 00000000 		.4byte	.LFB35
 3052 012c 18000000 		.4byte	.LFE35-.LFB35
 3053 0130 00000000 		.4byte	.LFB36
 3054 0134 14000000 		.4byte	.LFE36-.LFB36
 3055 0138 00000000 		.4byte	.LFB37
 3056 013c 14000000 		.4byte	.LFE37-.LFB37
 3057 0140 00000000 		.4byte	.LFB38
 3058 0144 18000000 		.4byte	.LFE38-.LFB38
 3059 0148 00000000 		.4byte	.LFB39
 3060 014c 18000000 		.4byte	.LFE39-.LFB39
 3061 0150 00000000 		.4byte	0
 3062 0154 00000000 		.4byte	0
 3063              		.section	.debug_ranges,"",%progbits
 3064              	.Ldebug_ranges0:
 3065 0000 00000000 		.4byte	.LFB0
 3066 0004 28000000 		.4byte	.LFE0
 3067 0008 00000000 		.4byte	.LFB1
 3068 000c 30000000 		.4byte	.LFE1
 3069 0010 00000000 		.4byte	.LFB2
 3070 0014 24000000 		.4byte	.LFE2
 3071 0018 00000000 		.4byte	.LFB3
 3072 001c 30000000 		.4byte	.LFE3
 3073 0020 00000000 		.4byte	.LFB4
 3074 0024 48000000 		.4byte	.LFE4
 3075 0028 00000000 		.4byte	.LFB5
 3076 002c 48000000 		.4byte	.LFE5
 3077 0030 00000000 		.4byte	.LFB6
 3078 0034 48000000 		.4byte	.LFE6
 3079 0038 00000000 		.4byte	.LFB7
 3080 003c 4C000000 		.4byte	.LFE7
 3081 0040 00000000 		.4byte	.LFB8
 3082 0044 1C000000 		.4byte	.LFE8
 3083 0048 00000000 		.4byte	.LFB9
 3084 004c 48000000 		.4byte	.LFE9
 3085 0050 00000000 		.4byte	.LFB10
 3086 0054 48000000 		.4byte	.LFE10
 3087 0058 00000000 		.4byte	.LFB11
 3088 005c 4C000000 		.4byte	.LFE11
 3089 0060 00000000 		.4byte	.LFB12
 3090 0064 48000000 		.4byte	.LFE12
 3091 0068 00000000 		.4byte	.LFB13
 3092 006c 1C000000 		.4byte	.LFE13
 3093 0070 00000000 		.4byte	.LFB14
 3094 0074 18000000 		.4byte	.LFE14
 3095 0078 00000000 		.4byte	.LFB15
 3096 007c 48000000 		.4byte	.LFE15
 3097 0080 00000000 		.4byte	.LFB16
 3098 0084 1C000000 		.4byte	.LFE16
 3099 0088 00000000 		.4byte	.LFB17
 3100 008c 18000000 		.4byte	.LFE17
 3101 0090 00000000 		.4byte	.LFB18
 3102 0094 48000000 		.4byte	.LFE18
 3103 0098 00000000 		.4byte	.LFB19
 3104 009c 1C000000 		.4byte	.LFE19
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 80


 3105 00a0 00000000 		.4byte	.LFB20
 3106 00a4 18000000 		.4byte	.LFE20
 3107 00a8 00000000 		.4byte	.LFB21
 3108 00ac 48000000 		.4byte	.LFE21
 3109 00b0 00000000 		.4byte	.LFB22
 3110 00b4 1C000000 		.4byte	.LFE22
 3111 00b8 00000000 		.4byte	.LFB23
 3112 00bc 18000000 		.4byte	.LFE23
 3113 00c0 00000000 		.4byte	.LFB24
 3114 00c4 1C000000 		.4byte	.LFE24
 3115 00c8 00000000 		.4byte	.LFB25
 3116 00cc 18000000 		.4byte	.LFE25
 3117 00d0 00000000 		.4byte	.LFB26
 3118 00d4 18000000 		.4byte	.LFE26
 3119 00d8 00000000 		.4byte	.LFB27
 3120 00dc 18000000 		.4byte	.LFE27
 3121 00e0 00000000 		.4byte	.LFB28
 3122 00e4 44000000 		.4byte	.LFE28
 3123 00e8 00000000 		.4byte	.LFB29
 3124 00ec 44000000 		.4byte	.LFE29
 3125 00f0 00000000 		.4byte	.LFB30
 3126 00f4 48000000 		.4byte	.LFE30
 3127 00f8 00000000 		.4byte	.LFB31
 3128 00fc 44000000 		.4byte	.LFE31
 3129 0100 00000000 		.4byte	.LFB32
 3130 0104 44000000 		.4byte	.LFE32
 3131 0108 00000000 		.4byte	.LFB33
 3132 010c 3C000000 		.4byte	.LFE33
 3133 0110 00000000 		.4byte	.LFB34
 3134 0114 20000000 		.4byte	.LFE34
 3135 0118 00000000 		.4byte	.LFB35
 3136 011c 18000000 		.4byte	.LFE35
 3137 0120 00000000 		.4byte	.LFB36
 3138 0124 14000000 		.4byte	.LFE36
 3139 0128 00000000 		.4byte	.LFB37
 3140 012c 14000000 		.4byte	.LFE37
 3141 0130 00000000 		.4byte	.LFB38
 3142 0134 18000000 		.4byte	.LFE38
 3143 0138 00000000 		.4byte	.LFB39
 3144 013c 18000000 		.4byte	.LFE39
 3145 0140 00000000 		.4byte	0
 3146 0144 00000000 		.4byte	0
 3147              		.section	.debug_line,"",%progbits
 3148              	.Ldebug_line0:
 3149 0000 6B030000 		.section	.debug_str,"MS",%progbits,1
 3149      02004800 
 3149      00000201 
 3149      FB0E0D00 
 3149      01010101 
 3150              	.LASF40:
 3151 0000 636F756E 		.ascii	"count\000"
 3151      7400
 3152              	.LASF37:
 3153 0006 51756164 		.ascii	"QuadDec_1_SetPWMInvert\000"
 3153      4465635F 
 3153      315F5365 
 3153      7450574D 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 81


 3153      496E7665 
 3154              	.LASF67:
 3155 001d 51756164 		.ascii	"QuadDec_1_TriggerCommand\000"
 3155      4465635F 
 3155      315F5472 
 3155      69676765 
 3155      72436F6D 
 3156              	.LASF74:
 3157 0036 51756164 		.ascii	"QuadDec_1_ClearInterrupt\000"
 3157      4465635F 
 3157      315F436C 
 3157      65617249 
 3157      6E746572 
 3158              	.LASF16:
 3159 004f 51756164 		.ascii	"QuadDec_1_Init\000"
 3159      4465635F 
 3159      315F496E 
 3159      697400
 3160              	.LASF44:
 3161 005e 70657269 		.ascii	"period\000"
 3161      6F6400
 3162              	.LASF7:
 3163 0065 6C6F6E67 		.ascii	"long long unsigned int\000"
 3163      206C6F6E 
 3163      6720756E 
 3163      7369676E 
 3163      65642069 
 3164              	.LASF70:
 3165 007c 51756164 		.ascii	"QuadDec_1_SetInterruptMode\000"
 3165      4465635F 
 3165      315F5365 
 3165      74496E74 
 3165      65727275 
 3166              	.LASF24:
 3167 0097 71644D6F 		.ascii	"qdMode\000"
 3167      646500
 3168              	.LASF72:
 3169 009e 51756164 		.ascii	"QuadDec_1_GetInterruptSourceMasked\000"
 3169      4465635F 
 3169      315F4765 
 3169      74496E74 
 3169      65727275 
 3170              	.LASF6:
 3171 00c1 6C6F6E67 		.ascii	"long long int\000"
 3171      206C6F6E 
 3171      6720696E 
 3171      7400
 3172              	.LASF0:
 3173 00cf 7369676E 		.ascii	"signed char\000"
 3173      65642063 
 3173      68617200 
 3174              	.LASF69:
 3175 00db 51756164 		.ascii	"QuadDec_1_ReadStatus\000"
 3175      4465635F 
 3175      315F5265 
 3175      61645374 
 3175      61747573 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 82


 3176              	.LASF4:
 3177 00f0 6C6F6E67 		.ascii	"long int\000"
 3177      20696E74 
 3177      00
 3178              	.LASF45:
 3179 00f9 51756164 		.ascii	"QuadDec_1_ReadCounter\000"
 3179      4465635F 
 3179      315F5265 
 3179      6164436F 
 3179      756E7465 
 3180              	.LASF35:
 3181 010f 51756164 		.ascii	"QuadDec_1_SetPWMDeadTime\000"
 3181      4465635F 
 3181      315F5365 
 3181      7450574D 
 3181      44656164 
 3182              	.LASF9:
 3183 0128 75696E74 		.ascii	"uint8\000"
 3183      3800
 3184              	.LASF21:
 3185 012e 51756164 		.ascii	"QuadDec_1_SetMode\000"
 3185      4465635F 
 3185      315F5365 
 3185      744D6F64 
 3185      6500
 3186              	.LASF12:
 3187 0140 646F7562 		.ascii	"double\000"
 3187      6C6500
 3188              	.LASF10:
 3189 0147 75696E74 		.ascii	"uint32\000"
 3189      333200
 3190              	.LASF75:
 3191 014e 51756164 		.ascii	"QuadDec_1_SetInterrupt\000"
 3191      4465635F 
 3191      315F5365 
 3191      74496E74 
 3191      65727275 
 3192              	.LASF62:
 3193 0165 74726967 		.ascii	"triggerMode\000"
 3193      6765724D 
 3193      6F646500 
 3194              	.LASF38:
 3195 0171 6D61736B 		.ascii	"mask\000"
 3195      00
 3196              	.LASF36:
 3197 0176 64656164 		.ascii	"deadTime\000"
 3197      54696D65 
 3197      00
 3198              	.LASF65:
 3199 017f 51756164 		.ascii	"QuadDec_1_SetStopMode\000"
 3199      4465635F 
 3199      315F5365 
 3199      7453746F 
 3199      704D6F64 
 3200              	.LASF8:
 3201 0195 756E7369 		.ascii	"unsigned int\000"
 3201      676E6564 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 83


 3201      20696E74 
 3201      00
 3202              	.LASF49:
 3203 01a2 51756164 		.ascii	"QuadDec_1_WritePeriodBuf\000"
 3203      4465635F 
 3203      315F5772 
 3203      69746550 
 3203      6572696F 
 3204              	.LASF68:
 3205 01bb 636F6D6D 		.ascii	"command\000"
 3205      616E6400 
 3206              	.LASF5:
 3207 01c3 6C6F6E67 		.ascii	"long unsigned int\000"
 3207      20756E73 
 3207      69676E65 
 3207      6420696E 
 3207      7400
 3208              	.LASF30:
 3209 01d5 6D6F6465 		.ascii	"modeMask\000"
 3209      4D61736B 
 3209      00
 3210              	.LASF56:
 3211 01de 51756164 		.ascii	"QuadDec_1_WriteCompareBuf\000"
 3211      4465635F 
 3211      315F5772 
 3211      69746543 
 3211      6F6D7061 
 3212              	.LASF31:
 3213 01f8 51756164 		.ascii	"QuadDec_1_SetPWMSyncKill\000"
 3213      4465635F 
 3213      315F5365 
 3213      7450574D 
 3213      53796E63 
 3214              	.LASF46:
 3215 0211 51756164 		.ascii	"QuadDec_1_ReadPeriod\000"
 3215      4465635F 
 3215      315F5265 
 3215      61645065 
 3215      72696F64 
 3216              	.LASF3:
 3217 0226 73686F72 		.ascii	"short unsigned int\000"
 3217      7420756E 
 3217      7369676E 
 3217      65642069 
 3217      6E7400
 3218              	.LASF66:
 3219 0239 51756164 		.ascii	"QuadDec_1_SetCountMode\000"
 3219      4465635F 
 3219      315F5365 
 3219      74436F75 
 3219      6E744D6F 
 3220              	.LASF78:
 3221 0250 433A5C44 		.ascii	"C:\\Documents and Settings\\Chuck\\My Documents\\PS"
 3221      6F63756D 
 3221      656E7473 
 3221      20616E64 
 3221      20536574 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 84


 3222 027f 6F432043 		.ascii	"oC Creator\\RosOnAStick\\RosOnAStick.cydsn\000"
 3222      72656174 
 3222      6F725C52 
 3222      6F734F6E 
 3222      41537469 
 3223              	.LASF27:
 3224 02a8 51756164 		.ascii	"QuadDec_1_SetOneShot\000"
 3224      4465635F 
 3224      315F5365 
 3224      744F6E65 
 3224      53686F74 
 3225              	.LASF28:
 3226 02bd 6F6E6553 		.ascii	"oneShotEnable\000"
 3226      686F7445 
 3226      6E61626C 
 3226      6500
 3227              	.LASF60:
 3228 02cb 51756164 		.ascii	"QuadDec_1_ReadCaptureBuf\000"
 3228      4465635F 
 3228      315F5265 
 3228      61644361 
 3228      70747572 
 3229              	.LASF52:
 3230 02e4 51756164 		.ascii	"QuadDec_1_SetPeriodSwap\000"
 3230      4465635F 
 3230      315F5365 
 3230      74506572 
 3230      696F6453 
 3231              	.LASF43:
 3232 02fc 51756164 		.ascii	"QuadDec_1_WritePeriod\000"
 3232      4465635F 
 3232      315F5772 
 3232      69746550 
 3232      6572696F 
 3233              	.LASF73:
 3234 0312 51756164 		.ascii	"QuadDec_1_GetInterruptSource\000"
 3234      4465635F 
 3234      315F4765 
 3234      74496E74 
 3234      65727275 
 3235              	.LASF76:
 3236 032f 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3236      4320342E 
 3236      382E3420 
 3236      32303134 
 3236      30353236 
 3237 0362 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3237      20726576 
 3237      6973696F 
 3237      6E203231 
 3237      31333538 
 3238 0395 30202D66 		.ascii	"0 -ffunction-sections -fno-rtti -fno-exceptions -fu"
 3238      66756E63 
 3238      74696F6E 
 3238      2D736563 
 3238      74696F6E 
 3239 03c8 6E736967 		.ascii	"nsigned-char -funsigned-bitfields -fshort-enums\000"
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 85


 3239      6E65642D 
 3239      63686172 
 3239      202D6675 
 3239      6E736967 
 3240              	.LASF14:
 3241 03f8 72656733 		.ascii	"reg32\000"
 3241      3200
 3242              	.LASF53:
 3243 03fe 51756164 		.ascii	"QuadDec_1_WriteCompare\000"
 3243      4465635F 
 3243      315F5772 
 3243      69746543 
 3243      6F6D7061 
 3244              	.LASF15:
 3245 0415 73697A65 		.ascii	"sizetype\000"
 3245      74797065 
 3245      00
 3246              	.LASF32:
 3247 041e 73796E63 		.ascii	"syncKillEnable\000"
 3247      4B696C6C 
 3247      456E6162 
 3247      6C6500
 3248              	.LASF54:
 3249 042d 636F6D70 		.ascii	"compare\000"
 3249      61726500 
 3250              	.LASF29:
 3251 0435 51756164 		.ascii	"QuadDec_1_SetPWMMode\000"
 3251      4465635F 
 3251      315F5365 
 3251      7450574D 
 3251      4D6F6465 
 3252              	.LASF51:
 3253 044a 51756164 		.ascii	"QuadDec_1_ReadPeriodBuf\000"
 3253      4465635F 
 3253      315F5265 
 3253      61645065 
 3253      72696F64 
 3254              	.LASF41:
 3255 0462 51756164 		.ascii	"QuadDec_1_SetCounterMode\000"
 3255      4465635F 
 3255      315F5365 
 3255      74436F75 
 3255      6E746572 
 3256              	.LASF11:
 3257 047b 666C6F61 		.ascii	"float\000"
 3257      7400
 3258              	.LASF71:
 3259 0481 696E7465 		.ascii	"interruptMask\000"
 3259      72727570 
 3259      744D6173 
 3259      6B00
 3260              	.LASF26:
 3261 048f 70726573 		.ascii	"prescaler\000"
 3261      63616C65 
 3261      7200
 3262              	.LASF59:
 3263 0499 51756164 		.ascii	"QuadDec_1_ReadCapture\000"
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 86


 3263      4465635F 
 3263      315F5265 
 3263      61644361 
 3263      70747572 
 3264              	.LASF39:
 3265 04af 51756164 		.ascii	"QuadDec_1_WriteCounter\000"
 3265      4465635F 
 3265      315F5772 
 3265      69746543 
 3265      6F756E74 
 3266              	.LASF1:
 3267 04c6 756E7369 		.ascii	"unsigned char\000"
 3267      676E6564 
 3267      20636861 
 3267      7200
 3268              	.LASF34:
 3269 04d4 73746F70 		.ascii	"stopOnKillEnable\000"
 3269      4F6E4B69 
 3269      6C6C456E 
 3269      61626C65 
 3269      00
 3270              	.LASF2:
 3271 04e5 73686F72 		.ascii	"short int\000"
 3271      7420696E 
 3271      7400
 3272              	.LASF19:
 3273 04ef 51756164 		.ascii	"QuadDec_1_Stop\000"
 3273      4465635F 
 3273      315F5374 
 3273      6F7000
 3274              	.LASF61:
 3275 04fe 51756164 		.ascii	"QuadDec_1_SetCaptureMode\000"
 3275      4465635F 
 3275      315F5365 
 3275      74436170 
 3275      74757265 
 3276              	.LASF55:
 3277 0517 51756164 		.ascii	"QuadDec_1_ReadCompare\000"
 3277      4465635F 
 3277      315F5265 
 3277      6164436F 
 3277      6D706172 
 3278              	.LASF22:
 3279 052d 51756164 		.ascii	"QuadDec_1_SetQDMode\000"
 3279      4465635F 
 3279      315F5365 
 3279      7451444D 
 3279      6F646500 
 3280              	.LASF13:
 3281 0541 63686172 		.ascii	"char\000"
 3281      00
 3282              	.LASF23:
 3283 0546 6D6F6465 		.ascii	"mode\000"
 3283      00
 3284              	.LASF64:
 3285 054b 51756164 		.ascii	"QuadDec_1_SetStartMode\000"
 3285      4465635F 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 87


 3285      315F5365 
 3285      74537461 
 3285      72744D6F 
 3286              	.LASF79:
 3287 0562 51756164 		.ascii	"QuadDec_1_initVar\000"
 3287      4465635F 
 3287      315F696E 
 3287      69745661 
 3287      7200
 3288              	.LASF42:
 3289 0574 636F756E 		.ascii	"counterMode\000"
 3289      7465724D 
 3289      6F646500 
 3290              	.LASF63:
 3291 0580 51756164 		.ascii	"QuadDec_1_SetReloadMode\000"
 3291      4465635F 
 3291      315F5365 
 3291      7452656C 
 3291      6F61644D 
 3292              	.LASF58:
 3293 0598 51756164 		.ascii	"QuadDec_1_ReadCompareBuf\000"
 3293      4465635F 
 3293      315F5265 
 3293      6164436F 
 3293      6D706172 
 3294              	.LASF77:
 3295 05b1 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\QuadDec_1.c\000"
 3295      6E657261 
 3295      7465645F 
 3295      536F7572 
 3295      63655C50 
 3296              	.LASF47:
 3297 05d6 51756164 		.ascii	"QuadDec_1_SetCompareSwap\000"
 3297      4465635F 
 3297      315F5365 
 3297      74436F6D 
 3297      70617265 
 3298              	.LASF57:
 3299 05ef 636F6D70 		.ascii	"compareBuf\000"
 3299      61726542 
 3299      756600
 3300              	.LASF18:
 3301 05fa 51756164 		.ascii	"QuadDec_1_Enable\000"
 3301      4465635F 
 3301      315F456E 
 3301      61626C65 
 3301      00
 3302              	.LASF33:
 3303 060b 51756164 		.ascii	"QuadDec_1_SetPWMStopOnKill\000"
 3303      4465635F 
 3303      315F5365 
 3303      7450574D 
 3303      53746F70 
 3304              	.LASF20:
 3305 0626 656E6162 		.ascii	"enableInterrupts\000"
 3305      6C65496E 
 3305      74657272 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\ccRWESA0.s 			page 88


 3305      75707473 
 3305      00
 3306              	.LASF25:
 3307 0637 51756164 		.ascii	"QuadDec_1_SetPrescaler\000"
 3307      4465635F 
 3307      315F5365 
 3307      74507265 
 3307      7363616C 
 3308              	.LASF17:
 3309 064e 51756164 		.ascii	"QuadDec_1_Start\000"
 3309      4465635F 
 3309      315F5374 
 3309      61727400 
 3310              	.LASF48:
 3311 065e 73776170 		.ascii	"swapEnable\000"
 3311      456E6162 
 3311      6C6500
 3312              	.LASF50:
 3313 0669 70657269 		.ascii	"periodBuf\000"
 3313      6F644275 
 3313      6600
 3314              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
