ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_SEQ.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_SAR_SEQ_initVar
  18              		.bss
  19              		.type	ADC_SAR_SEQ_initVar, %object
  20              		.size	ADC_SAR_SEQ_initVar, 1
  21              	ADC_SAR_SEQ_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_SAR_SEQ_offset,6,4
  24              		.comm	ADC_SAR_SEQ_countsPer10Volt,12,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_SAR_SEQ_channelsConfig, %object
  28              		.size	ADC_SAR_SEQ_channelsConfig, 12
  29              	ADC_SAR_SEQ_channelsConfig:
  30 0000 00000000 		.space	12
  30      00000000 
  30      00000000 
  31              		.section	.text.ADC_SAR_SEQ_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_SAR_SEQ_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_SAR_SEQ_Start, %function
  37              	ADC_SAR_SEQ_Start:
  38              	.LFB0:
  39              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_SEQ.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * File Name: ADC_SAR_SEQ.c
   3:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 2


  17:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #include "ADC_SAR_SEQ.h"
  20:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  22:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /***************************************
  23:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global data allocation
  24:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ***************************************/
  25:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** uint8 ADC_SAR_SEQ_initVar = 0u;
  26:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** volatile int16 ADC_SAR_SEQ_offset[ADC_SAR_SEQ_TOTAL_CHANNELS_NUM];
  27:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** volatile int32 ADC_SAR_SEQ_countsPer10Volt[ADC_SAR_SEQ_TOTAL_CHANNELS_NUM];   /* Gain compensation 
  28:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  30:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /***************************************
  31:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Local data allocation
  32:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ***************************************/
  33:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /* Channels configuration generated by customiser */
  34:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** static const uint32 CYCODE ADC_SAR_SEQ_channelsConfig[] = { 0x00000000u, 0x00000000u, 0x00000000u }
  35:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  37:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
  38:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_Start
  39:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
  40:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  41:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
  42:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Performs all required initialization for this component
  43:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  and enables the power. The power will be set to the appropriate
  44:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  power based on the clock frequency.
  45:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  46:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
  47:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
  48:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  49:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
  50:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
  51:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  52:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
  53:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  The ADC_SAR_SEQ_initVar variable is used to indicate when/if initial
  54:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  configuration of this component has happened. The variable is initialized to
  55:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  56:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  57:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Start() routine.
  58:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  If re-initialization of the component is required the variable should be set
  59:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  to zero before call of ADC_SAR_SEQ_Start() routine, or the user may call
  60:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Init() and ADC_SAR_SEQ_Enable() as done in the
  61:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Start() routine.
  62:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  63:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
  64:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Start(void)
  65:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
  40              		.loc 1 65 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 3


  48              	.LCFI1:
  49              		.cfi_def_cfa_register 7
  66:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* If not Initialized then initialize all required hardware and software */
  67:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     if(ADC_SAR_SEQ_initVar == 0u)
  50              		.loc 1 67 0
  51 0004 064B     		ldr	r3, .L3
  52 0006 1B78     		ldrb	r3, [r3]
  53 0008 002B     		cmp	r3, #0
  54 000a 04D1     		bne	.L2
  68:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
  69:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_Init();
  55              		.loc 1 69 0
  56 000c FFF7FEFF 		bl	ADC_SAR_SEQ_Init
  70:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_initVar = 1u;
  57              		.loc 1 70 0
  58 0010 034B     		ldr	r3, .L3
  59 0012 0122     		mov	r2, #1
  60 0014 1A70     		strb	r2, [r3]
  61              	.L2:
  71:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
  72:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_Enable();
  62              		.loc 1 72 0
  63 0016 FFF7FEFF 		bl	ADC_SAR_SEQ_Enable
  73:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
  64              		.loc 1 73 0
  65 001a BD46     		mov	sp, r7
  66              		@ sp needed for prologue
  67 001c 80BD     		pop	{r7, pc}
  68              	.L4:
  69 001e C046     		.align	2
  70              	.L3:
  71 0020 00000000 		.word	ADC_SAR_SEQ_initVar
  72              		.cfi_endproc
  73              	.LFE0:
  74              		.size	ADC_SAR_SEQ_Start, .-ADC_SAR_SEQ_Start
  75              		.section	.text.ADC_SAR_SEQ_Init,"ax",%progbits
  76              		.align	2
  77              		.global	ADC_SAR_SEQ_Init
  78              		.code	16
  79              		.thumb_func
  80              		.type	ADC_SAR_SEQ_Init, %function
  81              	ADC_SAR_SEQ_Init:
  82              	.LFB1:
  74:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  76:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
  77:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_Init
  78:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
  79:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  80:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
  81:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Initialize component's parameters to the parameters set by user in the
  82:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  customizer of the component placed onto schematic. Usually called in
  83:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Start().
  84:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  85:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
  86:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
  87:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 4


  88:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
  89:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
  90:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  91:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
  92:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  The ADC_SAR_SEQ_offset variable is initialized.
  93:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  94:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Init(void)
  96:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
  83              		.loc 1 96 0
  84              		.cfi_startproc
  85 0000 90B5     		push	{r4, r7, lr}
  86              	.LCFI2:
  87              		.cfi_def_cfa_offset 12
  88              		.cfi_offset 4, -12
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 85B0     		sub	sp, sp, #20
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 32
  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI4:
  96              		.cfi_def_cfa_register 7
  97:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 chNum;
  98:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 tmpRegVal;
  99:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     int32 counts;
 100:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 101:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u)
 102:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         static const uint8 CYCODE ADC_SAR_SEQ_InputsPlacement[] =
 103:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 104:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             (uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 105:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_0_PIN
 106:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 107:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****              (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_1_PIN
 108:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 2u)
 109:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 110:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_2_PIN
 111:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 2u */
 112:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 3u)
 113:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 114:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_3_PIN
 115:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 3u */
 116:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 4u)
 117:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 118:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_4_PIN
 119:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 4u */
 120:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 5u)
 121:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 122:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_5_PIN
 123:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 5u */
 124:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 6u)
 125:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 126:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_6_PIN
 127:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 6u */
 128:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 7u)
 129:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 130:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_7_PIN
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 5


 131:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 7u */
 132:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 8u)
 133:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 134:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_8_PIN
 135:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 8u */
 136:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         };
 137:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u */
 138:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 139:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_IRQ_REMOVE == 0u)
 140:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Start and set interrupt vector */
 141:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CyIntSetPriority(ADC_SAR_SEQ_INTC_NUMBER, ADC_SAR_SEQ_INTC_PRIOR_NUMBER);
  97              		.loc 1 141 0
  98 0006 0E20     		mov	r0, #14
  99 0008 0321     		mov	r1, #3
 100 000a FFF7FEFF 		bl	CyIntSetPriority
 142:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         (void)CyIntSetVector(ADC_SAR_SEQ_INTC_NUMBER, &ADC_SAR_SEQ_ISR);
 101              		.loc 1 142 0
 102 000e 5B4B     		ldr	r3, .L15
 103 0010 0E20     		mov	r0, #14
 104 0012 191C     		mov	r1, r3
 105 0014 FFF7FEFF 		bl	CyIntSetVector
 143:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif   /* End ADC_SAR_SEQ_IRQ_REMOVE */
 144:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 145:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Init SAR and MUX registers */
 146:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CHAN_EN_REG = ADC_SAR_SEQ_DEFAULT_EN_CHANNELS;
 106              		.loc 1 146 0
 107 0018 594B     		ldr	r3, .L15+4
 108 001a 0722     		mov	r2, #7
 109 001c 1A60     		str	r2, [r3]
 147:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG = ADC_SAR_SEQ_DEFAULT_CTRL_REG_CFG;
 110              		.loc 1 147 0
 111 001e 594B     		ldr	r3, .L15+8
 112 0020 594A     		ldr	r2, .L15+12
 113 0022 1A60     		str	r2, [r3]
 148:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SAMPLE_CTRL_REG = ADC_SAR_SEQ_DEFAULT_SAMPLE_CTRL_REG_CFG;
 114              		.loc 1 148 0
 115 0024 594B     		ldr	r3, .L15+16
 116 0026 5A4A     		ldr	r2, .L15+20
 117 0028 1A60     		str	r2, [r3]
 149:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG = ADC_SAR_SEQ_DEFAULT_RANGE_THRES_REG_CFG;
 118              		.loc 1 149 0
 119 002a 5A4B     		ldr	r3, .L15+24
 120 002c 5A4A     		ldr	r2, .L15+28
 121 002e 1A60     		str	r2, [r3]
 150:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_COND_REG  = ADC_SAR_SEQ_COMPARE_MODE;
 122              		.loc 1 150 0
 123 0030 5A4B     		ldr	r3, .L15+32
 124 0032 0022     		mov	r2, #0
 125 0034 1A60     		str	r2, [r3]
 151:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SAMPLE_TIME01_REG = ADC_SAR_SEQ_DEFAULT_SAMPLE_TIME01_REG_CFG;
 126              		.loc 1 151 0
 127 0036 5A4B     		ldr	r3, .L15+36
 128 0038 5A4A     		ldr	r2, .L15+40
 129 003a 1A60     		str	r2, [r3]
 152:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SAMPLE_TIME23_REG = ADC_SAR_SEQ_DEFAULT_SAMPLE_TIME23_REG_CFG;
 130              		.loc 1 152 0
 131 003c 5A4B     		ldr	r3, .L15+44
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 6


 132 003e 594A     		ldr	r2, .L15+40
 133 0040 1A60     		str	r2, [r3]
 153:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 154:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_DEFAULT_MUX_SWITCH0 != 0u)
 155:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_MUX_SWITCH0_REG |= ADC_SAR_SEQ_DEFAULT_MUX_SWITCH0; 
 134              		.loc 1 155 0
 135 0042 5A4B     		ldr	r3, .L15+48
 136 0044 594A     		ldr	r2, .L15+48
 137 0046 1268     		ldr	r2, [r2]
 138 0048 8021     		mov	r1, #128
 139 004a 4902     		lsl	r1, r1, #9
 140 004c 0A43     		orr	r2, r1
 141 004e 1A60     		str	r2, [r3]
 156:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 157:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u)
 158:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             ADC_SAR_SEQ_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_SEQ_DEFAULT_MUX_SWITCH0; 
 142              		.loc 1 158 0
 143 0050 574B     		ldr	r3, .L15+52
 144 0052 574A     		ldr	r2, .L15+52
 145 0054 1268     		ldr	r2, [r2]
 146 0056 8021     		mov	r1, #128
 147 0058 4902     		lsl	r1, r1, #9
 148 005a 0A43     		orr	r2, r1
 149 005c 1A60     		str	r2, [r3]
 159:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u */
 160:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /*ADC_SAR_SEQ_CHANNELS_MODE !=0 */    
 161:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 162:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SATURATE_INTR_MASK_REG = 0u;
 150              		.loc 1 162 0
 151 005e 554B     		ldr	r3, .L15+56
 152 0060 0022     		mov	r2, #0
 153 0062 1A60     		str	r2, [r3]
 163:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_INTR_MASK_REG = 0u;
 154              		.loc 1 163 0
 155 0064 544B     		ldr	r3, .L15+60
 156 0066 0022     		mov	r2, #0
 157 0068 1A60     		str	r2, [r3]
 164:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_INTR_MASK_REG = ADC_SAR_SEQ_SAR_INTR_MASK;
 158              		.loc 1 164 0
 159 006a 544B     		ldr	r3, .L15+64
 160 006c 0122     		mov	r2, #1
 161 006e 1A60     		str	r2, [r3]
 165:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_ANA_TRIM_REG = ADC_SAR_SEQ_TRIM_COEF;
 162              		.loc 1 165 0
 163 0070 534B     		ldr	r3, .L15+68
 164 0072 0222     		mov	r2, #2
 165 0074 1A60     		str	r2, [r3]
 166:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     
 167:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Read and modify default configuration based on characterization */
 168:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     tmpRegVal = ADC_SAR_SEQ_SAR_DFT_CTRL_REG;
 166              		.loc 1 168 0
 167 0076 534B     		ldr	r3, .L15+72
 168 0078 1B68     		ldr	r3, [r3]
 169 007a 7B60     		str	r3, [r7, #4]
 169:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_NOMINAL_CLOCK_FREQ > (ADC_SAR_SEQ_MAX_FREQUENCY / 2))
 170:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         tmpRegVal &= (uint32)~ADC_SAR_SEQ_DCEN;
 171:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         tmpRegVal |= ADC_SAR_SEQ_SEL_CSEL_DFT_CHAR;
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 7


 172:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #else  /* clock speed < 9 Mhz */  
 173:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         tmpRegVal |= ADC_SAR_SEQ_DLY_INC;
 170              		.loc 1 173 0
 171 007c 7B68     		ldr	r3, [r7, #4]
 172 007e 0122     		mov	r2, #1
 173 0080 1343     		orr	r3, r2
 174 0082 7B60     		str	r3, [r7, #4]
 174:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* clock speed > 9 Mhz */
 175:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_DFT_CTRL_REG = tmpRegVal;
 175              		.loc 1 175 0
 176 0084 4F4B     		ldr	r3, .L15+72
 177 0086 7A68     		ldr	r2, [r7, #4]
 178 0088 1A60     		str	r2, [r3]
 176:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     
 177:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12)
 178:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_WOUNDING_REG = ADC_SAR_SEQ_ALT_WOUNDING;
 179:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12 */
 180:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 181:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     for(chNum = 0u; chNum < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM; chNum++)
 179              		.loc 1 181 0
 180 008a 0023     		mov	r3, #0
 181 008c FB60     		str	r3, [r7, #12]
 182 008e 6EE0     		b	.L6
 183              	.L14:
 182:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 183:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         tmpRegVal = (ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_CHANNEL_CONFIG_MASK);
 184              		.loc 1 183 0
 185 0090 4D4B     		ldr	r3, .L15+76
 186 0092 FA68     		ldr	r2, [r7, #12]
 187 0094 9200     		lsl	r2, r2, #2
 188 0096 D258     		ldr	r2, [r2, r3]
 189 0098 DC23     		mov	r3, #220
 190 009a 9B01     		lsl	r3, r3, #6
 191 009c 1340     		and	r3, r2
 192 009e 7B60     		str	r3, [r7, #4]
 184:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u)
 185:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal |= ADC_SAR_SEQ_InputsPlacement[chNum];
 193              		.loc 1 185 0
 194 00a0 4A4A     		ldr	r2, .L15+80
 195 00a2 FB68     		ldr	r3, [r7, #12]
 196 00a4 D318     		add	r3, r2, r3
 197 00a6 1B78     		ldrb	r3, [r3]
 198 00a8 7A68     		ldr	r2, [r7, #4]
 199 00aa 1343     		orr	r3, r2
 200 00ac 7B60     		str	r3, [r7, #4]
 186:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u */
 187:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* When the part is wounded to 10-bit then the SUB_RESOLUTION bit 
 188:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit 
 189:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         *  (0) and 8-bit (1) resolution.
 190:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         */
 191:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if((ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12) && \
 192:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             (ADC_SAR_SEQ_ALT_WOUNDING == ADC_SAR_SEQ_WOUNDING_10BIT))
 193:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal &= (uint32)(~ADC_SAR_SEQ_ALT_RESOLUTION_ON);
 194:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12 */
 195:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 196:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 197:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if(chNum < ADC_SAR_SEQ_SEQUENCED_CHANNELS_NUM)
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 8


 198:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 199:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 200:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_SEQ_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegV
 201              		.loc 1 200 0
 202 00ae FB68     		ldr	r3, [r7, #12]
 203 00b0 9B00     		lsl	r3, r3, #2
 204 00b2 474A     		ldr	r2, .L15+84
 205 00b4 9B18     		add	r3, r3, r2
 206 00b6 7A68     		ldr	r2, [r7, #4]
 207 00b8 1A60     		str	r2, [r3]
 201:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 202:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_SATURATE_EN_MASK) != 0u)
 208              		.loc 1 202 0
 209 00ba 434B     		ldr	r3, .L15+76
 210 00bc FA68     		ldr	r2, [r7, #12]
 211 00be 9200     		lsl	r2, r2, #2
 212 00c0 D258     		ldr	r2, [r2, r3]
 213 00c2 0123     		mov	r3, #1
 214 00c4 1340     		and	r3, r2
 215 00c6 0AD0     		beq	.L7
 203:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 204:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 216              		.loc 1 204 0
 217 00c8 3A4B     		ldr	r3, .L15+56
 218 00ca 3A4A     		ldr	r2, .L15+56
 219 00cc 1168     		ldr	r1, [r2]
 220 00ce FA68     		ldr	r2, [r7, #12]
 221 00d0 0120     		mov	r0, #1
 222 00d2 041C     		mov	r4, r0
 223 00d4 9440     		lsl	r4, r4, r2
 224 00d6 221C     		mov	r2, r4
 225 00d8 92B2     		uxth	r2, r2
 226 00da 0A43     		orr	r2, r1
 227 00dc 1A60     		str	r2, [r3]
 228              	.L7:
 205:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 206:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 207:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_RANGE_CTRL_EN_MASK) != 0u)
 229              		.loc 1 207 0
 230 00de 3A4B     		ldr	r3, .L15+76
 231 00e0 FA68     		ldr	r2, [r7, #12]
 232 00e2 9200     		lsl	r2, r2, #2
 233 00e4 D258     		ldr	r2, [r2, r3]
 234 00e6 0223     		mov	r3, #2
 235 00e8 1340     		and	r3, r2
 236 00ea 0AD0     		beq	.L8
 208:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 209:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 237              		.loc 1 209 0
 238 00ec 324B     		ldr	r3, .L15+60
 239 00ee 324A     		ldr	r2, .L15+60
 240 00f0 1168     		ldr	r1, [r2]
 241 00f2 FA68     		ldr	r2, [r7, #12]
 242 00f4 0120     		mov	r0, #1
 243 00f6 041C     		mov	r4, r0
 244 00f8 9440     		lsl	r4, r4, r2
 245 00fa 221C     		mov	r2, r4
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 9


 246 00fc 92B2     		uxth	r2, r2
 247 00fe 0A43     		orr	r2, r1
 248 0100 1A60     		str	r2, [r3]
 249              	.L8:
 210:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 211:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 212:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 213:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             else
 214:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 215:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 CY_SET_REG32(ADC_SAR_SEQ_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_SEQ_INJ_TAILG
 216:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 217:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_SATURATE_EN_MASK) != 0u)
 218:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 {
 219:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                     ADC_SAR_SEQ_SAR_INTR_MASK_REG |= ADC_SAR_SEQ_INJ_SATURATE_MASK;
 220:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 }
 221:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 222:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_RANGE_CTRL_EN_MASK) != 0u)
 223:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 {
 224:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                     ADC_SAR_SEQ_SAR_INTR_MASK_REG |= ADC_SAR_SEQ_INJ_RANGE_MASK;
 225:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 }
 226:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 227:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 228:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 229:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_ALT_RESOLUTION_ON) != 0u)
 250              		.loc 1 229 0
 251 0102 314B     		ldr	r3, .L15+76
 252 0104 FA68     		ldr	r2, [r7, #12]
 253 0106 9200     		lsl	r2, r2, #2
 254 0108 D258     		ldr	r2, [r2, r3]
 255 010a 8023     		mov	r3, #128
 256 010c 9B00     		lsl	r3, r3, #2
 257 010e 1340     		and	r3, r2
 258 0110 03D0     		beq	.L9
 230:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 231:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                counts = (int32)ADC_SAR_SEQ_DEFAULT_MAX_WRK_ALT;
 259              		.loc 1 231 0
 260 0112 8023     		mov	r3, #128
 261 0114 5B00     		lsl	r3, r3, #1
 262 0116 BB60     		str	r3, [r7, #8]
 263 0118 02E0     		b	.L10
 264              	.L9:
 232:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 233:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         else
 234:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 235:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                counts = (int32)ADC_SAR_SEQ_SAR_WRK_MAX_12BIT;
 265              		.loc 1 235 0
 266 011a 8023     		mov	r3, #128
 267 011c 5B01     		lsl	r3, r3, #5
 268 011e BB60     		str	r3, [r7, #8]
 269              	.L10:
 236:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 237:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 238:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_DIFFERENTIAL_EN) == 0u)
 270              		.loc 1 238 0
 271 0120 294B     		ldr	r3, .L15+76
 272 0122 FA68     		ldr	r2, [r7, #12]
 273 0124 9200     		lsl	r2, r2, #2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 10


 274 0126 D258     		ldr	r2, [r2, r3]
 275 0128 8023     		mov	r3, #128
 276 012a 5B00     		lsl	r3, r3, #1
 277 012c 1340     		and	r3, r2
 278 012e 05D1     		bne	.L11
 239:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {  
 240:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if((ADC_SAR_SEQ_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FSIGNED) && \
 241:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 (ADC_SAR_SEQ_DEFAULT_NEG_INPUT_SEL == ADC_SAR_SEQ__VREF))
 242:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 243:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = (int16)(counts / -2);
 244:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #else    
 245:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = 0;
 279              		.loc 1 245 0
 280 0130 284B     		ldr	r3, .L15+88
 281 0132 FA68     		ldr	r2, [r7, #12]
 282 0134 5200     		lsl	r2, r2, #1
 283 0136 0021     		mov	r1, #0
 284 0138 D152     		strh	r1, [r2, r3]
 285 013a 04E0     		b	.L12
 286              	.L11:
 246:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FSIGNED */    
 247:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 248:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         else    /* Differential channel */
 249:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 250:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FUNSIGNED)
 251:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 /* Set offset to the half scale to convert results to signed format */
 252:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = (int16)(counts / 2);
 253:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #else    
 254:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = 0;
 287              		.loc 1 254 0
 288 013c 254B     		ldr	r3, .L15+88
 289 013e FA68     		ldr	r2, [r7, #12]
 290 0140 5200     		lsl	r2, r2, #1
 291 0142 0021     		mov	r1, #0
 292 0144 D152     		strh	r1, [r2, r3]
 293              	.L12:
 255:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* end ADC_SAR_SEQ_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FUNSIGNED */  
 256:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 257:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Calculate gain in counts per 10 volts with rounding */
 258:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_SEQ_10MV_COUNTS) + 
 294              		.loc 1 258 0
 295 0146 BB68     		ldr	r3, [r7, #8]
 296 0148 234A     		ldr	r2, .L15+92
 297 014a 5343     		mul	r3, r2
 298 014c 8022     		mov	r2, #128
 299 014e D200     		lsl	r2, r2, #3
 300 0150 9B18     		add	r3, r3, r2
 259:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                             ADC_SAR_SEQ_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_SEQ_DEFAULT_VREF_MV_VALUE
 301              		.loc 1 259 0
 302 0152 002B     		cmp	r3, #0
 303 0154 01DA     		bge	.L13
 304 0156 214C     		ldr	r4, .L15+96
 305 0158 1B19     		add	r3, r3, r4
 306              	.L13:
 307 015a DB12     		asr	r3, r3, #11
 258:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_SEQ_10MV_COUNTS) + 
 308              		.loc 1 258 0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 11


 309 015c 9BB2     		uxth	r3, r3
 310 015e 19B2     		sxth	r1, r3
 311 0160 1F4B     		ldr	r3, .L15+100
 312 0162 FA68     		ldr	r2, [r7, #12]
 313 0164 9200     		lsl	r2, r2, #2
 314 0166 D150     		str	r1, [r2, r3]
 181:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     for(chNum = 0u; chNum < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM; chNum++)
 315              		.loc 1 181 0
 316 0168 FB68     		ldr	r3, [r7, #12]
 317 016a 0133     		add	r3, r3, #1
 318 016c FB60     		str	r3, [r7, #12]
 319              	.L6:
 181:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     for(chNum = 0u; chNum < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM; chNum++)
 320              		.loc 1 181 0 is_stmt 0 discriminator 1
 321 016e FB68     		ldr	r3, [r7, #12]
 322 0170 022B     		cmp	r3, #2
 323 0172 8DD9     		bls	.L14
 260:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 261:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 324              		.loc 1 261 0 is_stmt 1
 325 0174 BD46     		mov	sp, r7
 326 0176 05B0     		add	sp, sp, #20
 327              		@ sp needed for prologue
 328 0178 90BD     		pop	{r4, r7, pc}
 329              	.L16:
 330 017a C046     		.align	2
 331              	.L15:
 332 017c 00000000 		.word	ADC_SAR_SEQ_ISR
 333 0180 20001A40 		.word	1075445792
 334 0184 00001A40 		.word	1075445760
 335 0188 C0200010 		.word	268443840
 336 018c 04001A40 		.word	1075445764
 337 0190 8C000080 		.word	-2147483508
 338 0194 18001A40 		.word	1075445784
 339 0198 0000FF07 		.word	134152192
 340 019c 1C001A40 		.word	1075445788
 341 01a0 10001A40 		.word	1075445776
 342 01a4 04000400 		.word	262148
 343 01a8 14001A40 		.word	1075445780
 344 01ac 00031A40 		.word	1075446528
 345 01b0 40031A40 		.word	1075446592
 346 01b4 28021A40 		.word	1075446312
 347 01b8 38021A40 		.word	1075446328
 348 01bc 18021A40 		.word	1075446296
 349 01c0 000F1A40 		.word	1075449600
 350 01c4 30001A40 		.word	1075445808
 351 01c8 00000000 		.word	ADC_SAR_SEQ_channelsConfig
 352 01cc 0C000000 		.word	ADC_SAR_SEQ_InputsPlacement.4650
 353 01d0 80001A40 		.word	1075445888
 354 01d4 00000000 		.word	ADC_SAR_SEQ_offset
 355 01d8 10270000 		.word	10000
 356 01dc FF070000 		.word	2047
 357 01e0 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 358              		.cfi_endproc
 359              	.LFE1:
 360              		.size	ADC_SAR_SEQ_Init, .-ADC_SAR_SEQ_Init
 361              		.section	.text.ADC_SAR_SEQ_Enable,"ax",%progbits
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 12


 362              		.align	2
 363              		.global	ADC_SAR_SEQ_Enable
 364              		.code	16
 365              		.thumb_func
 366              		.type	ADC_SAR_SEQ_Enable, %function
 367              	ADC_SAR_SEQ_Enable:
 368              	.LFB2:
 262:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 263:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 264:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_1_Enable
 265:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 266:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 267:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 268:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Enables the clock and analog power for SAR ADC.
 269:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 270:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 271:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 272:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 273:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 274:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 275:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 276:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 277:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Enable(void)
 278:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 369              		.loc 1 278 0
 370              		.cfi_startproc
 371 0000 80B5     		push	{r7, lr}
 372              	.LCFI5:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 00AF     		add	r7, sp, #0
 377              	.LCFI6:
 378              		.cfi_def_cfa_register 7
 279:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG |= ADC_SAR_SEQ_ENABLE;
 379              		.loc 1 279 0
 380 0004 054B     		ldr	r3, .L18
 381 0006 054A     		ldr	r2, .L18
 382 0008 1268     		ldr	r2, [r2]
 383 000a 8021     		mov	r1, #128
 384 000c 0906     		lsl	r1, r1, #24
 385 000e 0A43     		orr	r2, r1
 386 0010 1A60     		str	r2, [r3]
 280:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* The block is ready to use 10 us after the enable signal is set high. */
 281:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     CyDelayUs(ADC_SAR_SEQ_10US_DELAY);
 387              		.loc 1 281 0
 388 0012 0A20     		mov	r0, #10
 389 0014 FFF7FEFF 		bl	CyDelayUs
 282:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 390              		.loc 1 282 0
 391 0018 BD46     		mov	sp, r7
 392              		@ sp needed for prologue
 393 001a 80BD     		pop	{r7, pc}
 394              	.L19:
 395              		.align	2
 396              	.L18:
 397 001c 00001A40 		.word	1075445760
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 13


 398              		.cfi_endproc
 399              	.LFE2:
 400              		.size	ADC_SAR_SEQ_Enable, .-ADC_SAR_SEQ_Enable
 401              		.section	.text.ADC_SAR_SEQ_Stop,"ax",%progbits
 402              		.align	2
 403              		.global	ADC_SAR_SEQ_Stop
 404              		.code	16
 405              		.thumb_func
 406              		.type	ADC_SAR_SEQ_Stop, %function
 407              	ADC_SAR_SEQ_Stop:
 408              	.LFB3:
 283:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 284:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 285:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_Stop
 287:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 289:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 290:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 291:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mode.
 292:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 293:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 294:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 295:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 296:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 297:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 298:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 299:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 300:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Stop(void)
 301:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 409              		.loc 1 301 0
 410              		.cfi_startproc
 411 0000 80B5     		push	{r7, lr}
 412              	.LCFI7:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 00AF     		add	r7, sp, #0
 417              	.LCFI8:
 418              		.cfi_def_cfa_register 7
 302:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG &= (uint32)~ADC_SAR_SEQ_ENABLE;
 419              		.loc 1 302 0
 420 0004 034B     		ldr	r3, .L21
 421 0006 034A     		ldr	r2, .L21
 422 0008 1268     		ldr	r2, [r2]
 423 000a 5200     		lsl	r2, r2, #1
 424 000c 5208     		lsr	r2, r2, #1
 425 000e 1A60     		str	r2, [r3]
 303:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 426              		.loc 1 303 0
 427 0010 BD46     		mov	sp, r7
 428              		@ sp needed for prologue
 429 0012 80BD     		pop	{r7, pc}
 430              	.L22:
 431              		.align	2
 432              	.L21:
 433 0014 00001A40 		.word	1075445760
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 14


 434              		.cfi_endproc
 435              	.LFE3:
 436              		.size	ADC_SAR_SEQ_Stop, .-ADC_SAR_SEQ_Stop
 437              		.section	.text.ADC_SAR_SEQ_StartConvert,"ax",%progbits
 438              		.align	2
 439              		.global	ADC_SAR_SEQ_StartConvert
 440              		.code	16
 441              		.thumb_func
 442              		.type	ADC_SAR_SEQ_StartConvert, %function
 443              	ADC_SAR_SEQ_StartConvert:
 444              	.LFB4:
 304:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 305:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 306:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_StartConvert
 308:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 310:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 311:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Description:
 312:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  For free running mode, this API starts the conversion process and it
 313:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  runs continuously.
 314:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 315:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  In a triggered mode, this routine triggers every conversion by
 316:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 317:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  every conversion has to start by this API.
 318:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 319:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 320:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 321:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 322:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 323:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 324:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 325:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_StartConvert(void)
 327:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 445              		.loc 1 327 0
 446              		.cfi_startproc
 447 0000 80B5     		push	{r7, lr}
 448              	.LCFI9:
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 00AF     		add	r7, sp, #0
 453              	.LCFI10:
 454              		.cfi_def_cfa_register 7
 328:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_SEQ__FREERUNNING)
 329:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_SAMPLE_CTRL_REG |= ADC_SAR_SEQ_CONTINUOUS_EN;
 455              		.loc 1 329 0
 456 0004 044B     		ldr	r3, .L24
 457 0006 044A     		ldr	r2, .L24
 458 0008 1268     		ldr	r2, [r2]
 459 000a 8021     		mov	r1, #128
 460 000c 4902     		lsl	r1, r1, #9
 461 000e 0A43     		orr	r2, r1
 462 0010 1A60     		str	r2, [r3]
 330:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #else /* Firmware trigger */
 331:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_START_CTRL_REG = ADC_SAR_SEQ_FW_TRIGGER;
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 15


 332:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* End ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE == ADC_SAR_SEQ__FREERUNNING */
 333:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 334:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 463              		.loc 1 334 0
 464 0012 BD46     		mov	sp, r7
 465              		@ sp needed for prologue
 466 0014 80BD     		pop	{r7, pc}
 467              	.L25:
 468 0016 C046     		.align	2
 469              	.L24:
 470 0018 04001A40 		.word	1075445764
 471              		.cfi_endproc
 472              	.LFE4:
 473              		.size	ADC_SAR_SEQ_StartConvert, .-ADC_SAR_SEQ_StartConvert
 474              		.section	.text.ADC_SAR_SEQ_StopConvert,"ax",%progbits
 475              		.align	2
 476              		.global	ADC_SAR_SEQ_StopConvert
 477              		.code	16
 478              		.thumb_func
 479              		.type	ADC_SAR_SEQ_StopConvert, %function
 480              	ADC_SAR_SEQ_StopConvert:
 481              	.LFB5:
 335:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 336:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 337:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 338:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_StopConvert
 339:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 340:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 341:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 342:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Forces the ADC to stop all conversions.
 343:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 344:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 345:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 346:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 347:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 348:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 349:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 350:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 351:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_StopConvert(void)
 352:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 482              		.loc 1 352 0
 483              		.cfi_startproc
 484 0000 80B5     		push	{r7, lr}
 485              	.LCFI11:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 00AF     		add	r7, sp, #0
 490              	.LCFI12:
 491              		.cfi_def_cfa_register 7
 353:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_SEQ__FREERUNNING)
 354:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_SEQ_CONTINUOUS_EN);
 492              		.loc 1 354 0
 493 0004 034B     		ldr	r3, .L27
 494 0006 034A     		ldr	r2, .L27
 495 0008 1168     		ldr	r1, [r2]
 496 000a 034A     		ldr	r2, .L27+4
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 16


 497 000c 0A40     		and	r2, r1
 498 000e 1A60     		str	r2, [r3]
 355:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE == ADC_SAR_SEQ__FREERUNNING */
 356:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 499              		.loc 1 356 0
 500 0010 BD46     		mov	sp, r7
 501              		@ sp needed for prologue
 502 0012 80BD     		pop	{r7, pc}
 503              	.L28:
 504              		.align	2
 505              	.L27:
 506 0014 04001A40 		.word	1075445764
 507 0018 FFFFFEFF 		.word	-65537
 508              		.cfi_endproc
 509              	.LFE5:
 510              		.size	ADC_SAR_SEQ_StopConvert, .-ADC_SAR_SEQ_StopConvert
 511              		.section	.text.ADC_SAR_SEQ_IsEndConversion,"ax",%progbits
 512              		.align	2
 513              		.global	ADC_SAR_SEQ_IsEndConversion
 514              		.code	16
 515              		.thumb_func
 516              		.type	ADC_SAR_SEQ_IsEndConversion, %function
 517              	ADC_SAR_SEQ_IsEndConversion:
 518              	.LFB6:
 357:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 358:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 359:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 360:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_IsEndConversion
 361:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 362:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 363:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 364:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Description: Checks for ADC end of conversion for the case one
 365:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  channel and end of scan for the case of multiple channels. It acts
 366:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  as a software version of the EOC. This function provides the
 367:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  programmer with two options. In one mode this function
 368:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  immediately returns with the conversion status. In the other mode,
 369:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  the function does not return (blocking) until the conversion has
 370:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  completed.
 371:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 372:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 373:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 374:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 375:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 376:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *                              for injection channel
 377:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 378:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *                              channel conversion
 379:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 382:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 383:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 384:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 385:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** uint32 ADC_SAR_SEQ_IsEndConversion(uint32 retMode)
 386:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 519              		.loc 1 386 0
 520              		.cfi_startproc
 521 0000 80B5     		push	{r7, lr}
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 17


 522              	.LCFI13:
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 84B0     		sub	sp, sp, #16
 527              	.LCFI14:
 528              		.cfi_def_cfa_offset 24
 529 0004 00AF     		add	r7, sp, #0
 530              	.LCFI15:
 531              		.cfi_def_cfa_register 7
 532 0006 7860     		str	r0, [r7, #4]
 387:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 status = 0u;
 533              		.loc 1 387 0
 534 0008 0023     		mov	r3, #0
 535 000a FB60     		str	r3, [r7, #12]
 388:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 389:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     if((retMode & (ADC_SAR_SEQ_RETURN_STATUS | ADC_SAR_SEQ_WAIT_FOR_RESULT)) != 0u)
 536              		.loc 1 389 0
 537 000c 7A68     		ldr	r2, [r7, #4]
 538 000e 0323     		mov	r3, #3
 539 0010 1340     		and	r3, r2
 540 0012 11D0     		beq	.L30
 541              	.L32:
 390:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 391:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         do
 392:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 393:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             status = ADC_SAR_SEQ_SAR_INTR_REG & ADC_SAR_SEQ_EOS_MASK;
 542              		.loc 1 393 0 discriminator 1
 543 0014 0B4B     		ldr	r3, .L34
 544 0016 1A68     		ldr	r2, [r3]
 545 0018 0123     		mov	r3, #1
 546 001a 1340     		and	r3, r2
 547 001c FB60     		str	r3, [r7, #12]
 394:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }while((status == 0u) && ((retMode & ADC_SAR_SEQ_WAIT_FOR_RESULT) != 0u));
 548              		.loc 1 394 0 discriminator 1
 549 001e FB68     		ldr	r3, [r7, #12]
 550 0020 002B     		cmp	r3, #0
 551 0022 03D1     		bne	.L31
 552 0024 7A68     		ldr	r2, [r7, #4]
 553 0026 0223     		mov	r3, #2
 554 0028 1340     		and	r3, r2
 555 002a F3D1     		bne	.L32
 556              	.L31:
 395:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 396:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if(status != 0u)
 557              		.loc 1 396 0
 558 002c FB68     		ldr	r3, [r7, #12]
 559 002e 002B     		cmp	r3, #0
 560 0030 02D0     		beq	.L30
 397:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 398:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             /* Clear EOS bit */
 399:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             ADC_SAR_SEQ_SAR_INTR_REG = ADC_SAR_SEQ_EOS_MASK;
 561              		.loc 1 399 0
 562 0032 044B     		ldr	r3, .L34
 563 0034 0122     		mov	r2, #1
 564 0036 1A60     		str	r2, [r3]
 565              	.L30:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 18


 400:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 401:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 402:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 403:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 404:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if((retMode & (ADC_SAR_SEQ_RETURN_STATUS_INJ | ADC_SAR_SEQ_WAIT_FOR_RESULT_INJ)) != 0u)
 405:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 406:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             do
 407:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 408:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 status |= ADC_SAR_SEQ_SAR_INTR_REG & ADC_SAR_SEQ_INJ_EOC_MASK;
 409:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }while(((status & ADC_SAR_SEQ_INJ_EOC_MASK) != 0u) &&
 410:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                    ((retMode & ADC_SAR_SEQ_WAIT_FOR_RESULT_INJ) != 0u));
 411:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 412:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((status & ADC_SAR_SEQ_INJ_EOC_MASK) != 0u)
 413:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 414:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 /* Clear Injection EOS bit */
 415:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_SAR_INTR_REG = ADC_SAR_SEQ_INJ_EOC_MASK;
 416:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 417:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 418:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 419:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 420:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     return (status);
 566              		.loc 1 420 0
 567 0038 FB68     		ldr	r3, [r7, #12]
 421:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 568              		.loc 1 421 0
 569 003a 181C     		mov	r0, r3
 570 003c BD46     		mov	sp, r7
 571 003e 04B0     		add	sp, sp, #16
 572              		@ sp needed for prologue
 573 0040 80BD     		pop	{r7, pc}
 574              	.L35:
 575 0042 C046     		.align	2
 576              	.L34:
 577 0044 10021A40 		.word	1075446288
 578              		.cfi_endproc
 579              	.LFE6:
 580              		.size	ADC_SAR_SEQ_IsEndConversion, .-ADC_SAR_SEQ_IsEndConversion
 581              		.section	.text.ADC_SAR_SEQ_GetResult16,"ax",%progbits
 582              		.align	2
 583              		.global	ADC_SAR_SEQ_GetResult16
 584              		.code	16
 585              		.thumb_func
 586              		.type	ADC_SAR_SEQ_GetResult16, %function
 587              	ADC_SAR_SEQ_GetResult16:
 588              	.LFB7:
 422:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 423:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_GetResult16
 426:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 428:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Gets the data available in the SAR DATA register.
 430:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 431:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 432:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  chan: The ADC channel in which to return the result. The first channel
 433:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 19


 434:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 435:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 436:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Returns converted data as a signed 16-bit integer
 437:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 438:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 439:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** int16 ADC_SAR_SEQ_GetResult16(uint32 chan)
 440:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 589              		.loc 1 440 0
 590              		.cfi_startproc
 591 0000 80B5     		push	{r7, lr}
 592              	.LCFI16:
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 7, -8
 595              		.cfi_offset 14, -4
 596 0002 84B0     		sub	sp, sp, #16
 597              	.LCFI17:
 598              		.cfi_def_cfa_offset 24
 599 0004 00AF     		add	r7, sp, #0
 600              	.LCFI18:
 601              		.cfi_def_cfa_register 7
 602 0006 7860     		str	r0, [r7, #4]
 441:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 result;
 442:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 443:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 444:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 603              		.loc 1 444 0
 604 0008 7B68     		ldr	r3, [r7, #4]
 605 000a 022B     		cmp	r3, #2
 606 000c 02D9     		bls	.L37
 607              		.loc 1 444 0 is_stmt 0 discriminator 1
 608 000e 0020     		mov	r0, #0
 609 0010 FFF7FEFF 		bl	CyHalt
 610              	.L37:
 445:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 446:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     if(chan < ADC_SAR_SEQ_SEQUENCED_CHANNELS_NUM)
 611              		.loc 1 446 0 is_stmt 1
 612 0014 7B68     		ldr	r3, [r7, #4]
 613 0016 022B     		cmp	r3, #2
 614 0018 08D8     		bhi	.L38
 447:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 448:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_SEQ_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 615              		.loc 1 448 0
 616 001a 7B68     		ldr	r3, [r7, #4]
 617 001c 9B00     		lsl	r3, r3, #2
 618 001e 084A     		ldr	r2, .L41
 619 0020 9B18     		add	r3, r3, r2
 620 0022 1B68     		ldr	r3, [r3]
 621 0024 1B04     		lsl	r3, r3, #16
 622 0026 1B0C     		lsr	r3, r3, #16
 623 0028 FB60     		str	r3, [r7, #12]
 624 002a 01E0     		b	.L39
 625              	.L38:
 449:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_RESULT_MASK;
 450:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 451:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     else
 452:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 453:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 20


 454:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             result = ADC_SAR_SEQ_SAR_INJ_RESULT_REG & ADC_SAR_SEQ_RESULT_MASK;
 455:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #else
 456:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             result = 0u;
 626              		.loc 1 456 0
 627 002c 0023     		mov	r3, #0
 628 002e FB60     		str	r3, [r7, #12]
 629              	.L39:
 457:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 458:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 459:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 460:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     return ( (int16)result );
 630              		.loc 1 460 0
 631 0030 FB68     		ldr	r3, [r7, #12]
 632 0032 9BB2     		uxth	r3, r3
 633 0034 1BB2     		sxth	r3, r3
 461:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 634              		.loc 1 461 0
 635 0036 181C     		mov	r0, r3
 636 0038 BD46     		mov	sp, r7
 637 003a 04B0     		add	sp, sp, #16
 638              		@ sp needed for prologue
 639 003c 80BD     		pop	{r7, pc}
 640              	.L42:
 641 003e C046     		.align	2
 642              	.L41:
 643 0040 80011A40 		.word	1075446144
 644              		.cfi_endproc
 645              	.LFE7:
 646              		.size	ADC_SAR_SEQ_GetResult16, .-ADC_SAR_SEQ_GetResult16
 647              		.section	.text.ADC_SAR_SEQ_SetChanMask,"ax",%progbits
 648              		.align	2
 649              		.global	ADC_SAR_SEQ_SetChanMask
 650              		.code	16
 651              		.thumb_func
 652              		.type	ADC_SAR_SEQ_SetChanMask, %function
 653              	ADC_SAR_SEQ_SetChanMask:
 654              	.LFB8:
 462:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 463:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 464:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 465:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetChanMask
 466:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 467:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 468:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 469:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the channel enable mask.
 470:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 471:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 472:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask: Sets which channels that will be
 473:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  scanned. Setting bits for channels that do not exist will have no
 474:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  effect. For example, if only 6 channels were enabled, setting a
 475:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 476:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  This API will not enable the injection channel.
 477:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Examples: If the component is setup to sequence through 8
 478:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 479:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 480:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 481:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 21


 482:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 483:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 484:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetChanMask(uint32 mask)
 485:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 655              		.loc 1 485 0
 656              		.cfi_startproc
 657 0000 80B5     		push	{r7, lr}
 658              	.LCFI19:
 659              		.cfi_def_cfa_offset 8
 660              		.cfi_offset 7, -8
 661              		.cfi_offset 14, -4
 662 0002 82B0     		sub	sp, sp, #8
 663              	.LCFI20:
 664              		.cfi_def_cfa_offset 16
 665 0004 00AF     		add	r7, sp, #0
 666              	.LCFI21:
 667              		.cfi_def_cfa_register 7
 668 0006 7860     		str	r0, [r7, #4]
 486:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CHAN_EN_REG = mask & ADC_SAR_SEQ_MAX_CHANNELS_EN_MASK;
 669              		.loc 1 486 0
 670 0008 034B     		ldr	r3, .L44
 671 000a 7968     		ldr	r1, [r7, #4]
 672 000c 0722     		mov	r2, #7
 673 000e 0A40     		and	r2, r1
 674 0010 1A60     		str	r2, [r3]
 487:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 675              		.loc 1 487 0
 676 0012 BD46     		mov	sp, r7
 677 0014 02B0     		add	sp, sp, #8
 678              		@ sp needed for prologue
 679 0016 80BD     		pop	{r7, pc}
 680              	.L45:
 681              		.align	2
 682              	.L44:
 683 0018 20001A40 		.word	1075445792
 684              		.cfi_endproc
 685              	.LFE8:
 686              		.size	ADC_SAR_SEQ_SetChanMask, .-ADC_SAR_SEQ_SetChanMask
 687              		.section	.text.ADC_SAR_SEQ_SetLowLimit,"ax",%progbits
 688              		.align	2
 689              		.global	ADC_SAR_SEQ_SetLowLimit
 690              		.code	16
 691              		.thumb_func
 692              		.type	ADC_SAR_SEQ_SetLowLimit, %function
 693              	ADC_SAR_SEQ_SetLowLimit:
 694              	.LFB9:
 488:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 490:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 491:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 492:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 493:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_EnableInjection
 494:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 495:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 496:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 497:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Enables the injection channel for the next scan only.
 498:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 22


 499:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 500:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  None.
 501:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 502:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 503:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  None.
 504:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 505:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
 506:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     void ADC_SAR_SEQ_EnableInjection(void)
 507:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 508:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_SEQ_INJ_CHAN_EN;
 509:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 510:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 511:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 512:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 513:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 514:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 515:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetLowLimit
 516:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 517:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 518:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 519:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the low limit parameter for a limit condition.
 520:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 521:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 522:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  lowLimit: The low limit for a limit condition.
 523:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 524:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 525:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 526:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 527:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 528:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetLowLimit(uint32 lowLimit)
 529:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 695              		.loc 1 529 0
 696              		.cfi_startproc
 697 0000 80B5     		push	{r7, lr}
 698              	.LCFI22:
 699              		.cfi_def_cfa_offset 8
 700              		.cfi_offset 7, -8
 701              		.cfi_offset 14, -4
 702 0002 82B0     		sub	sp, sp, #8
 703              	.LCFI23:
 704              		.cfi_def_cfa_offset 16
 705 0004 00AF     		add	r7, sp, #0
 706              	.LCFI24:
 707              		.cfi_def_cfa_register 7
 708 0006 7860     		str	r0, [r7, #4]
 530:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_SEQ_RANGE_LOW_MASK);
 709              		.loc 1 530 0
 710 0008 084B     		ldr	r3, .L47
 711 000a 084A     		ldr	r2, .L47
 712 000c 1268     		ldr	r2, [r2]
 713 000e 120C     		lsr	r2, r2, #16
 714 0010 1204     		lsl	r2, r2, #16
 715 0012 1A60     		str	r2, [r3]
 531:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_SEQ_RANGE_LOW_MASK;
 716              		.loc 1 531 0
 717 0014 054B     		ldr	r3, .L47
 718 0016 054A     		ldr	r2, .L47
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 23


 719 0018 1168     		ldr	r1, [r2]
 720 001a 7A68     		ldr	r2, [r7, #4]
 721 001c 1204     		lsl	r2, r2, #16
 722 001e 120C     		lsr	r2, r2, #16
 723 0020 0A43     		orr	r2, r1
 724 0022 1A60     		str	r2, [r3]
 532:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 725              		.loc 1 532 0
 726 0024 BD46     		mov	sp, r7
 727 0026 02B0     		add	sp, sp, #8
 728              		@ sp needed for prologue
 729 0028 80BD     		pop	{r7, pc}
 730              	.L48:
 731 002a C046     		.align	2
 732              	.L47:
 733 002c 18001A40 		.word	1075445784
 734              		.cfi_endproc
 735              	.LFE9:
 736              		.size	ADC_SAR_SEQ_SetLowLimit, .-ADC_SAR_SEQ_SetLowLimit
 737              		.section	.text.ADC_SAR_SEQ_SetHighLimit,"ax",%progbits
 738              		.align	2
 739              		.global	ADC_SAR_SEQ_SetHighLimit
 740              		.code	16
 741              		.thumb_func
 742              		.type	ADC_SAR_SEQ_SetHighLimit, %function
 743              	ADC_SAR_SEQ_SetHighLimit:
 744              	.LFB10:
 533:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 534:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 535:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 536:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetHighLimit
 537:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 538:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 539:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 540:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the low limit parameter for a limit condition.
 541:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 542:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 543:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  highLimit: The high limit for a limit condition.
 544:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 545:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 548:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetHighLimit(uint32 highLimit)
 550:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 745              		.loc 1 550 0
 746              		.cfi_startproc
 747 0000 80B5     		push	{r7, lr}
 748              	.LCFI25:
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 7, -8
 751              		.cfi_offset 14, -4
 752 0002 82B0     		sub	sp, sp, #8
 753              	.LCFI26:
 754              		.cfi_def_cfa_offset 16
 755 0004 00AF     		add	r7, sp, #0
 756              	.LCFI27:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 24


 757              		.cfi_def_cfa_register 7
 758 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_SEQ_RANGE_HIGH_MASK);
 759              		.loc 1 551 0
 760 0008 074B     		ldr	r3, .L50
 761 000a 074A     		ldr	r2, .L50
 762 000c 1268     		ldr	r2, [r2]
 763 000e 1204     		lsl	r2, r2, #16
 764 0010 120C     		lsr	r2, r2, #16
 765 0012 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_SEQ_RANGE_HIGH_OFFSET);
 766              		.loc 1 552 0
 767 0014 044B     		ldr	r3, .L50
 768 0016 044A     		ldr	r2, .L50
 769 0018 1168     		ldr	r1, [r2]
 770 001a 7A68     		ldr	r2, [r7, #4]
 771 001c 1204     		lsl	r2, r2, #16
 772 001e 0A43     		orr	r2, r1
 773 0020 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 774              		.loc 1 553 0
 775 0022 BD46     		mov	sp, r7
 776 0024 02B0     		add	sp, sp, #8
 777              		@ sp needed for prologue
 778 0026 80BD     		pop	{r7, pc}
 779              	.L51:
 780              		.align	2
 781              	.L50:
 782 0028 18001A40 		.word	1075445784
 783              		.cfi_endproc
 784              	.LFE10:
 785              		.size	ADC_SAR_SEQ_SetHighLimit, .-ADC_SAR_SEQ_SetHighLimit
 786              		.section	.text.ADC_SAR_SEQ_SetLimitMask,"ax",%progbits
 787              		.align	2
 788              		.global	ADC_SAR_SEQ_SetLimitMask
 789              		.code	16
 790              		.thumb_func
 791              		.type	ADC_SAR_SEQ_SetLimitMask, %function
 792              	ADC_SAR_SEQ_SetLimitMask:
 793              	.LFB11:
 554:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 555:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 556:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 557:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetLimitMask
 558:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 559:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 560:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 561:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the channel limit condition mask.
 562:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 563:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 564:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask: Sets which channels that may cause a
 565:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 566:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  will have no effect. For example, if only 6 channels were enabled,
 567:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 568:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 569:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 570:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 25


 571:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 572:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 573:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetLimitMask(uint32 mask)
 574:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 794              		.loc 1 574 0
 795              		.cfi_startproc
 796 0000 80B5     		push	{r7, lr}
 797              	.LCFI28:
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 7, -8
 800              		.cfi_offset 14, -4
 801 0002 82B0     		sub	sp, sp, #8
 802              	.LCFI29:
 803              		.cfi_def_cfa_offset 16
 804 0004 00AF     		add	r7, sp, #0
 805              	.LCFI30:
 806              		.cfi_def_cfa_register 7
 807 0006 7860     		str	r0, [r7, #4]
 575:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_SEQ_MAX_CHANNELS_EN_MASK;
 808              		.loc 1 575 0
 809 0008 034B     		ldr	r3, .L53
 810 000a 7968     		ldr	r1, [r7, #4]
 811 000c 0722     		mov	r2, #7
 812 000e 0A40     		and	r2, r1
 813 0010 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 814              		.loc 1 576 0
 815 0012 BD46     		mov	sp, r7
 816 0014 02B0     		add	sp, sp, #8
 817              		@ sp needed for prologue
 818 0016 80BD     		pop	{r7, pc}
 819              	.L54:
 820              		.align	2
 821              	.L53:
 822 0018 38021A40 		.word	1075446328
 823              		.cfi_endproc
 824              	.LFE11:
 825              		.size	ADC_SAR_SEQ_SetLimitMask, .-ADC_SAR_SEQ_SetLimitMask
 826              		.section	.text.ADC_SAR_SEQ_SetSatMask,"ax",%progbits
 827              		.align	2
 828              		.global	ADC_SAR_SEQ_SetSatMask
 829              		.code	16
 830              		.thumb_func
 831              		.type	ADC_SAR_SEQ_SetSatMask, %function
 832              	ADC_SAR_SEQ_SetSatMask:
 833              	.LFB12:
 577:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 578:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetSatMask
 581:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 583:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the channel saturation event mask.
 585:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 586:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask: Sets which channels that may cause a
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 26


 588:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 589:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  will have no effect. For example, if only 8 channels were enabled,
 590:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 591:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 592:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 593:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 594:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 595:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetSatMask(uint32 mask)
 597:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 834              		.loc 1 597 0
 835              		.cfi_startproc
 836 0000 80B5     		push	{r7, lr}
 837              	.LCFI31:
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 7, -8
 840              		.cfi_offset 14, -4
 841 0002 82B0     		sub	sp, sp, #8
 842              	.LCFI32:
 843              		.cfi_def_cfa_offset 16
 844 0004 00AF     		add	r7, sp, #0
 845              	.LCFI33:
 846              		.cfi_def_cfa_register 7
 847 0006 7860     		str	r0, [r7, #4]
 598:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_SEQ_MAX_CHANNELS_EN_MASK;
 848              		.loc 1 598 0
 849 0008 034B     		ldr	r3, .L56
 850 000a 7968     		ldr	r1, [r7, #4]
 851 000c 0722     		mov	r2, #7
 852 000e 0A40     		and	r2, r1
 853 0010 1A60     		str	r2, [r3]
 599:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 854              		.loc 1 599 0
 855 0012 BD46     		mov	sp, r7
 856 0014 02B0     		add	sp, sp, #8
 857              		@ sp needed for prologue
 858 0016 80BD     		pop	{r7, pc}
 859              	.L57:
 860              		.align	2
 861              	.L56:
 862 0018 28021A40 		.word	1075446312
 863              		.cfi_endproc
 864              	.LFE12:
 865              		.size	ADC_SAR_SEQ_SetSatMask, .-ADC_SAR_SEQ_SetSatMask
 866              		.section	.text.ADC_SAR_SEQ_SetOffset,"ax",%progbits
 867              		.align	2
 868              		.global	ADC_SAR_SEQ_SetOffset
 869              		.code	16
 870              		.thumb_func
 871              		.type	ADC_SAR_SEQ_SetOffset, %function
 872              	ADC_SAR_SEQ_SetOffset:
 873              	.LFB13:
 600:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 601:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 602:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 603:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetOffset
 604:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 27


 605:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 606:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 607:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   Description: Sets the ADC offset which is used by the functions
 608:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 609:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   to substract the offset from the given reading
 610:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   before calculating the voltage conversion.
 611:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 612:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 613:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  chan: ADC channel number.
 614:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  offset: This value is a measured value when the
 615:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *          inputs are shorted or connected to the same input voltage.
 616:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 617:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 618:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 619:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 620:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
 621:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Offset:  Modified to set the user provided offset.
 622:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 623:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 624:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetOffset(uint32 chan, int16 offset)
 625:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 874              		.loc 1 625 0
 875              		.cfi_startproc
 876 0000 80B5     		push	{r7, lr}
 877              	.LCFI34:
 878              		.cfi_def_cfa_offset 8
 879              		.cfi_offset 7, -8
 880              		.cfi_offset 14, -4
 881 0002 82B0     		sub	sp, sp, #8
 882              	.LCFI35:
 883              		.cfi_def_cfa_offset 16
 884 0004 00AF     		add	r7, sp, #0
 885              	.LCFI36:
 886              		.cfi_def_cfa_register 7
 887 0006 7860     		str	r0, [r7, #4]
 888 0008 0A1C     		mov	r2, r1
 889 000a BB1C     		add	r3, r7, #2
 890 000c 1A80     		strh	r2, [r3]
 626:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 627:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 891              		.loc 1 627 0
 892 000e 7B68     		ldr	r3, [r7, #4]
 893 0010 022B     		cmp	r3, #2
 894 0012 02D9     		bls	.L59
 895              		.loc 1 627 0 is_stmt 0 discriminator 1
 896 0014 0020     		mov	r0, #0
 897 0016 FFF7FEFF 		bl	CyHalt
 898              	.L59:
 628:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 629:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_offset[chan] = offset;
 899              		.loc 1 629 0 is_stmt 1
 900 001a 044B     		ldr	r3, .L60
 901 001c 7A68     		ldr	r2, [r7, #4]
 902 001e 5200     		lsl	r2, r2, #1
 903 0020 B91C     		add	r1, r7, #2
 904 0022 0988     		ldrh	r1, [r1]
 905 0024 D152     		strh	r1, [r2, r3]
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 28


 630:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 906              		.loc 1 630 0
 907 0026 BD46     		mov	sp, r7
 908 0028 02B0     		add	sp, sp, #8
 909              		@ sp needed for prologue
 910 002a 80BD     		pop	{r7, pc}
 911              	.L61:
 912              		.align	2
 913              	.L60:
 914 002c 00000000 		.word	ADC_SAR_SEQ_offset
 915              		.cfi_endproc
 916              	.LFE13:
 917              		.size	ADC_SAR_SEQ_SetOffset, .-ADC_SAR_SEQ_SetOffset
 918              		.section	.text.ADC_SAR_SEQ_SetGain,"ax",%progbits
 919              		.align	2
 920              		.global	ADC_SAR_SEQ_SetGain
 921              		.code	16
 922              		.thumb_func
 923              		.type	ADC_SAR_SEQ_SetGain, %function
 924              	ADC_SAR_SEQ_SetGain:
 925              	.LFB14:
 631:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 632:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 633:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 634:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetGain
 635:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 636:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 637:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 638:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 639:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  conversion functions below. This value is set by default by the
 640:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  reference and input range settings. It should only be used to further
 641:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  calibrate the ADC with a known input or if an external reference is
 642:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 643:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 644:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  conversion between ADC counts and voltage.
 645:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 646:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 647:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  chan: ADC channel number.
 648:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  adcGain: ADC gain in counts per 10 volts.
 649:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 650:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 652:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 653:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_CountsPer10Volt:  modified to set the ADC gain in counts 
 655:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   per 10 volt.
 656:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 657:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetGain(uint32 chan, int32 adcGain)
 659:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 926              		.loc 1 659 0
 927              		.cfi_startproc
 928 0000 80B5     		push	{r7, lr}
 929              	.LCFI37:
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 7, -8
 932              		.cfi_offset 14, -4
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 29


 933 0002 82B0     		sub	sp, sp, #8
 934              	.LCFI38:
 935              		.cfi_def_cfa_offset 16
 936 0004 00AF     		add	r7, sp, #0
 937              	.LCFI39:
 938              		.cfi_def_cfa_register 7
 939 0006 7860     		str	r0, [r7, #4]
 940 0008 3960     		str	r1, [r7]
 660:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 661:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 941              		.loc 1 661 0
 942 000a 7B68     		ldr	r3, [r7, #4]
 943 000c 022B     		cmp	r3, #2
 944 000e 02D9     		bls	.L63
 945              		.loc 1 661 0 is_stmt 0 discriminator 1
 946 0010 0020     		mov	r0, #0
 947 0012 FFF7FEFF 		bl	CyHalt
 948              	.L63:
 662:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 663:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_countsPer10Volt[chan] = adcGain;
 949              		.loc 1 663 0 is_stmt 1
 950 0016 044B     		ldr	r3, .L64
 951 0018 7A68     		ldr	r2, [r7, #4]
 952 001a 9200     		lsl	r2, r2, #2
 953 001c 3968     		ldr	r1, [r7]
 954 001e D150     		str	r1, [r2, r3]
 664:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 955              		.loc 1 664 0
 956 0020 BD46     		mov	sp, r7
 957 0022 02B0     		add	sp, sp, #8
 958              		@ sp needed for prologue
 959 0024 80BD     		pop	{r7, pc}
 960              	.L65:
 961 0026 C046     		.align	2
 962              	.L64:
 963 0028 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 964              		.cfi_endproc
 965              	.LFE14:
 966              		.size	ADC_SAR_SEQ_SetGain, .-ADC_SAR_SEQ_SetGain
 967              		.global	__aeabi_idiv
 968              		.section	.text.ADC_SAR_SEQ_CountsTo_mVolts,"ax",%progbits
 969              		.align	2
 970              		.global	ADC_SAR_SEQ_CountsTo_mVolts
 971              		.code	16
 972              		.thumb_func
 973              		.type	ADC_SAR_SEQ_CountsTo_mVolts, %function
 974              	ADC_SAR_SEQ_CountsTo_mVolts:
 975              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #if(ADC_SAR_SEQ_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_SEQ__RIGHT)
 668:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 669:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 670:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 671:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_CountsTo_mVolts
 672:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 673:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 30


 674:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 675:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function converts ADC counts to mVolts
 676:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function is not available when left data format justification selected.
 677:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 678:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 679:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  chan: The ADC channel number.
 680:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  adcCounts: Result from the ADC conversion
 681:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 682:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 683:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Results in mVolts
 684:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 685:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Global variables:
 686:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_countsPer10Volt:  used to convert ADC counts to mVolts.
 687:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_Offset:  Used as the offset while converting ADC counts 
 688:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *   to mVolts.
 689:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 690:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     int16 ADC_SAR_SEQ_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 692:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 976              		.loc 1 692 0
 977              		.cfi_startproc
 978 0000 80B5     		push	{r7, lr}
 979              	.LCFI40:
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 84B0     		sub	sp, sp, #16
 984              	.LCFI41:
 985              		.cfi_def_cfa_offset 24
 986 0004 00AF     		add	r7, sp, #0
 987              	.LCFI42:
 988              		.cfi_def_cfa_register 7
 989 0006 7860     		str	r0, [r7, #4]
 990 0008 0A1C     		mov	r2, r1
 991 000a BB1C     		add	r3, r7, #2
 992 000c 1A80     		strh	r2, [r3]
 693:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         int16 mVolts;
 694:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 695:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 696:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 993              		.loc 1 696 0
 994 000e 7B68     		ldr	r3, [r7, #4]
 995 0010 022B     		cmp	r3, #2
 996 0012 02D9     		bls	.L67
 997              		.loc 1 696 0 is_stmt 0 discriminator 1
 998 0014 0020     		mov	r0, #0
 999 0016 FFF7FEFF 		bl	CyHalt
 1000              	.L67:
 697:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 699:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE)
 700:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chan] & ADC_SAR_SEQ_AVERAGING_EN) != 0u)
 701:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 702:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 adcCounts /= ADC_SAR_SEQ_DEFAULT_AVG_SAMPLES_DIV;
 703:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }    
 704:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE */
 705:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 31


 706:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Subtract ADC offset */
 707:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         adcCounts -= ADC_SAR_SEQ_offset[chan];
 1001              		.loc 1 707 0 is_stmt 1
 1002 001a BB1C     		add	r3, r7, #2
 1003 001c 1A88     		ldrh	r2, [r3]
 1004 001e 1E4B     		ldr	r3, .L73
 1005 0020 7968     		ldr	r1, [r7, #4]
 1006 0022 4900     		lsl	r1, r1, #1
 1007 0024 CB5A     		ldrh	r3, [r1, r3]
 1008 0026 9BB2     		uxth	r3, r3
 1009 0028 9BB2     		uxth	r3, r3
 1010 002a D31A     		sub	r3, r2, r3
 1011 002c 9AB2     		uxth	r2, r3
 1012 002e BB1C     		add	r3, r7, #2
 1013 0030 1A80     		strh	r2, [r3]
 708:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 709:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_SEQ_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1014              		.loc 1 709 0
 1015 0032 BB1C     		add	r3, r7, #2
 1016 0034 0021     		mov	r1, #0
 1017 0036 5B5E     		ldrsh	r3, [r3, r1]
 1018 0038 184A     		ldr	r2, .L73+4
 1019 003a 5A43     		mul	r2, r3
 710:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (ADC_SAR_SEQ_countsPer10Volt[chan] / 2) : (-(ADC_SAR_SEQ_countsPer10Volt[chan] / 2
 1020              		.loc 1 710 0
 1021 003c BB1C     		add	r3, r7, #2
 1022 003e 0021     		mov	r1, #0
 1023 0040 5B5E     		ldrsh	r3, [r3, r1]
 1024 0042 002B     		cmp	r3, #0
 1025 0044 08DD     		ble	.L68
 1026              		.loc 1 710 0 is_stmt 0 discriminator 1
 1027 0046 164B     		ldr	r3, .L73+8
 1028 0048 7968     		ldr	r1, [r7, #4]
 1029 004a 8900     		lsl	r1, r1, #2
 1030 004c CB58     		ldr	r3, [r1, r3]
 1031 004e 002B     		cmp	r3, #0
 1032 0050 00DA     		bge	.L69
 1033 0052 0133     		add	r3, r3, #1
 1034              	.L69:
 1035 0054 5B10     		asr	r3, r3, #1
 1036 0056 08E0     		b	.L70
 1037              	.L68:
 1038              		.loc 1 710 0 discriminator 2
 1039 0058 114B     		ldr	r3, .L73+8
 1040 005a 7968     		ldr	r1, [r7, #4]
 1041 005c 8900     		lsl	r1, r1, #2
 1042 005e CB58     		ldr	r3, [r1, r3]
 1043 0060 002B     		cmp	r3, #0
 1044 0062 00DA     		bge	.L71
 1045 0064 0133     		add	r3, r3, #1
 1046              	.L71:
 1047 0066 5B10     		asr	r3, r3, #1
 1048 0068 5B42     		neg	r3, r3
 1049              	.L70:
 709:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_SEQ_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1050              		.loc 1 709 0 is_stmt 1
 1051 006a D218     		add	r2, r2, r3
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 32


 711:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  / ADC_SAR_SEQ_countsPer10Volt[chan]);
 1052              		.loc 1 711 0
 1053 006c 0C4B     		ldr	r3, .L73+8
 1054 006e 7968     		ldr	r1, [r7, #4]
 1055 0070 8900     		lsl	r1, r1, #2
 1056 0072 CB58     		ldr	r3, [r1, r3]
 1057 0074 101C     		mov	r0, r2
 1058 0076 191C     		mov	r1, r3
 1059 0078 FFF7FEFF 		bl	__aeabi_idiv
 1060 007c 031C     		mov	r3, r0
 1061 007e 1A1C     		mov	r2, r3
 709:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_SEQ_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1062              		.loc 1 709 0
 1063 0080 3B1C     		mov	r3, r7
 1064 0082 0E33     		add	r3, r3, #14
 1065 0084 1A80     		strh	r2, [r3]
 712:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 713:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         return( mVolts );
 1066              		.loc 1 713 0
 1067 0086 3B1C     		mov	r3, r7
 1068 0088 0E33     		add	r3, r3, #14
 1069 008a 1B88     		ldrh	r3, [r3]
 1070 008c 1BB2     		sxth	r3, r3
 714:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 1071              		.loc 1 714 0
 1072 008e 181C     		mov	r0, r3
 1073 0090 BD46     		mov	sp, r7
 1074 0092 04B0     		add	sp, sp, #16
 1075              		@ sp needed for prologue
 1076 0094 80BD     		pop	{r7, pc}
 1077              	.L74:
 1078 0096 C046     		.align	2
 1079              	.L73:
 1080 0098 00000000 		.word	ADC_SAR_SEQ_offset
 1081 009c 10270000 		.word	10000
 1082 00a0 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 1083              		.cfi_endproc
 1084              	.LFE15:
 1085              		.size	ADC_SAR_SEQ_CountsTo_mVolts, .-ADC_SAR_SEQ_CountsTo_mVolts
 1086              		.global	__aeabi_lmul
 1087              		.global	__aeabi_ldivmod
 1088              		.section	.text.ADC_SAR_SEQ_CountsTo_uVolts,"ax",%progbits
 1089              		.align	2
 1090              		.global	ADC_SAR_SEQ_CountsTo_uVolts
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	ADC_SAR_SEQ_CountsTo_uVolts, %function
 1094              	ADC_SAR_SEQ_CountsTo_uVolts:
 1095              	.LFB16:
 715:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 716:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 717:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 718:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_CountsTo_uVolts
 719:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 720:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 721:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 722:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function converts ADC counts to micro Volts
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 33


 723:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function is not available when left data format justification selected.
 724:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 725:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 726:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  chan: The ADC channel number.
 727:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  adcCounts: Result from the ADC conversion
 728:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 729:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 730:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Results in uVolts
 731:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 732:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Global variables:
 733:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_countsPer10Volt:  used to convert ADC counts to uVolts.
 734:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_Offset:  Used as the offset while converting ADC counts 
 735:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *   to mVolts.
 736:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 737:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Theory: 
 738:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 739:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  number in the conversion to uVolts and at the same time not loose 
 740:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  resolution.
 741:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 742:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  on 10 million and later divide on gain in counts per 10V. 
 743:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 744:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
 745:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     int32 ADC_SAR_SEQ_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 746:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 1096              		.loc 1 746 0
 1097              		.cfi_startproc
 1098 0000 B0B5     		push	{r4, r5, r7, lr}
 1099              	.LCFI43:
 1100              		.cfi_def_cfa_offset 16
 1101              		.cfi_offset 4, -16
 1102              		.cfi_offset 5, -12
 1103              		.cfi_offset 7, -8
 1104              		.cfi_offset 14, -4
 1105 0002 86B0     		sub	sp, sp, #24
 1106              	.LCFI44:
 1107              		.cfi_def_cfa_offset 40
 1108 0004 00AF     		add	r7, sp, #0
 1109              	.LCFI45:
 1110              		.cfi_def_cfa_register 7
 1111 0006 F860     		str	r0, [r7, #12]
 1112 0008 0A1C     		mov	r2, r1
 1113 000a 3B1C     		mov	r3, r7
 1114 000c 0A33     		add	r3, r3, #10
 1115 000e 1A80     		strh	r2, [r3]
 747:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         int64 uVolts;
 748:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 749:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 750:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 1116              		.loc 1 750 0
 1117 0010 FB68     		ldr	r3, [r7, #12]
 1118 0012 022B     		cmp	r3, #2
 1119 0014 02D9     		bls	.L76
 1120              		.loc 1 750 0 is_stmt 0 discriminator 1
 1121 0016 0020     		mov	r0, #0
 1122 0018 FFF7FEFF 		bl	CyHalt
 1123              	.L76:
 751:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 34


 752:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 753:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE)
 754:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chan] & ADC_SAR_SEQ_AVERAGING_EN) != 0u)
 755:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 756:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 adcCounts /= ADC_SAR_SEQ_DEFAULT_AVG_SAMPLES_DIV;
 757:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }    
 758:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE */
 759:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 760:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Subtract ADC offset */
 761:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         adcCounts -= ADC_SAR_SEQ_offset[chan];
 1124              		.loc 1 761 0 is_stmt 1
 1125 001c 3B1C     		mov	r3, r7
 1126 001e 0A33     		add	r3, r3, #10
 1127 0020 1A88     		ldrh	r2, [r3]
 1128 0022 1B4B     		ldr	r3, .L78+8
 1129 0024 F968     		ldr	r1, [r7, #12]
 1130 0026 4900     		lsl	r1, r1, #1
 1131 0028 CB5A     		ldrh	r3, [r1, r3]
 1132 002a 9BB2     		uxth	r3, r3
 1133 002c 9BB2     		uxth	r3, r3
 1134 002e D31A     		sub	r3, r2, r3
 1135 0030 9AB2     		uxth	r2, r3
 1136 0032 3B1C     		mov	r3, r7
 1137 0034 0A33     		add	r3, r3, #10
 1138 0036 1A80     		strh	r2, [r3]
 762:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 763:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         uVolts = ((int64)adcCounts * ADC_SAR_SEQ_10UV_COUNTS) / ADC_SAR_SEQ_countsPer10Volt[chan];
 1139              		.loc 1 763 0
 1140 0038 3B1C     		mov	r3, r7
 1141 003a 0A33     		add	r3, r3, #10
 1142 003c 0022     		mov	r2, #0
 1143 003e 9B5E     		ldrsh	r3, [r3, r2]
 1144 0040 1A1C     		mov	r2, r3
 1145 0042 3A60     		str	r2, [r7]
 1146 0044 DB17     		asr	r3, r3, #31
 1147 0046 7B60     		str	r3, [r7, #4]
 1148 0048 3868     		ldr	r0, [r7]
 1149 004a 7968     		ldr	r1, [r7, #4]
 1150 004c 0F4B     		ldr	r3, .L78+4
 1151 004e 0E4A     		ldr	r2, .L78
 1152 0050 FFF7FEFF 		bl	__aeabi_lmul
 1153 0054 021C     		mov	r2, r0
 1154 0056 0B1C     		mov	r3, r1
 1155 0058 0E49     		ldr	r1, .L78+12
 1156 005a F868     		ldr	r0, [r7, #12]
 1157 005c 8000     		lsl	r0, r0, #2
 1158 005e 4158     		ldr	r1, [r0, r1]
 1159 0060 0C1C     		mov	r4, r1
 1160 0062 C917     		asr	r1, r1, #31
 1161 0064 0D1C     		mov	r5, r1
 1162 0066 101C     		mov	r0, r2
 1163 0068 191C     		mov	r1, r3
 1164 006a 221C     		mov	r2, r4
 1165 006c 2B1C     		mov	r3, r5
 1166 006e FFF7FEFF 		bl	__aeabi_ldivmod
 1167 0072 031C     		mov	r3, r0
 1168 0074 0C1C     		mov	r4, r1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 35


 1169 0076 3B61     		str	r3, [r7, #16]
 1170 0078 7C61     		str	r4, [r7, #20]
 764:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 765:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         return( (int32)uVolts );
 1171              		.loc 1 765 0
 1172 007a 3B69     		ldr	r3, [r7, #16]
 766:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 1173              		.loc 1 766 0
 1174 007c 181C     		mov	r0, r3
 1175 007e BD46     		mov	sp, r7
 1176 0080 06B0     		add	sp, sp, #24
 1177              		@ sp needed for prologue
 1178 0082 B0BD     		pop	{r4, r5, r7, pc}
 1179              	.L79:
 1180 0084 C046C046 		.align	3
 1181              	.L78:
 1182 0088 80969800 		.word	10000000
 1183 008c 00000000 		.word	0
 1184 0090 00000000 		.word	ADC_SAR_SEQ_offset
 1185 0094 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 1186              		.cfi_endproc
 1187              	.LFE16:
 1188              		.size	ADC_SAR_SEQ_CountsTo_uVolts, .-ADC_SAR_SEQ_CountsTo_uVolts
 1189              		.global	__aeabi_i2f
 1190              		.global	__aeabi_fmul
 1191              		.global	__aeabi_fdiv
 1192              		.section	.text.ADC_SAR_SEQ_CountsTo_Volts,"ax",%progbits
 1193              		.align	2
 1194              		.global	ADC_SAR_SEQ_CountsTo_Volts
 1195              		.code	16
 1196              		.thumb_func
 1197              		.type	ADC_SAR_SEQ_CountsTo_Volts, %function
 1198              	ADC_SAR_SEQ_CountsTo_Volts:
 1199              	.LFB17:
 767:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 768:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 769:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 770:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_CountsTo_Volts
 771:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 772:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 773:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 774:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Converts the ADC output to Volts as a floating point number.
 775:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function is not available when left data format justification selected.
 776:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 777:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 778:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  chan: The ADC channel number.
 779:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Result from the ADC conversion
 780:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 781:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 782:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Results in Volts
 783:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 784:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Global variables:
 785:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_countsPer10Volt:  used to convert ADC counts to Volts.
 786:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_Offset:  Used as the offset while converting ADC counts 
 787:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *   to mVolts.
 788:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 789:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 36


 790:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     float32 ADC_SAR_SEQ_CountsTo_Volts(uint32 chan, int16 adcCounts)
 791:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 1200              		.loc 1 791 0
 1201              		.cfi_startproc
 1202 0000 90B5     		push	{r4, r7, lr}
 1203              	.LCFI46:
 1204              		.cfi_def_cfa_offset 12
 1205              		.cfi_offset 4, -12
 1206              		.cfi_offset 7, -8
 1207              		.cfi_offset 14, -4
 1208 0002 85B0     		sub	sp, sp, #20
 1209              	.LCFI47:
 1210              		.cfi_def_cfa_offset 32
 1211 0004 00AF     		add	r7, sp, #0
 1212              	.LCFI48:
 1213              		.cfi_def_cfa_register 7
 1214 0006 7860     		str	r0, [r7, #4]
 1215 0008 0A1C     		mov	r2, r1
 1216 000a BB1C     		add	r3, r7, #2
 1217 000c 1A80     		strh	r2, [r3]
 792:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         float32 volts;
 793:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 794:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 795:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 1218              		.loc 1 795 0
 1219 000e 7B68     		ldr	r3, [r7, #4]
 1220 0010 022B     		cmp	r3, #2
 1221 0012 02D9     		bls	.L81
 1222              		.loc 1 795 0 is_stmt 0 discriminator 1
 1223 0014 0020     		mov	r0, #0
 1224 0016 FFF7FEFF 		bl	CyHalt
 1225              	.L81:
 796:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 797:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 798:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE)
 799:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chan] & ADC_SAR_SEQ_AVERAGING_EN) != 0u)
 800:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 801:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 adcCounts /= ADC_SAR_SEQ_DEFAULT_AVG_SAMPLES_DIV;
 802:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }    
 803:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE */
 804:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 805:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Subtract ADC offset */
 806:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         adcCounts -= ADC_SAR_SEQ_offset[chan];
 1226              		.loc 1 806 0 is_stmt 1
 1227 001a BB1C     		add	r3, r7, #2
 1228 001c 1A88     		ldrh	r2, [r3]
 1229 001e 154B     		ldr	r3, .L83
 1230 0020 7968     		ldr	r1, [r7, #4]
 1231 0022 4900     		lsl	r1, r1, #1
 1232 0024 CB5A     		ldrh	r3, [r1, r3]
 1233 0026 9BB2     		uxth	r3, r3
 1234 0028 9BB2     		uxth	r3, r3
 1235 002a D31A     		sub	r3, r2, r3
 1236 002c 9AB2     		uxth	r2, r3
 1237 002e BB1C     		add	r3, r7, #2
 1238 0030 1A80     		strh	r2, [r3]
 807:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 37


 808:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         volts = ((float32)adcCounts * ADC_SAR_SEQ_10V_COUNTS) / (float32)ADC_SAR_SEQ_countsPer10Vol
 1239              		.loc 1 808 0
 1240 0032 BB1C     		add	r3, r7, #2
 1241 0034 0022     		mov	r2, #0
 1242 0036 9B5E     		ldrsh	r3, [r3, r2]
 1243 0038 181C     		mov	r0, r3
 1244 003a FFF7FEFF 		bl	__aeabi_i2f
 1245 003e 031C     		add	r3, r0, #0
 1246 0040 181C     		add	r0, r3, #0
 1247 0042 0D49     		ldr	r1, .L83+4
 1248 0044 FFF7FEFF 		bl	__aeabi_fmul
 1249 0048 031C     		add	r3, r0, #0
 1250 004a 1C1C     		add	r4, r3, #0
 1251 004c 0B4B     		ldr	r3, .L83+8
 1252 004e 7A68     		ldr	r2, [r7, #4]
 1253 0050 9200     		lsl	r2, r2, #2
 1254 0052 D358     		ldr	r3, [r2, r3]
 1255 0054 181C     		mov	r0, r3
 1256 0056 FFF7FEFF 		bl	__aeabi_i2f
 1257 005a 031C     		add	r3, r0, #0
 1258 005c 201C     		add	r0, r4, #0
 1259 005e 191C     		add	r1, r3, #0
 1260 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1261 0064 031C     		add	r3, r0, #0
 1262 0066 FB60     		str	r3, [r7, #12]
 809:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 810:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         return( volts );
 1263              		.loc 1 810 0
 1264 0068 FB68     		ldr	r3, [r7, #12]
 811:.\Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 1265              		.loc 1 811 0
 1266 006a 181C     		add	r0, r3, #0
 1267 006c BD46     		mov	sp, r7
 1268 006e 05B0     		add	sp, sp, #20
 1269              		@ sp needed for prologue
 1270 0070 90BD     		pop	{r4, r7, pc}
 1271              	.L84:
 1272 0072 C046     		.align	2
 1273              	.L83:
 1274 0074 00000000 		.word	ADC_SAR_SEQ_offset
 1275 0078 00002041 		.word	1092616192
 1276 007c 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 1277              		.cfi_endproc
 1278              	.LFE17:
 1279              		.size	ADC_SAR_SEQ_CountsTo_Volts, .-ADC_SAR_SEQ_CountsTo_Volts
 1280              		.section	.rodata
 1281              		.align	2
 1282              		.type	ADC_SAR_SEQ_InputsPlacement.4650, %object
 1283              		.size	ADC_SAR_SEQ_InputsPlacement.4650, 3
 1284              	ADC_SAR_SEQ_InputsPlacement.4650:
 1285 000c 07       		.byte	7
 1286 000d 06       		.byte	6
 1287 000e 12       		.byte	18
 1288 000f 00       		.text
 1289              	.Letext0:
 1290              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1291              		.section	.debug_info,"",%progbits
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 38


 1292              	.Ldebug_info0:
 1293 0000 F6040000 		.4byte	0x4f6
 1294 0004 0200     		.2byte	0x2
 1295 0006 00000000 		.4byte	.Ldebug_abbrev0
 1296 000a 04       		.byte	0x4
 1297 000b 01       		.uleb128 0x1
 1298 000c B4020000 		.4byte	.LASF60
 1299 0010 01       		.byte	0x1
 1300 0011 52000000 		.4byte	.LASF61
 1301 0015 9E010000 		.4byte	.LASF62
 1302 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1303 001d 00000000 		.4byte	0
 1304 0021 00000000 		.4byte	0
 1305 0025 00000000 		.4byte	.Ldebug_line0
 1306 0029 02       		.uleb128 0x2
 1307 002a 01       		.byte	0x1
 1308 002b 06       		.byte	0x6
 1309 002c C9000000 		.4byte	.LASF0
 1310 0030 02       		.uleb128 0x2
 1311 0031 01       		.byte	0x1
 1312 0032 08       		.byte	0x8
 1313 0033 FD020000 		.4byte	.LASF1
 1314 0037 02       		.uleb128 0x2
 1315 0038 02       		.byte	0x2
 1316 0039 05       		.byte	0x5
 1317 003a 0B030000 		.4byte	.LASF2
 1318 003e 02       		.uleb128 0x2
 1319 003f 02       		.byte	0x2
 1320 0040 07       		.byte	0x7
 1321 0041 8B010000 		.4byte	.LASF3
 1322 0045 02       		.uleb128 0x2
 1323 0046 04       		.byte	0x4
 1324 0047 05       		.byte	0x5
 1325 0048 DB000000 		.4byte	.LASF4
 1326 004c 02       		.uleb128 0x2
 1327 004d 04       		.byte	0x4
 1328 004e 07       		.byte	0x7
 1329 004f 69010000 		.4byte	.LASF5
 1330 0053 02       		.uleb128 0x2
 1331 0054 08       		.byte	0x8
 1332 0055 05       		.byte	0x5
 1333 0056 BB000000 		.4byte	.LASF6
 1334 005a 02       		.uleb128 0x2
 1335 005b 08       		.byte	0x8
 1336 005c 07       		.byte	0x7
 1337 005d 79000000 		.4byte	.LASF7
 1338 0061 03       		.uleb128 0x3
 1339 0062 04       		.byte	0x4
 1340 0063 05       		.byte	0x5
 1341 0064 696E7400 		.ascii	"int\000"
 1342 0068 02       		.uleb128 0x2
 1343 0069 04       		.byte	0x4
 1344 006a 07       		.byte	0x7
 1345 006b 39010000 		.4byte	.LASF8
 1346 006f 04       		.uleb128 0x4
 1347 0070 E4000000 		.4byte	.LASF9
 1348 0074 02       		.byte	0x2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 39


 1349 0075 5B       		.byte	0x5b
 1350 0076 30000000 		.4byte	0x30
 1351 007a 04       		.uleb128 0x4
 1352 007b 00000000 		.4byte	.LASF10
 1353 007f 02       		.byte	0x2
 1354 0080 5C       		.byte	0x5c
 1355 0081 3E000000 		.4byte	0x3e
 1356 0085 04       		.uleb128 0x4
 1357 0086 25010000 		.4byte	.LASF11
 1358 008a 02       		.byte	0x2
 1359 008b 5D       		.byte	0x5d
 1360 008c 4C000000 		.4byte	0x4c
 1361 0090 04       		.uleb128 0x4
 1362 0091 F5030000 		.4byte	.LASF12
 1363 0095 02       		.byte	0x2
 1364 0096 5F       		.byte	0x5f
 1365 0097 37000000 		.4byte	0x37
 1366 009b 04       		.uleb128 0x4
 1367 009c D5000000 		.4byte	.LASF13
 1368 00a0 02       		.byte	0x2
 1369 00a1 60       		.byte	0x60
 1370 00a2 45000000 		.4byte	0x45
 1371 00a6 04       		.uleb128 0x4
 1372 00a7 30020000 		.4byte	.LASF14
 1373 00ab 02       		.byte	0x2
 1374 00ac 61       		.byte	0x61
 1375 00ad B1000000 		.4byte	0xb1
 1376 00b1 02       		.uleb128 0x2
 1377 00b2 04       		.byte	0x4
 1378 00b3 04       		.byte	0x4
 1379 00b4 8B020000 		.4byte	.LASF15
 1380 00b8 02       		.uleb128 0x2
 1381 00b9 08       		.byte	0x8
 1382 00ba 04       		.byte	0x4
 1383 00bb 02010000 		.4byte	.LASF16
 1384 00bf 04       		.uleb128 0x4
 1385 00c0 61020000 		.4byte	.LASF17
 1386 00c4 02       		.byte	0x2
 1387 00c5 66       		.byte	0x66
 1388 00c6 53000000 		.4byte	0x53
 1389 00ca 02       		.uleb128 0x2
 1390 00cb 01       		.byte	0x1
 1391 00cc 08       		.byte	0x8
 1392 00cd A7030000 		.4byte	.LASF18
 1393 00d1 04       		.uleb128 0x4
 1394 00d2 2A020000 		.4byte	.LASF19
 1395 00d6 02       		.byte	0x2
 1396 00d7 F2       		.byte	0xf2
 1397 00d8 DC000000 		.4byte	0xdc
 1398 00dc 05       		.uleb128 0x5
 1399 00dd 85000000 		.4byte	0x85
 1400 00e1 02       		.uleb128 0x2
 1401 00e2 04       		.byte	0x4
 1402 00e3 07       		.byte	0x7
 1403 00e4 38020000 		.4byte	.LASF20
 1404 00e8 06       		.uleb128 0x6
 1405 00e9 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 40


 1406 00ea 40000000 		.4byte	.LASF25
 1407 00ee 01       		.byte	0x1
 1408 00ef 40       		.byte	0x40
 1409 00f0 01       		.byte	0x1
 1410 00f1 00000000 		.4byte	.LFB0
 1411 00f5 24000000 		.4byte	.LFE0
 1412 00f9 00000000 		.4byte	.LLST0
 1413 00fd 01       		.byte	0x1
 1414 00fe 07       		.uleb128 0x7
 1415 00ff 01       		.byte	0x1
 1416 0100 FB030000 		.4byte	.LASF36
 1417 0104 01       		.byte	0x1
 1418 0105 5F       		.byte	0x5f
 1419 0106 01       		.byte	0x1
 1420 0107 00000000 		.4byte	.LFB1
 1421 010b E4010000 		.4byte	.LFE1
 1422 010f 2C000000 		.4byte	.LLST1
 1423 0113 01       		.byte	0x1
 1424 0114 54010000 		.4byte	0x154
 1425 0118 08       		.uleb128 0x8
 1426 0119 6D030000 		.4byte	.LASF21
 1427 011d 01       		.byte	0x1
 1428 011e 61       		.byte	0x61
 1429 011f 85000000 		.4byte	0x85
 1430 0123 02       		.byte	0x2
 1431 0124 91       		.byte	0x91
 1432 0125 6C       		.sleb128 -20
 1433 0126 08       		.uleb128 0x8
 1434 0127 81010000 		.4byte	.LASF22
 1435 012b 01       		.byte	0x1
 1436 012c 62       		.byte	0x62
 1437 012d 85000000 		.4byte	0x85
 1438 0131 02       		.byte	0x2
 1439 0132 91       		.byte	0x91
 1440 0133 64       		.sleb128 -28
 1441 0134 08       		.uleb128 0x8
 1442 0135 0F000000 		.4byte	.LASF23
 1443 0139 01       		.byte	0x1
 1444 013a 63       		.byte	0x63
 1445 013b 9B000000 		.4byte	0x9b
 1446 013f 02       		.byte	0x2
 1447 0140 91       		.byte	0x91
 1448 0141 68       		.sleb128 -24
 1449 0142 08       		.uleb128 0x8
 1450 0143 09010000 		.4byte	.LASF24
 1451 0147 01       		.byte	0x1
 1452 0148 66       		.byte	0x66
 1453 0149 64010000 		.4byte	0x164
 1454 014d 05       		.byte	0x5
 1455 014e 03       		.byte	0x3
 1456 014f 0C000000 		.4byte	ADC_SAR_SEQ_InputsPlacement.4650
 1457 0153 00       		.byte	0
 1458 0154 09       		.uleb128 0x9
 1459 0155 6F000000 		.4byte	0x6f
 1460 0159 64010000 		.4byte	0x164
 1461 015d 0A       		.uleb128 0xa
 1462 015e E1000000 		.4byte	0xe1
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 41


 1463 0162 02       		.byte	0x2
 1464 0163 00       		.byte	0
 1465 0164 0B       		.uleb128 0xb
 1466 0165 54010000 		.4byte	0x154
 1467 0169 0C       		.uleb128 0xc
 1468 016a 01       		.byte	0x1
 1469 016b 78020000 		.4byte	.LASF26
 1470 016f 01       		.byte	0x1
 1471 0170 1501     		.2byte	0x115
 1472 0172 01       		.byte	0x1
 1473 0173 00000000 		.4byte	.LFB2
 1474 0177 20000000 		.4byte	.LFE2
 1475 017b 64000000 		.4byte	.LLST2
 1476 017f 01       		.byte	0x1
 1477 0180 0D       		.uleb128 0xd
 1478 0181 01       		.byte	0x1
 1479 0182 67020000 		.4byte	.LASF27
 1480 0186 01       		.byte	0x1
 1481 0187 2C01     		.2byte	0x12c
 1482 0189 01       		.byte	0x1
 1483 018a 00000000 		.4byte	.LFB3
 1484 018e 18000000 		.4byte	.LFE3
 1485 0192 90000000 		.4byte	.LLST3
 1486 0196 01       		.byte	0x1
 1487 0197 0D       		.uleb128 0xd
 1488 0198 01       		.byte	0x1
 1489 0199 54030000 		.4byte	.LASF28
 1490 019d 01       		.byte	0x1
 1491 019e 4601     		.2byte	0x146
 1492 01a0 01       		.byte	0x1
 1493 01a1 00000000 		.4byte	.LFB4
 1494 01a5 1C000000 		.4byte	.LFE4
 1495 01a9 BC000000 		.4byte	.LLST4
 1496 01ad 01       		.byte	0x1
 1497 01ae 0D       		.uleb128 0xd
 1498 01af 01       		.byte	0x1
 1499 01b0 EA000000 		.4byte	.LASF29
 1500 01b4 01       		.byte	0x1
 1501 01b5 5F01     		.2byte	0x15f
 1502 01b7 01       		.byte	0x1
 1503 01b8 00000000 		.4byte	.LFB5
 1504 01bc 1C000000 		.4byte	.LFE5
 1505 01c0 E8000000 		.4byte	.LLST5
 1506 01c4 01       		.byte	0x1
 1507 01c5 0E       		.uleb128 0xe
 1508 01c6 01       		.byte	0x1
 1509 01c7 15030000 		.4byte	.LASF31
 1510 01cb 01       		.byte	0x1
 1511 01cc 8101     		.2byte	0x181
 1512 01ce 01       		.byte	0x1
 1513 01cf 85000000 		.4byte	0x85
 1514 01d3 00000000 		.4byte	.LFB6
 1515 01d7 48000000 		.4byte	.LFE6
 1516 01db 14010000 		.4byte	.LLST6
 1517 01df 01       		.byte	0x1
 1518 01e0 03020000 		.4byte	0x203
 1519 01e4 0F       		.uleb128 0xf
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 42


 1520 01e5 31010000 		.4byte	.LASF33
 1521 01e9 01       		.byte	0x1
 1522 01ea 8101     		.2byte	0x181
 1523 01ec 85000000 		.4byte	0x85
 1524 01f0 02       		.byte	0x2
 1525 01f1 91       		.byte	0x91
 1526 01f2 6C       		.sleb128 -20
 1527 01f3 10       		.uleb128 0x10
 1528 01f4 EE030000 		.4byte	.LASF30
 1529 01f8 01       		.byte	0x1
 1530 01f9 8301     		.2byte	0x183
 1531 01fb 85000000 		.4byte	0x85
 1532 01ff 02       		.byte	0x2
 1533 0200 91       		.byte	0x91
 1534 0201 74       		.sleb128 -12
 1535 0202 00       		.byte	0
 1536 0203 11       		.uleb128 0x11
 1537 0204 01       		.byte	0x1
 1538 0205 AC030000 		.4byte	.LASF32
 1539 0209 01       		.byte	0x1
 1540 020a B701     		.2byte	0x1b7
 1541 020c 01       		.byte	0x1
 1542 020d 90000000 		.4byte	0x90
 1543 0211 00000000 		.4byte	.LFB7
 1544 0215 44000000 		.4byte	.LFE7
 1545 0219 4C010000 		.4byte	.LLST7
 1546 021d 01       		.byte	0x1
 1547 021e 41020000 		.4byte	0x241
 1548 0222 0F       		.uleb128 0xf
 1549 0223 A2030000 		.4byte	.LASF34
 1550 0227 01       		.byte	0x1
 1551 0228 B701     		.2byte	0x1b7
 1552 022a 85000000 		.4byte	0x85
 1553 022e 02       		.byte	0x2
 1554 022f 91       		.byte	0x91
 1555 0230 6C       		.sleb128 -20
 1556 0231 10       		.uleb128 0x10
 1557 0232 0C040000 		.4byte	.LASF35
 1558 0236 01       		.byte	0x1
 1559 0237 B901     		.2byte	0x1b9
 1560 0239 85000000 		.4byte	0x85
 1561 023d 02       		.byte	0x2
 1562 023e 91       		.byte	0x91
 1563 023f 74       		.sleb128 -12
 1564 0240 00       		.byte	0
 1565 0241 12       		.uleb128 0x12
 1566 0242 01       		.byte	0x1
 1567 0243 A3000000 		.4byte	.LASF37
 1568 0247 01       		.byte	0x1
 1569 0248 E401     		.2byte	0x1e4
 1570 024a 01       		.byte	0x1
 1571 024b 00000000 		.4byte	.LFB8
 1572 024f 1C000000 		.4byte	.LFE8
 1573 0253 84010000 		.4byte	.LLST8
 1574 0257 01       		.byte	0x1
 1575 0258 6C020000 		.4byte	0x26c
 1576 025c 0F       		.uleb128 0xf
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 43


 1577 025d 2C010000 		.4byte	.LASF38
 1578 0261 01       		.byte	0x1
 1579 0262 E401     		.2byte	0x1e4
 1580 0264 85000000 		.4byte	0x85
 1581 0268 02       		.byte	0x2
 1582 0269 91       		.byte	0x91
 1583 026a 74       		.sleb128 -12
 1584 026b 00       		.byte	0
 1585 026c 12       		.uleb128 0x12
 1586 026d 01       		.byte	0x1
 1587 026e 12020000 		.4byte	.LASF39
 1588 0272 01       		.byte	0x1
 1589 0273 1002     		.2byte	0x210
 1590 0275 01       		.byte	0x1
 1591 0276 00000000 		.4byte	.LFB9
 1592 027a 30000000 		.4byte	.LFE9
 1593 027e BC010000 		.4byte	.LLST9
 1594 0282 01       		.byte	0x1
 1595 0283 97020000 		.4byte	0x297
 1596 0287 0F       		.uleb128 0xf
 1597 0288 41020000 		.4byte	.LASF40
 1598 028c 01       		.byte	0x1
 1599 028d 1002     		.2byte	0x210
 1600 028f 85000000 		.4byte	0x85
 1601 0293 02       		.byte	0x2
 1602 0294 91       		.byte	0x91
 1603 0295 74       		.sleb128 -12
 1604 0296 00       		.byte	0
 1605 0297 12       		.uleb128 0x12
 1606 0298 01       		.byte	0x1
 1607 0299 CB030000 		.4byte	.LASF41
 1608 029d 01       		.byte	0x1
 1609 029e 2502     		.2byte	0x225
 1610 02a0 01       		.byte	0x1
 1611 02a1 00000000 		.4byte	.LFB10
 1612 02a5 2C000000 		.4byte	.LFE10
 1613 02a9 F4010000 		.4byte	.LLST10
 1614 02ad 01       		.byte	0x1
 1615 02ae C2020000 		.4byte	0x2c2
 1616 02b2 0F       		.uleb128 0xf
 1617 02b3 91020000 		.4byte	.LASF42
 1618 02b7 01       		.byte	0x1
 1619 02b8 2502     		.2byte	0x225
 1620 02ba 85000000 		.4byte	0x85
 1621 02be 02       		.byte	0x2
 1622 02bf 91       		.byte	0x91
 1623 02c0 74       		.sleb128 -12
 1624 02c1 00       		.byte	0
 1625 02c2 12       		.uleb128 0x12
 1626 02c3 01       		.byte	0x1
 1627 02c4 9B020000 		.4byte	.LASF43
 1628 02c8 01       		.byte	0x1
 1629 02c9 3D02     		.2byte	0x23d
 1630 02cb 01       		.byte	0x1
 1631 02cc 00000000 		.4byte	.LFB11
 1632 02d0 1C000000 		.4byte	.LFE11
 1633 02d4 2C020000 		.4byte	.LLST11
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 44


 1634 02d8 01       		.byte	0x1
 1635 02d9 ED020000 		.4byte	0x2ed
 1636 02dd 0F       		.uleb128 0xf
 1637 02de 2C010000 		.4byte	.LASF38
 1638 02e2 01       		.byte	0x1
 1639 02e3 3D02     		.2byte	0x23d
 1640 02e5 85000000 		.4byte	0x85
 1641 02e9 02       		.byte	0x2
 1642 02ea 91       		.byte	0x91
 1643 02eb 74       		.sleb128 -12
 1644 02ec 00       		.byte	0
 1645 02ed 12       		.uleb128 0x12
 1646 02ee 01       		.byte	0x1
 1647 02ef 4A020000 		.4byte	.LASF44
 1648 02f3 01       		.byte	0x1
 1649 02f4 5402     		.2byte	0x254
 1650 02f6 01       		.byte	0x1
 1651 02f7 00000000 		.4byte	.LFB12
 1652 02fb 1C000000 		.4byte	.LFE12
 1653 02ff 64020000 		.4byte	.LLST12
 1654 0303 01       		.byte	0x1
 1655 0304 18030000 		.4byte	0x318
 1656 0308 0F       		.uleb128 0xf
 1657 0309 2C010000 		.4byte	.LASF38
 1658 030d 01       		.byte	0x1
 1659 030e 5402     		.2byte	0x254
 1660 0310 85000000 		.4byte	0x85
 1661 0314 02       		.byte	0x2
 1662 0315 91       		.byte	0x91
 1663 0316 74       		.sleb128 -12
 1664 0317 00       		.byte	0
 1665 0318 13       		.uleb128 0x13
 1666 0319 01       		.byte	0x1
 1667 031a 2A000000 		.4byte	.LASF45
 1668 031e 01       		.byte	0x1
 1669 031f 7002     		.2byte	0x270
 1670 0321 01       		.byte	0x1
 1671 0322 00000000 		.4byte	.LFB13
 1672 0326 30000000 		.4byte	.LFE13
 1673 032a 9C020000 		.4byte	.LLST13
 1674 032e 01       		.byte	0x1
 1675 032f 52030000 		.4byte	0x352
 1676 0333 0F       		.uleb128 0xf
 1677 0334 A2030000 		.4byte	.LASF34
 1678 0338 01       		.byte	0x1
 1679 0339 7002     		.2byte	0x270
 1680 033b 85000000 		.4byte	0x85
 1681 033f 02       		.byte	0x2
 1682 0340 91       		.byte	0x91
 1683 0341 74       		.sleb128 -12
 1684 0342 0F       		.uleb128 0xf
 1685 0343 C4030000 		.4byte	.LASF46
 1686 0347 01       		.byte	0x1
 1687 0348 7002     		.2byte	0x270
 1688 034a 90000000 		.4byte	0x90
 1689 034e 02       		.byte	0x2
 1690 034f 91       		.byte	0x91
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 45


 1691 0350 72       		.sleb128 -14
 1692 0351 00       		.byte	0
 1693 0352 13       		.uleb128 0x13
 1694 0353 01       		.byte	0x1
 1695 0354 16000000 		.4byte	.LASF47
 1696 0358 01       		.byte	0x1
 1697 0359 9202     		.2byte	0x292
 1698 035b 01       		.byte	0x1
 1699 035c 00000000 		.4byte	.LFB14
 1700 0360 2C000000 		.4byte	.LFE14
 1701 0364 D4020000 		.4byte	.LLST14
 1702 0368 01       		.byte	0x1
 1703 0369 8C030000 		.4byte	0x38c
 1704 036d 0F       		.uleb128 0xf
 1705 036e A2030000 		.4byte	.LASF34
 1706 0372 01       		.byte	0x1
 1707 0373 9202     		.2byte	0x292
 1708 0375 85000000 		.4byte	0x85
 1709 0379 02       		.byte	0x2
 1710 037a 91       		.byte	0x91
 1711 037b 74       		.sleb128 -12
 1712 037c 0F       		.uleb128 0xf
 1713 037d 07000000 		.4byte	.LASF48
 1714 0381 01       		.byte	0x1
 1715 0382 9202     		.2byte	0x292
 1716 0384 9B000000 		.4byte	0x9b
 1717 0388 02       		.byte	0x2
 1718 0389 91       		.byte	0x91
 1719 038a 70       		.sleb128 -16
 1720 038b 00       		.byte	0
 1721 038c 11       		.uleb128 0x11
 1722 038d 01       		.byte	0x1
 1723 038e F6010000 		.4byte	.LASF49
 1724 0392 01       		.byte	0x1
 1725 0393 B302     		.2byte	0x2b3
 1726 0395 01       		.byte	0x1
 1727 0396 90000000 		.4byte	0x90
 1728 039a 00000000 		.4byte	.LFB15
 1729 039e A4000000 		.4byte	.LFE15
 1730 03a2 0C030000 		.4byte	.LLST15
 1731 03a6 01       		.byte	0x1
 1732 03a7 D9030000 		.4byte	0x3d9
 1733 03ab 0F       		.uleb128 0xf
 1734 03ac A2030000 		.4byte	.LASF34
 1735 03b0 01       		.byte	0x1
 1736 03b1 B302     		.2byte	0x2b3
 1737 03b3 85000000 		.4byte	0x85
 1738 03b7 02       		.byte	0x2
 1739 03b8 91       		.byte	0x91
 1740 03b9 6C       		.sleb128 -20
 1741 03ba 0F       		.uleb128 0xf
 1742 03bb E4030000 		.4byte	.LASF50
 1743 03bf 01       		.byte	0x1
 1744 03c0 B302     		.2byte	0x2b3
 1745 03c2 90000000 		.4byte	0x90
 1746 03c6 02       		.byte	0x2
 1747 03c7 91       		.byte	0x91
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 46


 1748 03c8 6A       		.sleb128 -22
 1749 03c9 10       		.uleb128 0x10
 1750 03ca 31030000 		.4byte	.LASF51
 1751 03ce 01       		.byte	0x1
 1752 03cf B502     		.2byte	0x2b5
 1753 03d1 90000000 		.4byte	0x90
 1754 03d5 02       		.byte	0x2
 1755 03d6 91       		.byte	0x91
 1756 03d7 76       		.sleb128 -10
 1757 03d8 00       		.byte	0
 1758 03d9 11       		.uleb128 0x11
 1759 03da 01       		.byte	0x1
 1760 03db 46010000 		.4byte	.LASF52
 1761 03df 01       		.byte	0x1
 1762 03e0 E902     		.2byte	0x2e9
 1763 03e2 01       		.byte	0x1
 1764 03e3 9B000000 		.4byte	0x9b
 1765 03e7 00000000 		.4byte	.LFB16
 1766 03eb 98000000 		.4byte	.LFE16
 1767 03ef 44030000 		.4byte	.LLST16
 1768 03f3 01       		.byte	0x1
 1769 03f4 26040000 		.4byte	0x426
 1770 03f8 0F       		.uleb128 0xf
 1771 03f9 A2030000 		.4byte	.LASF34
 1772 03fd 01       		.byte	0x1
 1773 03fe E902     		.2byte	0x2e9
 1774 0400 85000000 		.4byte	0x85
 1775 0404 02       		.byte	0x2
 1776 0405 91       		.byte	0x91
 1777 0406 64       		.sleb128 -28
 1778 0407 0F       		.uleb128 0xf
 1779 0408 E4030000 		.4byte	.LASF50
 1780 040c 01       		.byte	0x1
 1781 040d E902     		.2byte	0x2e9
 1782 040f 90000000 		.4byte	0x90
 1783 0413 02       		.byte	0x2
 1784 0414 91       		.byte	0x91
 1785 0415 62       		.sleb128 -30
 1786 0416 10       		.uleb128 0x10
 1787 0417 62010000 		.4byte	.LASF53
 1788 041b 01       		.byte	0x1
 1789 041c EB02     		.2byte	0x2eb
 1790 041e BF000000 		.4byte	0xbf
 1791 0422 02       		.byte	0x2
 1792 0423 91       		.byte	0x91
 1793 0424 68       		.sleb128 -24
 1794 0425 00       		.byte	0
 1795 0426 11       		.uleb128 0x11
 1796 0427 01       		.byte	0x1
 1797 0428 13040000 		.4byte	.LASF54
 1798 042c 01       		.byte	0x1
 1799 042d 1603     		.2byte	0x316
 1800 042f 01       		.byte	0x1
 1801 0430 A6000000 		.4byte	0xa6
 1802 0434 00000000 		.4byte	.LFB17
 1803 0438 80000000 		.4byte	.LFE17
 1804 043c 7C030000 		.4byte	.LLST17
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 47


 1805 0440 01       		.byte	0x1
 1806 0441 73040000 		.4byte	0x473
 1807 0445 0F       		.uleb128 0xf
 1808 0446 A2030000 		.4byte	.LASF34
 1809 044a 01       		.byte	0x1
 1810 044b 1603     		.2byte	0x316
 1811 044d 85000000 		.4byte	0x85
 1812 0451 02       		.byte	0x2
 1813 0452 91       		.byte	0x91
 1814 0453 64       		.sleb128 -28
 1815 0454 0F       		.uleb128 0xf
 1816 0455 E4030000 		.4byte	.LASF50
 1817 0459 01       		.byte	0x1
 1818 045a 1603     		.2byte	0x316
 1819 045c 90000000 		.4byte	0x90
 1820 0460 02       		.byte	0x2
 1821 0461 91       		.byte	0x91
 1822 0462 62       		.sleb128 -30
 1823 0463 10       		.uleb128 0x10
 1824 0464 7B010000 		.4byte	.LASF55
 1825 0468 01       		.byte	0x1
 1826 0469 1803     		.2byte	0x318
 1827 046b A6000000 		.4byte	0xa6
 1828 046f 02       		.byte	0x2
 1829 0470 91       		.byte	0x91
 1830 0471 6C       		.sleb128 -20
 1831 0472 00       		.byte	0
 1832 0473 09       		.uleb128 0x9
 1833 0474 85000000 		.4byte	0x85
 1834 0478 83040000 		.4byte	0x483
 1835 047c 0A       		.uleb128 0xa
 1836 047d E1000000 		.4byte	0xe1
 1837 0481 02       		.byte	0x2
 1838 0482 00       		.byte	0
 1839 0483 08       		.uleb128 0x8
 1840 0484 73030000 		.4byte	.LASF56
 1841 0488 01       		.byte	0x1
 1842 0489 22       		.byte	0x22
 1843 048a 94040000 		.4byte	0x494
 1844 048e 05       		.byte	0x5
 1845 048f 03       		.byte	0x3
 1846 0490 00000000 		.4byte	ADC_SAR_SEQ_channelsConfig
 1847 0494 0B       		.uleb128 0xb
 1848 0495 73040000 		.4byte	0x473
 1849 0499 14       		.uleb128 0x14
 1850 049a 8E030000 		.4byte	.LASF57
 1851 049e 01       		.byte	0x1
 1852 049f 19       		.byte	0x19
 1853 04a0 6F000000 		.4byte	0x6f
 1854 04a4 01       		.byte	0x1
 1855 04a5 05       		.byte	0x5
 1856 04a6 03       		.byte	0x3
 1857 04a7 00000000 		.4byte	ADC_SAR_SEQ_initVar
 1858 04ab 09       		.uleb128 0x9
 1859 04ac 90000000 		.4byte	0x90
 1860 04b0 BB040000 		.4byte	0x4bb
 1861 04b4 0A       		.uleb128 0xa
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 48


 1862 04b5 E1000000 		.4byte	0xe1
 1863 04b9 02       		.byte	0x2
 1864 04ba 00       		.byte	0
 1865 04bb 14       		.uleb128 0x14
 1866 04bc 90000000 		.4byte	.LASF58
 1867 04c0 01       		.byte	0x1
 1868 04c1 1A       		.byte	0x1a
 1869 04c2 CD040000 		.4byte	0x4cd
 1870 04c6 01       		.byte	0x1
 1871 04c7 05       		.byte	0x5
 1872 04c8 03       		.byte	0x3
 1873 04c9 00000000 		.4byte	ADC_SAR_SEQ_offset
 1874 04cd 05       		.uleb128 0x5
 1875 04ce AB040000 		.4byte	0x4ab
 1876 04d2 09       		.uleb128 0x9
 1877 04d3 9B000000 		.4byte	0x9b
 1878 04d7 E2040000 		.4byte	0x4e2
 1879 04db 0A       		.uleb128 0xa
 1880 04dc E1000000 		.4byte	0xe1
 1881 04e0 02       		.byte	0x2
 1882 04e1 00       		.byte	0
 1883 04e2 14       		.uleb128 0x14
 1884 04e3 38030000 		.4byte	.LASF59
 1885 04e7 01       		.byte	0x1
 1886 04e8 1B       		.byte	0x1b
 1887 04e9 F4040000 		.4byte	0x4f4
 1888 04ed 01       		.byte	0x1
 1889 04ee 05       		.byte	0x5
 1890 04ef 03       		.byte	0x3
 1891 04f0 00000000 		.4byte	ADC_SAR_SEQ_countsPer10Volt
 1892 04f4 05       		.uleb128 0x5
 1893 04f5 D2040000 		.4byte	0x4d2
 1894 04f9 00       		.byte	0
 1895              		.section	.debug_abbrev,"",%progbits
 1896              	.Ldebug_abbrev0:
 1897 0000 01       		.uleb128 0x1
 1898 0001 11       		.uleb128 0x11
 1899 0002 01       		.byte	0x1
 1900 0003 25       		.uleb128 0x25
 1901 0004 0E       		.uleb128 0xe
 1902 0005 13       		.uleb128 0x13
 1903 0006 0B       		.uleb128 0xb
 1904 0007 03       		.uleb128 0x3
 1905 0008 0E       		.uleb128 0xe
 1906 0009 1B       		.uleb128 0x1b
 1907 000a 0E       		.uleb128 0xe
 1908 000b 55       		.uleb128 0x55
 1909 000c 06       		.uleb128 0x6
 1910 000d 11       		.uleb128 0x11
 1911 000e 01       		.uleb128 0x1
 1912 000f 52       		.uleb128 0x52
 1913 0010 01       		.uleb128 0x1
 1914 0011 10       		.uleb128 0x10
 1915 0012 06       		.uleb128 0x6
 1916 0013 00       		.byte	0
 1917 0014 00       		.byte	0
 1918 0015 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 49


 1919 0016 24       		.uleb128 0x24
 1920 0017 00       		.byte	0
 1921 0018 0B       		.uleb128 0xb
 1922 0019 0B       		.uleb128 0xb
 1923 001a 3E       		.uleb128 0x3e
 1924 001b 0B       		.uleb128 0xb
 1925 001c 03       		.uleb128 0x3
 1926 001d 0E       		.uleb128 0xe
 1927 001e 00       		.byte	0
 1928 001f 00       		.byte	0
 1929 0020 03       		.uleb128 0x3
 1930 0021 24       		.uleb128 0x24
 1931 0022 00       		.byte	0
 1932 0023 0B       		.uleb128 0xb
 1933 0024 0B       		.uleb128 0xb
 1934 0025 3E       		.uleb128 0x3e
 1935 0026 0B       		.uleb128 0xb
 1936 0027 03       		.uleb128 0x3
 1937 0028 08       		.uleb128 0x8
 1938 0029 00       		.byte	0
 1939 002a 00       		.byte	0
 1940 002b 04       		.uleb128 0x4
 1941 002c 16       		.uleb128 0x16
 1942 002d 00       		.byte	0
 1943 002e 03       		.uleb128 0x3
 1944 002f 0E       		.uleb128 0xe
 1945 0030 3A       		.uleb128 0x3a
 1946 0031 0B       		.uleb128 0xb
 1947 0032 3B       		.uleb128 0x3b
 1948 0033 0B       		.uleb128 0xb
 1949 0034 49       		.uleb128 0x49
 1950 0035 13       		.uleb128 0x13
 1951 0036 00       		.byte	0
 1952 0037 00       		.byte	0
 1953 0038 05       		.uleb128 0x5
 1954 0039 35       		.uleb128 0x35
 1955 003a 00       		.byte	0
 1956 003b 49       		.uleb128 0x49
 1957 003c 13       		.uleb128 0x13
 1958 003d 00       		.byte	0
 1959 003e 00       		.byte	0
 1960 003f 06       		.uleb128 0x6
 1961 0040 2E       		.uleb128 0x2e
 1962 0041 00       		.byte	0
 1963 0042 3F       		.uleb128 0x3f
 1964 0043 0C       		.uleb128 0xc
 1965 0044 03       		.uleb128 0x3
 1966 0045 0E       		.uleb128 0xe
 1967 0046 3A       		.uleb128 0x3a
 1968 0047 0B       		.uleb128 0xb
 1969 0048 3B       		.uleb128 0x3b
 1970 0049 0B       		.uleb128 0xb
 1971 004a 27       		.uleb128 0x27
 1972 004b 0C       		.uleb128 0xc
 1973 004c 11       		.uleb128 0x11
 1974 004d 01       		.uleb128 0x1
 1975 004e 12       		.uleb128 0x12
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 50


 1976 004f 01       		.uleb128 0x1
 1977 0050 40       		.uleb128 0x40
 1978 0051 06       		.uleb128 0x6
 1979 0052 9642     		.uleb128 0x2116
 1980 0054 0C       		.uleb128 0xc
 1981 0055 00       		.byte	0
 1982 0056 00       		.byte	0
 1983 0057 07       		.uleb128 0x7
 1984 0058 2E       		.uleb128 0x2e
 1985 0059 01       		.byte	0x1
 1986 005a 3F       		.uleb128 0x3f
 1987 005b 0C       		.uleb128 0xc
 1988 005c 03       		.uleb128 0x3
 1989 005d 0E       		.uleb128 0xe
 1990 005e 3A       		.uleb128 0x3a
 1991 005f 0B       		.uleb128 0xb
 1992 0060 3B       		.uleb128 0x3b
 1993 0061 0B       		.uleb128 0xb
 1994 0062 27       		.uleb128 0x27
 1995 0063 0C       		.uleb128 0xc
 1996 0064 11       		.uleb128 0x11
 1997 0065 01       		.uleb128 0x1
 1998 0066 12       		.uleb128 0x12
 1999 0067 01       		.uleb128 0x1
 2000 0068 40       		.uleb128 0x40
 2001 0069 06       		.uleb128 0x6
 2002 006a 9642     		.uleb128 0x2116
 2003 006c 0C       		.uleb128 0xc
 2004 006d 01       		.uleb128 0x1
 2005 006e 13       		.uleb128 0x13
 2006 006f 00       		.byte	0
 2007 0070 00       		.byte	0
 2008 0071 08       		.uleb128 0x8
 2009 0072 34       		.uleb128 0x34
 2010 0073 00       		.byte	0
 2011 0074 03       		.uleb128 0x3
 2012 0075 0E       		.uleb128 0xe
 2013 0076 3A       		.uleb128 0x3a
 2014 0077 0B       		.uleb128 0xb
 2015 0078 3B       		.uleb128 0x3b
 2016 0079 0B       		.uleb128 0xb
 2017 007a 49       		.uleb128 0x49
 2018 007b 13       		.uleb128 0x13
 2019 007c 02       		.uleb128 0x2
 2020 007d 0A       		.uleb128 0xa
 2021 007e 00       		.byte	0
 2022 007f 00       		.byte	0
 2023 0080 09       		.uleb128 0x9
 2024 0081 01       		.uleb128 0x1
 2025 0082 01       		.byte	0x1
 2026 0083 49       		.uleb128 0x49
 2027 0084 13       		.uleb128 0x13
 2028 0085 01       		.uleb128 0x1
 2029 0086 13       		.uleb128 0x13
 2030 0087 00       		.byte	0
 2031 0088 00       		.byte	0
 2032 0089 0A       		.uleb128 0xa
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 51


 2033 008a 21       		.uleb128 0x21
 2034 008b 00       		.byte	0
 2035 008c 49       		.uleb128 0x49
 2036 008d 13       		.uleb128 0x13
 2037 008e 2F       		.uleb128 0x2f
 2038 008f 0B       		.uleb128 0xb
 2039 0090 00       		.byte	0
 2040 0091 00       		.byte	0
 2041 0092 0B       		.uleb128 0xb
 2042 0093 26       		.uleb128 0x26
 2043 0094 00       		.byte	0
 2044 0095 49       		.uleb128 0x49
 2045 0096 13       		.uleb128 0x13
 2046 0097 00       		.byte	0
 2047 0098 00       		.byte	0
 2048 0099 0C       		.uleb128 0xc
 2049 009a 2E       		.uleb128 0x2e
 2050 009b 00       		.byte	0
 2051 009c 3F       		.uleb128 0x3f
 2052 009d 0C       		.uleb128 0xc
 2053 009e 03       		.uleb128 0x3
 2054 009f 0E       		.uleb128 0xe
 2055 00a0 3A       		.uleb128 0x3a
 2056 00a1 0B       		.uleb128 0xb
 2057 00a2 3B       		.uleb128 0x3b
 2058 00a3 05       		.uleb128 0x5
 2059 00a4 27       		.uleb128 0x27
 2060 00a5 0C       		.uleb128 0xc
 2061 00a6 11       		.uleb128 0x11
 2062 00a7 01       		.uleb128 0x1
 2063 00a8 12       		.uleb128 0x12
 2064 00a9 01       		.uleb128 0x1
 2065 00aa 40       		.uleb128 0x40
 2066 00ab 06       		.uleb128 0x6
 2067 00ac 9642     		.uleb128 0x2116
 2068 00ae 0C       		.uleb128 0xc
 2069 00af 00       		.byte	0
 2070 00b0 00       		.byte	0
 2071 00b1 0D       		.uleb128 0xd
 2072 00b2 2E       		.uleb128 0x2e
 2073 00b3 00       		.byte	0
 2074 00b4 3F       		.uleb128 0x3f
 2075 00b5 0C       		.uleb128 0xc
 2076 00b6 03       		.uleb128 0x3
 2077 00b7 0E       		.uleb128 0xe
 2078 00b8 3A       		.uleb128 0x3a
 2079 00b9 0B       		.uleb128 0xb
 2080 00ba 3B       		.uleb128 0x3b
 2081 00bb 05       		.uleb128 0x5
 2082 00bc 27       		.uleb128 0x27
 2083 00bd 0C       		.uleb128 0xc
 2084 00be 11       		.uleb128 0x11
 2085 00bf 01       		.uleb128 0x1
 2086 00c0 12       		.uleb128 0x12
 2087 00c1 01       		.uleb128 0x1
 2088 00c2 40       		.uleb128 0x40
 2089 00c3 06       		.uleb128 0x6
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 52


 2090 00c4 9742     		.uleb128 0x2117
 2091 00c6 0C       		.uleb128 0xc
 2092 00c7 00       		.byte	0
 2093 00c8 00       		.byte	0
 2094 00c9 0E       		.uleb128 0xe
 2095 00ca 2E       		.uleb128 0x2e
 2096 00cb 01       		.byte	0x1
 2097 00cc 3F       		.uleb128 0x3f
 2098 00cd 0C       		.uleb128 0xc
 2099 00ce 03       		.uleb128 0x3
 2100 00cf 0E       		.uleb128 0xe
 2101 00d0 3A       		.uleb128 0x3a
 2102 00d1 0B       		.uleb128 0xb
 2103 00d2 3B       		.uleb128 0x3b
 2104 00d3 05       		.uleb128 0x5
 2105 00d4 27       		.uleb128 0x27
 2106 00d5 0C       		.uleb128 0xc
 2107 00d6 49       		.uleb128 0x49
 2108 00d7 13       		.uleb128 0x13
 2109 00d8 11       		.uleb128 0x11
 2110 00d9 01       		.uleb128 0x1
 2111 00da 12       		.uleb128 0x12
 2112 00db 01       		.uleb128 0x1
 2113 00dc 40       		.uleb128 0x40
 2114 00dd 06       		.uleb128 0x6
 2115 00de 9742     		.uleb128 0x2117
 2116 00e0 0C       		.uleb128 0xc
 2117 00e1 01       		.uleb128 0x1
 2118 00e2 13       		.uleb128 0x13
 2119 00e3 00       		.byte	0
 2120 00e4 00       		.byte	0
 2121 00e5 0F       		.uleb128 0xf
 2122 00e6 05       		.uleb128 0x5
 2123 00e7 00       		.byte	0
 2124 00e8 03       		.uleb128 0x3
 2125 00e9 0E       		.uleb128 0xe
 2126 00ea 3A       		.uleb128 0x3a
 2127 00eb 0B       		.uleb128 0xb
 2128 00ec 3B       		.uleb128 0x3b
 2129 00ed 05       		.uleb128 0x5
 2130 00ee 49       		.uleb128 0x49
 2131 00ef 13       		.uleb128 0x13
 2132 00f0 02       		.uleb128 0x2
 2133 00f1 0A       		.uleb128 0xa
 2134 00f2 00       		.byte	0
 2135 00f3 00       		.byte	0
 2136 00f4 10       		.uleb128 0x10
 2137 00f5 34       		.uleb128 0x34
 2138 00f6 00       		.byte	0
 2139 00f7 03       		.uleb128 0x3
 2140 00f8 0E       		.uleb128 0xe
 2141 00f9 3A       		.uleb128 0x3a
 2142 00fa 0B       		.uleb128 0xb
 2143 00fb 3B       		.uleb128 0x3b
 2144 00fc 05       		.uleb128 0x5
 2145 00fd 49       		.uleb128 0x49
 2146 00fe 13       		.uleb128 0x13
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 53


 2147 00ff 02       		.uleb128 0x2
 2148 0100 0A       		.uleb128 0xa
 2149 0101 00       		.byte	0
 2150 0102 00       		.byte	0
 2151 0103 11       		.uleb128 0x11
 2152 0104 2E       		.uleb128 0x2e
 2153 0105 01       		.byte	0x1
 2154 0106 3F       		.uleb128 0x3f
 2155 0107 0C       		.uleb128 0xc
 2156 0108 03       		.uleb128 0x3
 2157 0109 0E       		.uleb128 0xe
 2158 010a 3A       		.uleb128 0x3a
 2159 010b 0B       		.uleb128 0xb
 2160 010c 3B       		.uleb128 0x3b
 2161 010d 05       		.uleb128 0x5
 2162 010e 27       		.uleb128 0x27
 2163 010f 0C       		.uleb128 0xc
 2164 0110 49       		.uleb128 0x49
 2165 0111 13       		.uleb128 0x13
 2166 0112 11       		.uleb128 0x11
 2167 0113 01       		.uleb128 0x1
 2168 0114 12       		.uleb128 0x12
 2169 0115 01       		.uleb128 0x1
 2170 0116 40       		.uleb128 0x40
 2171 0117 06       		.uleb128 0x6
 2172 0118 9642     		.uleb128 0x2116
 2173 011a 0C       		.uleb128 0xc
 2174 011b 01       		.uleb128 0x1
 2175 011c 13       		.uleb128 0x13
 2176 011d 00       		.byte	0
 2177 011e 00       		.byte	0
 2178 011f 12       		.uleb128 0x12
 2179 0120 2E       		.uleb128 0x2e
 2180 0121 01       		.byte	0x1
 2181 0122 3F       		.uleb128 0x3f
 2182 0123 0C       		.uleb128 0xc
 2183 0124 03       		.uleb128 0x3
 2184 0125 0E       		.uleb128 0xe
 2185 0126 3A       		.uleb128 0x3a
 2186 0127 0B       		.uleb128 0xb
 2187 0128 3B       		.uleb128 0x3b
 2188 0129 05       		.uleb128 0x5
 2189 012a 27       		.uleb128 0x27
 2190 012b 0C       		.uleb128 0xc
 2191 012c 11       		.uleb128 0x11
 2192 012d 01       		.uleb128 0x1
 2193 012e 12       		.uleb128 0x12
 2194 012f 01       		.uleb128 0x1
 2195 0130 40       		.uleb128 0x40
 2196 0131 06       		.uleb128 0x6
 2197 0132 9742     		.uleb128 0x2117
 2198 0134 0C       		.uleb128 0xc
 2199 0135 01       		.uleb128 0x1
 2200 0136 13       		.uleb128 0x13
 2201 0137 00       		.byte	0
 2202 0138 00       		.byte	0
 2203 0139 13       		.uleb128 0x13
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 54


 2204 013a 2E       		.uleb128 0x2e
 2205 013b 01       		.byte	0x1
 2206 013c 3F       		.uleb128 0x3f
 2207 013d 0C       		.uleb128 0xc
 2208 013e 03       		.uleb128 0x3
 2209 013f 0E       		.uleb128 0xe
 2210 0140 3A       		.uleb128 0x3a
 2211 0141 0B       		.uleb128 0xb
 2212 0142 3B       		.uleb128 0x3b
 2213 0143 05       		.uleb128 0x5
 2214 0144 27       		.uleb128 0x27
 2215 0145 0C       		.uleb128 0xc
 2216 0146 11       		.uleb128 0x11
 2217 0147 01       		.uleb128 0x1
 2218 0148 12       		.uleb128 0x12
 2219 0149 01       		.uleb128 0x1
 2220 014a 40       		.uleb128 0x40
 2221 014b 06       		.uleb128 0x6
 2222 014c 9642     		.uleb128 0x2116
 2223 014e 0C       		.uleb128 0xc
 2224 014f 01       		.uleb128 0x1
 2225 0150 13       		.uleb128 0x13
 2226 0151 00       		.byte	0
 2227 0152 00       		.byte	0
 2228 0153 14       		.uleb128 0x14
 2229 0154 34       		.uleb128 0x34
 2230 0155 00       		.byte	0
 2231 0156 03       		.uleb128 0x3
 2232 0157 0E       		.uleb128 0xe
 2233 0158 3A       		.uleb128 0x3a
 2234 0159 0B       		.uleb128 0xb
 2235 015a 3B       		.uleb128 0x3b
 2236 015b 0B       		.uleb128 0xb
 2237 015c 49       		.uleb128 0x49
 2238 015d 13       		.uleb128 0x13
 2239 015e 3F       		.uleb128 0x3f
 2240 015f 0C       		.uleb128 0xc
 2241 0160 02       		.uleb128 0x2
 2242 0161 0A       		.uleb128 0xa
 2243 0162 00       		.byte	0
 2244 0163 00       		.byte	0
 2245 0164 00       		.byte	0
 2246              		.section	.debug_loc,"",%progbits
 2247              	.Ldebug_loc0:
 2248              	.LLST0:
 2249 0000 00000000 		.4byte	.LFB0
 2250 0004 02000000 		.4byte	.LCFI0
 2251 0008 0200     		.2byte	0x2
 2252 000a 7D       		.byte	0x7d
 2253 000b 00       		.sleb128 0
 2254 000c 02000000 		.4byte	.LCFI0
 2255 0010 04000000 		.4byte	.LCFI1
 2256 0014 0200     		.2byte	0x2
 2257 0016 7D       		.byte	0x7d
 2258 0017 08       		.sleb128 8
 2259 0018 04000000 		.4byte	.LCFI1
 2260 001c 24000000 		.4byte	.LFE0
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 55


 2261 0020 0200     		.2byte	0x2
 2262 0022 77       		.byte	0x77
 2263 0023 08       		.sleb128 8
 2264 0024 00000000 		.4byte	0
 2265 0028 00000000 		.4byte	0
 2266              	.LLST1:
 2267 002c 00000000 		.4byte	.LFB1
 2268 0030 02000000 		.4byte	.LCFI2
 2269 0034 0200     		.2byte	0x2
 2270 0036 7D       		.byte	0x7d
 2271 0037 00       		.sleb128 0
 2272 0038 02000000 		.4byte	.LCFI2
 2273 003c 04000000 		.4byte	.LCFI3
 2274 0040 0200     		.2byte	0x2
 2275 0042 7D       		.byte	0x7d
 2276 0043 0C       		.sleb128 12
 2277 0044 04000000 		.4byte	.LCFI3
 2278 0048 06000000 		.4byte	.LCFI4
 2279 004c 0200     		.2byte	0x2
 2280 004e 7D       		.byte	0x7d
 2281 004f 20       		.sleb128 32
 2282 0050 06000000 		.4byte	.LCFI4
 2283 0054 E4010000 		.4byte	.LFE1
 2284 0058 0200     		.2byte	0x2
 2285 005a 77       		.byte	0x77
 2286 005b 20       		.sleb128 32
 2287 005c 00000000 		.4byte	0
 2288 0060 00000000 		.4byte	0
 2289              	.LLST2:
 2290 0064 00000000 		.4byte	.LFB2
 2291 0068 02000000 		.4byte	.LCFI5
 2292 006c 0200     		.2byte	0x2
 2293 006e 7D       		.byte	0x7d
 2294 006f 00       		.sleb128 0
 2295 0070 02000000 		.4byte	.LCFI5
 2296 0074 04000000 		.4byte	.LCFI6
 2297 0078 0200     		.2byte	0x2
 2298 007a 7D       		.byte	0x7d
 2299 007b 08       		.sleb128 8
 2300 007c 04000000 		.4byte	.LCFI6
 2301 0080 20000000 		.4byte	.LFE2
 2302 0084 0200     		.2byte	0x2
 2303 0086 77       		.byte	0x77
 2304 0087 08       		.sleb128 8
 2305 0088 00000000 		.4byte	0
 2306 008c 00000000 		.4byte	0
 2307              	.LLST3:
 2308 0090 00000000 		.4byte	.LFB3
 2309 0094 02000000 		.4byte	.LCFI7
 2310 0098 0200     		.2byte	0x2
 2311 009a 7D       		.byte	0x7d
 2312 009b 00       		.sleb128 0
 2313 009c 02000000 		.4byte	.LCFI7
 2314 00a0 04000000 		.4byte	.LCFI8
 2315 00a4 0200     		.2byte	0x2
 2316 00a6 7D       		.byte	0x7d
 2317 00a7 08       		.sleb128 8
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 56


 2318 00a8 04000000 		.4byte	.LCFI8
 2319 00ac 18000000 		.4byte	.LFE3
 2320 00b0 0200     		.2byte	0x2
 2321 00b2 77       		.byte	0x77
 2322 00b3 08       		.sleb128 8
 2323 00b4 00000000 		.4byte	0
 2324 00b8 00000000 		.4byte	0
 2325              	.LLST4:
 2326 00bc 00000000 		.4byte	.LFB4
 2327 00c0 02000000 		.4byte	.LCFI9
 2328 00c4 0200     		.2byte	0x2
 2329 00c6 7D       		.byte	0x7d
 2330 00c7 00       		.sleb128 0
 2331 00c8 02000000 		.4byte	.LCFI9
 2332 00cc 04000000 		.4byte	.LCFI10
 2333 00d0 0200     		.2byte	0x2
 2334 00d2 7D       		.byte	0x7d
 2335 00d3 08       		.sleb128 8
 2336 00d4 04000000 		.4byte	.LCFI10
 2337 00d8 1C000000 		.4byte	.LFE4
 2338 00dc 0200     		.2byte	0x2
 2339 00de 77       		.byte	0x77
 2340 00df 08       		.sleb128 8
 2341 00e0 00000000 		.4byte	0
 2342 00e4 00000000 		.4byte	0
 2343              	.LLST5:
 2344 00e8 00000000 		.4byte	.LFB5
 2345 00ec 02000000 		.4byte	.LCFI11
 2346 00f0 0200     		.2byte	0x2
 2347 00f2 7D       		.byte	0x7d
 2348 00f3 00       		.sleb128 0
 2349 00f4 02000000 		.4byte	.LCFI11
 2350 00f8 04000000 		.4byte	.LCFI12
 2351 00fc 0200     		.2byte	0x2
 2352 00fe 7D       		.byte	0x7d
 2353 00ff 08       		.sleb128 8
 2354 0100 04000000 		.4byte	.LCFI12
 2355 0104 1C000000 		.4byte	.LFE5
 2356 0108 0200     		.2byte	0x2
 2357 010a 77       		.byte	0x77
 2358 010b 08       		.sleb128 8
 2359 010c 00000000 		.4byte	0
 2360 0110 00000000 		.4byte	0
 2361              	.LLST6:
 2362 0114 00000000 		.4byte	.LFB6
 2363 0118 02000000 		.4byte	.LCFI13
 2364 011c 0200     		.2byte	0x2
 2365 011e 7D       		.byte	0x7d
 2366 011f 00       		.sleb128 0
 2367 0120 02000000 		.4byte	.LCFI13
 2368 0124 04000000 		.4byte	.LCFI14
 2369 0128 0200     		.2byte	0x2
 2370 012a 7D       		.byte	0x7d
 2371 012b 08       		.sleb128 8
 2372 012c 04000000 		.4byte	.LCFI14
 2373 0130 06000000 		.4byte	.LCFI15
 2374 0134 0200     		.2byte	0x2
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 57


 2375 0136 7D       		.byte	0x7d
 2376 0137 18       		.sleb128 24
 2377 0138 06000000 		.4byte	.LCFI15
 2378 013c 48000000 		.4byte	.LFE6
 2379 0140 0200     		.2byte	0x2
 2380 0142 77       		.byte	0x77
 2381 0143 18       		.sleb128 24
 2382 0144 00000000 		.4byte	0
 2383 0148 00000000 		.4byte	0
 2384              	.LLST7:
 2385 014c 00000000 		.4byte	.LFB7
 2386 0150 02000000 		.4byte	.LCFI16
 2387 0154 0200     		.2byte	0x2
 2388 0156 7D       		.byte	0x7d
 2389 0157 00       		.sleb128 0
 2390 0158 02000000 		.4byte	.LCFI16
 2391 015c 04000000 		.4byte	.LCFI17
 2392 0160 0200     		.2byte	0x2
 2393 0162 7D       		.byte	0x7d
 2394 0163 08       		.sleb128 8
 2395 0164 04000000 		.4byte	.LCFI17
 2396 0168 06000000 		.4byte	.LCFI18
 2397 016c 0200     		.2byte	0x2
 2398 016e 7D       		.byte	0x7d
 2399 016f 18       		.sleb128 24
 2400 0170 06000000 		.4byte	.LCFI18
 2401 0174 44000000 		.4byte	.LFE7
 2402 0178 0200     		.2byte	0x2
 2403 017a 77       		.byte	0x77
 2404 017b 18       		.sleb128 24
 2405 017c 00000000 		.4byte	0
 2406 0180 00000000 		.4byte	0
 2407              	.LLST8:
 2408 0184 00000000 		.4byte	.LFB8
 2409 0188 02000000 		.4byte	.LCFI19
 2410 018c 0200     		.2byte	0x2
 2411 018e 7D       		.byte	0x7d
 2412 018f 00       		.sleb128 0
 2413 0190 02000000 		.4byte	.LCFI19
 2414 0194 04000000 		.4byte	.LCFI20
 2415 0198 0200     		.2byte	0x2
 2416 019a 7D       		.byte	0x7d
 2417 019b 08       		.sleb128 8
 2418 019c 04000000 		.4byte	.LCFI20
 2419 01a0 06000000 		.4byte	.LCFI21
 2420 01a4 0200     		.2byte	0x2
 2421 01a6 7D       		.byte	0x7d
 2422 01a7 10       		.sleb128 16
 2423 01a8 06000000 		.4byte	.LCFI21
 2424 01ac 1C000000 		.4byte	.LFE8
 2425 01b0 0200     		.2byte	0x2
 2426 01b2 77       		.byte	0x77
 2427 01b3 10       		.sleb128 16
 2428 01b4 00000000 		.4byte	0
 2429 01b8 00000000 		.4byte	0
 2430              	.LLST9:
 2431 01bc 00000000 		.4byte	.LFB9
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 58


 2432 01c0 02000000 		.4byte	.LCFI22
 2433 01c4 0200     		.2byte	0x2
 2434 01c6 7D       		.byte	0x7d
 2435 01c7 00       		.sleb128 0
 2436 01c8 02000000 		.4byte	.LCFI22
 2437 01cc 04000000 		.4byte	.LCFI23
 2438 01d0 0200     		.2byte	0x2
 2439 01d2 7D       		.byte	0x7d
 2440 01d3 08       		.sleb128 8
 2441 01d4 04000000 		.4byte	.LCFI23
 2442 01d8 06000000 		.4byte	.LCFI24
 2443 01dc 0200     		.2byte	0x2
 2444 01de 7D       		.byte	0x7d
 2445 01df 10       		.sleb128 16
 2446 01e0 06000000 		.4byte	.LCFI24
 2447 01e4 30000000 		.4byte	.LFE9
 2448 01e8 0200     		.2byte	0x2
 2449 01ea 77       		.byte	0x77
 2450 01eb 10       		.sleb128 16
 2451 01ec 00000000 		.4byte	0
 2452 01f0 00000000 		.4byte	0
 2453              	.LLST10:
 2454 01f4 00000000 		.4byte	.LFB10
 2455 01f8 02000000 		.4byte	.LCFI25
 2456 01fc 0200     		.2byte	0x2
 2457 01fe 7D       		.byte	0x7d
 2458 01ff 00       		.sleb128 0
 2459 0200 02000000 		.4byte	.LCFI25
 2460 0204 04000000 		.4byte	.LCFI26
 2461 0208 0200     		.2byte	0x2
 2462 020a 7D       		.byte	0x7d
 2463 020b 08       		.sleb128 8
 2464 020c 04000000 		.4byte	.LCFI26
 2465 0210 06000000 		.4byte	.LCFI27
 2466 0214 0200     		.2byte	0x2
 2467 0216 7D       		.byte	0x7d
 2468 0217 10       		.sleb128 16
 2469 0218 06000000 		.4byte	.LCFI27
 2470 021c 2C000000 		.4byte	.LFE10
 2471 0220 0200     		.2byte	0x2
 2472 0222 77       		.byte	0x77
 2473 0223 10       		.sleb128 16
 2474 0224 00000000 		.4byte	0
 2475 0228 00000000 		.4byte	0
 2476              	.LLST11:
 2477 022c 00000000 		.4byte	.LFB11
 2478 0230 02000000 		.4byte	.LCFI28
 2479 0234 0200     		.2byte	0x2
 2480 0236 7D       		.byte	0x7d
 2481 0237 00       		.sleb128 0
 2482 0238 02000000 		.4byte	.LCFI28
 2483 023c 04000000 		.4byte	.LCFI29
 2484 0240 0200     		.2byte	0x2
 2485 0242 7D       		.byte	0x7d
 2486 0243 08       		.sleb128 8
 2487 0244 04000000 		.4byte	.LCFI29
 2488 0248 06000000 		.4byte	.LCFI30
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 59


 2489 024c 0200     		.2byte	0x2
 2490 024e 7D       		.byte	0x7d
 2491 024f 10       		.sleb128 16
 2492 0250 06000000 		.4byte	.LCFI30
 2493 0254 1C000000 		.4byte	.LFE11
 2494 0258 0200     		.2byte	0x2
 2495 025a 77       		.byte	0x77
 2496 025b 10       		.sleb128 16
 2497 025c 00000000 		.4byte	0
 2498 0260 00000000 		.4byte	0
 2499              	.LLST12:
 2500 0264 00000000 		.4byte	.LFB12
 2501 0268 02000000 		.4byte	.LCFI31
 2502 026c 0200     		.2byte	0x2
 2503 026e 7D       		.byte	0x7d
 2504 026f 00       		.sleb128 0
 2505 0270 02000000 		.4byte	.LCFI31
 2506 0274 04000000 		.4byte	.LCFI32
 2507 0278 0200     		.2byte	0x2
 2508 027a 7D       		.byte	0x7d
 2509 027b 08       		.sleb128 8
 2510 027c 04000000 		.4byte	.LCFI32
 2511 0280 06000000 		.4byte	.LCFI33
 2512 0284 0200     		.2byte	0x2
 2513 0286 7D       		.byte	0x7d
 2514 0287 10       		.sleb128 16
 2515 0288 06000000 		.4byte	.LCFI33
 2516 028c 1C000000 		.4byte	.LFE12
 2517 0290 0200     		.2byte	0x2
 2518 0292 77       		.byte	0x77
 2519 0293 10       		.sleb128 16
 2520 0294 00000000 		.4byte	0
 2521 0298 00000000 		.4byte	0
 2522              	.LLST13:
 2523 029c 00000000 		.4byte	.LFB13
 2524 02a0 02000000 		.4byte	.LCFI34
 2525 02a4 0200     		.2byte	0x2
 2526 02a6 7D       		.byte	0x7d
 2527 02a7 00       		.sleb128 0
 2528 02a8 02000000 		.4byte	.LCFI34
 2529 02ac 04000000 		.4byte	.LCFI35
 2530 02b0 0200     		.2byte	0x2
 2531 02b2 7D       		.byte	0x7d
 2532 02b3 08       		.sleb128 8
 2533 02b4 04000000 		.4byte	.LCFI35
 2534 02b8 06000000 		.4byte	.LCFI36
 2535 02bc 0200     		.2byte	0x2
 2536 02be 7D       		.byte	0x7d
 2537 02bf 10       		.sleb128 16
 2538 02c0 06000000 		.4byte	.LCFI36
 2539 02c4 30000000 		.4byte	.LFE13
 2540 02c8 0200     		.2byte	0x2
 2541 02ca 77       		.byte	0x77
 2542 02cb 10       		.sleb128 16
 2543 02cc 00000000 		.4byte	0
 2544 02d0 00000000 		.4byte	0
 2545              	.LLST14:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 60


 2546 02d4 00000000 		.4byte	.LFB14
 2547 02d8 02000000 		.4byte	.LCFI37
 2548 02dc 0200     		.2byte	0x2
 2549 02de 7D       		.byte	0x7d
 2550 02df 00       		.sleb128 0
 2551 02e0 02000000 		.4byte	.LCFI37
 2552 02e4 04000000 		.4byte	.LCFI38
 2553 02e8 0200     		.2byte	0x2
 2554 02ea 7D       		.byte	0x7d
 2555 02eb 08       		.sleb128 8
 2556 02ec 04000000 		.4byte	.LCFI38
 2557 02f0 06000000 		.4byte	.LCFI39
 2558 02f4 0200     		.2byte	0x2
 2559 02f6 7D       		.byte	0x7d
 2560 02f7 10       		.sleb128 16
 2561 02f8 06000000 		.4byte	.LCFI39
 2562 02fc 2C000000 		.4byte	.LFE14
 2563 0300 0200     		.2byte	0x2
 2564 0302 77       		.byte	0x77
 2565 0303 10       		.sleb128 16
 2566 0304 00000000 		.4byte	0
 2567 0308 00000000 		.4byte	0
 2568              	.LLST15:
 2569 030c 00000000 		.4byte	.LFB15
 2570 0310 02000000 		.4byte	.LCFI40
 2571 0314 0200     		.2byte	0x2
 2572 0316 7D       		.byte	0x7d
 2573 0317 00       		.sleb128 0
 2574 0318 02000000 		.4byte	.LCFI40
 2575 031c 04000000 		.4byte	.LCFI41
 2576 0320 0200     		.2byte	0x2
 2577 0322 7D       		.byte	0x7d
 2578 0323 08       		.sleb128 8
 2579 0324 04000000 		.4byte	.LCFI41
 2580 0328 06000000 		.4byte	.LCFI42
 2581 032c 0200     		.2byte	0x2
 2582 032e 7D       		.byte	0x7d
 2583 032f 18       		.sleb128 24
 2584 0330 06000000 		.4byte	.LCFI42
 2585 0334 A4000000 		.4byte	.LFE15
 2586 0338 0200     		.2byte	0x2
 2587 033a 77       		.byte	0x77
 2588 033b 18       		.sleb128 24
 2589 033c 00000000 		.4byte	0
 2590 0340 00000000 		.4byte	0
 2591              	.LLST16:
 2592 0344 00000000 		.4byte	.LFB16
 2593 0348 02000000 		.4byte	.LCFI43
 2594 034c 0200     		.2byte	0x2
 2595 034e 7D       		.byte	0x7d
 2596 034f 00       		.sleb128 0
 2597 0350 02000000 		.4byte	.LCFI43
 2598 0354 04000000 		.4byte	.LCFI44
 2599 0358 0200     		.2byte	0x2
 2600 035a 7D       		.byte	0x7d
 2601 035b 10       		.sleb128 16
 2602 035c 04000000 		.4byte	.LCFI44
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 61


 2603 0360 06000000 		.4byte	.LCFI45
 2604 0364 0200     		.2byte	0x2
 2605 0366 7D       		.byte	0x7d
 2606 0367 28       		.sleb128 40
 2607 0368 06000000 		.4byte	.LCFI45
 2608 036c 98000000 		.4byte	.LFE16
 2609 0370 0200     		.2byte	0x2
 2610 0372 77       		.byte	0x77
 2611 0373 28       		.sleb128 40
 2612 0374 00000000 		.4byte	0
 2613 0378 00000000 		.4byte	0
 2614              	.LLST17:
 2615 037c 00000000 		.4byte	.LFB17
 2616 0380 02000000 		.4byte	.LCFI46
 2617 0384 0200     		.2byte	0x2
 2618 0386 7D       		.byte	0x7d
 2619 0387 00       		.sleb128 0
 2620 0388 02000000 		.4byte	.LCFI46
 2621 038c 04000000 		.4byte	.LCFI47
 2622 0390 0200     		.2byte	0x2
 2623 0392 7D       		.byte	0x7d
 2624 0393 0C       		.sleb128 12
 2625 0394 04000000 		.4byte	.LCFI47
 2626 0398 06000000 		.4byte	.LCFI48
 2627 039c 0200     		.2byte	0x2
 2628 039e 7D       		.byte	0x7d
 2629 039f 20       		.sleb128 32
 2630 03a0 06000000 		.4byte	.LCFI48
 2631 03a4 80000000 		.4byte	.LFE17
 2632 03a8 0200     		.2byte	0x2
 2633 03aa 77       		.byte	0x77
 2634 03ab 20       		.sleb128 32
 2635 03ac 00000000 		.4byte	0
 2636 03b0 00000000 		.4byte	0
 2637              		.section	.debug_aranges,"",%progbits
 2638 0000 A4000000 		.4byte	0xa4
 2639 0004 0200     		.2byte	0x2
 2640 0006 00000000 		.4byte	.Ldebug_info0
 2641 000a 04       		.byte	0x4
 2642 000b 00       		.byte	0
 2643 000c 0000     		.2byte	0
 2644 000e 0000     		.2byte	0
 2645 0010 00000000 		.4byte	.LFB0
 2646 0014 24000000 		.4byte	.LFE0-.LFB0
 2647 0018 00000000 		.4byte	.LFB1
 2648 001c E4010000 		.4byte	.LFE1-.LFB1
 2649 0020 00000000 		.4byte	.LFB2
 2650 0024 20000000 		.4byte	.LFE2-.LFB2
 2651 0028 00000000 		.4byte	.LFB3
 2652 002c 18000000 		.4byte	.LFE3-.LFB3
 2653 0030 00000000 		.4byte	.LFB4
 2654 0034 1C000000 		.4byte	.LFE4-.LFB4
 2655 0038 00000000 		.4byte	.LFB5
 2656 003c 1C000000 		.4byte	.LFE5-.LFB5
 2657 0040 00000000 		.4byte	.LFB6
 2658 0044 48000000 		.4byte	.LFE6-.LFB6
 2659 0048 00000000 		.4byte	.LFB7
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 62


 2660 004c 44000000 		.4byte	.LFE7-.LFB7
 2661 0050 00000000 		.4byte	.LFB8
 2662 0054 1C000000 		.4byte	.LFE8-.LFB8
 2663 0058 00000000 		.4byte	.LFB9
 2664 005c 30000000 		.4byte	.LFE9-.LFB9
 2665 0060 00000000 		.4byte	.LFB10
 2666 0064 2C000000 		.4byte	.LFE10-.LFB10
 2667 0068 00000000 		.4byte	.LFB11
 2668 006c 1C000000 		.4byte	.LFE11-.LFB11
 2669 0070 00000000 		.4byte	.LFB12
 2670 0074 1C000000 		.4byte	.LFE12-.LFB12
 2671 0078 00000000 		.4byte	.LFB13
 2672 007c 30000000 		.4byte	.LFE13-.LFB13
 2673 0080 00000000 		.4byte	.LFB14
 2674 0084 2C000000 		.4byte	.LFE14-.LFB14
 2675 0088 00000000 		.4byte	.LFB15
 2676 008c A4000000 		.4byte	.LFE15-.LFB15
 2677 0090 00000000 		.4byte	.LFB16
 2678 0094 98000000 		.4byte	.LFE16-.LFB16
 2679 0098 00000000 		.4byte	.LFB17
 2680 009c 80000000 		.4byte	.LFE17-.LFB17
 2681 00a0 00000000 		.4byte	0
 2682 00a4 00000000 		.4byte	0
 2683              		.section	.debug_ranges,"",%progbits
 2684              	.Ldebug_ranges0:
 2685 0000 00000000 		.4byte	.LFB0
 2686 0004 24000000 		.4byte	.LFE0
 2687 0008 00000000 		.4byte	.LFB1
 2688 000c E4010000 		.4byte	.LFE1
 2689 0010 00000000 		.4byte	.LFB2
 2690 0014 20000000 		.4byte	.LFE2
 2691 0018 00000000 		.4byte	.LFB3
 2692 001c 18000000 		.4byte	.LFE3
 2693 0020 00000000 		.4byte	.LFB4
 2694 0024 1C000000 		.4byte	.LFE4
 2695 0028 00000000 		.4byte	.LFB5
 2696 002c 1C000000 		.4byte	.LFE5
 2697 0030 00000000 		.4byte	.LFB6
 2698 0034 48000000 		.4byte	.LFE6
 2699 0038 00000000 		.4byte	.LFB7
 2700 003c 44000000 		.4byte	.LFE7
 2701 0040 00000000 		.4byte	.LFB8
 2702 0044 1C000000 		.4byte	.LFE8
 2703 0048 00000000 		.4byte	.LFB9
 2704 004c 30000000 		.4byte	.LFE9
 2705 0050 00000000 		.4byte	.LFB10
 2706 0054 2C000000 		.4byte	.LFE10
 2707 0058 00000000 		.4byte	.LFB11
 2708 005c 1C000000 		.4byte	.LFE11
 2709 0060 00000000 		.4byte	.LFB12
 2710 0064 1C000000 		.4byte	.LFE12
 2711 0068 00000000 		.4byte	.LFB13
 2712 006c 30000000 		.4byte	.LFE13
 2713 0070 00000000 		.4byte	.LFB14
 2714 0074 2C000000 		.4byte	.LFE14
 2715 0078 00000000 		.4byte	.LFB15
 2716 007c A4000000 		.4byte	.LFE15
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 63


 2717 0080 00000000 		.4byte	.LFB16
 2718 0084 98000000 		.4byte	.LFE16
 2719 0088 00000000 		.4byte	.LFB17
 2720 008c 80000000 		.4byte	.LFE17
 2721 0090 00000000 		.4byte	0
 2722 0094 00000000 		.4byte	0
 2723              		.section	.debug_line,"",%progbits
 2724              	.Ldebug_line0:
 2725 0000 33020000 		.section	.debug_str,"MS",%progbits,1
 2725      02004A00 
 2725      00000201 
 2725      FB0E0D00 
 2725      01010101 
 2726              	.LASF10:
 2727 0000 75696E74 		.ascii	"uint16\000"
 2727      313600
 2728              	.LASF48:
 2729 0007 61646347 		.ascii	"adcGain\000"
 2729      61696E00 
 2730              	.LASF23:
 2731 000f 636F756E 		.ascii	"counts\000"
 2731      747300
 2732              	.LASF47:
 2733 0016 4144435F 		.ascii	"ADC_SAR_SEQ_SetGain\000"
 2733      5341525F 
 2733      5345515F 
 2733      53657447 
 2733      61696E00 
 2734              	.LASF45:
 2735 002a 4144435F 		.ascii	"ADC_SAR_SEQ_SetOffset\000"
 2735      5341525F 
 2735      5345515F 
 2735      5365744F 
 2735      66667365 
 2736              	.LASF25:
 2737 0040 4144435F 		.ascii	"ADC_SAR_SEQ_Start\000"
 2737      5341525F 
 2737      5345515F 
 2737      53746172 
 2737      7400
 2738              	.LASF61:
 2739 0052 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_SEQ.c\000"
 2739      6E657261 
 2739      7465645F 
 2739      536F7572 
 2739      63655C50 
 2740              	.LASF7:
 2741 0079 6C6F6E67 		.ascii	"long long unsigned int\000"
 2741      206C6F6E 
 2741      6720756E 
 2741      7369676E 
 2741      65642069 
 2742              	.LASF58:
 2743 0090 4144435F 		.ascii	"ADC_SAR_SEQ_offset\000"
 2743      5341525F 
 2743      5345515F 
 2743      6F666673 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 64


 2743      657400
 2744              	.LASF37:
 2745 00a3 4144435F 		.ascii	"ADC_SAR_SEQ_SetChanMask\000"
 2745      5341525F 
 2745      5345515F 
 2745      53657443 
 2745      68616E4D 
 2746              	.LASF6:
 2747 00bb 6C6F6E67 		.ascii	"long long int\000"
 2747      206C6F6E 
 2747      6720696E 
 2747      7400
 2748              	.LASF0:
 2749 00c9 7369676E 		.ascii	"signed char\000"
 2749      65642063 
 2749      68617200 
 2750              	.LASF13:
 2751 00d5 696E7433 		.ascii	"int32\000"
 2751      3200
 2752              	.LASF4:
 2753 00db 6C6F6E67 		.ascii	"long int\000"
 2753      20696E74 
 2753      00
 2754              	.LASF9:
 2755 00e4 75696E74 		.ascii	"uint8\000"
 2755      3800
 2756              	.LASF29:
 2757 00ea 4144435F 		.ascii	"ADC_SAR_SEQ_StopConvert\000"
 2757      5341525F 
 2757      5345515F 
 2757      53746F70 
 2757      436F6E76 
 2758              	.LASF16:
 2759 0102 646F7562 		.ascii	"double\000"
 2759      6C6500
 2760              	.LASF24:
 2761 0109 4144435F 		.ascii	"ADC_SAR_SEQ_InputsPlacement\000"
 2761      5341525F 
 2761      5345515F 
 2761      496E7075 
 2761      7473506C 
 2762              	.LASF11:
 2763 0125 75696E74 		.ascii	"uint32\000"
 2763      333200
 2764              	.LASF38:
 2765 012c 6D61736B 		.ascii	"mask\000"
 2765      00
 2766              	.LASF33:
 2767 0131 7265744D 		.ascii	"retMode\000"
 2767      6F646500 
 2768              	.LASF8:
 2769 0139 756E7369 		.ascii	"unsigned int\000"
 2769      676E6564 
 2769      20696E74 
 2769      00
 2770              	.LASF52:
 2771 0146 4144435F 		.ascii	"ADC_SAR_SEQ_CountsTo_uVolts\000"
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 65


 2771      5341525F 
 2771      5345515F 
 2771      436F756E 
 2771      7473546F 
 2772              	.LASF53:
 2773 0162 75566F6C 		.ascii	"uVolts\000"
 2773      747300
 2774              	.LASF5:
 2775 0169 6C6F6E67 		.ascii	"long unsigned int\000"
 2775      20756E73 
 2775      69676E65 
 2775      6420696E 
 2775      7400
 2776              	.LASF55:
 2777 017b 766F6C74 		.ascii	"volts\000"
 2777      7300
 2778              	.LASF22:
 2779 0181 746D7052 		.ascii	"tmpRegVal\000"
 2779      65675661 
 2779      6C00
 2780              	.LASF3:
 2781 018b 73686F72 		.ascii	"short unsigned int\000"
 2781      7420756E 
 2781      7369676E 
 2781      65642069 
 2781      6E7400
 2782              	.LASF62:
 2783 019e 433A5C44 		.ascii	"C:\\Documents and Settings\\Chuck\\My Documents\\PS"
 2783      6F63756D 
 2783      656E7473 
 2783      20616E64 
 2783      20536574 
 2784 01cd 6F432043 		.ascii	"oC Creator\\RosOnAStick\\RosOnAStick.cydsn\000"
 2784      72656174 
 2784      6F725C52 
 2784      6F734F6E 
 2784      41537469 
 2785              	.LASF49:
 2786 01f6 4144435F 		.ascii	"ADC_SAR_SEQ_CountsTo_mVolts\000"
 2786      5341525F 
 2786      5345515F 
 2786      436F756E 
 2786      7473546F 
 2787              	.LASF39:
 2788 0212 4144435F 		.ascii	"ADC_SAR_SEQ_SetLowLimit\000"
 2788      5341525F 
 2788      5345515F 
 2788      5365744C 
 2788      6F774C69 
 2789              	.LASF19:
 2790 022a 72656733 		.ascii	"reg32\000"
 2790      3200
 2791              	.LASF14:
 2792 0230 666C6F61 		.ascii	"float32\000"
 2792      74333200 
 2793              	.LASF20:
 2794 0238 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 66


 2794      74797065 
 2794      00
 2795              	.LASF40:
 2796 0241 6C6F774C 		.ascii	"lowLimit\000"
 2796      696D6974 
 2796      00
 2797              	.LASF44:
 2798 024a 4144435F 		.ascii	"ADC_SAR_SEQ_SetSatMask\000"
 2798      5341525F 
 2798      5345515F 
 2798      53657453 
 2798      61744D61 
 2799              	.LASF17:
 2800 0261 696E7436 		.ascii	"int64\000"
 2800      3400
 2801              	.LASF27:
 2802 0267 4144435F 		.ascii	"ADC_SAR_SEQ_Stop\000"
 2802      5341525F 
 2802      5345515F 
 2802      53746F70 
 2802      00
 2803              	.LASF26:
 2804 0278 4144435F 		.ascii	"ADC_SAR_SEQ_Enable\000"
 2804      5341525F 
 2804      5345515F 
 2804      456E6162 
 2804      6C6500
 2805              	.LASF15:
 2806 028b 666C6F61 		.ascii	"float\000"
 2806      7400
 2807              	.LASF42:
 2808 0291 68696768 		.ascii	"highLimit\000"
 2808      4C696D69 
 2808      7400
 2809              	.LASF43:
 2810 029b 4144435F 		.ascii	"ADC_SAR_SEQ_SetLimitMask\000"
 2810      5341525F 
 2810      5345515F 
 2810      5365744C 
 2810      696D6974 
 2811              	.LASF60:
 2812 02b4 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2812      4320342E 
 2812      372E3320 
 2812      32303133 
 2812      30333132 
 2813 02e7 616E6368 		.ascii	"anch revision 196615]\000"
 2813      20726576 
 2813      6973696F 
 2813      6E203139 
 2813      36363135 
 2814              	.LASF1:
 2815 02fd 756E7369 		.ascii	"unsigned char\000"
 2815      676E6564 
 2815      20636861 
 2815      7200
 2816              	.LASF2:
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 67


 2817 030b 73686F72 		.ascii	"short int\000"
 2817      7420696E 
 2817      7400
 2818              	.LASF31:
 2819 0315 4144435F 		.ascii	"ADC_SAR_SEQ_IsEndConversion\000"
 2819      5341525F 
 2819      5345515F 
 2819      4973456E 
 2819      64436F6E 
 2820              	.LASF51:
 2821 0331 6D566F6C 		.ascii	"mVolts\000"
 2821      747300
 2822              	.LASF59:
 2823 0338 4144435F 		.ascii	"ADC_SAR_SEQ_countsPer10Volt\000"
 2823      5341525F 
 2823      5345515F 
 2823      636F756E 
 2823      74735065 
 2824              	.LASF28:
 2825 0354 4144435F 		.ascii	"ADC_SAR_SEQ_StartConvert\000"
 2825      5341525F 
 2825      5345515F 
 2825      53746172 
 2825      74436F6E 
 2826              	.LASF21:
 2827 036d 63684E75 		.ascii	"chNum\000"
 2827      6D00
 2828              	.LASF56:
 2829 0373 4144435F 		.ascii	"ADC_SAR_SEQ_channelsConfig\000"
 2829      5341525F 
 2829      5345515F 
 2829      6368616E 
 2829      6E656C73 
 2830              	.LASF57:
 2831 038e 4144435F 		.ascii	"ADC_SAR_SEQ_initVar\000"
 2831      5341525F 
 2831      5345515F 
 2831      696E6974 
 2831      56617200 
 2832              	.LASF34:
 2833 03a2 6368616E 		.ascii	"chan\000"
 2833      00
 2834              	.LASF18:
 2835 03a7 63686172 		.ascii	"char\000"
 2835      00
 2836              	.LASF32:
 2837 03ac 4144435F 		.ascii	"ADC_SAR_SEQ_GetResult16\000"
 2837      5341525F 
 2837      5345515F 
 2837      47657452 
 2837      6573756C 
 2838              	.LASF46:
 2839 03c4 6F666673 		.ascii	"offset\000"
 2839      657400
 2840              	.LASF41:
 2841 03cb 4144435F 		.ascii	"ADC_SAR_SEQ_SetHighLimit\000"
 2841      5341525F 
ARM GAS  C:\DOCUME~1\Chuck\LOCALS~1\Temp\cc6owoj4.s 			page 68


 2841      5345515F 
 2841      53657448 
 2841      6967684C 
 2842              	.LASF50:
 2843 03e4 61646343 		.ascii	"adcCounts\000"
 2843      6F756E74 
 2843      7300
 2844              	.LASF30:
 2845 03ee 73746174 		.ascii	"status\000"
 2845      757300
 2846              	.LASF12:
 2847 03f5 696E7431 		.ascii	"int16\000"
 2847      3600
 2848              	.LASF36:
 2849 03fb 4144435F 		.ascii	"ADC_SAR_SEQ_Init\000"
 2849      5341525F 
 2849      5345515F 
 2849      496E6974 
 2849      00
 2850              	.LASF35:
 2851 040c 72657375 		.ascii	"result\000"
 2851      6C7400
 2852              	.LASF54:
 2853 0413 4144435F 		.ascii	"ADC_SAR_SEQ_CountsTo_Volts\000"
 2853      5341525F 
 2853      5345515F 
 2853      436F756E 
 2853      7473546F 
 2854              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
