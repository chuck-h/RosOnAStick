ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyFlash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysFlashWriteRow,"ax",%progbits
  18              		.align	2
  19              		.global	CySysFlashWriteRow
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysFlashWriteRow, %function
  23              	CySysFlashWriteRow:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyFlash.c"
   1:.\Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyFlash.c **** * File Name: CyFlash.c
   3:.\Generated_Source\PSoC4/CyFlash.c **** * Version 4.10
   4:.\Generated_Source\PSoC4/CyFlash.c **** *
   5:.\Generated_Source\PSoC4/CyFlash.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyFlash.c **** *   Provides an API for the FLASH.
   7:.\Generated_Source\PSoC4/CyFlash.c **** *
   8:.\Generated_Source\PSoC4/CyFlash.c **** *  Note:
   9:.\Generated_Source\PSoC4/CyFlash.c **** *   This code is endian agnostic.
  10:.\Generated_Source\PSoC4/CyFlash.c **** *
  11:.\Generated_Source\PSoC4/CyFlash.c **** *  Note:
  12:.\Generated_Source\PSoC4/CyFlash.c **** *   Documentation of the API's in this file is located in the
  13:.\Generated_Source\PSoC4/CyFlash.c **** *   System Reference Guide provided with PSoC Creator.
  14:.\Generated_Source\PSoC4/CyFlash.c **** *
  15:.\Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  16:.\Generated_Source\PSoC4/CyFlash.c **** * Copyright 2010-2014, Cypress Semiconductor Corporation.  All rights reserved.
  17:.\Generated_Source\PSoC4/CyFlash.c **** * You may use this file only in accordance with the license, terms, conditions,
  18:.\Generated_Source\PSoC4/CyFlash.c **** * disclaimers, and limitations in the end user license agreement accompanying
  19:.\Generated_Source\PSoC4/CyFlash.c **** * the software package with which this file was provided.
  20:.\Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  21:.\Generated_Source\PSoC4/CyFlash.c **** 
  22:.\Generated_Source\PSoC4/CyFlash.c **** #include "CyFlash.h"
  23:.\Generated_Source\PSoC4/CyFlash.c **** 
  24:.\Generated_Source\PSoC4/CyFlash.c **** 
  25:.\Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashWriteRow
  27:.\Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/CyFlash.c **** *
  29:.\Generated_Source\PSoC4/CyFlash.c **** * Summary:
  30:.\Generated_Source\PSoC4/CyFlash.c **** *  Writes a row of Flash.
  31:.\Generated_Source\PSoC4/CyFlash.c **** *
  32:.\Generated_Source\PSoC4/CyFlash.c **** * Parameters:
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 2


  33:.\Generated_Source\PSoC4/CyFlash.c **** *  uint16 rowNum:
  34:.\Generated_Source\PSoC4/CyFlash.c **** *   Row number. Each row is 128 bytes so a 32KB flash memory will have a valid
  35:.\Generated_Source\PSoC4/CyFlash.c **** *   range of [0-255].
  36:.\Generated_Source\PSoC4/CyFlash.c **** *
  37:.\Generated_Source\PSoC4/CyFlash.c **** *  uint8* rowData:
  38:.\Generated_Source\PSoC4/CyFlash.c **** *   Array of bytes to write.
  39:.\Generated_Source\PSoC4/CyFlash.c **** *
  40:.\Generated_Source\PSoC4/CyFlash.c **** * Return:
  41:.\Generated_Source\PSoC4/CyFlash.c **** *  Status
  42:.\Generated_Source\PSoC4/CyFlash.c **** *     Value             Description
  43:.\Generated_Source\PSoC4/CyFlash.c **** *    CYRET_SUCCESS     Successful
  44:.\Generated_Source\PSoC4/CyFlash.c **** *    CYRET_LOCKED      Flash writing already in use
  45:.\Generated_Source\PSoC4/CyFlash.c **** *    CYRET_CANCELED    Command not accepted
  46:.\Generated_Source\PSoC4/CyFlash.c **** *    CYRET_BAD_PARAM   One or more invalid parameters
  47:.\Generated_Source\PSoC4/CyFlash.c **** *    Other non-zero    Failure
  48:.\Generated_Source\PSoC4/CyFlash.c **** *
  49:.\Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  50:.\Generated_Source\PSoC4/CyFlash.c **** cystatus CySysFlashWriteRow(uint32 rowNum, const uint8 rowData[])
  51:.\Generated_Source\PSoC4/CyFlash.c **** {
  26              		.loc 1 51 0
  27              		.cfi_startproc
  28 0000 90B5     		push	{r4, r7, lr}
  29              		.cfi_def_cfa_offset 12
  30              		.cfi_offset 4, -12
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 ABB0     		sub	sp, sp, #172
  34              		.cfi_def_cfa_offset 184
  35 0004 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  37 0006 7860     		str	r0, [r7, #4]
  38 0008 3960     		str	r1, [r7]
  52:.\Generated_Source\PSoC4/CyFlash.c ****     volatile cystatus retValue = CYRET_SUCCESS;
  39              		.loc 1 52 0
  40 000a 0023     		mov	r3, #0
  41 000c 9C22     		mov	r2, #156
  42 000e BA18     		add	r2, r7, r2
  43 0010 1360     		str	r3, [r2]
  53:.\Generated_Source\PSoC4/CyFlash.c ****     volatile uint32   *ptr;
  54:.\Generated_Source\PSoC4/CyFlash.c ****     volatile uint32   cpuValue;
  55:.\Generated_Source\PSoC4/CyFlash.c ****     volatile uint32   localData[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA)/4u];
  56:.\Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
  57:.\Generated_Source\PSoC4/CyFlash.c **** 
  58:.\Generated_Source\PSoC4/CyFlash.c ****     #if(CY_PSOC4A)
  59:.\Generated_Source\PSoC4/CyFlash.c ****         volatile uint32   imoConfigReg;
  60:.\Generated_Source\PSoC4/CyFlash.c ****     #else
  61:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 clkSelectReg;
  62:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 clkImoEna;
  63:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 clkImoFreq;
  64:.\Generated_Source\PSoC4/CyFlash.c ****     #endif
  65:.\Generated_Source\PSoC4/CyFlash.c **** 
  66:.\Generated_Source\PSoC4/CyFlash.c ****     #if(!CY_PSOC4A)
  67:.\Generated_Source\PSoC4/CyFlash.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
  68:.\Generated_Source\PSoC4/CyFlash.c ****         clkImoEna    = CY_SYS_CLK_IMO_CONFIG_REG & CY_SYS_CLK_IMO_CONFIG_ENABLE;
  69:.\Generated_Source\PSoC4/CyFlash.c ****         clkImoFreq   = CY_SYS_CLK_IMO_MIN_FREQ_MHZ + (CY_SYS_CLK_IMO_SELECT_REG << 2);
  70:.\Generated_Source\PSoC4/CyFlash.c ****     #endif
  71:.\Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 3


  72:.\Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
  44              		.loc 1 72 0
  45 0012 7B68     		ldr	r3, [r7, #4]
  46 0014 FF2B     		cmp	r3, #255
  47 0016 00D9     		bls	.LCB21
  48 0018 99E0     		b	.L2	@long jump
  49              	.LCB21:
  50              		.loc 1 72 0 is_stmt 0 discriminator 1
  51 001a 3B68     		ldr	r3, [r7]
  52 001c 002B     		cmp	r3, #0
  53 001e 00D1     		bne	.LCB24
  54 0020 95E0     		b	.L2	@long jump
  55              	.LCB24:
  73:.\Generated_Source\PSoC4/CyFlash.c ****     {
  74:.\Generated_Source\PSoC4/CyFlash.c ****         /* First load data. Then invoke Write row command. */
  75:.\Generated_Source\PSoC4/CyFlash.c ****         ptr = &localData[CY_FLASH_SRAM_ROM_KEY1];
  56              		.loc 1 75 0 is_stmt 1
  57 0022 1023     		mov	r3, #16
  58 0024 FB18     		add	r3, r7, r3
  59 0026 A422     		mov	r2, #164
  60 0028 BA18     		add	r2, r7, r2
  61 002a 1360     		str	r3, [r2]
  76:.\Generated_Source\PSoC4/CyFlash.c **** 
  77:.\Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32)ptr;
  62              		.loc 1 77 0
  63 002c 4D4B     		ldr	r3, .L12
  64 002e A422     		mov	r2, #164
  65 0030 BA18     		add	r2, r7, r2
  66 0032 1268     		ldr	r2, [r2]
  67 0034 1A60     		str	r2, [r3]
  78:.\Generated_Source\PSoC4/CyFlash.c **** 
  79:.\Generated_Source\PSoC4/CyFlash.c ****         #if(CY_FLASH_NUMBER_ROWS > 255u)
  80:.\Generated_Source\PSoC4/CyFlash.c ****             localData[CY_FLASH_SRAM_ROM_KEY1] = CY_FLASH_SROM_LOAD_CMD | (uint32)((rowNum & 0x100u)
  68              		.loc 1 80 0
  69 0036 7A68     		ldr	r2, [r7, #4]
  70 0038 8023     		mov	r3, #128
  71 003a 5B00     		lsl	r3, r3, #1
  72 003c 1340     		and	r3, r2
  73 003e 1B04     		lsl	r3, r3, #16
  74 0040 494A     		ldr	r2, .L12+4
  75 0042 1A43     		orr	r2, r3
  76 0044 1023     		mov	r3, #16
  77 0046 FB18     		add	r3, r7, r3
  78 0048 1A60     		str	r2, [r3]
  81:.\Generated_Source\PSoC4/CyFlash.c ****         #else
  82:.\Generated_Source\PSoC4/CyFlash.c ****             localData[CY_FLASH_SRAM_ROM_KEY1] = CY_FLASH_SROM_LOAD_CMD;
  83:.\Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_FLASH_SIZEOF_ROW > 255) */
  84:.\Generated_Source\PSoC4/CyFlash.c **** 
  85:.\Generated_Source\PSoC4/CyFlash.c ****         localData[CY_FLASH_SRAM_ROM_PARAM2/4u] = ((uint32)(CYDEV_FLS_ROW_SIZE - 1u));
  79              		.loc 1 85 0
  80 004a 1023     		mov	r3, #16
  81 004c FB18     		add	r3, r7, r3
  82 004e 7F22     		mov	r2, #127
  83 0050 5A60     		str	r2, [r3, #4]
  86:.\Generated_Source\PSoC4/CyFlash.c **** 
  87:.\Generated_Source\PSoC4/CyFlash.c ****         /* Copy row data from 8bit to 32bit array with shift for CPUSS commands */
  88:.\Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&localData[CY_FLASH_SRAM_ROM_DATA/4u], rowData, CYDEV_FLS_ROW_SIZE);
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 4


  84              		.loc 1 88 0
  85 0052 1023     		mov	r3, #16
  86 0054 FB18     		add	r3, r7, r3
  87 0056 0833     		add	r3, r3, #8
  88 0058 1A1C     		mov	r2, r3
  89 005a 3B68     		ldr	r3, [r7]
  90 005c 101C     		mov	r0, r2
  91 005e 191C     		mov	r1, r3
  92 0060 8022     		mov	r2, #128
  93 0062 FFF7FEFF 		bl	memcpy
  89:.\Generated_Source\PSoC4/CyFlash.c **** 
  90:.\Generated_Source\PSoC4/CyFlash.c ****         /* Perform sysreq load data, opcode 0x80000004h */
  91:.\Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_LOAD_BYTE_OPCODE | CY_FLASH_CPUSS_REQ_START;
  94              		.loc 1 91 0
  95 0066 414B     		ldr	r3, .L12+8
  96 0068 414A     		ldr	r2, .L12+12
  97 006a 1A60     		str	r2, [r3]
  92:.\Generated_Source\PSoC4/CyFlash.c **** 
  93:.\Generated_Source\PSoC4/CyFlash.c ****         while((CY_FLASH_CPUSS_SYSREQ_REG & CY_FLASH_CPUSS_REQ_START) == CY_FLASH_CPUSS_REQ_START)
  98              		.loc 1 93 0
  99 006c C046     		mov	r8, r8
 100              	.L3:
 101              		.loc 1 93 0 is_stmt 0 discriminator 1
 102 006e 3F4B     		ldr	r3, .L12+8
 103 0070 1B68     		ldr	r3, [r3]
 104 0072 002B     		cmp	r3, #0
 105 0074 FBDB     		blt	.L3
  94:.\Generated_Source\PSoC4/CyFlash.c ****         {
  95:.\Generated_Source\PSoC4/CyFlash.c ****             /* Wait till CY_FLASH_CPUSS_REQ_START bit goes low */
  96:.\Generated_Source\PSoC4/CyFlash.c ****         }
  97:.\Generated_Source\PSoC4/CyFlash.c **** 
  98:.\Generated_Source\PSoC4/CyFlash.c ****         /* Check if value is written to SRAM_BASE */
  99:.\Generated_Source\PSoC4/CyFlash.c ****         cpuValue = CY_FLASH_CPUSS_SYSARG_REG;
 106              		.loc 1 99 0 is_stmt 1
 107 0076 3B4B     		ldr	r3, .L12
 108 0078 1B68     		ldr	r3, [r3]
 109 007a 9822     		mov	r2, #152
 110 007c BA18     		add	r2, r7, r2
 111 007e 1360     		str	r3, [r2]
 100:.\Generated_Source\PSoC4/CyFlash.c ****         if (cpuValue == CY_FLASH_SROM_CMD_RETURN_SUCC)
 112              		.loc 1 100 0
 113 0080 9823     		mov	r3, #152
 114 0082 FB18     		add	r3, r7, r3
 115 0084 1A68     		ldr	r2, [r3]
 116 0086 A023     		mov	r3, #160
 117 0088 1B06     		lsl	r3, r3, #24
 118 008a 9A42     		cmp	r2, r3
 119 008c 04D1     		bne	.L4
 101:.\Generated_Source\PSoC4/CyFlash.c ****         {
 102:.\Generated_Source\PSoC4/CyFlash.c ****             retValue = CYRET_SUCCESS;
 120              		.loc 1 102 0
 121 008e 0023     		mov	r3, #0
 122 0090 9C22     		mov	r2, #156
 123 0092 BA18     		add	r2, r7, r2
 124 0094 1360     		str	r3, [r2]
 125 0096 16E0     		b	.L5
 126              	.L4:
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 5


 103:.\Generated_Source\PSoC4/CyFlash.c ****         }
 104:.\Generated_Source\PSoC4/CyFlash.c ****         else if((cpuValue & CY_FLASH_SROM_CMD_RETURN_MASK) == CY_FLASH_SROM_CMD_RETURN_MASK)
 127              		.loc 1 104 0
 128 0098 9823     		mov	r3, #152
 129 009a FB18     		add	r3, r7, r3
 130 009c 1B68     		ldr	r3, [r3]
 131 009e 1B0F     		lsr	r3, r3, #28
 132 00a0 1A07     		lsl	r2, r3, #28
 133 00a2 F023     		mov	r3, #240
 134 00a4 1B06     		lsl	r3, r3, #24
 135 00a6 9A42     		cmp	r2, r3
 136 00a8 04D1     		bne	.L6
 105:.\Generated_Source\PSoC4/CyFlash.c ****         {
 106:.\Generated_Source\PSoC4/CyFlash.c ****             /* Error value, cant proceed */
 107:.\Generated_Source\PSoC4/CyFlash.c ****             retValue = CYRET_CANCELED;
 137              		.loc 1 107 0
 138 00aa 0923     		mov	r3, #9
 139 00ac 9C22     		mov	r2, #156
 140 00ae BA18     		add	r2, r7, r2
 141 00b0 1360     		str	r3, [r2]
 142 00b2 08E0     		b	.L5
 143              	.L6:
 108:.\Generated_Source\PSoC4/CyFlash.c ****         }
 109:.\Generated_Source\PSoC4/CyFlash.c ****         else
 110:.\Generated_Source\PSoC4/CyFlash.c ****         {
 111:.\Generated_Source\PSoC4/CyFlash.c ****             while((CY_FLASH_CPUSS_SYSARG_REG & CY_FLASH_SROM_CMD_RETURN_MASK) != CY_FLASH_SROM_CMD_
 144              		.loc 1 111 0
 145 00b4 C046     		mov	r8, r8
 146              	.L7:
 147              		.loc 1 111 0 is_stmt 0 discriminator 1
 148 00b6 2B4B     		ldr	r3, .L12
 149 00b8 1B68     		ldr	r3, [r3]
 150 00ba 1B0F     		lsr	r3, r3, #28
 151 00bc 1A07     		lsl	r2, r3, #28
 152 00be A023     		mov	r3, #160
 153 00c0 1B06     		lsl	r3, r3, #24
 154 00c2 9A42     		cmp	r2, r3
 155 00c4 F7D1     		bne	.L7
 156              	.L5:
 112:.\Generated_Source\PSoC4/CyFlash.c ****             {
 113:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Wait till request is completed */
 114:.\Generated_Source\PSoC4/CyFlash.c ****             }
 115:.\Generated_Source\PSoC4/CyFlash.c ****         }
 116:.\Generated_Source\PSoC4/CyFlash.c **** 
 117:.\Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CYRET_SUCCESS)
 157              		.loc 1 117 0 is_stmt 1
 158 00c6 9C23     		mov	r3, #156
 159 00c8 FB18     		add	r3, r7, r3
 160 00ca 1B68     		ldr	r3, [r3]
 161 00cc 002B     		cmp	r3, #0
 162 00ce 3DD1     		bne	.L8
 118:.\Generated_Source\PSoC4/CyFlash.c ****         {
 119:.\Generated_Source\PSoC4/CyFlash.c ****             #if(!CY_PSOC4A)
 120:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Mask all exceptions to guarantee that IMO configuration will be changed
 121:.\Generated_Source\PSoC4/CyFlash.c ****                 * in the atomic way. It will not affect the syscall execution (flash row write)
 122:.\Generated_Source\PSoC4/CyFlash.c ****                 * since it is executed in the NMI context.
 123:.\Generated_Source\PSoC4/CyFlash.c ****                 */
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 6


 124:.\Generated_Source\PSoC4/CyFlash.c ****                 interruptState = CyEnterCriticalSection();
 125:.\Generated_Source\PSoC4/CyFlash.c **** 
 126:.\Generated_Source\PSoC4/CyFlash.c ****                 /* The FM-Lite IP (s8fmlt) uses the IMO at 48MHz for the pump clock and SPC timer c
 127:.\Generated_Source\PSoC4/CyFlash.c ****                  * The PUMP_SEL and HF clock must be set to IMO before calling Flash write or erase
 128:.\Generated_Source\PSoC4/CyFlash.c ****                  */
 129:.\Generated_Source\PSoC4/CyFlash.c ****                 if ((clkImoFreq != 48u) ||
 130:.\Generated_Source\PSoC4/CyFlash.c ****                     ((clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCLK_IMO) ||
 131:.\Generated_Source\PSoC4/CyFlash.c ****                     (((clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELECT_PUMP_S
 132:.\Generated_Source\PSoC4/CyFlash.c **** 					    CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 133:.\Generated_Source\PSoC4/CyFlash.c ****                 {
 134:.\Generated_Source\PSoC4/CyFlash.c ****                     CySysClkWriteHfclkDiv(CY_SYS_CLK_HFCLK_DIV_4);
 135:.\Generated_Source\PSoC4/CyFlash.c ****                     if (clkImoFreq != 48u)
 136:.\Generated_Source\PSoC4/CyFlash.c ****                     {
 137:.\Generated_Source\PSoC4/CyFlash.c ****                         CySysClkWriteImoFreq(48u);
 138:.\Generated_Source\PSoC4/CyFlash.c ****                     }
 139:.\Generated_Source\PSoC4/CyFlash.c ****                     CySysClkImoStart();
 140:.\Generated_Source\PSoC4/CyFlash.c ****                     CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO);
 141:.\Generated_Source\PSoC4/CyFlash.c ****                     /* Set IMO output as clock source for charge pump clock */
 142:.\Generated_Source\PSoC4/CyFlash.c ****                     CY_SYS_CLK_SELECT_REG &= ((uint32)~(uint32)(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << 
 143:.\Generated_Source\PSoC4/CyFlash.c ****                     CY_SYS_CLK_SELECT_REG |= (uint32)((uint32)1u << CY_SYS_CLK_SELECT_PUMP_SEL_SHIF
 144:.\Generated_Source\PSoC4/CyFlash.c ****                 }
 145:.\Generated_Source\PSoC4/CyFlash.c ****             #endif
 146:.\Generated_Source\PSoC4/CyFlash.c **** 
 147:.\Generated_Source\PSoC4/CyFlash.c ****             ptr = &localData[CY_FLASH_SRAM_ROM_KEY1/4u];
 163              		.loc 1 147 0
 164 00d0 1023     		mov	r3, #16
 165 00d2 FB18     		add	r3, r7, r3
 166 00d4 A422     		mov	r2, #164
 167 00d6 BA18     		add	r2, r7, r2
 168 00d8 1360     		str	r3, [r2]
 148:.\Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32)ptr;
 169              		.loc 1 148 0
 170 00da 224B     		ldr	r3, .L12
 171 00dc A422     		mov	r2, #164
 172 00de BA18     		add	r2, r7, r2
 173 00e0 1268     		ldr	r2, [r2]
 174 00e2 1A60     		str	r2, [r3]
 149:.\Generated_Source\PSoC4/CyFlash.c **** 
 150:.\Generated_Source\PSoC4/CyFlash.c ****             /* Write row command to SROM */
 151:.\Generated_Source\PSoC4/CyFlash.c ****             localData[CY_FLASH_SRAM_ROM_KEY1/4u] =  (uint32)(rowNum << 16u) |
 175              		.loc 1 151 0
 176 00e4 7B68     		ldr	r3, [r7, #4]
 177 00e6 1B04     		lsl	r3, r3, #16
 152:.\Generated_Source\PSoC4/CyFlash.c ****                                                     (uint32)(CY_FLASH_SROM_KEY2_WRITE << 8u) |
 178              		.loc 1 152 0
 179 00e8 224A     		ldr	r2, .L12+16
 180 00ea 1A43     		orr	r2, r3
 151:.\Generated_Source\PSoC4/CyFlash.c ****                                                     (uint32)(CY_FLASH_SROM_KEY2_WRITE << 8u) |
 181              		.loc 1 151 0
 182 00ec 1023     		mov	r3, #16
 183 00ee FB18     		add	r3, r7, r3
 184 00f0 1A60     		str	r2, [r3]
 153:.\Generated_Source\PSoC4/CyFlash.c ****                                                     CY_FLASH_SROM_KEY1;
 154:.\Generated_Source\PSoC4/CyFlash.c **** 
 155:.\Generated_Source\PSoC4/CyFlash.c ****             #if(CY_PSOC4A)
 156:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Mask all the exceptions to guarantee that IMO configuration will be changed
 157:.\Generated_Source\PSoC4/CyFlash.c ****                 * in the atomic way. It will not affect the syscall execution (flash row write)
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 7


 158:.\Generated_Source\PSoC4/CyFlash.c ****                 * since it is executed in the NMI context.
 159:.\Generated_Source\PSoC4/CyFlash.c ****                 */
 160:.\Generated_Source\PSoC4/CyFlash.c ****                 interruptState = CyEnterCriticalSection();
 185              		.loc 1 160 0
 186 00f2 A323     		mov	r3, #163
 187 00f4 FC18     		add	r4, r7, r3
 188 00f6 FFF7FEFF 		bl	CyEnterCriticalSection
 189 00fa 031C     		mov	r3, r0
 190 00fc 2370     		strb	r3, [r4]
 161:.\Generated_Source\PSoC4/CyFlash.c **** 
 162:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Preserve IMO configuration that could be changed
 163:.\Generated_Source\PSoC4/CyFlash.c ****                 * during syscall execution (Cypress ID #150448).
 164:.\Generated_Source\PSoC4/CyFlash.c ****                 */
 165:.\Generated_Source\PSoC4/CyFlash.c ****                 imoConfigReg = CY_SYS_CLK_IMO_CONFIG_REG;
 191              		.loc 1 165 0
 192 00fe 1E4B     		ldr	r3, .L12+20
 193 0100 1B68     		ldr	r3, [r3]
 194 0102 FB60     		str	r3, [r7, #12]
 166:.\Generated_Source\PSoC4/CyFlash.c ****             #endif
 167:.\Generated_Source\PSoC4/CyFlash.c **** 
 168:.\Generated_Source\PSoC4/CyFlash.c ****             /* Perform sysreq for Write row, opcode 0x80000005 */
 169:.\Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_WRITE_ROW_OPCODE | CY_FLASH_CPUSS_REQ_START;
 195              		.loc 1 169 0
 196 0104 194B     		ldr	r3, .L12+8
 197 0106 1D4A     		ldr	r2, .L12+24
 198 0108 1A60     		str	r2, [r3]
 170:.\Generated_Source\PSoC4/CyFlash.c **** 
 171:.\Generated_Source\PSoC4/CyFlash.c ****             while((CY_FLASH_CPUSS_SYSREQ_REG & CY_FLASH_CPUSS_REQ_START) == CY_FLASH_CPUSS_REQ_STAR
 199              		.loc 1 171 0
 200 010a C046     		mov	r8, r8
 201              	.L9:
 202              		.loc 1 171 0 is_stmt 0 discriminator 1
 203 010c 174B     		ldr	r3, .L12+8
 204 010e 1B68     		ldr	r3, [r3]
 205 0110 002B     		cmp	r3, #0
 206 0112 FBDB     		blt	.L9
 172:.\Generated_Source\PSoC4/CyFlash.c ****             {
 173:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Wait till CY_FLASH_CPUSS_REQ_START bit goes low */
 174:.\Generated_Source\PSoC4/CyFlash.c ****             }
 175:.\Generated_Source\PSoC4/CyFlash.c **** 
 176:.\Generated_Source\PSoC4/CyFlash.c ****             #if(CY_PSOC4A)
 177:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Restore IMO configuration */
 178:.\Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_IMO_CONFIG_REG = imoConfigReg;
 207              		.loc 1 178 0 is_stmt 1
 208 0114 184B     		ldr	r3, .L12+20
 209 0116 FA68     		ldr	r2, [r7, #12]
 210 0118 1A60     		str	r2, [r3]
 179:.\Generated_Source\PSoC4/CyFlash.c **** 
 180:.\Generated_Source\PSoC4/CyFlash.c ****                 CyExitCriticalSection(interruptState);
 211              		.loc 1 180 0
 212 011a A323     		mov	r3, #163
 213 011c FB18     		add	r3, r7, r3
 214 011e 1B78     		ldrb	r3, [r3]
 215 0120 181C     		mov	r0, r3
 216 0122 FFF7FEFF 		bl	CyExitCriticalSection
 181:.\Generated_Source\PSoC4/CyFlash.c ****             #else
 182:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Restore clock settings */
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 8


 183:.\Generated_Source\PSoC4/CyFlash.c ****                 if ((clkImoFreq != 48u) ||
 184:.\Generated_Source\PSoC4/CyFlash.c ****                     ((clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCLK_IMO) ||
 185:.\Generated_Source\PSoC4/CyFlash.c ****                     (((clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELECT_PUMP_S
 186:.\Generated_Source\PSoC4/CyFlash.c ****                         CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 187:.\Generated_Source\PSoC4/CyFlash.c ****                 {
 188:.\Generated_Source\PSoC4/CyFlash.c ****                     if (clkImoFreq != 48u)
 189:.\Generated_Source\PSoC4/CyFlash.c ****                     {
 190:.\Generated_Source\PSoC4/CyFlash.c ****                         CySysClkWriteImoFreq(clkImoFreq);
 191:.\Generated_Source\PSoC4/CyFlash.c ****                     }
 192:.\Generated_Source\PSoC4/CyFlash.c ****                     CySysClkWriteHfclkDiv(CY_SYS_CLK_HFCLK_DIV_8);
 193:.\Generated_Source\PSoC4/CyFlash.c ****                     CySysClkWriteHfclkDirect(clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 194:.\Generated_Source\PSoC4/CyFlash.c ****                     CY_SYS_CLK_SELECT_REG = clkSelectReg;
 195:.\Generated_Source\PSoC4/CyFlash.c ****                     if (0u == clkImoEna)
 196:.\Generated_Source\PSoC4/CyFlash.c ****                     {
 197:.\Generated_Source\PSoC4/CyFlash.c ****                         CySysClkImoStop();
 198:.\Generated_Source\PSoC4/CyFlash.c ****                     }
 199:.\Generated_Source\PSoC4/CyFlash.c ****                 }
 200:.\Generated_Source\PSoC4/CyFlash.c ****                 CyExitCriticalSection(interruptState);
 201:.\Generated_Source\PSoC4/CyFlash.c ****             #endif
 202:.\Generated_Source\PSoC4/CyFlash.c **** 
 203:.\Generated_Source\PSoC4/CyFlash.c ****             cpuValue = CY_FLASH_CPUSS_SYSARG_REG;
 217              		.loc 1 203 0
 218 0126 0F4B     		ldr	r3, .L12
 219 0128 1B68     		ldr	r3, [r3]
 220 012a 9822     		mov	r2, #152
 221 012c BA18     		add	r2, r7, r2
 222 012e 1360     		str	r3, [r2]
 204:.\Generated_Source\PSoC4/CyFlash.c ****             if (cpuValue != CY_FLASH_SROM_CMD_RETURN_SUCC)
 223              		.loc 1 204 0
 224 0130 9823     		mov	r3, #152
 225 0132 FB18     		add	r3, r7, r3
 226 0134 1A68     		ldr	r2, [r3]
 227 0136 A023     		mov	r3, #160
 228 0138 1B06     		lsl	r3, r3, #24
 229 013a 9A42     		cmp	r2, r3
 230 013c 06D0     		beq	.L8
 205:.\Generated_Source\PSoC4/CyFlash.c ****             {
 206:.\Generated_Source\PSoC4/CyFlash.c ****                 retValue = cpuValue;
 231              		.loc 1 206 0
 232 013e 9823     		mov	r3, #152
 233 0140 FB18     		add	r3, r7, r3
 234 0142 1B68     		ldr	r3, [r3]
 235 0144 9C22     		mov	r2, #156
 236 0146 BA18     		add	r2, r7, r2
 237 0148 1360     		str	r3, [r2]
 117:.\Generated_Source\PSoC4/CyFlash.c ****         {
 238              		.loc 1 117 0
 239 014a 04E0     		b	.L10
 240              	.L8:
 241 014c 03E0     		b	.L10
 242              	.L2:
 207:.\Generated_Source\PSoC4/CyFlash.c ****             }
 208:.\Generated_Source\PSoC4/CyFlash.c ****         }
 209:.\Generated_Source\PSoC4/CyFlash.c ****     }
 210:.\Generated_Source\PSoC4/CyFlash.c ****     else
 211:.\Generated_Source\PSoC4/CyFlash.c ****     {
 212:.\Generated_Source\PSoC4/CyFlash.c ****         retValue = CYRET_BAD_PARAM;
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 9


 243              		.loc 1 212 0
 244 014e 0123     		mov	r3, #1
 245 0150 9C22     		mov	r2, #156
 246 0152 BA18     		add	r2, r7, r2
 247 0154 1360     		str	r3, [r2]
 248              	.L10:
 213:.\Generated_Source\PSoC4/CyFlash.c ****     }
 214:.\Generated_Source\PSoC4/CyFlash.c **** 
 215:.\Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 249              		.loc 1 215 0
 250 0156 9C23     		mov	r3, #156
 251 0158 FB18     		add	r3, r7, r3
 252 015a 1B68     		ldr	r3, [r3]
 216:.\Generated_Source\PSoC4/CyFlash.c **** }
 253              		.loc 1 216 0
 254 015c 181C     		mov	r0, r3
 255 015e BD46     		mov	sp, r7
 256 0160 2BB0     		add	sp, sp, #172
 257              		@ sp needed
 258 0162 90BD     		pop	{r4, r7, pc}
 259              	.L13:
 260              		.align	2
 261              	.L12:
 262 0164 08000040 		.word	1073741832
 263 0168 B6D70000 		.word	55222
 264 016c 04000040 		.word	1073741828
 265 0170 04000080 		.word	-2147483644
 266 0174 B6D80000 		.word	55478
 267 0178 08010B40 		.word	1074462984
 268 017c 05000080 		.word	-2147483643
 269              		.cfi_endproc
 270              	.LFE0:
 271              		.size	CySysFlashWriteRow, .-CySysFlashWriteRow
 272              		.section	.text.CySysFlashSetWaitCycles,"ax",%progbits
 273              		.align	2
 274              		.global	CySysFlashSetWaitCycles
 275              		.code	16
 276              		.thumb_func
 277              		.type	CySysFlashSetWaitCycles, %function
 278              	CySysFlashSetWaitCycles:
 279              	.LFB1:
 217:.\Generated_Source\PSoC4/CyFlash.c **** 
 218:.\Generated_Source\PSoC4/CyFlash.c **** #if(CY_PSOC4A)
 219:.\Generated_Source\PSoC4/CyFlash.c **** 
 220:.\Generated_Source\PSoC4/CyFlash.c ****     /*******************************************************************************
 221:.\Generated_Source\PSoC4/CyFlash.c ****     * Function Name: CySysFlashSetWaitCycles
 222:.\Generated_Source\PSoC4/CyFlash.c ****     ********************************************************************************
 223:.\Generated_Source\PSoC4/CyFlash.c ****     *
 224:.\Generated_Source\PSoC4/CyFlash.c ****     * Summary:
 225:.\Generated_Source\PSoC4/CyFlash.c ****     *  Sets the number of clock cycles the cache will wait before it samples data
 226:.\Generated_Source\PSoC4/CyFlash.c ****     *  coming back from Flash. This function must be called before increasing the
 227:.\Generated_Source\PSoC4/CyFlash.c ****     *  SYSCLK clock frequency. It can optionally be called after lowering SYSCLK
 228:.\Generated_Source\PSoC4/CyFlash.c ****     *  clock frequency in order to improve the CPU performance.
 229:.\Generated_Source\PSoC4/CyFlash.c ****     *
 230:.\Generated_Source\PSoC4/CyFlash.c ****     * Parameters:
 231:.\Generated_Source\PSoC4/CyFlash.c ****     *  freq: Valid range [3-48].  Frequency for operation of the IMO.
 232:.\Generated_Source\PSoC4/CyFlash.c ****     *  Note: Invalid frequency will be ignored.
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 10


 233:.\Generated_Source\PSoC4/CyFlash.c ****     *
 234:.\Generated_Source\PSoC4/CyFlash.c ****     * Return:
 235:.\Generated_Source\PSoC4/CyFlash.c ****     *  None
 236:.\Generated_Source\PSoC4/CyFlash.c ****     *
 237:.\Generated_Source\PSoC4/CyFlash.c ****     *******************************************************************************/
 238:.\Generated_Source\PSoC4/CyFlash.c ****     void CySysFlashSetWaitCycles(uint32 freq)
 239:.\Generated_Source\PSoC4/CyFlash.c ****     {
 280              		.loc 1 239 0
 281              		.cfi_startproc
 282 0000 80B5     		push	{r7, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 82B0     		sub	sp, sp, #8
 287              		.cfi_def_cfa_offset 16
 288 0004 00AF     		add	r7, sp, #0
 289              		.cfi_def_cfa_register 7
 290 0006 7860     		str	r0, [r7, #4]
 240:.\Generated_Source\PSoC4/CyFlash.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 291              		.loc 1 240 0
 292 0008 7B68     		ldr	r3, [r7, #4]
 293 000a 022B     		cmp	r3, #2
 294 000c 14D9     		bls	.L15
 295              		.loc 1 240 0 is_stmt 0 discriminator 1
 296 000e 7B68     		ldr	r3, [r7, #4]
 297 0010 302B     		cmp	r3, #48
 298 0012 11D8     		bhi	.L15
 241:.\Generated_Source\PSoC4/CyFlash.c ****         {
 242:.\Generated_Source\PSoC4/CyFlash.c ****             if ( freq <= CY_FLASH_SYSCLK_BOUNDARY_MHZ )
 299              		.loc 1 242 0 is_stmt 1
 300 0014 7B68     		ldr	r3, [r7, #4]
 301 0016 182B     		cmp	r3, #24
 302 0018 06D8     		bhi	.L16
 243:.\Generated_Source\PSoC4/CyFlash.c ****             {
 244:.\Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_FLASH_WAIT_STATE_EN);
 303              		.loc 1 244 0
 304 001a 0A4B     		ldr	r3, .L19
 305 001c 094A     		ldr	r2, .L19
 306 001e 1268     		ldr	r2, [r2]
 307 0020 0949     		ldr	r1, .L19+4
 308 0022 0A40     		and	r2, r1
 309 0024 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/CyFlash.c ****             {
 310              		.loc 1 242 0
 311 0026 0AE0     		b	.L14
 312              	.L16:
 245:.\Generated_Source\PSoC4/CyFlash.c ****             }
 246:.\Generated_Source\PSoC4/CyFlash.c ****             else
 247:.\Generated_Source\PSoC4/CyFlash.c ****             {
 248:.\Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_SELECT_REG |= CY_FLASH_WAIT_STATE_EN;
 313              		.loc 1 248 0
 314 0028 064B     		ldr	r3, .L19
 315 002a 064A     		ldr	r2, .L19
 316 002c 1268     		ldr	r2, [r2]
 317 002e 8021     		mov	r1, #128
 318 0030 C902     		lsl	r1, r1, #11
 319 0032 0A43     		orr	r2, r1
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 11


 320 0034 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/CyFlash.c ****             {
 321              		.loc 1 242 0
 322 0036 02E0     		b	.L14
 323              	.L15:
 249:.\Generated_Source\PSoC4/CyFlash.c ****             }
 250:.\Generated_Source\PSoC4/CyFlash.c ****         }
 251:.\Generated_Source\PSoC4/CyFlash.c ****         else
 252:.\Generated_Source\PSoC4/CyFlash.c ****         {
 253:.\Generated_Source\PSoC4/CyFlash.c ****             /* Halt CPU in debug mode if frequency is invalid */
 254:.\Generated_Source\PSoC4/CyFlash.c ****             CYASSERT(0u != 0u);
 324              		.loc 1 254 0 discriminator 1
 325 0038 0020     		mov	r0, #0
 326 003a FFF7FEFF 		bl	CyHalt
 327              	.L14:
 255:.\Generated_Source\PSoC4/CyFlash.c ****         }
 256:.\Generated_Source\PSoC4/CyFlash.c ****     }
 328              		.loc 1 256 0
 329 003e BD46     		mov	sp, r7
 330 0040 02B0     		add	sp, sp, #8
 331              		@ sp needed
 332 0042 80BD     		pop	{r7, pc}
 333              	.L20:
 334              		.align	2
 335              	.L19:
 336 0044 00010B40 		.word	1074462976
 337 0048 FFFFFBFF 		.word	-262145
 338              		.cfi_endproc
 339              	.LFE1:
 340              		.size	CySysFlashSetWaitCycles, .-CySysFlashSetWaitCycles
 341              		.text
 342              	.Letext0:
 343              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 344              		.section	.debug_info,"",%progbits
 345              	.Ldebug_info0:
 346 0000 8E010000 		.4byte	0x18e
 347 0004 0400     		.2byte	0x4
 348 0006 00000000 		.4byte	.Ldebug_abbrev0
 349 000a 04       		.byte	0x4
 350 000b 01       		.uleb128 0x1
 351 000c BE000000 		.4byte	.LASF25
 352 0010 01       		.byte	0x1
 353 0011 16000000 		.4byte	.LASF26
 354 0015 55000000 		.4byte	.LASF27
 355 0019 00000000 		.4byte	.Ldebug_ranges0+0
 356 001d 00000000 		.4byte	0
 357 0021 00000000 		.4byte	.Ldebug_line0
 358 0025 02       		.uleb128 0x2
 359 0026 01       		.byte	0x1
 360 0027 06       		.byte	0x6
 361 0028 1F020000 		.4byte	.LASF0
 362 002c 02       		.uleb128 0x2
 363 002d 01       		.byte	0x1
 364 002e 08       		.byte	0x8
 365 002f 81000000 		.4byte	.LASF1
 366 0033 02       		.uleb128 0x2
 367 0034 02       		.byte	0x2
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 12


 368 0035 05       		.byte	0x5
 369 0036 AA010000 		.4byte	.LASF2
 370 003a 02       		.uleb128 0x2
 371 003b 02       		.byte	0x2
 372 003c 07       		.byte	0x7
 373 003d 39000000 		.4byte	.LASF3
 374 0041 02       		.uleb128 0x2
 375 0042 04       		.byte	0x4
 376 0043 05       		.byte	0x5
 377 0044 16020000 		.4byte	.LASF4
 378 0048 02       		.uleb128 0x2
 379 0049 04       		.byte	0x4
 380 004a 07       		.byte	0x7
 381 004b A6000000 		.4byte	.LASF5
 382 004f 02       		.uleb128 0x2
 383 0050 08       		.byte	0x8
 384 0051 05       		.byte	0x5
 385 0052 F1010000 		.4byte	.LASF6
 386 0056 02       		.uleb128 0x2
 387 0057 08       		.byte	0x8
 388 0058 07       		.byte	0x7
 389 0059 D1010000 		.4byte	.LASF7
 390 005d 03       		.uleb128 0x3
 391 005e 04       		.byte	0x4
 392 005f 05       		.byte	0x5
 393 0060 696E7400 		.ascii	"int\000"
 394 0064 02       		.uleb128 0x2
 395 0065 04       		.byte	0x4
 396 0066 07       		.byte	0x7
 397 0067 C4010000 		.4byte	.LASF8
 398 006b 04       		.uleb128 0x4
 399 006c B8000000 		.4byte	.LASF9
 400 0070 02       		.byte	0x2
 401 0071 5B       		.byte	0x5b
 402 0072 2C000000 		.4byte	0x2c
 403 0076 04       		.uleb128 0x4
 404 0077 BD010000 		.4byte	.LASF10
 405 007b 02       		.byte	0x2
 406 007c 5D       		.byte	0x5d
 407 007d 48000000 		.4byte	0x48
 408 0081 02       		.uleb128 0x2
 409 0082 04       		.byte	0x4
 410 0083 04       		.byte	0x4
 411 0084 7B000000 		.4byte	.LASF11
 412 0088 02       		.uleb128 0x2
 413 0089 08       		.byte	0x8
 414 008a 04       		.byte	0x4
 415 008b A3010000 		.4byte	.LASF12
 416 008f 02       		.uleb128 0x2
 417 0090 01       		.byte	0x1
 418 0091 08       		.byte	0x8
 419 0092 0C020000 		.4byte	.LASF13
 420 0096 04       		.uleb128 0x4
 421 0097 B4010000 		.4byte	.LASF14
 422 009b 02       		.byte	0x2
 423 009c E8       		.byte	0xe8
 424 009d 48000000 		.4byte	0x48
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 13


 425 00a1 04       		.uleb128 0x4
 426 00a2 00000000 		.4byte	.LASF15
 427 00a6 02       		.byte	0x2
 428 00a7 F2       		.byte	0xf2
 429 00a8 AC000000 		.4byte	0xac
 430 00ac 05       		.uleb128 0x5
 431 00ad 76000000 		.4byte	0x76
 432 00b1 02       		.uleb128 0x2
 433 00b2 04       		.byte	0x4
 434 00b3 07       		.byte	0x7
 435 00b4 E8010000 		.4byte	.LASF16
 436 00b8 06       		.uleb128 0x6
 437 00b9 2B020000 		.4byte	.LASF28
 438 00bd 01       		.byte	0x1
 439 00be 32       		.byte	0x32
 440 00bf 96000000 		.4byte	0x96
 441 00c3 00000000 		.4byte	.LFB0
 442 00c7 80010000 		.4byte	.LFE0-.LFB0
 443 00cb 01       		.uleb128 0x1
 444 00cc 9C       		.byte	0x9c
 445 00cd 46010000 		.4byte	0x146
 446 00d1 07       		.uleb128 0x7
 447 00d2 0F000000 		.4byte	.LASF17
 448 00d6 01       		.byte	0x1
 449 00d7 32       		.byte	0x32
 450 00d8 76000000 		.4byte	0x76
 451 00dc 03       		.uleb128 0x3
 452 00dd 91       		.byte	0x91
 453 00de CC7E     		.sleb128 -180
 454 00e0 07       		.uleb128 0x7
 455 00e1 8F000000 		.4byte	.LASF18
 456 00e5 01       		.byte	0x1
 457 00e6 32       		.byte	0x32
 458 00e7 46010000 		.4byte	0x146
 459 00eb 03       		.uleb128 0x3
 460 00ec 91       		.byte	0x91
 461 00ed C87E     		.sleb128 -184
 462 00ef 08       		.uleb128 0x8
 463 00f0 06000000 		.4byte	.LASF19
 464 00f4 01       		.byte	0x1
 465 00f5 34       		.byte	0x34
 466 00f6 51010000 		.4byte	0x151
 467 00fa 02       		.uleb128 0x2
 468 00fb 91       		.byte	0x91
 469 00fc 64       		.sleb128 -28
 470 00fd 09       		.uleb128 0x9
 471 00fe 70747200 		.ascii	"ptr\000"
 472 0102 01       		.byte	0x1
 473 0103 35       		.byte	0x35
 474 0104 56010000 		.4byte	0x156
 475 0108 02       		.uleb128 0x2
 476 0109 91       		.byte	0x91
 477 010a 6C       		.sleb128 -20
 478 010b 08       		.uleb128 0x8
 479 010c 4C000000 		.4byte	.LASF20
 480 0110 01       		.byte	0x1
 481 0111 36       		.byte	0x36
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 14


 482 0112 AC000000 		.4byte	0xac
 483 0116 02       		.uleb128 0x2
 484 0117 91       		.byte	0x91
 485 0118 60       		.sleb128 -32
 486 0119 08       		.uleb128 0x8
 487 011a 99010000 		.4byte	.LASF21
 488 011e 01       		.byte	0x1
 489 011f 37       		.byte	0x37
 490 0120 6C010000 		.4byte	0x16c
 491 0124 03       		.uleb128 0x3
 492 0125 91       		.byte	0x91
 493 0126 D87E     		.sleb128 -168
 494 0128 08       		.uleb128 0x8
 495 0129 97000000 		.4byte	.LASF22
 496 012d 01       		.byte	0x1
 497 012e 38       		.byte	0x38
 498 012f 6B000000 		.4byte	0x6b
 499 0133 02       		.uleb128 0x2
 500 0134 91       		.byte	0x91
 501 0135 6B       		.sleb128 -21
 502 0136 08       		.uleb128 0x8
 503 0137 FF010000 		.4byte	.LASF23
 504 013b 01       		.byte	0x1
 505 013c 3B       		.byte	0x3b
 506 013d AC000000 		.4byte	0xac
 507 0141 03       		.uleb128 0x3
 508 0142 91       		.byte	0x91
 509 0143 D47E     		.sleb128 -172
 510 0145 00       		.byte	0
 511 0146 0A       		.uleb128 0xa
 512 0147 04       		.byte	0x4
 513 0148 4C010000 		.4byte	0x14c
 514 014c 0B       		.uleb128 0xb
 515 014d 6B000000 		.4byte	0x6b
 516 0151 05       		.uleb128 0x5
 517 0152 96000000 		.4byte	0x96
 518 0156 0A       		.uleb128 0xa
 519 0157 04       		.byte	0x4
 520 0158 AC000000 		.4byte	0xac
 521 015c 0C       		.uleb128 0xc
 522 015d 76000000 		.4byte	0x76
 523 0161 6C010000 		.4byte	0x16c
 524 0165 0D       		.uleb128 0xd
 525 0166 B1000000 		.4byte	0xb1
 526 016a 21       		.byte	0x21
 527 016b 00       		.byte	0
 528 016c 05       		.uleb128 0x5
 529 016d 5C010000 		.4byte	0x15c
 530 0171 0E       		.uleb128 0xe
 531 0172 3E020000 		.4byte	.LASF29
 532 0176 01       		.byte	0x1
 533 0177 EE       		.byte	0xee
 534 0178 00000000 		.4byte	.LFB1
 535 017c 4C000000 		.4byte	.LFE1-.LFB1
 536 0180 01       		.uleb128 0x1
 537 0181 9C       		.byte	0x9c
 538 0182 07       		.uleb128 0x7
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 15


 539 0183 11020000 		.4byte	.LASF24
 540 0187 01       		.byte	0x1
 541 0188 EE       		.byte	0xee
 542 0189 76000000 		.4byte	0x76
 543 018d 02       		.uleb128 0x2
 544 018e 91       		.byte	0x91
 545 018f 74       		.sleb128 -12
 546 0190 00       		.byte	0
 547 0191 00       		.byte	0
 548              		.section	.debug_abbrev,"",%progbits
 549              	.Ldebug_abbrev0:
 550 0000 01       		.uleb128 0x1
 551 0001 11       		.uleb128 0x11
 552 0002 01       		.byte	0x1
 553 0003 25       		.uleb128 0x25
 554 0004 0E       		.uleb128 0xe
 555 0005 13       		.uleb128 0x13
 556 0006 0B       		.uleb128 0xb
 557 0007 03       		.uleb128 0x3
 558 0008 0E       		.uleb128 0xe
 559 0009 1B       		.uleb128 0x1b
 560 000a 0E       		.uleb128 0xe
 561 000b 55       		.uleb128 0x55
 562 000c 17       		.uleb128 0x17
 563 000d 11       		.uleb128 0x11
 564 000e 01       		.uleb128 0x1
 565 000f 10       		.uleb128 0x10
 566 0010 17       		.uleb128 0x17
 567 0011 00       		.byte	0
 568 0012 00       		.byte	0
 569 0013 02       		.uleb128 0x2
 570 0014 24       		.uleb128 0x24
 571 0015 00       		.byte	0
 572 0016 0B       		.uleb128 0xb
 573 0017 0B       		.uleb128 0xb
 574 0018 3E       		.uleb128 0x3e
 575 0019 0B       		.uleb128 0xb
 576 001a 03       		.uleb128 0x3
 577 001b 0E       		.uleb128 0xe
 578 001c 00       		.byte	0
 579 001d 00       		.byte	0
 580 001e 03       		.uleb128 0x3
 581 001f 24       		.uleb128 0x24
 582 0020 00       		.byte	0
 583 0021 0B       		.uleb128 0xb
 584 0022 0B       		.uleb128 0xb
 585 0023 3E       		.uleb128 0x3e
 586 0024 0B       		.uleb128 0xb
 587 0025 03       		.uleb128 0x3
 588 0026 08       		.uleb128 0x8
 589 0027 00       		.byte	0
 590 0028 00       		.byte	0
 591 0029 04       		.uleb128 0x4
 592 002a 16       		.uleb128 0x16
 593 002b 00       		.byte	0
 594 002c 03       		.uleb128 0x3
 595 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 16


 596 002e 3A       		.uleb128 0x3a
 597 002f 0B       		.uleb128 0xb
 598 0030 3B       		.uleb128 0x3b
 599 0031 0B       		.uleb128 0xb
 600 0032 49       		.uleb128 0x49
 601 0033 13       		.uleb128 0x13
 602 0034 00       		.byte	0
 603 0035 00       		.byte	0
 604 0036 05       		.uleb128 0x5
 605 0037 35       		.uleb128 0x35
 606 0038 00       		.byte	0
 607 0039 49       		.uleb128 0x49
 608 003a 13       		.uleb128 0x13
 609 003b 00       		.byte	0
 610 003c 00       		.byte	0
 611 003d 06       		.uleb128 0x6
 612 003e 2E       		.uleb128 0x2e
 613 003f 01       		.byte	0x1
 614 0040 3F       		.uleb128 0x3f
 615 0041 19       		.uleb128 0x19
 616 0042 03       		.uleb128 0x3
 617 0043 0E       		.uleb128 0xe
 618 0044 3A       		.uleb128 0x3a
 619 0045 0B       		.uleb128 0xb
 620 0046 3B       		.uleb128 0x3b
 621 0047 0B       		.uleb128 0xb
 622 0048 27       		.uleb128 0x27
 623 0049 19       		.uleb128 0x19
 624 004a 49       		.uleb128 0x49
 625 004b 13       		.uleb128 0x13
 626 004c 11       		.uleb128 0x11
 627 004d 01       		.uleb128 0x1
 628 004e 12       		.uleb128 0x12
 629 004f 06       		.uleb128 0x6
 630 0050 40       		.uleb128 0x40
 631 0051 18       		.uleb128 0x18
 632 0052 9642     		.uleb128 0x2116
 633 0054 19       		.uleb128 0x19
 634 0055 01       		.uleb128 0x1
 635 0056 13       		.uleb128 0x13
 636 0057 00       		.byte	0
 637 0058 00       		.byte	0
 638 0059 07       		.uleb128 0x7
 639 005a 05       		.uleb128 0x5
 640 005b 00       		.byte	0
 641 005c 03       		.uleb128 0x3
 642 005d 0E       		.uleb128 0xe
 643 005e 3A       		.uleb128 0x3a
 644 005f 0B       		.uleb128 0xb
 645 0060 3B       		.uleb128 0x3b
 646 0061 0B       		.uleb128 0xb
 647 0062 49       		.uleb128 0x49
 648 0063 13       		.uleb128 0x13
 649 0064 02       		.uleb128 0x2
 650 0065 18       		.uleb128 0x18
 651 0066 00       		.byte	0
 652 0067 00       		.byte	0
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 17


 653 0068 08       		.uleb128 0x8
 654 0069 34       		.uleb128 0x34
 655 006a 00       		.byte	0
 656 006b 03       		.uleb128 0x3
 657 006c 0E       		.uleb128 0xe
 658 006d 3A       		.uleb128 0x3a
 659 006e 0B       		.uleb128 0xb
 660 006f 3B       		.uleb128 0x3b
 661 0070 0B       		.uleb128 0xb
 662 0071 49       		.uleb128 0x49
 663 0072 13       		.uleb128 0x13
 664 0073 02       		.uleb128 0x2
 665 0074 18       		.uleb128 0x18
 666 0075 00       		.byte	0
 667 0076 00       		.byte	0
 668 0077 09       		.uleb128 0x9
 669 0078 34       		.uleb128 0x34
 670 0079 00       		.byte	0
 671 007a 03       		.uleb128 0x3
 672 007b 08       		.uleb128 0x8
 673 007c 3A       		.uleb128 0x3a
 674 007d 0B       		.uleb128 0xb
 675 007e 3B       		.uleb128 0x3b
 676 007f 0B       		.uleb128 0xb
 677 0080 49       		.uleb128 0x49
 678 0081 13       		.uleb128 0x13
 679 0082 02       		.uleb128 0x2
 680 0083 18       		.uleb128 0x18
 681 0084 00       		.byte	0
 682 0085 00       		.byte	0
 683 0086 0A       		.uleb128 0xa
 684 0087 0F       		.uleb128 0xf
 685 0088 00       		.byte	0
 686 0089 0B       		.uleb128 0xb
 687 008a 0B       		.uleb128 0xb
 688 008b 49       		.uleb128 0x49
 689 008c 13       		.uleb128 0x13
 690 008d 00       		.byte	0
 691 008e 00       		.byte	0
 692 008f 0B       		.uleb128 0xb
 693 0090 26       		.uleb128 0x26
 694 0091 00       		.byte	0
 695 0092 49       		.uleb128 0x49
 696 0093 13       		.uleb128 0x13
 697 0094 00       		.byte	0
 698 0095 00       		.byte	0
 699 0096 0C       		.uleb128 0xc
 700 0097 01       		.uleb128 0x1
 701 0098 01       		.byte	0x1
 702 0099 49       		.uleb128 0x49
 703 009a 13       		.uleb128 0x13
 704 009b 01       		.uleb128 0x1
 705 009c 13       		.uleb128 0x13
 706 009d 00       		.byte	0
 707 009e 00       		.byte	0
 708 009f 0D       		.uleb128 0xd
 709 00a0 21       		.uleb128 0x21
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 18


 710 00a1 00       		.byte	0
 711 00a2 49       		.uleb128 0x49
 712 00a3 13       		.uleb128 0x13
 713 00a4 2F       		.uleb128 0x2f
 714 00a5 0B       		.uleb128 0xb
 715 00a6 00       		.byte	0
 716 00a7 00       		.byte	0
 717 00a8 0E       		.uleb128 0xe
 718 00a9 2E       		.uleb128 0x2e
 719 00aa 01       		.byte	0x1
 720 00ab 3F       		.uleb128 0x3f
 721 00ac 19       		.uleb128 0x19
 722 00ad 03       		.uleb128 0x3
 723 00ae 0E       		.uleb128 0xe
 724 00af 3A       		.uleb128 0x3a
 725 00b0 0B       		.uleb128 0xb
 726 00b1 3B       		.uleb128 0x3b
 727 00b2 0B       		.uleb128 0xb
 728 00b3 27       		.uleb128 0x27
 729 00b4 19       		.uleb128 0x19
 730 00b5 11       		.uleb128 0x11
 731 00b6 01       		.uleb128 0x1
 732 00b7 12       		.uleb128 0x12
 733 00b8 06       		.uleb128 0x6
 734 00b9 40       		.uleb128 0x40
 735 00ba 18       		.uleb128 0x18
 736 00bb 9642     		.uleb128 0x2116
 737 00bd 19       		.uleb128 0x19
 738 00be 00       		.byte	0
 739 00bf 00       		.byte	0
 740 00c0 00       		.byte	0
 741              		.section	.debug_aranges,"",%progbits
 742 0000 24000000 		.4byte	0x24
 743 0004 0200     		.2byte	0x2
 744 0006 00000000 		.4byte	.Ldebug_info0
 745 000a 04       		.byte	0x4
 746 000b 00       		.byte	0
 747 000c 0000     		.2byte	0
 748 000e 0000     		.2byte	0
 749 0010 00000000 		.4byte	.LFB0
 750 0014 80010000 		.4byte	.LFE0-.LFB0
 751 0018 00000000 		.4byte	.LFB1
 752 001c 4C000000 		.4byte	.LFE1-.LFB1
 753 0020 00000000 		.4byte	0
 754 0024 00000000 		.4byte	0
 755              		.section	.debug_ranges,"",%progbits
 756              	.Ldebug_ranges0:
 757 0000 00000000 		.4byte	.LFB0
 758 0004 80010000 		.4byte	.LFE0
 759 0008 00000000 		.4byte	.LFB1
 760 000c 4C000000 		.4byte	.LFE1
 761 0010 00000000 		.4byte	0
 762 0014 00000000 		.4byte	0
 763              		.section	.debug_line,"",%progbits
 764              	.Ldebug_line0:
 765 0000 CE000000 		.section	.debug_str,"MS",%progbits,1
 765      02004600 
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 19


 765      00000201 
 765      FB0E0D00 
 765      01010101 
 766              	.LASF15:
 767 0000 72656733 		.ascii	"reg32\000"
 767      3200
 768              	.LASF19:
 769 0006 72657456 		.ascii	"retValue\000"
 769      616C7565 
 769      00
 770              	.LASF17:
 771 000f 726F774E 		.ascii	"rowNum\000"
 771      756D00
 772              	.LASF26:
 773 0016 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyFlash.c\000"
 773      6E657261 
 773      7465645F 
 773      536F7572 
 773      63655C50 
 774              	.LASF3:
 775 0039 73686F72 		.ascii	"short unsigned int\000"
 775      7420756E 
 775      7369676E 
 775      65642069 
 775      6E7400
 776              	.LASF20:
 777 004c 63707556 		.ascii	"cpuValue\000"
 777      616C7565 
 777      00
 778              	.LASF27:
 779 0055 453A5C50 		.ascii	"E:\\PSoC\\RosOnAStick\\RosOnAStick.cydsn\000"
 779      536F435C 
 779      526F734F 
 779      6E415374 
 779      69636B5C 
 780              	.LASF11:
 781 007b 666C6F61 		.ascii	"float\000"
 781      7400
 782              	.LASF1:
 783 0081 756E7369 		.ascii	"unsigned char\000"
 783      676E6564 
 783      20636861 
 783      7200
 784              	.LASF18:
 785 008f 726F7744 		.ascii	"rowData\000"
 785      61746100 
 786              	.LASF22:
 787 0097 696E7465 		.ascii	"interruptState\000"
 787      72727570 
 787      74537461 
 787      746500
 788              	.LASF5:
 789 00a6 6C6F6E67 		.ascii	"long unsigned int\000"
 789      20756E73 
 789      69676E65 
 789      6420696E 
 789      7400
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 20


 790              	.LASF9:
 791 00b8 75696E74 		.ascii	"uint8\000"
 791      3800
 792              	.LASF25:
 793 00be 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 793      4320342E 
 793      392E3320 
 793      32303135 
 793      30333033 
 794 00f1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 794      20726576 
 794      6973696F 
 794      6E203232 
 794      31323230 
 795 0124 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fno-rtti -"
 795      66756E63 
 795      74696F6E 
 795      2D736563 
 795      74696F6E 
 796 0157 666E6F2D 		.ascii	"fno-exceptions -funsigned-char -funsigned-bitfields"
 796      65786365 
 796      7074696F 
 796      6E73202D 
 796      66756E73 
 797 018a 202D6673 		.ascii	" -fshort-enums\000"
 797      686F7274 
 797      2D656E75 
 797      6D7300
 798              	.LASF21:
 799 0199 6C6F6361 		.ascii	"localData\000"
 799      6C446174 
 799      6100
 800              	.LASF12:
 801 01a3 646F7562 		.ascii	"double\000"
 801      6C6500
 802              	.LASF2:
 803 01aa 73686F72 		.ascii	"short int\000"
 803      7420696E 
 803      7400
 804              	.LASF14:
 805 01b4 63797374 		.ascii	"cystatus\000"
 805      61747573 
 805      00
 806              	.LASF10:
 807 01bd 75696E74 		.ascii	"uint32\000"
 807      333200
 808              	.LASF8:
 809 01c4 756E7369 		.ascii	"unsigned int\000"
 809      676E6564 
 809      20696E74 
 809      00
 810              	.LASF7:
 811 01d1 6C6F6E67 		.ascii	"long long unsigned int\000"
 811      206C6F6E 
 811      6720756E 
 811      7369676E 
 811      65642069 
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccH2SQup.s 			page 21


 812              	.LASF16:
 813 01e8 73697A65 		.ascii	"sizetype\000"
 813      74797065 
 813      00
 814              	.LASF6:
 815 01f1 6C6F6E67 		.ascii	"long long int\000"
 815      206C6F6E 
 815      6720696E 
 815      7400
 816              	.LASF23:
 817 01ff 696D6F43 		.ascii	"imoConfigReg\000"
 817      6F6E6669 
 817      67526567 
 817      00
 818              	.LASF13:
 819 020c 63686172 		.ascii	"char\000"
 819      00
 820              	.LASF24:
 821 0211 66726571 		.ascii	"freq\000"
 821      00
 822              	.LASF4:
 823 0216 6C6F6E67 		.ascii	"long int\000"
 823      20696E74 
 823      00
 824              	.LASF0:
 825 021f 7369676E 		.ascii	"signed char\000"
 825      65642063 
 825      68617200 
 826              	.LASF28:
 827 022b 43795379 		.ascii	"CySysFlashWriteRow\000"
 827      73466C61 
 827      73685772 
 827      69746552 
 827      6F7700
 828              	.LASF29:
 829 023e 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 829      73466C61 
 829      73685365 
 829      74576169 
 829      74437963 
 830              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
