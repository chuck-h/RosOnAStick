ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.bss
  18              	CapSense_snsIndexTmp:
  19 0000 00       		.space	1
  20              		.section	.text.CapSense_ISR,"ax",%progbits
  21              		.align	2
  22              		.global	CapSense_ISR
  23              		.code	16
  24              		.thumb_func
  25              		.type	CapSense_ISR, %function
  26              	CapSense_ISR:
  27              	.LFB33:
  28              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_INT.c"
   1:.\Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_INT.c **** * File Name: CapSense_INT.c
   3:.\Generated_Source\PSoC4/CapSense_INT.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/CapSense_INT.c **** *
   5:.\Generated_Source\PSoC4/CapSense_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_INT.c **** *  This file provides the source code of the  Interrupt Service Routine (ISR)
   7:.\Generated_Source\PSoC4/CapSense_INT.c **** *  for the CapSense CSD component.
   8:.\Generated_Source\PSoC4/CapSense_INT.c **** *
   9:.\Generated_Source\PSoC4/CapSense_INT.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_INT.c **** *
  11:.\Generated_Source\PSoC4/CapSense_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_INT.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_INT.c **** 
  18:.\Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense.h"
  19:.\Generated_Source\PSoC4/CapSense_INT.c **** 
  20:.\Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
  21:.\Generated_Source\PSoC4/CapSense_INT.c **** *  Place your includes, defines and code here 
  22:.\Generated_Source\PSoC4/CapSense_INT.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/CapSense_INT.c **** /* `#START CapSense_ISR_INTC` */
  24:.\Generated_Source\PSoC4/CapSense_INT.c **** 
  25:.\Generated_Source\PSoC4/CapSense_INT.c **** /* `#END` */
  26:.\Generated_Source\PSoC4/CapSense_INT.c **** 
  27:.\Generated_Source\PSoC4/CapSense_INT.c **** /* Extern functions declarations, Start and Compete scan */
  28:.\Generated_Source\PSoC4/CapSense_INT.c **** extern void CapSense_PreScan(uint32 sensor);
  29:.\Generated_Source\PSoC4/CapSense_INT.c **** extern void CapSense_PostScan(uint32 sensor);
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 2


  30:.\Generated_Source\PSoC4/CapSense_INT.c **** 
  31:.\Generated_Source\PSoC4/CapSense_INT.c **** extern uint8 CapSense_FindNextSensor(uint8 snsIndex);
  32:.\Generated_Source\PSoC4/CapSense_INT.c ****  
  33:.\Generated_Source\PSoC4/CapSense_INT.c **** /* Global variables and arrays */
  34:.\Generated_Source\PSoC4/CapSense_INT.c **** extern volatile uint8 CapSense_csdStatusVar;
  35:.\Generated_Source\PSoC4/CapSense_INT.c **** extern volatile uint8 CapSense_sensorIndex;
  36:.\Generated_Source\PSoC4/CapSense_INT.c **** 
  37:.\Generated_Source\PSoC4/CapSense_INT.c **** static uint8 CapSense_snsIndexTmp;
  38:.\Generated_Source\PSoC4/CapSense_INT.c **** 
  39:.\Generated_Source\PSoC4/CapSense_INT.c **** extern volatile uint8 CapSense_sensorEnableMask[];
  40:.\Generated_Source\PSoC4/CapSense_INT.c **** extern uint8 CapSense_sensorEnableMaskBackup[];
  41:.\Generated_Source\PSoC4/CapSense_INT.c **** 
  42:.\Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_ISR
  44:.\Generated_Source\PSoC4/CapSense_INT.c **** ********************************************************************************
  45:.\Generated_Source\PSoC4/CapSense_INT.c **** *
  46:.\Generated_Source\PSoC4/CapSense_INT.c **** * Summary:
  47:.\Generated_Source\PSoC4/CapSense_INT.c **** *  This ISR is executed when the measure window is closed. The measure window 
  48:.\Generated_Source\PSoC4/CapSense_INT.c **** *  depends on the sensor scan resolution parameter. 
  49:.\Generated_Source\PSoC4/CapSense_INT.c **** *  The ISR has two modes: 
  50:.\Generated_Source\PSoC4/CapSense_INT.c **** *   1. Scans a single sensor and stores the measure result.
  51:.\Generated_Source\PSoC4/CapSense_INT.c **** *   2. Stores the result of the current measure and starts the next scan till all 
  52:.\Generated_Source\PSoC4/CapSense_INT.c **** *      the enabled sensors are scanned.
  53:.\Generated_Source\PSoC4/CapSense_INT.c **** *  This interrupt handler is only used in one channel designs.
  54:.\Generated_Source\PSoC4/CapSense_INT.c **** *
  55:.\Generated_Source\PSoC4/CapSense_INT.c **** * Parameters:
  56:.\Generated_Source\PSoC4/CapSense_INT.c **** *  None
  57:.\Generated_Source\PSoC4/CapSense_INT.c **** *
  58:.\Generated_Source\PSoC4/CapSense_INT.c **** * Return:
  59:.\Generated_Source\PSoC4/CapSense_INT.c **** *  None
  60:.\Generated_Source\PSoC4/CapSense_INT.c **** *
  61:.\Generated_Source\PSoC4/CapSense_INT.c **** * Global Variables:
  62:.\Generated_Source\PSoC4/CapSense_INT.c **** *  CapSense_csv - used to provide the status and mode of the scanning process.
  63:.\Generated_Source\PSoC4/CapSense_INT.c **** *   Mode - a single scan or scan of all the enabled sensors.
  64:.\Generated_Source\PSoC4/CapSense_INT.c **** *   Status - scan is in progress or ready for new scan.
  65:.\Generated_Source\PSoC4/CapSense_INT.c **** *  CapSense_sensorIndex - used to store a sensor scanning sensor number.
  66:.\Generated_Source\PSoC4/CapSense_INT.c **** *
  67:.\Generated_Source\PSoC4/CapSense_INT.c **** * Reentrant:
  68:.\Generated_Source\PSoC4/CapSense_INT.c **** *  No
  69:.\Generated_Source\PSoC4/CapSense_INT.c **** *
  70:.\Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC4/CapSense_INT.c **** CY_ISR(CapSense_ISR)
  72:.\Generated_Source\PSoC4/CapSense_INT.c **** {	
  29              		.loc 1 72 0
  30              		.cfi_startproc
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  73:.\Generated_Source\PSoC4/CapSense_INT.c **** 	/*  Place your Interrupt code here. */
  74:.\Generated_Source\PSoC4/CapSense_INT.c ****     /* `#START CapSense_ISR_ENTER` */
  75:.\Generated_Source\PSoC4/CapSense_INT.c **** 
  76:.\Generated_Source\PSoC4/CapSense_INT.c ****     /* `#END` */
  77:.\Generated_Source\PSoC4/CapSense_INT.c **** 
  78:.\Generated_Source\PSoC4/CapSense_INT.c **** 	CyIntDisable(CapSense_ISR_NUMBER);
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 3


  37              		.loc 1 78 0
  38 0004 0F20     		mov	r0, #15
  39 0006 FFF7FEFF 		bl	CyIntDisable
  79:.\Generated_Source\PSoC4/CapSense_INT.c ****     
  80:.\Generated_Source\PSoC4/CapSense_INT.c ****     CapSense_CSD_INTR_REG = 1u;
  40              		.loc 1 80 0
  41 000a 2D4B     		ldr	r3, .L7
  42 000c 0122     		mov	r2, #1
  43 000e 1A60     		str	r2, [r3]
  81:.\Generated_Source\PSoC4/CapSense_INT.c **** 
  82:.\Generated_Source\PSoC4/CapSense_INT.c ****     CapSense_PostScan((uint32)CapSense_sensorIndex);
  44              		.loc 1 82 0
  45 0010 2C4B     		ldr	r3, .L7+4
  46 0012 1B78     		ldrb	r3, [r3]
  47 0014 DBB2     		uxtb	r3, r3
  48 0016 181C     		mov	r0, r3
  49 0018 FFF7FEFF 		bl	CapSense_PostScan
  83:.\Generated_Source\PSoC4/CapSense_INT.c ****             
  84:.\Generated_Source\PSoC4/CapSense_INT.c ****     if ((CapSense_csdStatusVar & CapSense_SW_CTRL_SINGLE_SCAN) != 0u)
  50              		.loc 1 84 0
  51 001c 2A4B     		ldr	r3, .L7+8
  52 001e 1B78     		ldrb	r3, [r3]
  53 0020 DBB2     		uxtb	r3, r3
  54 0022 DBB2     		uxtb	r3, r3
  55 0024 5BB2     		sxtb	r3, r3
  56 0026 002B     		cmp	r3, #0
  57 0028 08DA     		bge	.L2
  85:.\Generated_Source\PSoC4/CapSense_INT.c ****     {
  86:.\Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_csdStatusVar &= (uint8)~CapSense_SW_STS_BUSY;
  58              		.loc 1 86 0
  59 002a 274B     		ldr	r3, .L7+8
  60 002c 1B78     		ldrb	r3, [r3]
  61 002e DBB2     		uxtb	r3, r3
  62 0030 0122     		mov	r2, #1
  63 0032 9343     		bic	r3, r2
  64 0034 DAB2     		uxtb	r2, r3
  65 0036 244B     		ldr	r3, .L7+8
  66 0038 1A70     		strb	r2, [r3]
  67 003a 3CE0     		b	.L3
  68              	.L2:
  87:.\Generated_Source\PSoC4/CapSense_INT.c ****     }
  88:.\Generated_Source\PSoC4/CapSense_INT.c ****     else
  89:.\Generated_Source\PSoC4/CapSense_INT.c ****     {
  90:.\Generated_Source\PSoC4/CapSense_INT.c ****         /* Proceed scanning */
  91:.\Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
  69              		.loc 1 91 0
  70 003c 214B     		ldr	r3, .L7+4
  71 003e 1B78     		ldrb	r3, [r3]
  72 0040 DBB2     		uxtb	r3, r3
  73 0042 181C     		mov	r0, r3
  74 0044 FFF7FEFF 		bl	CapSense_FindNextSensor
  75 0048 031C     		mov	r3, r0
  76 004a 1A1C     		mov	r2, r3
  77 004c 1D4B     		ldr	r3, .L7+4
  78 004e 1A70     		strb	r2, [r3]
  92:.\Generated_Source\PSoC4/CapSense_INT.c ****         
  93:.\Generated_Source\PSoC4/CapSense_INT.c ****         /* Check end of scan */
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 4


  94:.\Generated_Source\PSoC4/CapSense_INT.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
  79              		.loc 1 94 0
  80 0050 1C4B     		ldr	r3, .L7+4
  81 0052 1B78     		ldrb	r3, [r3]
  82 0054 DBB2     		uxtb	r3, r3
  83 0056 002B     		cmp	r3, #0
  84 0058 06D1     		bne	.L4
  95:.\Generated_Source\PSoC4/CapSense_INT.c ****         {
  96:.\Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_PreScan((uint32)CapSense_sensorIndex);
  85              		.loc 1 96 0
  86 005a 1A4B     		ldr	r3, .L7+4
  87 005c 1B78     		ldrb	r3, [r3]
  88 005e DBB2     		uxtb	r3, r3
  89 0060 181C     		mov	r0, r3
  90 0062 FFF7FEFF 		bl	CapSense_PreScan
  91 0066 26E0     		b	.L3
  92              	.L4:
  97:.\Generated_Source\PSoC4/CapSense_INT.c ****         }
  98:.\Generated_Source\PSoC4/CapSense_INT.c ****         else
  99:.\Generated_Source\PSoC4/CapSense_INT.c ****         {
 100:.\Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_csdStatusVar &= (uint8)~CapSense_SW_STS_BUSY;
  93              		.loc 1 100 0
  94 0068 174B     		ldr	r3, .L7+8
  95 006a 1B78     		ldrb	r3, [r3]
  96 006c DBB2     		uxtb	r3, r3
  97 006e 0122     		mov	r2, #1
  98 0070 9343     		bic	r3, r2
  99 0072 DAB2     		uxtb	r2, r3
 100 0074 144B     		ldr	r3, .L7+8
 101 0076 1A70     		strb	r2, [r3]
 101:.\Generated_Source\PSoC4/CapSense_INT.c **** 
 102:.\Generated_Source\PSoC4/CapSense_INT.c **** 			 /* Check if widget has been scanned */
 103:.\Generated_Source\PSoC4/CapSense_INT.c **** 			if((CapSense_csdStatusVar & CapSense_SW_CTRL_WIDGET_SCAN) != 0u)
 102              		.loc 1 103 0
 103 0078 134B     		ldr	r3, .L7+8
 104 007a 1B78     		ldrb	r3, [r3]
 105 007c DBB2     		uxtb	r3, r3
 106 007e 1A1C     		mov	r2, r3
 107 0080 4023     		mov	r3, #64
 108 0082 1340     		and	r3, r2
 109 0084 17D0     		beq	.L3
 104:.\Generated_Source\PSoC4/CapSense_INT.c **** 			{
 105:.\Generated_Source\PSoC4/CapSense_INT.c **** 			    /* Restore sensorEnableMask array */
 106:.\Generated_Source\PSoC4/CapSense_INT.c **** 				for(CapSense_snsIndexTmp = 0u; 
 110              		.loc 1 106 0
 111 0086 114B     		ldr	r3, .L7+12
 112 0088 0022     		mov	r2, #0
 113 008a 1A70     		strb	r2, [r3]
 114 008c 0FE0     		b	.L5
 115              	.L6:
 107:.\Generated_Source\PSoC4/CapSense_INT.c **** 				    CapSense_snsIndexTmp < CapSense_TOTAL_SENSOR_MASK; 
 108:.\Generated_Source\PSoC4/CapSense_INT.c **** 					CapSense_snsIndexTmp++)
 109:.\Generated_Source\PSoC4/CapSense_INT.c **** 				{
 110:.\Generated_Source\PSoC4/CapSense_INT.c **** 					/* Backup sensorEnableMask array */
 111:.\Generated_Source\PSoC4/CapSense_INT.c **** 					CapSense_sensorEnableMask[CapSense_snsIndexTmp] = CapSense_sensorEnableMaskBackup[CapSense_sns
 116              		.loc 1 111 0
 117 008e 0F4B     		ldr	r3, .L7+12
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 5


 118 0090 1B78     		ldrb	r3, [r3]
 119 0092 1A1C     		mov	r2, r3
 120 0094 0D4B     		ldr	r3, .L7+12
 121 0096 1B78     		ldrb	r3, [r3]
 122 0098 191C     		mov	r1, r3
 123 009a 0D4B     		ldr	r3, .L7+16
 124 009c 595C     		ldrb	r1, [r3, r1]
 125 009e 0D4B     		ldr	r3, .L7+20
 126 00a0 9954     		strb	r1, [r3, r2]
 108:.\Generated_Source\PSoC4/CapSense_INT.c **** 				{
 127              		.loc 1 108 0
 128 00a2 0A4B     		ldr	r3, .L7+12
 129 00a4 1B78     		ldrb	r3, [r3]
 130 00a6 0133     		add	r3, r3, #1
 131 00a8 DAB2     		uxtb	r2, r3
 132 00aa 084B     		ldr	r3, .L7+12
 133 00ac 1A70     		strb	r2, [r3]
 134              	.L5:
 107:.\Generated_Source\PSoC4/CapSense_INT.c **** 				    CapSense_snsIndexTmp < CapSense_TOTAL_SENSOR_MASK; 
 135              		.loc 1 107 0 discriminator 1
 136 00ae 074B     		ldr	r3, .L7+12
 137 00b0 1B78     		ldrb	r3, [r3]
 106:.\Generated_Source\PSoC4/CapSense_INT.c **** 				    CapSense_snsIndexTmp < CapSense_TOTAL_SENSOR_MASK; 
 138              		.loc 1 106 0 discriminator 1
 139 00b2 002B     		cmp	r3, #0
 140 00b4 EBD0     		beq	.L6
 141              	.L3:
 112:.\Generated_Source\PSoC4/CapSense_INT.c **** 				}
 113:.\Generated_Source\PSoC4/CapSense_INT.c **** 			}
 114:.\Generated_Source\PSoC4/CapSense_INT.c ****         } 
 115:.\Generated_Source\PSoC4/CapSense_INT.c ****     }
 116:.\Generated_Source\PSoC4/CapSense_INT.c ****     CyIntEnable(CapSense_ISR_NUMBER);
 142              		.loc 1 116 0
 143 00b6 0F20     		mov	r0, #15
 144 00b8 FFF7FEFF 		bl	CyIntEnable
 117:.\Generated_Source\PSoC4/CapSense_INT.c **** 	
 118:.\Generated_Source\PSoC4/CapSense_INT.c **** 	/*  Place your Interrupt code here. */
 119:.\Generated_Source\PSoC4/CapSense_INT.c ****     /* `#START CapSense_ISR_EXIT` */
 120:.\Generated_Source\PSoC4/CapSense_INT.c **** 
 121:.\Generated_Source\PSoC4/CapSense_INT.c ****     /* `#END` */
 122:.\Generated_Source\PSoC4/CapSense_INT.c **** }
 145              		.loc 1 122 0
 146 00bc BD46     		mov	sp, r7
 147              		@ sp needed
 148 00be 80BD     		pop	{r7, pc}
 149              	.L8:
 150              		.align	2
 151              	.L7:
 152 00c0 14000840 		.word	1074266132
 153 00c4 00000000 		.word	CapSense_sensorIndex
 154 00c8 00000000 		.word	CapSense_csdStatusVar
 155 00cc 00000000 		.word	CapSense_snsIndexTmp
 156 00d0 00000000 		.word	CapSense_sensorEnableMaskBackup
 157 00d4 00000000 		.word	CapSense_sensorEnableMask
 158              		.cfi_endproc
 159              	.LFE33:
 160              		.size	CapSense_ISR, .-CapSense_ISR
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 6


 161              		.text
 162              	.Letext0:
 163              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 164              		.section	.debug_info,"",%progbits
 165              	.Ldebug_info0:
 166 0000 0D010000 		.4byte	0x10d
 167 0004 0400     		.2byte	0x4
 168 0006 00000000 		.4byte	.Ldebug_abbrev0
 169 000a 04       		.byte	0x4
 170 000b 01       		.uleb128 0x1
 171 000c 8C000000 		.4byte	.LASF20
 172 0010 01       		.byte	0x1
 173 0011 3A020000 		.4byte	.LASF21
 174 0015 22000000 		.4byte	.LASF22
 175 0019 00000000 		.4byte	.Ldebug_ranges0+0
 176 001d 00000000 		.4byte	0
 177 0021 00000000 		.4byte	.Ldebug_line0
 178 0025 02       		.uleb128 0x2
 179 0026 01       		.byte	0x1
 180 0027 06       		.byte	0x6
 181 0028 E5010000 		.4byte	.LASF0
 182 002c 02       		.uleb128 0x2
 183 002d 01       		.byte	0x1
 184 002e 08       		.byte	0x8
 185 002f 74010000 		.4byte	.LASF1
 186 0033 02       		.uleb128 0x2
 187 0034 02       		.byte	0x2
 188 0035 05       		.byte	0x5
 189 0036 0D020000 		.4byte	.LASF2
 190 003a 02       		.uleb128 0x2
 191 003b 02       		.byte	0x2
 192 003c 07       		.byte	0x7
 193 003d D2010000 		.4byte	.LASF3
 194 0041 02       		.uleb128 0x2
 195 0042 04       		.byte	0x4
 196 0043 05       		.byte	0x5
 197 0044 A7010000 		.4byte	.LASF4
 198 0048 02       		.uleb128 0x2
 199 0049 04       		.byte	0x4
 200 004a 07       		.byte	0x7
 201 004b 63000000 		.4byte	.LASF5
 202 004f 02       		.uleb128 0x2
 203 0050 08       		.byte	0x8
 204 0051 05       		.byte	0x5
 205 0052 00000000 		.4byte	.LASF6
 206 0056 02       		.uleb128 0x2
 207 0057 08       		.byte	0x8
 208 0058 07       		.byte	0x7
 209 0059 75000000 		.4byte	.LASF7
 210 005d 03       		.uleb128 0x3
 211 005e 04       		.byte	0x4
 212 005f 05       		.byte	0x5
 213 0060 696E7400 		.ascii	"int\000"
 214 0064 02       		.uleb128 0x2
 215 0065 04       		.byte	0x4
 216 0066 07       		.byte	0x7
 217 0067 15000000 		.4byte	.LASF8
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 7


 218 006b 04       		.uleb128 0x4
 219 006c 5D000000 		.4byte	.LASF9
 220 0070 02       		.byte	0x2
 221 0071 5B       		.byte	0x5b
 222 0072 2C000000 		.4byte	0x2c
 223 0076 04       		.uleb128 0x4
 224 0077 0E000000 		.4byte	.LASF10
 225 007b 02       		.byte	0x2
 226 007c 5D       		.byte	0x5d
 227 007d 48000000 		.4byte	0x48
 228 0081 02       		.uleb128 0x2
 229 0082 04       		.byte	0x4
 230 0083 04       		.byte	0x4
 231 0084 F1010000 		.4byte	.LASF11
 232 0088 02       		.uleb128 0x2
 233 0089 08       		.byte	0x8
 234 008a 04       		.byte	0x4
 235 008b B0010000 		.4byte	.LASF12
 236 008f 02       		.uleb128 0x2
 237 0090 01       		.byte	0x1
 238 0091 08       		.byte	0x8
 239 0092 82010000 		.4byte	.LASF13
 240 0096 05       		.uleb128 0x5
 241 0097 6B000000 		.4byte	0x6b
 242 009b 04       		.uleb128 0x4
 243 009c B7010000 		.4byte	.LASF14
 244 00a0 02       		.byte	0x2
 245 00a1 F2       		.byte	0xf2
 246 00a2 A6000000 		.4byte	0xa6
 247 00a6 05       		.uleb128 0x5
 248 00a7 76000000 		.4byte	0x76
 249 00ab 02       		.uleb128 0x2
 250 00ac 04       		.byte	0x4
 251 00ad 07       		.byte	0x7
 252 00ae 31020000 		.4byte	.LASF15
 253 00b2 06       		.uleb128 0x6
 254 00b3 67010000 		.4byte	.LASF23
 255 00b7 01       		.byte	0x1
 256 00b8 47       		.byte	0x47
 257 00b9 00000000 		.4byte	.LFB33
 258 00bd D8000000 		.4byte	.LFE33-.LFB33
 259 00c1 01       		.uleb128 0x1
 260 00c2 9C       		.byte	0x9c
 261 00c3 07       		.uleb128 0x7
 262 00c4 48000000 		.4byte	.LASF24
 263 00c8 01       		.byte	0x1
 264 00c9 25       		.byte	0x25
 265 00ca 6B000000 		.4byte	0x6b
 266 00ce 05       		.uleb128 0x5
 267 00cf 03       		.byte	0x3
 268 00d0 00000000 		.4byte	CapSense_snsIndexTmp
 269 00d4 08       		.uleb128 0x8
 270 00d5 F7010000 		.4byte	.LASF16
 271 00d9 01       		.byte	0x1
 272 00da 22       		.byte	0x22
 273 00db 96000000 		.4byte	0x96
 274 00df 08       		.uleb128 0x8
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 8


 275 00e0 BD010000 		.4byte	.LASF17
 276 00e4 01       		.byte	0x1
 277 00e5 23       		.byte	0x23
 278 00e6 96000000 		.4byte	0x96
 279 00ea 09       		.uleb128 0x9
 280 00eb 6B000000 		.4byte	0x6b
 281 00ef F5000000 		.4byte	0xf5
 282 00f3 0A       		.uleb128 0xa
 283 00f4 00       		.byte	0
 284 00f5 08       		.uleb128 0x8
 285 00f6 17020000 		.4byte	.LASF18
 286 00fa 01       		.byte	0x1
 287 00fb 27       		.byte	0x27
 288 00fc 00010000 		.4byte	0x100
 289 0100 05       		.uleb128 0x5
 290 0101 EA000000 		.4byte	0xea
 291 0105 08       		.uleb128 0x8
 292 0106 87010000 		.4byte	.LASF19
 293 010a 01       		.byte	0x1
 294 010b 28       		.byte	0x28
 295 010c EA000000 		.4byte	0xea
 296 0110 00       		.byte	0
 297              		.section	.debug_abbrev,"",%progbits
 298              	.Ldebug_abbrev0:
 299 0000 01       		.uleb128 0x1
 300 0001 11       		.uleb128 0x11
 301 0002 01       		.byte	0x1
 302 0003 25       		.uleb128 0x25
 303 0004 0E       		.uleb128 0xe
 304 0005 13       		.uleb128 0x13
 305 0006 0B       		.uleb128 0xb
 306 0007 03       		.uleb128 0x3
 307 0008 0E       		.uleb128 0xe
 308 0009 1B       		.uleb128 0x1b
 309 000a 0E       		.uleb128 0xe
 310 000b 55       		.uleb128 0x55
 311 000c 17       		.uleb128 0x17
 312 000d 11       		.uleb128 0x11
 313 000e 01       		.uleb128 0x1
 314 000f 10       		.uleb128 0x10
 315 0010 17       		.uleb128 0x17
 316 0011 00       		.byte	0
 317 0012 00       		.byte	0
 318 0013 02       		.uleb128 0x2
 319 0014 24       		.uleb128 0x24
 320 0015 00       		.byte	0
 321 0016 0B       		.uleb128 0xb
 322 0017 0B       		.uleb128 0xb
 323 0018 3E       		.uleb128 0x3e
 324 0019 0B       		.uleb128 0xb
 325 001a 03       		.uleb128 0x3
 326 001b 0E       		.uleb128 0xe
 327 001c 00       		.byte	0
 328 001d 00       		.byte	0
 329 001e 03       		.uleb128 0x3
 330 001f 24       		.uleb128 0x24
 331 0020 00       		.byte	0
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 9


 332 0021 0B       		.uleb128 0xb
 333 0022 0B       		.uleb128 0xb
 334 0023 3E       		.uleb128 0x3e
 335 0024 0B       		.uleb128 0xb
 336 0025 03       		.uleb128 0x3
 337 0026 08       		.uleb128 0x8
 338 0027 00       		.byte	0
 339 0028 00       		.byte	0
 340 0029 04       		.uleb128 0x4
 341 002a 16       		.uleb128 0x16
 342 002b 00       		.byte	0
 343 002c 03       		.uleb128 0x3
 344 002d 0E       		.uleb128 0xe
 345 002e 3A       		.uleb128 0x3a
 346 002f 0B       		.uleb128 0xb
 347 0030 3B       		.uleb128 0x3b
 348 0031 0B       		.uleb128 0xb
 349 0032 49       		.uleb128 0x49
 350 0033 13       		.uleb128 0x13
 351 0034 00       		.byte	0
 352 0035 00       		.byte	0
 353 0036 05       		.uleb128 0x5
 354 0037 35       		.uleb128 0x35
 355 0038 00       		.byte	0
 356 0039 49       		.uleb128 0x49
 357 003a 13       		.uleb128 0x13
 358 003b 00       		.byte	0
 359 003c 00       		.byte	0
 360 003d 06       		.uleb128 0x6
 361 003e 2E       		.uleb128 0x2e
 362 003f 00       		.byte	0
 363 0040 3F       		.uleb128 0x3f
 364 0041 19       		.uleb128 0x19
 365 0042 03       		.uleb128 0x3
 366 0043 0E       		.uleb128 0xe
 367 0044 3A       		.uleb128 0x3a
 368 0045 0B       		.uleb128 0xb
 369 0046 3B       		.uleb128 0x3b
 370 0047 0B       		.uleb128 0xb
 371 0048 27       		.uleb128 0x27
 372 0049 19       		.uleb128 0x19
 373 004a 11       		.uleb128 0x11
 374 004b 01       		.uleb128 0x1
 375 004c 12       		.uleb128 0x12
 376 004d 06       		.uleb128 0x6
 377 004e 40       		.uleb128 0x40
 378 004f 18       		.uleb128 0x18
 379 0050 9642     		.uleb128 0x2116
 380 0052 19       		.uleb128 0x19
 381 0053 00       		.byte	0
 382 0054 00       		.byte	0
 383 0055 07       		.uleb128 0x7
 384 0056 34       		.uleb128 0x34
 385 0057 00       		.byte	0
 386 0058 03       		.uleb128 0x3
 387 0059 0E       		.uleb128 0xe
 388 005a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 10


 389 005b 0B       		.uleb128 0xb
 390 005c 3B       		.uleb128 0x3b
 391 005d 0B       		.uleb128 0xb
 392 005e 49       		.uleb128 0x49
 393 005f 13       		.uleb128 0x13
 394 0060 02       		.uleb128 0x2
 395 0061 18       		.uleb128 0x18
 396 0062 00       		.byte	0
 397 0063 00       		.byte	0
 398 0064 08       		.uleb128 0x8
 399 0065 34       		.uleb128 0x34
 400 0066 00       		.byte	0
 401 0067 03       		.uleb128 0x3
 402 0068 0E       		.uleb128 0xe
 403 0069 3A       		.uleb128 0x3a
 404 006a 0B       		.uleb128 0xb
 405 006b 3B       		.uleb128 0x3b
 406 006c 0B       		.uleb128 0xb
 407 006d 49       		.uleb128 0x49
 408 006e 13       		.uleb128 0x13
 409 006f 3F       		.uleb128 0x3f
 410 0070 19       		.uleb128 0x19
 411 0071 3C       		.uleb128 0x3c
 412 0072 19       		.uleb128 0x19
 413 0073 00       		.byte	0
 414 0074 00       		.byte	0
 415 0075 09       		.uleb128 0x9
 416 0076 01       		.uleb128 0x1
 417 0077 01       		.byte	0x1
 418 0078 49       		.uleb128 0x49
 419 0079 13       		.uleb128 0x13
 420 007a 01       		.uleb128 0x1
 421 007b 13       		.uleb128 0x13
 422 007c 00       		.byte	0
 423 007d 00       		.byte	0
 424 007e 0A       		.uleb128 0xa
 425 007f 21       		.uleb128 0x21
 426 0080 00       		.byte	0
 427 0081 00       		.byte	0
 428 0082 00       		.byte	0
 429 0083 00       		.byte	0
 430              		.section	.debug_aranges,"",%progbits
 431 0000 1C000000 		.4byte	0x1c
 432 0004 0200     		.2byte	0x2
 433 0006 00000000 		.4byte	.Ldebug_info0
 434 000a 04       		.byte	0x4
 435 000b 00       		.byte	0
 436 000c 0000     		.2byte	0
 437 000e 0000     		.2byte	0
 438 0010 00000000 		.4byte	.LFB33
 439 0014 D8000000 		.4byte	.LFE33-.LFB33
 440 0018 00000000 		.4byte	0
 441 001c 00000000 		.4byte	0
 442              		.section	.debug_ranges,"",%progbits
 443              	.Ldebug_ranges0:
 444 0000 00000000 		.4byte	.LFB33
 445 0004 D8000000 		.4byte	.LFE33
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 11


 446 0008 00000000 		.4byte	0
 447 000c 00000000 		.4byte	0
 448              		.section	.debug_line,"",%progbits
 449              	.Ldebug_line0:
 450 0000 7C000000 		.section	.debug_str,"MS",%progbits,1
 450      02004B00 
 450      00000201 
 450      FB0E0D00 
 450      01010101 
 451              	.LASF6:
 452 0000 6C6F6E67 		.ascii	"long long int\000"
 452      206C6F6E 
 452      6720696E 
 452      7400
 453              	.LASF10:
 454 000e 75696E74 		.ascii	"uint32\000"
 454      333200
 455              	.LASF8:
 456 0015 756E7369 		.ascii	"unsigned int\000"
 456      676E6564 
 456      20696E74 
 456      00
 457              	.LASF22:
 458 0022 453A5C50 		.ascii	"E:\\PSoC\\RosOnAStick\\RosOnAStick.cydsn\000"
 458      536F435C 
 458      526F734F 
 458      6E415374 
 458      69636B5C 
 459              	.LASF24:
 460 0048 43617053 		.ascii	"CapSense_snsIndexTmp\000"
 460      656E7365 
 460      5F736E73 
 460      496E6465 
 460      78546D70 
 461              	.LASF9:
 462 005d 75696E74 		.ascii	"uint8\000"
 462      3800
 463              	.LASF5:
 464 0063 6C6F6E67 		.ascii	"long unsigned int\000"
 464      20756E73 
 464      69676E65 
 464      6420696E 
 464      7400
 465              	.LASF7:
 466 0075 6C6F6E67 		.ascii	"long long unsigned int\000"
 466      206C6F6E 
 466      6720756E 
 466      7369676E 
 466      65642069 
 467              	.LASF20:
 468 008c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 468      4320342E 
 468      392E3320 
 468      32303135 
 468      30333033 
 469 00bf 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 469      20726576 
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 12


 469      6973696F 
 469      6E203232 
 469      31323230 
 470 00f2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fno-rtti -"
 470      66756E63 
 470      74696F6E 
 470      2D736563 
 470      74696F6E 
 471 0125 666E6F2D 		.ascii	"fno-exceptions -funsigned-char -funsigned-bitfields"
 471      65786365 
 471      7074696F 
 471      6E73202D 
 471      66756E73 
 472 0158 202D6673 		.ascii	" -fshort-enums\000"
 472      686F7274 
 472      2D656E75 
 472      6D7300
 473              	.LASF23:
 474 0167 43617053 		.ascii	"CapSense_ISR\000"
 474      656E7365 
 474      5F495352 
 474      00
 475              	.LASF1:
 476 0174 756E7369 		.ascii	"unsigned char\000"
 476      676E6564 
 476      20636861 
 476      7200
 477              	.LASF13:
 478 0182 63686172 		.ascii	"char\000"
 478      00
 479              	.LASF19:
 480 0187 43617053 		.ascii	"CapSense_sensorEnableMaskBackup\000"
 480      656E7365 
 480      5F73656E 
 480      736F7245 
 480      6E61626C 
 481              	.LASF4:
 482 01a7 6C6F6E67 		.ascii	"long int\000"
 482      20696E74 
 482      00
 483              	.LASF12:
 484 01b0 646F7562 		.ascii	"double\000"
 484      6C6500
 485              	.LASF14:
 486 01b7 72656733 		.ascii	"reg32\000"
 486      3200
 487              	.LASF17:
 488 01bd 43617053 		.ascii	"CapSense_sensorIndex\000"
 488      656E7365 
 488      5F73656E 
 488      736F7249 
 488      6E646578 
 489              	.LASF3:
 490 01d2 73686F72 		.ascii	"short unsigned int\000"
 490      7420756E 
 490      7369676E 
 490      65642069 
ARM GAS  C:\Users\Chuck\AppData\Local\Temp\ccFB0Ter.s 			page 13


 490      6E7400
 491              	.LASF0:
 492 01e5 7369676E 		.ascii	"signed char\000"
 492      65642063 
 492      68617200 
 493              	.LASF11:
 494 01f1 666C6F61 		.ascii	"float\000"
 494      7400
 495              	.LASF16:
 496 01f7 43617053 		.ascii	"CapSense_csdStatusVar\000"
 496      656E7365 
 496      5F637364 
 496      53746174 
 496      75735661 
 497              	.LASF2:
 498 020d 73686F72 		.ascii	"short int\000"
 498      7420696E 
 498      7400
 499              	.LASF18:
 500 0217 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 500      656E7365 
 500      5F73656E 
 500      736F7245 
 500      6E61626C 
 501              	.LASF15:
 502 0231 73697A65 		.ascii	"sizetype\000"
 502      74797065 
 502      00
 503              	.LASF21:
 504 023a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_INT.c\000"
 504      6E657261 
 504      7465645F 
 504      536F7572 
 504      63655C50 
 505              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
